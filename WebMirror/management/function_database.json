{
 "\"G-Penimation\"": [
  "def extractRazpyonTumblrCom(item):\n\t'''\n\tParser for 'razpyon.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('THE GOOD FOR NOTHING SEVENTH YOUNG LADY',  'The Exceptional Godly Thief - The Good for Nothing Seventh Young Lady',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-09T08:31:54.969751"
 ],
 "'Ball'-Kicking Gang Boss": [
  "def extractBallKickingGangBoss(item):\n\t\"\"\"\n\t# \"'Ball'-Kicking Gang Boss\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'jinsei' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"I'll Live My Second Life!\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Aldnoah Zero": [
  "def extractNanodesuAldnoahZero(item):\n\t\"\"\"\n\tParser for '(NanoDesu) - Aldnoah Zero'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Amagi Brilliant Park ": [
  "def extractNanoDesuAmagiBrilliantPark(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Biblia Koshodou no Jiken Techou": [
  "def extractNanodesuBibliaKoshodouNoJikenTechou(item):\n\t\"\"\"\n\tParser for '(NanoDesu) - Biblia Koshodou no Jiken Techou'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Fate/Apocrypha": [
  "def extractNanoDesuFateApocrypha(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Fuyuu Gakuen no Alice and Shirley": [
  "def extractNanoDesuFuyuuGakuennoAliceandShirley(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - GJ-Bu": [
  "def extractNanoDesuGJBu(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Gekka no Utahime to Magi no Ou": [
  "def extractNanoDesuGekkanoUtahimetoMaginoOu(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Goshujinsama wa Yamaneko-hime": [
  "\ndef extractYamanekothetranslationWordpressCom(item):\n\t'''\n\tParser for 'yamanekothetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:37:26.454853"
 ],
 "(NanoDesu) - Hai to Gensou no Grimgal": [
  "def extractNanoDesuHaitoGensounoGrimgal(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Hai to Gensou no Grimgar": [
  "def extractNanodesuHaiToGensouNoGrimgar(item):\n\t\"\"\"\n\tParser for '(NanoDesu) - Hai to Gensou no Grimgar'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Hentai Ouji to Warawanai Neko": [
  "def extractNanoDesuHentaiOujitoWarawanaiNeko(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Hitsugi no Chaika": [
  "\ndef extractNanodesuHitsugiNoChaika(item):\n\t'''\n\tParser for '(NanoDesu) - Hitsugi no Chaika'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:55.259828"
 ],
 "(NanoDesu) - Iriya no Sora, UFO no Natsu": [
  "def extractNanodesuIriyaNoSoraUfoNoNatsu(item):\n\t\"\"\"\n\tParser for '(NanoDesu) - Iriya no Sora, UFO no Natsu'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Kono Sekai ga Game Dato Ore Dake ga Shitteiru": [
  "def extractNanoDesuKonoSekaigaGameDatoOreDakegaShitteiru(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Kore wa Zombie Desu ka?": [
  "def extractNanoDesuKorewaZombieDesuka(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Kurenai": [
  "def extractNanoDesuKurenai(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Love\u2605You": [
  "def extractNanoDesuLoveYou(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - MajoNaka": [
  "\ndef extractNanodesuMajonaka(item):\n\t'''\n\tParser for '(NanoDesu) - MajoNaka'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:56.910408"
 ],
 "(NanoDesu) - Maoyuu Maou Yuusha": [
  "def extractNanoDesuMaoyuuMaouYuusha(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Mayo Chiki": [
  "def extractNanoDesuMayoChiki(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Ojamajo Doremi": [
  "def extractNanoDesuOjamajoDoremi(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Oreimo": [
  "def extractNanoDesuOreimo(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Rokka no Yuusha": [
  "def extractNanoDesuRokkanoYuusha(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Saenai Heroine no Sodatekata": [
  "def extractNanoDesuSaenaiHeroinenoSodatekata(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Sakurasou no Pet na Kanojo": [
  "\ndef extractSakurasouthetranslationWordpressCom(item):\n\t'''\n\tParser for 'sakurasouthetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-29T03:41:05.829866"
 ],
 "(NanoDesu) - Sasami-San@Ganbaranai": [
  "def extractNanoDesuSasamiSanGanbaranai(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Seitokai no Ichizon": [
  "def extractNanoDesuSeitokainoIchizon(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Sky World": [
  "def extractNanoDesuSkyWorld(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - The Fire Girl": [
  "def extractNanodesuTheFireGirl(item):\n\t\"\"\"\n\tParser for '(NanoDesu) - The Fire Girl'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif \"Complete\" in item['title'] and item['tags'] == ['Uncategorized']:\n\t\treturn buildReleaseMessageWithType(item, 'Fire Girl', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-10-26T03:10:36.918468"
 ],
 "(NanoDesu) - Vermillion": [
  "def extractNanodesuVermillion(item):\n\t\"\"\"\n\tParser for '(NanoDesu) - Vermillion'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Yahari Ore no Seishun Love Come wa Machigatteiru": [
  "def extractNanoDesuYahariOrenoSeishunLoveComewaMachigatteiru(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) - Zero Kara Hajimeru Mahou no Sho!": [
  "def extractNanodesuZeroKaraHajimeruMahouNoSho(item):\n\t\"\"\"\n\tParser for '(NanoDesu) - Zero Kara Hajimeru Mahou no Sho!'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "(NanoDesu) Kikou Shoujo wa Kizutsukanai": [
  "\ndef extractKikoushoujothetranslationWordpressCom(item):\n\t'''\n\tParser for 'kikoushoujothetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:27.594900"
 ],
 "(NanoDesu) Tokyo Ikai no Barista": [
  "\ndef extractBaristathetranslationWordpressCom(item):\n\t'''\n\tParser for 'baristathetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:25.441716"
 ],
 "(NanoDesuCN) - Magical GF": [
  "def extractNanodesucnMagicalGf(item):\n\t\"\"\"\n\tParser for '(NanoDesuCN) - Magical GF'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "+Neige \u00c9ternelle+": [
  "def extractPeppermintiiTumblrCom(item):\n\t'''\n\tParser for 'peppermintii.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('18+OGPC',       '18 Kin otome g\u0113mu de, teis\u014d o mamorinukimasu!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-07T09:54:04.267799"
 ],
 "+Plus Translators": [
  "def extractPlustranslatorsBlogspotCom(item):\n\t'''\n\tParser for 'plustranslators.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Artifact Planting Space Chapter',  'Artifact Planting Space',               'translated'),\n\t\t\t('Manowa',  'Manowa Mamono Taosu Nouryoku Ubau Watashi Tsuyokunaru',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\ttagmap = [\n\t\t('Artifact planting space',       'Artifact planting space',                      'translated'),\n\t\t('Overgod Ascension',             'Overgod Ascension',                            'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T23:27:18.604357"
 ],
 "-Sloth-": [
  "def extractSloth(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 ".Forever Clone.": [
  "\ndef extractFcChronoheartCom(item):\n\t'''\n\tParser for 'fc.chronoheart.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:19.301705"
 ],
 ".hack//Translate": [
  "\ndef extractDothacktranslateWordpressCom(item):\n\t'''\n\tParser for 'dothacktranslate.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-14T04:51:57.687754"
 ],
 "/": [
  "def extractForwardSlash(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Isekai ni Demodori Shimashita?' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai ni Demodori Shimashita?', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "100 White Salts Translations": [
  "def extractWww100WhitesaltsCom(item):\n\t'''\n\tParser for 'www.100whitesalts.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Road To Slaying God',       'Road To Slaying God',                          'translated'),\n\t\t('Returners Magic',           'A Returner\\'s Magic Should Be Special',        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-27T11:15:20.135241"
 ],
 "12 Superlatives": [
  "def extract12Superlatives(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "178.128.155.123": [
  "\ndef extract178128155123(item):\n\t'''\n\tParser for '178.128.155.123'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-19T23:39:02.000654"
 ],
 "17\u2019s Literary Corner": [
  "def extract17LiterarycornerWordpressCom(item):\n\t'''\n\tParser for '17literarycorner.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('King Of Hell\\'s Genius Pampered Wife',       'King Of Hell\\'s Genius Pampered Wife',                      'translated'),\n\t\t('KOH',                                        'King Of Hell\\'s Genius Pampered Wife',                      'translated'),\n\t\t('Addicted to Boundlessly Pampering You',      'Addicted to Boundlessly Pampering You',                     'translated'),\n\t\t('ATBPY',                                      'Addicted to Boundlessly Pampering You',                     'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-09T05:09:37.329578"
 ],
 "18Konko": [
  "\ndef extract18KonkoWordpressCom(item):\n\t'''\n\tParser for '18konko.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-30T06:31:00.128341"
 ],
 "1HP": [
  "def extract1HP(item):\n\t\"\"\"\n\t# 1HP\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Route to almightyness from 1HP' in item['title'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'HP1 kara Hajimeru Isekai Musou', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "2 Guyz Translation": [
  "\ndef extract2GuyztranslationWordpressCom(item):\n\t'''\n\tParser for '2guyztranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:37.175478"
 ],
 "2-Bit Translations": [
  "\ndef extract2BitTranslationsTumblrCom(item):\n\t'''\n\tParser for '2-bit-translations.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-12-04T07:18:44.118655"
 ],
 "2333Translations": [
  "\ndef extract2333TranslationsWordpressCom(item):\n\t'''\n\tParser for '2333translations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-14T03:20:05.226665"
 ],
 "25th_chestnut": [
  "def extract25ThchestnutnoveltranslationsWordpressCom(item):\n\t'''\n\tParser for '25thchestnutnoveltranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('I Alone Level-up',            'I Alone Level-up',                'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-22T00:00:25.564627"
 ],
 "2Slow2Late MTL": [
  "def extract2Slow2LatemtlWordpressCom(item):\n\t'''\n\tParser for '2slow2latemtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('HP1 kara Hajimeru Isekai Musou',                                'HP1 kara Hajimeru Isekai Musou',                                               'translated'),\n\t\t(\"A Loner With The Trash Skill 'Abnormal Status Doubling'\",       \"A Loner With The Trash Skill 'Abnormal Status Doubling'\",                      'translated'),\n\t\t('Is it Tough Being a Friend?',                                   'Is it Tough Being a Friend?',                                                  'translated'),\n\t\t('Lonely Attack on the Different World',                          'Lonely Attack on the Different World',                                         'translated'),\n\t\t('The World of Otome Games is Tough for Mobs',                    'The World of Otome Games is Tough for Mobs',                                   'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-15T05:44:23.971674"
 ],
 "50% Translations": [
  "def extract50Translations(item):\n\t\"\"\"\n\tParser for '50% Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "5ight Translations": [
  "def extract5IghtBlogspotCom(item):\n\t'''\n\tParser for '5ight.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('ffy',       'Far From You',                      'translated'),\n\t\t('ffe',       'Four Fourty Eight',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-25T05:52:33.221612"
 ],
 "7 Days Trial": [
  "def extract7DaysTrial(item):\n\t\"\"\"\n\t#'7 Days Trial'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'content' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'War of the Supreme', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "77 Novel": [
  "def extract77Novel(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "87 Percent Translation": [
  "def extract87Percent(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Return of the former hero' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Return of the Former Hero', vol, chp, frag=frag, postfix=postfix)\n\tif 'Dragon egg' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Reincarnated as a dragon\u2019s egg \uff5eLets aim to be the strongest\uff5e', vol, chp, frag=frag, postfix=postfix)\n\tif 'Summoning at random' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Summoning at Random', vol, chp, frag=frag, postfix=postfix)\n\tif 'Legend' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, '\u30ec\u30b8\u30a7\u30f3\u30c9', vol, chp, frag=frag, postfix=postfix)\n\tif 'Death game' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The world is fun as it has become a death game', vol, chp, frag=frag, postfix=postfix)\n\tif 'Elf Tensei' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Elf Tensei Kara no Cheat Kenkoku-ki', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "88-Tang Eat Drink Read": [
  "def extract88TangeatdrinkreadWordpressCom(item):\n\t'''\n\tParser for '88tangeatdrinkread.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Prestigious Family Marriage: Uncle vs Young Wife',                      'Prestigious Family Marriage: Uncle vs Young Wife',                                     'translated'),\n\t\t('Remarry, No Way!',                                                      'Remarry, No Way!',                                                                     'translated'),\n\t\t('Remarrynoway',                                                          'Remarry, No Way!',                                                                     'translated'),\n\t\t('I used to be alone until I meet you',                                   'I Used To Be Alone Until I Meet You',                                                  'translated'),\n\t\t('Memoirs of Love',                                                       'Memoirs of Love',                                                                      'translated'),\n\t\t('Marry! My Black Horse',                                                 'Marry! My Black Horse',                                                                'translated'),\n\t\t('The most pleasant thing to hear',                                       'The Most Pleasant Thing to Hear',                                                      'translated'),\n\t\t('Systematic director\u2019s tender love',                                     'Systematic Director\\'s Tender Love',                                                   'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-03T04:05:01.185957"
 ],
 "96 Rory": [
  "def extract96RoryWordpressCom(item):\n\t'''\n\tParser for '96rory.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Jikuu Mahou',       'Jikuu Mahou de Isekai to Chikyuu wo Ittarikitari',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-26T05:57:21.119908"
 ],
 ":eo's Tl Blog": [
  "\ndef extractMrleoo01Com(item):\n\t'''\n\tParser for 'mrleoo01.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-02-04T06:20:27.153115"
 ],
 "=Plain Words=": [
  "\ndef extract3MmfsBlogspotCom(item):\n\t'''\n\tParser for '3mmfs.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-31T06:04:41.589063"
 ],
 "A Country Between": [
  "\ndef extractAcountrybetweenBlogspotCom(item):\n\t'''\n\tParser for 'acountrybetween.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:38.487301"
 ],
 "A Cup of Memory": [
  "def extractACupofMemory(item):\n\t\"\"\"\n\t'A Cup of Memory'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "A Devil in God's Country": [
  "\ndef extractDevilingodscountryBlogspotCom(item):\n\t'''\n\tParser for 'devilingodscountry.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:22.411935"
 ],
 "A Dose Of Love": [
  "def extractAdoseoflove4Me(item):\n\t'''\n\tParser for 'adoseoflove4.me'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Overbearing Chief Husband\\'s Favorite: Baby',                                 'The Overbearing Chief Husband\\'s Favorite: Baby',                                                'translated'),\n\t\t('Exclusive Property',                                                              'Exclusive Property: Mr. Mu\u2019s Favorite',                                                          'translated'),\n\t\t('Exclussive Possession',                                                           'Exclusive Property: Mr. Mu\u2019s Favorite',                                                          'translated'),\n\t\t('Long Live the Wild Wife: The Black Bellied Evil King against the Princess',       'Long Live the Wild Wife: The Black Bellied Evil King against the Princess',                      'translated'),\n\t\t('LLW',                                                                             'Long Live the Wild Wife: The Black Bellied Evil King against the Princess',                      'translated'),\n\t\t('The Overbearing Chief Husband\\'s Favorite: Treasure',                             'The Overbearing Chief Husband\\'s Favorite: Treasure',                                            'translated'),\n\t\t('TOCHB',                                                                           'The Overbearing Chief Husband\\'s Favorite: Treasure',                                            'translated'),\n\t\t('Exclusive Property: Mr. Mu\u2019s Favorite',                                           'Exclusive Property: Mr. Mu\\'s Favorite',                                                         'translated'),\n\t\t('ep',                                                                              'Exclusive Property: Mr. Mu\\'s Favorite',                                                         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-03T04:09:25.778646"
 ],
 "A Fistful of Fire": [
  "\ndef extractEvonaleBlogspotCom(item):\n\t'''\n\tParser for 'evonale.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-18T05:33:00.995128"
 ],
 "A Girl in Japan": [
  "def extractAgirlinjapanTumblrCom(item):\n\t'''\n\tParser for 'agirlinjapan.tumblr.com'\n\t'''\n\tif not 'translation' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:05:40.436559"
 ],
 "A Grey World": [
  "def extractAGreyWorld(item):\n\t\"\"\"\n\t# 'A Grey World'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "A Koala's Playground": [
  "def extractKoalasplaygroundCom(item):\n\t'''\n\tParser for 'koalasplayground.com'\n\t'''\n\n\tbad_tags = ['Films', 'awards', 'TW & C dramas', 'Miscellaneous', 'K-dramas', 'Music', 'My Loves', 'J-doramas', 'fashion', 'Musings']\n\t\n\tif any((bad in item['tags'] for bad in bad_tags)):\n\t\treturn None\n\t\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-26T06:20:42.631794"
 ],
 "A Lazy Loaf of Bread": [
  "\ndef extractAlazyloafofbreadWordpressCom(item):\n\t'''\n\tParser for 'alazyloafofbread.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:56:46.318954"
 ],
 "A Little Mirage Translation": [
  "def extractALittleMirageTranslation(item):\n\t\"\"\"\n\t'A Little Mirage Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "A Mob of Deer": [
  "def extractMobofdeerWordpressCom(item):\n\t'''\n\tParser for 'mobofdeer.wordpress.com'\n\t'''\n\t\n\tif '(manga)' in item['title']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Summoning Japan',       'Summoning Japan',                                        'translated'),\n\t\t('MaouSaikon',            'The Demon Lord\\'s Second Marriage',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-09T05:16:44.596968"
 ],
 "A Pearly View": [
  "def extractAPearlyView(item):\n\t\"\"\"\n\n\t\"\"\"\n\tif 'K-Drama Recaps' in item['tags']:\n\t\treturn None\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "A Place Of Legends": [
  "def extractPlaceOfLegends(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Fragile Monster Lord' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Fragile Monster Lord', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'The New Start' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The New Start', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'The Rude Time Stopper' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Rude Time Stopper', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "A Practical Guide to Evil": [
  "def extractPracticalguidetoevilWordpressCom(item):\n\t'''\n\tParser for 'practicalguidetoevil.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\t# Don't have volume information, cannot extract.\n\t\n\treturn None",
  "2017-12-18T03:53:14.291066"
 ],
 "A Purple Blob": [
  "def extractAPurpleBlob(item):\n\t\"\"\"\n\tA Purple Blob\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif re.match('^Nirvana in Fire Chapter \\\\d+', item['title'], re.IGNORECASE):\n\t\treturn buildReleaseMessageWithType(item, 'Nirvana in Fire', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "A Reincarnated Translator": [
  "def extractReincarnatedtranslatorWordpressCom(item):\n\t'''\n\tParser for 'reincarnatedtranslator.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Gargoyle',       'The Strongest Wingless Gargoyle',         'translated'),\n\t\t('Space AI Chip',  'Reincarnated as AI',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-05T04:05:32.077945"
 ],
 "A Splash of Novels": [
  "def extractAsplashofnovelsWordpressCom(item):\n\t'''\n\tParser for 'asplashofnovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\turlfrag = [\n\t\t('/cool-goddess-special-agent-chapter-',  'Cool Goddess Special Agent',     'translated'),\n\t\t('http://www.rebirth.online/novel/jintetsu/',  'Jintetsu',     'translated'),\n\n\t\t('rebirth.online/novel/earths-core' ,          \"Earth's Core\", 'oel'),\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-15T05:49:46.342919"
 ],
 "A Translation of the Bu Ni Mi Light Novel ": [
  "def extractATranslationOfTheBuNiMiLightNovel(item):\n\t\"\"\"\n\tParser for 'A Translation of the Bu Ni Mi Light Novel '\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "A Translator's Journey": [
  "def extractATranslatorSJourney(item):\n\t\"\"\"\n\tParser for 'A Translator's Journey'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "A Translator's Ramblings": [
  "def extractATranslatorsRamblings(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Faithful to Buddha faithful to you',       'Faithful to Buddha, Faithful to You',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-09-10T07:20:50.534234"
 ],
 "A Wandering Potato": [
  "\ndef extractAwanderingpotatoWordpressCom(item):\n\t'''\n\tParser for 'awanderingpotato.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-12T06:51:48.133972"
 ],
 "A Wild Bard's translations": [
  "def extractAwildbardWordpressCom(item):\n\t'''\n\tParser for 'awildbard.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Garudeina translations',       'Garudeina',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Garudeina ',                                  'Garudeina',                      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif item['title'].lower().startswith(titlecomponent.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-06-05T05:33:46.125736"
 ],
 "A bird nest": [
  "def extractThebrilliantjadeinaiWordpressCom(item):\n\t'''\n\tParser for 'thebrilliantjadeinai.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Marielle Clarac\\'s Engagement',                                                        'Marielle Clarac\\'s Engagement',                                       'translated'),\n\t\t('The Magician wants Normality',                                                         'The Magician wants Normality',                                        'translated'),\n\t\t('TMWN',                                                                                 'The Magician wants Normality',                                        'translated'),\n\t\t('I am a princess responsible for settling circumstances',                               'I am a princess responsible for settling circumstances',              'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif item['tags'] != ['Senza categoria']:\n\t\treturn False\n\t\t\n\ttitlemap = [\n\t\t('The Magician Wants Normality',  'The Magician Wants Normality',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-13T09:56:03.707249"
 ],
 "A bit of cold weather at Upperworth": [
  "\ndef extractUpperworthWordpressCom(item):\n\t'''\n\tParser for 'upperworth.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:48.001671"
 ],
 "A fish once said this to me": [
  "def extractDarkFish(item):\n\t\"\"\"\n\t# DarkFish Translations\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'She Professed Herself The Pupil Of The Wise Man'.lower() in item['title'].lower() or 'She Professed Herself The Pupil Of The Wise Man'.lower() in [tmp.lower() for\n\t    tmp in item['tags']]:\n\t\treturn buildReleaseMessageWithType(item, 'Kenja no Deshi wo Nanoru Kenja', vol, chp, frag=frag)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "A traveler's translations.": [
  "def extractATravelersTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "A0132": [
  "def extractA0132(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif chp or vol:\n\t\treturn buildReleaseMessageWithType(item, 'Terror Infinity', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "ABCpwip": [
  "def extractABCpwip(item):\n\t\"\"\"\n\t'ABCpwip'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Marriage Concerto' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Marriage Concerto (Small Thing Called Love)', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "AFlappyTeddyBird": [
  "def extractAFlappyTeddyBird(item):\n\t\"\"\"\n\t# A Flappy Teddy Bird\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Black Knight who was stronger than even the Hero' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'The Black Knight Who Was Stronger than Even the Hero', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "AJRG": [
  "\ndef extractAjrgWordpressCom(item):\n\t'''\n\tParser for 'ajrg.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:23.660844"
 ],
 "ARF Translations": [
  "def extractArftranslationsWordpressCom(item):\n\t'''\n\tParser for 'arftranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, \"The Support Manages the Adventurer Parties!!\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\n\treturn False",
  "2017-10-20T07:34:53.019516"
 ],
 "ATranslation": [
  "\ndef extractAtranslation(item):\n\t'''\n\tParser for 'ATranslation'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:15:51.453232"
 ],
 "AYShoia": [
  "def extractAyshoiaWordpressCom(item):\n\t'''\n\tParser for 'ayshoia.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('2Exes1Stage',       'Two Ex-Husbands on One Stage',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-20T06:14:10.317973"
 ],
 "Absolute Magic": [
  "\ndef extractRealcrowBlogspotCom(item):\n\t'''\n\tParser for 'realcrow.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:19.286376"
 ],
 "Absurd Translation": [
  "def extractAbsurdTranslation(item):\n\t\"\"\"\n\tAbsurd Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif re.match('^I Kinda Came to Another World \\\\\u2013 \\\\d+$', item['title'], re.IGNORECASE):\n\t\treturn buildReleaseMessageWithType(item, 'I Kinda Came to Another World, but Where\u2019s the Way Home?', vol, chp, frag=frag, postfix=postfix)\n\tif re.match('^Isekai ni Kanaderu Denset[su][su] \\\\\u2013 \\\\d+$', item['title'], re.IGNORECASE):\n\t\treturn buildReleaseMessageWithType(item, 'Isekai ni kanaderu densetsu ~Toki wo Tomeru Mono~', vol, chp, frag=frag, postfix=postfix)\n\tif re.match('^Magi\u2019s grandson \u2013 \\\\d+$', item['title'], re.IGNORECASE):\n\t\treturn buildReleaseMessageWithType(item, 'Magi\u2019s Grandson', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttitlemap = [\n\t\t('Summoned Simultaneously to Another Worlds \u2013 ',  'Because I Was Simultaneously Summoned to Another Worlds',               'translated'),\n\t\t('Muscle Is The Best \u2013 ',                         'Magic? Muscle Is Much More Important Than Such A Thing',                'translated'),\n\t\t('Leveling Up by Walking \u2013 ',                     'Level up By Walking: in 10 thousand steps I will be level 10000',       'translated'),\n\t\t# ('Tensei Shoujo no Rirekisho',  'I Kinda Came to Another World, but Where\u2019s the Way Home?',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-04-11T03:56:20.370392"
 ],
 "Abyss Library": [
  "def extractAbysslibraryWordpressCom(item):\n\t'''\n\tParser for 'abysslibrary.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Doomsday Carnival',        'Doomsday Carnival',                       'translated'),\n\t\t('Fierce Silk Flower',       'Fierce Silk Flower',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:27:55.130426"
 ],
 "Acan Translations": [
  "def extractAcantranslationsWordpressCom(item):\n\t'''\n\tParser for 'acantranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('After defeating the Demon Lord, he became Guild Master',       'After defeating the Demon Lord, he became Guild Master',                                       'translated'),\n\t\t('Welcome to the Monsters Guild!',                               'Welcome to the Monsters\\' Guild ~ The Strongest Group Who Did Everything, for a Price ~',      'translated'),\n\t\t('A New Game from the Depths of Captivity!',                     'A New Game from the Depths of Captivity!',                                                     'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:28:43.024711"
 ],
 "Acid Translation": [
  "def extractAcidtranslationCom(item):\n\t'''\n\tParser for 'acidtranslation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif (item['tags'] == ['translation'] or item['tags'] == ['Uncategorized']) and item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, 'Rebirth: Degenerate Slave Abuses Tyrant', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\t\n\t\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-03T05:14:26.125912"
 ],
 "Acquiesce": [
  "def extractAcquiescetranslationsWordpressCom(item):\n\t'''\n\tParser for 'acquiescetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('stolen love',       'Stolen Love',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-09-03T08:05:44.526608"
 ],
 "Adam's Ale Translations": [
  "def extractMrswaterbucketWordpressCom(item):\n\t'''\n\tParser for 'mrswaterbucket.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] != ['Uncategorized']:\n\t\treturn None\n\t\t\n\ttitlemap = [\n\t\t('A Demon\u2019s Path \u2013 Chapter ',  'A Demon\u2019s Path',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-17T08:36:20.332419"
 ],
 "Adamantine Dragon in the Crystal World": [
  "def extractAdamantineDragonintheCrystalWorld(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Crystal World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Adamantine Dragon in the Crystal World', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Adarshan no Hanayome": [
  "def extractAdarshanNoHanayome(item):\n\t\"\"\"\n\tParser for 'Adarshan no Hanayome'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Adventures in Viktorium": [
  "\ndef extractViktoriumserialsWordpressCom(item):\n\t'''\n\tParser for 'viktoriumserials.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:20.536334"
 ],
 "AeRoSoL31": [
  "def extractAeRoSoL31(item):\n\t\"\"\"\n\tAeRoSoL31\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Unmotivated Hero\\'s Tale',       'Unmotivated Hero\\'s Tale', 'translated'),\n\t\t('Konjiki no Wordmaster',          'Konjiki no Wordmaster', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-04-02T06:08:34.104535"
 ],
 "Aeon Garden Translations": [
  "def extractAeongardenWordpressCom(item):\n\t'''\n\tParser for 'aeongarden.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('A Sequel For The Villainess',                       'A Sequel For The Villainess',                                      'translated'),\n\t\t('Otome Game no Akuyaku Reijou o Tanoshimitai',       'Otome Game no Akuyaku Reijou o Tanoshimitai',                      'translated'),\n\t\t('Heikinten no Reijou',                               'Heikinten no Reijou',                                              'translated'),\n\t\t('Mouichido Aeta Nara, Ippai no Egao o',              'Mouichido Aeta Nara, Ippai no Egao o',                             'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-27T10:51:47.259247"
 ],
 "Aethernea": [
  "\ndef extractAetherneaCom(item):\n\t'''\n\tParser for 'aethernea.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:56:28.297660"
 ],
 "After": [
  "\ndef extractAfternovelBlogspotCom(item):\n\t'''\n\tParser for 'afternovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:30.698936"
 ],
 "After Kate": [
  "\ndef extractAfterkateWordpressCom(item):\n\t'''\n\tParser for 'afterkate.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:38.782429"
 ],
 "After;Translations": [
  "def extractAfterTranslations(item):\n\t\"\"\"\n\t'After;Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Agrypnia Scans": [
  "def extractAgrypniaScans(item):\n\t\"\"\"\n\tParser for 'Agrypnia Scans'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ai Hrist Dream Translations": [
  "def extractAiHristDreamTranslations(item):\n\t\"\"\"\n\t'Ai Hrist Dream Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Godly Farmer Doctor: Arrogant husband, can\\'t afford to offend!',       'Godly Farmer Doctor: Arrogant husband, can\\'t afford to offend!',                      'translated'),\n\t\t('One Child Two Treasures: The Billionaire Chief\u2019s Good Wife',            'One Child Two Treasures: The Billionaire Chief\u2019s Good Wife',                           'translated'),\n\t\t('Good Morning, Mr. President!',                                          'Good Morning, Mr. President!',                                                         'translated'),\n\t\t('Princess Medical Doctor',                                               'Princess Medical Doctor',                                                              'translated'),\n\t\t('Into the World of Medicine',                                            'Into the World of Medicine',                                                           'translated'),\n\t\t('Ghost Marriage, the abandoned wife has three treasures',                'Ghost Marriage, the abandoned wife has three treasures',                               'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-06-11T03:48:14.704209"
 ],
 "Ainushi Translations \u611b\u4e3b\u306e\u7ffb\u8a33": [
  "def extractAinushiTranslations\u611b\u4e3b\u306e\u7ffb\u8a33(item):\n\t\"\"\"\n\tAinushi Translations \u611b\u4e3b\u306e\u7ffb\u8a33\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ais": [
  "\ndef extractAisylumCom(item):\n\t'''\n\tParser for 'aisylum.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T05:42:16.922556"
 ],
 "Akai-Berii": [
  "def extractAkaitranslatesWordpressCom(item):\n\t'''\n\tParser for 'akaitranslates.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Duke\\'s Daughter is the Knight Captain\\'s (62) Young Wife',       'The Duke\\'s Daughter is the Knight Captain\\'s (62) Young Wife',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\t\n\tif 'The Duke\\'s Daughter is the Knight Captain\\'s (62) Young Wife' in item['tags'] and chp == 62:\n\t\treturn None\n\t\t\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-21T06:29:38.943364"
 ],
 "Albert Kenoreijou": [
  "def extractAlbertKenoreijou(item):\n\t\"\"\"\n\t#'Albert Kenoreijou'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Albert Paradise": [
  "\ndef extractAlbert325TranslationsWordpressCom(item):\n\t'''\n\tParser for 'albert325translations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-08T23:53:13.611383"
 ],
 "Alchyr does things": [
  "def extractAlchyrdoesthings(item):\n\t\"\"\"\n\tAlchyr does things\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Gomen ne Onii-sama',       'Gomen ne, Onii-sama', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-04-07T03:59:29.632369"
 ],
 "Alcsel Translations": [
  "def extractAlcsel(item):\n\t\"\"\"\n\t# 'Alcsel Translations'\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'AR Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Assassin Reborn', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Alexander Wales": [
  "\ndef extractAlexanderwalesCom(item):\n\t'''\n\tParser for 'alexanderwales.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:20.868484"
 ],
 "Alfa Beta Gregor": [
  "\ndef extractAlfabetagregorWordpressCom(item):\n\t'''\n\tParser for 'alfabetagregor.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:39.872474"
 ],
 "Alice Translations": [
  "def extractAliceTranslations(item):\n\t\"\"\"\n\t# 'Alice Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Alice and Kev": [
  "\ndef extractAliceandkevWordpressCom(item):\n\t'''\n\tParser for 'aliceandkev.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:35.844805"
 ],
 "AliceMTL": [
  "def extractAlicemtl(item):\n\t\"\"\"\n\tParser for 'AliceMTL'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "All About My Nothings": [
  "def extractAllaboutmynothingsBlogspotCom(item):\n\t'''\n\tParser for 'allaboutmynothings.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Yasashii Shinjitsu to Seiryaku Kekkon',       'Yasashii Shinjitsu to Seiryaku Kekkon',                                     'translated'), \n\t\t('Cinderella Dropped Her Panties',              'Cinderella Dropped Her Panties',                                            'translated'), \n\t\t('Please Be More Serious',                      'Please Be More Serious',                                                    'translated'), \n\t\t('This Has Become Serious',                     'This Has Become Serious',                                                   'translated'), \n\t\t('Being swayed by the Deluded Shacho',          'Being swayed by the Deluded Shacho',                                        'translated'), \n\t\t('Woman Hating Duke',                           'Women-Hating Duke Feels Lust Only For One Aristocrat Lady',                 'translated'), \n\t\t('True and False Young Master',                 'True and False Young Master',                                               'translated'), \n\t\t('The Love Potion',                             'The Love Potion',                                                           'translated'), \n\t\t('Dark Empress',                                'Dark Empress',                                                              'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-02-16T04:28:32.189022"
 ],
 "All's Fair In Love & War": [
  "def extractAllsFairInLoveWar(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Almighty Athlete": [
  "def extractAlmightyAthlete(item):\n\t\"\"\"\n\tAlmighty Athlete\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Almighty-Editor": [
  "def extractAlmightyEditorBplacedNet(item):\n\t'''\n\tParser for 'almighty-editor.bplaced.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Isekai Tensei Harem',       'Isekai Tensei Harem',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T06:36:48.128047"
 ],
 "Alpen Glow Translations": [
  "def extractAlpenGlowTranslations(item):\n\t\"\"\"\n\t'Alpen Glow Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = {\n\n\t\t'Shu Nv Minglan'                                  : 'The Legend of the Concubine\\'s Daughter Minglan',\n\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\t\t\t\n\treturn False",
  "2017-03-25T10:12:20.723590"
 ],
 "Alternate Fantasy": [
  "\ndef extractAlternatefantasyBlogspotCom(item):\n\t'''\n\tParser for 'alternatefantasy.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-20T06:49:14.844593"
 ],
 "Alternative Projects": [
  "def extractAlternativeProjects(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Altoroc Translations": [
  "def extractAltorocTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Shadow Rogue' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Shadow Rogue', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Always in a Dream": [
  "def extractAlwaysinadreamWordpressCom(item):\n\t'''\n\tParser for 'alwaysinadream.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Great Tang Idyll',                               'Great Tang Idyll',                                              'translated'),\n\t\t('Need to Propose to Seven Men What to Do!',       'Need to Propose to Seven Men What to Do!',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-18T05:33:48.606567"
 ],
 "Alyschu & Co": [
  "def extractAlyschuCo(item):\n\t\"\"\"\n\t# Alyschu & Co\n\n\t\"\"\"\n\tif 'PREVIEW' in item['title'] or 'preview' in item['title']:\n\t\treturn False\n\tchp, vol = extractChapterVol(item['title'])\n\tif 'Against the Gods' in item['tags'] or 'Ni Tian Xie Shen (Against the Gods)' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Against the Gods', vol, chp)\n\telif 'The Simple Life of Killing Demons' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Simple Life of Killing Demons', vol, chp)\n\telif 'Magic, Mechanics, Shuraba' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Magic, Mechanics, Shuraba', vol, chp)\n\telif 'The Flower Offering' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Flower Offering', vol, chp)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Amary Translations": [
  "def extractAmarytranslationsBlogspotCom(item):\n\t'''\n\tParser for 'amarytranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == []:\n\t\ttitlemap = [\n\t\t\t('Chronicles of an Aristocrat Reborn in Another World \u2013 The Apostle of the Gods Who Know No Self-Restraint',  'Chronicles of an Aristocrat Reborn in Another World \u2013 The Apostle of the Gods Who Know No Self-Restraint',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T07:15:52.500228"
 ],
 "Amaryllideae Translations": [
  "def extractAmaryllideaetranslationsWordpressCom(item):\n\t'''\n\tParser for 'amaryllideaetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('BYBOTE',                                                  'Begging You to Break Off This Engagement!',                              'translated'),\n\t\t('Begging You to Break Off This Engagement!',               'Begging You to Break Off This Engagement!',                              'translated'),\n\t\t('Yang Shu Mei Ying',                                       'Yang Shu Mei Ying',                                                      'translated'),\n\t\t('Bring Along a Ball and Hiding from Foreign Devils',       'Bring Along a Ball and Hiding from Foreign Devils',                      'translated'),\n\t\t('Aloof King and Cool-Acting Queen',                        'Aloof King and Cool-Acting Queen',                                       'translated'),\n\t\t('Feng Mang',                                               'Feng Mang',                                                              'translated'),\n\t\t('The Wife is First',                                       'The Wife is First',                                                      'translated'),\n\t\t('Blood Contract',                                          'Blood Contract',                                                         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-30T07:00:48.978239"
 ],
 "Amater Translations": [
  "def extractAmatertranslationsBlogspotCom(item):\n\t'''\n\tParser for 'amatertranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('CEO above me below',       'CEO above me below',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-25T06:10:19.981836"
 ],
 "Amayadori": [
  "def extractAmayadoritranslationsWordpressCom(item):\n\t'''\n\tParser for 'amayadoritranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Me and Ojou-sama',       'Me and Ojou-sama',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-06T05:34:08.646624"
 ],
 "AmeSubs": [
  "\ndef extractAmesubsTumblrCom(item):\n\t'''\n\tParser for 'amesubs.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:53:29.390580"
 ],
 "Amen Alonge": [
  "\ndef extractAmenalongeCom(item):\n\t'''\n\tParser for 'amenalonge.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:22.792913"
 ],
 "American Faux": [
  "def extractAmericanFaux(item):\n\t\"\"\"\n\tParser for 'American Faux'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Yuusha Ni Narenakatta Ore Wa Isekai De',                             'Yuusha ni Nare Nakatta Ore wa Shibushibu Shuushoku o Ketsui Shimashita',              'translated'),\n\t\t('Isekai Mahou Isekai Mahou ha Okureteru!',                            'Isekai Mahou Isekai Mahou ha Okureteru!',                                             'translated'),\n\t\t('Yankee wa Isekai de Seirei ni Aisaremasu.',                          'Yankee wa Isekai de Seirei ni Aisaremasu.',                                           'translated'),\n\t\t('The Day I Disappeared',                                              'The Day I Disappeared',                                                               'translated'),\n\t\t('The Heir of the Dragon Emperor and his Bride Corps',                 'The Heir of the Dragon Emperor and his Bride Corps',                                  'translated'),\n\t\t('The Witch Who Once Was Called A Saint',                              'The Witch Who Once Was Called A Saint',                                               'translated'),\n\t\t('A Thousand Years of Separation~ Today, I Shall be the Villainess~',  'A Thousand Years of Separation~ Today, I Shall be the Villainess~',                   'translated'),\n\t\t('Kenshin no Keishousha',                                              'Kenshin no Keishousha',                                                               'translated'),\n\t\t('I, a Witch, am Requested by My Crush to Make Him Love Potion',       'I, a Witch, am Requested by My Crush to Make Him Love Potion',                        'translated'),\n\t\t('We Dwell at the Base of the Dragon\u2019s Peak',                          'We Dwell at the Base of the Dragon\u2019s Peak',                                           'translated'),\n\t\t('Only I can Return After the Class Transfer',                         'Only I can Return After the Class Transfer',                                          'translated'),\n\t\t('Sore, Itadakimasu',                                                  'Sore, Itadakimasu',                                                                   'translated'),\n\t\t('Isekai Mahou ha Okureteru!',                                         'Isekai Mahou ha Okureteru!',                                                          'translated'),\n\t\t('Saikyou Mahoushi no Inton Keikaku',                                  'Saikyou Mahoushi no Inton Keikaku',                                                   'translated'),\n\t\t('.hack//C.S.',                                                        '.hack//C.S.',                                                                         'translated'),\n\t\t('The Wandering World',                                                'The Wandering World',                                                                 'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-10T03:06:28.966221"
 ],
 "Amery Edge": [
  "def extractAmeryEdge(item):\n\t\"\"\"\n\t# 'Amery Edge'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Articles' in item['tags'] or 'Guides' in item['tags']:\n\t\treturn None\n\tif 'Your Highness, I Know My Wrong' in item['tags'] or 'Your Highness, I Know My Wrongs' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Your Highness, I Know My Wrong', vol, chp, frag=frag, postfix=postfix)\n\tif '108 Star Maidens of Destiny' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, '108 Star Maidens of Destiny', vol, chp, frag=frag, postfix=postfix)\n\tif 'Zombie Girl, Where Are You?' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Zombie Girl, Where Are You?', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ultimate Assassin System' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ultimate Assassin System', vol, chp, frag=frag, postfix=postfix)\n\tif 'Assassin Farmer' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Assassin Farmer', vol, chp, frag=frag, postfix=postfix)\n\tif 'I Am A Killer' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I Am A Killer', vol, chp, frag=frag, postfix=postfix)\n\tif '108 Maidens of Destiny' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, '108 Maidens of Destiny', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Amy Notdorft": [
  "\ndef extractAmynotdorftCom(item):\n\t'''\n\tParser for 'amynotdorft.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:40.149393"
 ],
 "An Agent of K.Oss": [
  "\ndef extractAaokossWordpressCom(item):\n\t'''\n\tParser for 'aaokoss.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:35.793559"
 ],
 "An Englishman Abroad": [
  "\ndef extractIanEnglishmanabroadBlogspotCom(item):\n\t'''\n\tParser for 'ian-englishmanabroad.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:17.378275"
 ],
 "An Unkie Musebox": [
  "def extractNop(dummy_item):\n\t\"\"\"\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "An ongoing web serial": [
  "\ndef extractRedhousedownWordpressCom(item):\n\t'''\n\tParser for 'redhousedown.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:17.028735"
 ],
 "An \u9891\u679c": [
  "def extractAnpinguoBlogspotCom(item):\n\t'''\n\tParser for 'anpinguo.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('First Marriage Then Love',       'First Marriage Then Love',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('First Marriage Then Love \u300a\u5148\u5a5a\u539a\u7231\u300bChapter ',       'First Marriage Then Love',                      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-24T11:19:00.274747"
 ],
 "AnameeScans": [
  "def extractAnameescansWordpressCom(item):\n\t'''\n\tParser for 'anameescans.wordpress.com'\n\t'''\n\n\tif 'Manhua' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Contract Marriage',         'Contract Marriage',                        'translated'),\n\t\t('Nowhere to be Found',       'Nowhere to be Found',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T08:36:51.497968"
 ],
 "Ananas Parfait": [
  "def extractAnanasParfait(item):\n\t\"\"\"\n\tAnanas Parfait\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Sorcerer Laughs in the Mirror' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Sorcerer Laughs in the Mirror', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Anargya Testing Site": [
  "def extractAnargyatestingHomeBlog(item):\n\t'''\n\tParser for 'anargyatesting.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == ['Uncategorized']:\n\t\ttitlemap = [\n\t\t\t('The Dungeon\u2019s Demon Lord is The Weakest Ch.',  'The Dungeon\u2019s Demon Lord is The Weakest',      'translated'),\n\t\t\t('The Dungeon Demon Lord is The Weakest Ch.',    'The Dungeon\u2019s Demon Lord is The Weakest',      'translated'),\n\t\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T07:11:24.356622"
 ],
 "Anathema Serial": [
  "def extractAnathema(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn buildReleaseMessageWithType(item, 'Anathema', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ancient Heartloss": [
  "\ndef extractAncientheartlossWordpressCom(item):\n\t'''\n\tParser for 'ancientheartloss.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:39:03.634219"
 ],
 "And in tears it melts till it's morning again": [
  "def extractAydenshizukiWordpressCom(item):\n\t'''\n\tParser for 'aydenshizuki.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Generational Marriage',           'Generational Marriage',                          'translated'),\n\t\t('Golden Age Legitimate Fei',       'Golden Age Legitimate Fei',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-25T07:02:31.634450"
 ],
 "Andrew9495's MTL corner": [
  "def extractAndrew9495(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"Skill Taker's World Domination Building a slave harem from scratch\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Skill Taker\u2019s World Domination ~ Building a Slave Harem from Scratch', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Andromeda & Boul": [
  "def extractAndromedaBoul(item):\n\t\"\"\"\n\t'Andromeda & Boul'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Angel of Light": [
  "\ndef extractAngeloflight360HomeBlog(item):\n\t'''\n\tParser for 'angeloflight360.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-21T03:38:41.823005"
 ],
 "Anime, manga, translations": [
  "def extractAnimeMangaTranslations(item):\n\t\"\"\"\n\tAnime, manga, translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tbad = ['Read Online', \n\t\t\t'Download', \n\t\t\t'comic', \n\t\t\t'Anime', \n\t\t\t'Manga', \n\t\t\t'Robotech', \n\t\t\t'Alpen Rose', \n\t\t\t'Watch Online',\n\t\t\t'Generation Tank',\n\t\t\t'Noboru Miyama',\n\t\t\t'Godo',\n\t\t\t]\n\tif any([(tmp in item['tags']) for tmp in bad]):\n\t\treturn None\n\tif '[Chang Sheng] BABY' in item['title']:\n\t\treturn None\n\tif '[RAW]' in item['title']:\n\t\treturn None\n\t\t\n\t\t\n\t\t\n\treturn False",
  "2018-06-26T02:40:42.831150"
 ],
 "Anime-Expressions": [
  "\ndef extractAnimeExpressionsBlogspotCom(item):\n\t'''\n\tParser for 'anime-expressions.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-23T00:13:11.021952"
 ],
 "Ankou Translations": [
  "def extractAnkouTranslations(item):\n\t\"\"\"\n\tAnkou Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ankydon's Lair": [
  "def extractAnkydonsLair(item):\n\t\"\"\"\n\t\"Ankydon's Lair\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Outcast Magician And The Power Of Heretics' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Outcast Magician And The Power Of Heretics', vol, chp, frag=frag, postfix=postfix)\n\tif 'Reincarnation into the Barrier Master' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Reincarnation into the Barrier Master', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Anne And Cindy": [
  "def extractAnneAndCindy(item):\n\t\"\"\"\n\t# 'Anne And Cindy'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Anon Empire": [
  "def extractAnonEmpire(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Anonymous Attattin": [
  "def extractAttattinsamaWordpressCom(item):\n\t'''\n\tParser for 'attattinsama.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\tchp_prefixes = [\n\t\t\t('Mitsuha Chapter ',  'Saving 80,000 Gold in Another World for my Retirement',               'translated'),\n\t\t\t('Mitsuha Ch ',  'Saving 80,000 Gold in Another World for my Retirement',               'translated'),\n\t\t\t\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\n\treturn False",
  "2019-01-26T15:21:12.455895"
 ],
 "Another Parallel World": [
  "def extractAnotherParallelWorld(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Another World Translations": [
  "def extractAnotherWorldTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Depths of Labyrinth' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Aim for the Deepest Part of the Different World's Labyrinth\", vol, chp, frag=frag, postfix=postfix)\n\tif 'Because, Janitor-san Is Not a Hero' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Because, Janitor-san Is Not a Hero', vol, chp, frag=frag, postfix=postfix)\n\tif 'World Death Game' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The World is Fun as it has Become a Death Game', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Antheor": [
  "def extractAntheor(item):\r\n\t\"\"\"\r\n\tAntheor\r\n\t\"\"\"\r\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\r\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\r\n\t\treturn None\r\n\t\t\r\n\ttagmap = [\r\n\t\t('Hisshou Dungeon Unei Houhou',     'Hisshou Dungeon Unei Houhou',                                               'translated'),\r\n\t\t('HDUH Annoucement',                'Hisshou Dungeon Unei Houhou',                                               'translated'),\r\n\t\t('KYNE Announcement',               'Kami Sumeragi Yuusha no eiyuutan \u300aRyokou Tan\u300b',                           'translated'),\r\n\t\t('WWM Announcement',                'The world is overflowing with monster, I\u2019m taking a liking to this life',   'translated'),\r\n\t]\r\n\r\n\tfor tagname, name, tl_type in tagmap:\r\n\t\tif tagname in item['tags']:\r\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\r\n\r\n\t\t\r\n\treturn False",
  "2017-12-28T05:13:11.613627"
 ],
 "Anti-bait Novels": [
  "def extractCerphistranslationWordpressCom(item):\n\t'''\n\tParser for 'cerphistranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('BMHS ',  'Beloved Marriage in High Society',               'translated'),\n\t\t\t# ('RJHS ',  'Beloved Marriage in High Society',               'translated'),\n\t\t\t# ('CKDFRA ',  'Beloved Marriage in High Society',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-01-13T10:48:32.497502"
 ],
 "Antlers, Colorado": [
  "\ndef extractAntlerscoloradoCom(item):\n\t'''\n\tParser for 'antlerscolorado.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T05:40:16.627634"
 ],
 "Anywhere but Here": [
  "def extractReinepearlWordpressCom(item):\n\t'''\n\tParser for 'reinepearl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Haunted',       'The Haunted',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-17T06:44:55.457275"
 ],
 "Aoitenshi LN": [
  "def extractAoitenshilnHomeBlog(item):\n\t'''\n\tParser for 'aoitenshiln.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Warm Place',       'Warm Place',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T06:59:49.171316"
 ],
 "Aoitenshi Manga Scanlation": [
  "def extractAoitenshiMangaScanlation(item):\n\t\"\"\"\n\tParser for 'Aoitenshi Manga Scanlation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Doujinshi' in item['tags']:\n\t\treturn None\n\tif 'Akumu no Sumu Ie - Ghost Hunt' in item['tags']:\n\t\treturn None\n\tif 'Raisekamika' in item['tags']:\n\t\treturn None\n\tif 'Maken-Ki!' in item['tags']:\n\t\treturn None\n\tif 'yearly digest' in item['tags']:\n\t\treturn None\n\t\t\n\t\t\n\t\t\n\ttagmap = [\n\t\t('Warm Place',                          'Warm Place',                                         'translated'),\n\t\t('Lady Ayane is a Sanova B**chi',       'Lady Ayane is a Sanova B**chi',                      'translated'),\n\t\t('PRC',                                 'PRC',                                                'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\treturn False",
  "2018-06-14T04:06:36.073484"
 ],
 "Aori Translations": [
  "def extractAoriTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'World Teacher - Different World Style Education Agent', vol, chp, frag=frag, postfix=postfix)\n\tif 'Lv2' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Ex-Hero Candidate's, Who Turned Out To Be A Cheat From Lv2, Laid-back Life In Another World\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Apocalypse Cockroach": [
  "def extractApocalypsecockroachWordpressCom(item):\n\t'''\n\tParser for 'apocalypsecockroach.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\t\n\tif item['tags'] == ['Uncategorized']:\n\t\ttry:\n\t\t\ttitle = item['title']\n\t\t\tif title.startswith(\"Chapter \"):\n\t\t\t\ttitle = title[len(\"Chapter \"):]\n\t\t\tint(title)\n\t\t\treturn buildReleaseMessageWithType(item, \"Apocalypse Cockroach\", vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\texcept Exception:\n\t\t\tpass\n\t\t\n\t\t\n\t\t\t\n\t\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-02T04:43:57.774339"
 ],
 "Apollo Translations": [
  "def extractApolloTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Aqua Scans": [
  "def extractAquaScans(item):\n\t\"\"\"\n\n\t\"\"\"\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tbad_tags = [\n\t\t\t'Majo no Shinzou',\n\t\t\t'Kanata no Togabito ga Tatakau Riyuu',\n\t\t\t'Usotsuki Wakusei',\n\t\t\t'Shichifuku Mafia',\n\t\t\t'Rose Guns Days',\n\t\t\t'Dangan Honey',\n\t\t\t'Komomo Confiserie',\n\t\t\t'Moekoi',\n\t\t\t'Higan no Ishi',\n\t\t]\n\tif any([bad in item['tags'] for bad in bad_tags]):\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Okobore Hime to Entaku no Kishi',       'Okoborehime to Entaku no Kishi',                      'translated'), \n\t\t('Sugar Apple Fairy Tale',                'Sugar Apple Fairy Tale',                              'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-12T05:44:32.520834"
 ],
 "Aquarilas' Scenario": [
  "def extractAquarilasScenario(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'In That Moment of Suffering' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'In That Moment of Suffering', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Aradescent": [
  "\ndef extractAradescentWordpressCom(item):\n\t'''\n\tParser for 'aradescent.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:46.105968"
 ],
 "Aran Translations": [
  "def extractAranTranslations(item):\n\t\"\"\"\n\n\t# 'Aran Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('IDS',       'Imperial God Emperor',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\tif item['title'].startswith('IGE \u2013 '):\n\t\treturn buildReleaseMessageWithType(item, 'Imperial God Emperor', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('IDS \u2013 '):\n\t\treturn buildReleaseMessageWithType(item, \"Inverted Dragon's Scale\", vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2018-05-09T05:54:23.712611"
 ],
 "Arc Games": [
  "def extractWwwArcgamesCom(item):\n\t'''\n\tParser for 'www.arcgames.com'\n\t'''\n\n\treturn None",
  "2017-05-27T05:42:55.268262"
 ],
 "Arc's Translations": [
  "def extractArcSTranslations(item):\n\t\"\"\"\n\tParser for 'Arc's Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Archivity": [
  "def extractArchivity(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ares Novels": [
  "def extractAresNovels(item):\n\t\"\"\"\n\t# 'Ares Novels'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Aria's Secret Lewd Loli Sister": [
  "\ndef extractLewdlolisisterWordpressCom(item):\n\t'''\n\tParser for 'lewdlolisister.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-14T03:20:09.444219"
 ],
 "Ark Machine Translations": [
  "def extractArkMachineTranslations(item):\n\t\"\"\"\n\t# Ark Machine Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'ark volume' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Ark', vol, chp, frag=frag, postfix=postfix)\n\tif 'ark the legend volume' in item['title'].lower() or 'ATL' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ark The Legend', vol, chp, frag=frag, postfix=postfix)\n\tif 'lms volume' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Legendary Moonlight Sculptor', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Arousing Imouto": [
  "def extractArousingImouto(item):\n\t\"\"\"\n\tParser for 'Arousing Imouto'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Arrowhead University": [
  "\ndef extractArrowheadUniversityBlogspotCom(item):\n\t'''\n\tParser for 'arrowhead-university.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:21.446749"
 ],
 "Ars BL Translations": [
  "def extractArsbltranslationsWordpressCom(item):\n\t'''\n\tParser for 'arsbltranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Picked up a Strange Knight',                    'Picked up a Strange Knight',                                   'translated'),\n\t\t('Aloof King and Cold (Acting) Queen',            'Aloof King and Cold (Acting) Queen',                           'translated'),\n\t\t('Moonlight on the Snowfield',                    'Moonlight on the Snowfield',                                   'translated'),\n\t\t('Brought My Wife Back from Another World',       'Brought My Wife Back from Another World',                      'translated'),\n\t\t('Your Kingdom',                                  'Your Kingdom',                                                 'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-14T05:22:38.120970"
 ],
 "Art of Butchery": [
  "def extractArtofbutcheryWordpressCom(item):\n\t'''\n\tParser for 'artofbutchery.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"VRMMO Chef\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"VRMMO Chef\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-06-13T02:43:10.651170"
 ],
 "Arteg the Bear": [
  "def extractArtegTheBear(item):\n\t\"\"\"\n\tParser for 'Arteg the Bear'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Article 94": [
  "\ndef extractArticle94WordpressCom(item):\n\t'''\n\tParser for 'article94.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:41.396749"
 ],
 "Artoris": [
  "\ndef extractArtorisCa(item):\n\t'''\n\tParser for 'artoris.ca'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:21.966363"
 ],
 "Arunametta": [
  "def extractArunamettaAsia(item):\n\t'''\n\tParser for 'arunametta.asia'\n\t'''\n\n\tbadwords = [\n\t\t\t'Menantu Sang Raja Naga',\n\t\t\t'Lembayung Ema',\n\t\t]\n\tif any([bad in item['tags'] for bad in badwords]):\n\t\treturn None\n\n\n\t\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Eiwa - The Knight of Magical Laws', 'Eiwa - The Knight of Magical Laws',                'oel'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T07:55:10.088009"
 ],
 "Arvel Hurst": [
  "\ndef extractArvelhurstWordpressCom(item):\n\t'''\n\tParser for 'arvelhurst.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-21T05:57:35.121073"
 ],
 "As We Knew It": [
  "\ndef extractAsweknewitstoryWordpressCom(item):\n\t'''\n\tParser for 'asweknewitstory.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:39.444889"
 ],
 "Ash Translations": [
  "def extractAshtranslationsWordpressCom(item):\n\t'''\n\tParser for 'ashtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Someone Explain This Situation!',              'Someone Explain This Situation!',                      'translated'),\n\t\t('Someone Please Explain This Situation!',       'Someone Explain This Situation!',                      'translated'),\n\t\t('PRC',                                          'PRC',                                                  'translated'),\n\t\t('Loiterous',                                    'Loiterous',                                            'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-07T06:13:50.240465"
 ],
 "AsherahBlue's Notebook": [
  "def extractAsherahBlue(item):\n\t\"\"\"\n\t# 'AsherahBlue's Notebook'\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Juvenile Medical God' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Shaonian Yixian', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Asian Hobbyist": [
  "def extractWwwAsianhobbyistCom(item):\n\t'''\n\tParser for 'www.asianhobbyist.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif \"Anime\" in item['tags']:\n\t\treturn None\n\tif \"Articles\" in item['tags']:\n\t\treturn None\n\tif \"L\u2019Apprivoisement D\u2019une Yandere\" in item['tags']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('Boku wa Isekai',                                                                  'Boku wa Isekai de Fuyo Mahou to Shoukan Mahou wo Tenbin ni Kakeru',                           'translated'),\n\t\t('Traitor and Hero Party',                                                          'Traitor and Hero Party',                                                                      'translated'),\n\t\t('The God Slaying Hero and the Seven Covenants',                                    'The God Slaying Hero and the Seven Covenants',                                                'translated'),\n\t\t('First Hunter',                                                                    'The First Hunter',                                                                            'translated'),\n\t\t('Revolution of the 8th Class Mage',                                                'Revolution of the 8th Class Mage',                                                            'translated'),\n\t\t('The Villainess Is Being Doted on by the Crown Prince',                            'The Villainess Is Being Doted on by the Crown Prince',                                        'translated'),\n\t\t('The Lazy Swordmaster',                                                            'The Lazy Swordmaster',                                                                        'translated'),\n\t\t('My Pet Is a Holy Maiden',                                                         'My Pet Is a Holy Maiden',                                                                     'translated'),\n\t\t('I Will Quit the Entourage of the Villainess',                                     'I Will Quit the Entourage of the Villainess',                                                 'translated'),\n\t\t('The Archer of A Fictitious World',                                                'The Archer of A Fictitious World',                                                            'translated'),\n\t\t('The Spoilt Village Beauty',                                                       'The Spoilt Village Beauty',                                                                   'translated'),\n\t\t('Golden Word Master',                                                              'Golden Word Master',                                                                          'translated'),\n\t\t('Shadow Rogue',                                                                    'Shadow Rogue',                                                                                'translated'),\n\t\t('LV999 Villager',                                                                  'LV999 Villager',                                                                              'translated'),\n\t\t('Evil God Average',                                                                'Evil God Average',                                                                            'translated'),\n\t\t('Maou Ni',                                                                         'Maou ni Nattanode, Dungeon Tsukutte Jingai Musume to Honobono Suru',                          'translated'),\n\t\t('Uchi Musume',                                                                     'Uchi no Musume no Tame naraba, Ore wa Moshikashitara Maou mo Taoseru kamo Shirenai',          'translated'),\n\t\t('Botsuraku',                                                                       'Botsuraku Youtei Nanode, Kajishokunin wo Mezasu',                                             'translated'),\n\t\t('Akuya',                                                                           'Akuyaku Tensei Dakedo Doushite Kou Natta.',                                                   'translated'),\n\t\t('The Strong The Few Cultivators On Campus',                                        'The Strong The Few Cultivators On Campus',                                                    'translated'),\n\t\t('Magicraft Meister',                                                               'Magi Craft Meister',                                                                          'translated'),\n\t\t('A Tale of Two Phoenixes',                                                         'A Tale of Two Phoenixes',                                                                     'translated'),\n\t\t('The Taming of the Yandere',                                                       'The Taming of the Yandere',                                                                   'translated'),\n\t\t('Abyss Domination',                                                                'Abyss Domination',                                                                            'translated'),\n\t\t('Yuusha, Aruiwa Bakemono to Yobareta Shoujo',                                      'Yuusha, Aruiwa Bakemono to Yobareta Shoujo',                                                  'translated'),\n\t\t('The Manual of Duke\\'s Daughter',                                                  'The Manual of Duke\\'s Daughter',                                                              'translated'),\n\t\t('That Time I Got Reincarnated As A Slime',                                         'That Time I Got Reincarnated As A Slime',                                                     'translated'),\n\t\t('Every Day the Protagonist Wants to Capture Me',                                   'Every Day the Protagonist Wants to Capture Me',                                               'translated'),\n\t\t('kuro no maou',                                                                    'kuro no maou',                                                                                'translated'),\n\t\t('Me, Her, and the Ballistic Weaponry',                                             'Me, Her, and the Ballistic Weaponry',                                                         'translated'),\n\t\t('Hilarious pampered consort: Lord I will wait for your divorce',                   'Hilarious pampered consort: Lord I will wait for your divorce',                               'translated'),\n\t\t('Beastly F\u0113i that Go Against the Heaven: Coerced by the Hu\u00e1ng Sh\u016b',                'Beastly F\u0113i that Go Against the Heaven: Coerced by the Hu\u00e1ng Sh\u016b',                            'translated'),\n\t\t('One Man Army',                                                                    'One Man Army',                                                                                'translated'),\n\t\t('Rebirth Junior High School: The Exceling Top Student Goddess',                    'Rebirth Junior High School: The Exceling Top Student Goddess',                                'translated'),\n\t\t('Itai No Wa',                                                                      'Itai No Wa',                                                                                  'translated'),\n\t\t('Slime',                                                                           'Tensei Shitara Slime Datta Ken',                                                              'translated'),\n\t\t('Hero without Blood or Tear',                                                      'Hero without Blood or Tear',                                                                  'translated'),\n\t\t('The Magnificent Battle Records of a Former Noble Lady',                           'The Magnificent Battle Records of a Former Noble Lady',                                       'translated'),\n\t\t('Chiyu Mahou no Machigatta Tsukaikata ~Senjou wo Kakeru Kaifuku Youin~',           'Chiyu Mahou no Machigatta Tsukaikata ~Senjou wo Kakeru Kaifuku Youin~',                       'translated'),\n\t\t('The Daughter of the Albert House Wishes for Ruin',                                'The Daughter of the Albert House Wishes for Ruin',                                            'translated'),\n\t\t('The Black Demon King',                                                            'The Black Demon King',                                                                        'translated'),\n\t\t('Spice of Life',                                                                   'Spice of Life',                                                                               'translated'),\n\t\t('Unexpected Marriage',                                                             'Unexpected Marriage',                                                                         'translated'),\n\t\t('Heavenly Star',                                                                   'Heavenly Star',                                                                               'translated'),\n\t\t('Overlord of Blood and Iron',                                                      'Overlord of Blood and Iron',                                                                  'translated'),\n\t\t('Zhu Xian',                                                                        'Zhu Xian',                                                                                    'translated'),\n\t\t('Awakening',                                                                       'Awakening',                                                                                   'translated'),\n\t\t('I Somehow Got Strong By Raising Skills Related To Farming',                       'I Somehow Got Strong By Raising Skills Related To Farming',                                   'translated'),\n\t\t('I\\'m a Villager So What?',                                                        'I\\'m a Villager So What?',                                                                    'translated'),\n\t\t('Big Landlord',                                                                    'Big Landlord',                                                                                'translated'),\n\t\t('Common Sense of a Duke\\'s Daughter',                                              'Common Sense of a Duke\\'s Daughter',                                                          'translated'),\n\t\t('The Traitor of the Hero Party',                                                   'The Traitor of the Hero Party',                                                               'translated'),\n\t\t('Hiki Neet',                                                                       '10 nen goshi no HikiNiito o Yamete Gaishutsushitara Jitaku goto Isekai ni Ten\\'ishiteta',     'translated'),\n\t\t('100 cheats',                                                                      'Because There Were 100 Goddesses in Charge of Reincarnation, I Received 100 Cheat Skills',    'translated'),\n\t\t('Even Posing as a Hero is Easy',                                                   'Yuusha no Furi mo Raku Janai\u2013Riyuu? Ore ga Kami dakara\u2013',                                     'translated'),\n\t\t('Large Tit Stepdaughter',                                                          'What\u2019s Wrong With Liking My Busty Adopted Daughter',                                          'translated'),\n\t\t('Busty Adopted Daughter',                                                          'What\u2019s Wrong With Liking My Busty Adopted Daughter',                                          'translated'),\n\t\t('Virgin Demon King',                                                               '400 Years Old Virgin Demon King',                                                             'translated'),\n\t\t('400 Year Old Virgin Demon King',                                                  '400 Years Old Virgin Demon King',                                                             'translated'),\n\t\t('Dancer In The Shadow',                                                            'Dancer In The Shadow',                                                                        'translated'),\n\t\t('Reformation of the Checkmated Reincarnated Feudal Lord',                          'Reformation of the Checkmated Reincarnated Feudal Lord',                                      'translated'),\n\t\t('History\\'s Strongest Manager',                                                    'History\\'s Strongest Manager',                                                                'translated'),\n\t\t('Black Belly Wife',                                                                'Black Belly Wife',                                                                            'translated'),\n\t\t('I Said Make My Abilities Average!',                                               'I Said Make My Abilities Average!',                                                           'translated'),\n\t\t('God of Cooking',                                                                  'God of Cooking',                                                                              'translated'),\n\t\t('The Reincarnated Vampire Wants an Afternoon Nap',                                 'The Reincarnated Vampire Wants an Afternoon Nap',                                             'translated'),\n\t\t('Possessing Nothing',                                                              'Possessing Nothing',                                                                          'translated'),\n\t\t('God-level Bodyguard in the City',                                                 'God-level Bodyguard in the City',                                                             'translated'),\n\t\t('I am an alchemist. I have discarded self-restraint in the trash',                 'I am an alchemist. I have discarded self-restraint in the trash',                             'translated'),\n\t\t('The Ability to Make Town!? ~Let\u2019s Make a Japanese Town in Different World~',      'The Ability to Make Town!? ~Let\u2019s Make a Japanese Town in Different World~',                  'translated'),\n\t\t('Lovable Package',                                                                 'Lovable Package',                                                                             'translated'),\n\t\t('God of Thunder',                                                                  'God of Thunder',                                                                              'translated'),\n\t\t('Max Level Newbie',                                                                'Max Level Newbie',                                                                            'translated'),\n\t\t('Because I\u2019m a Weapon Shop Uncle',                                                 'Because I\\'m a Weapon Shop Uncle',                                                            'translated'),\n\t\t('Game Market 1983',                                                                'Game Market 1983',                                                                            'translated'),\n\t\t('My Castle My Castellian',                                                         'My Castle My Castellian',                                                                     'translated'),\n\t\t('Oda',                                                                             'Mysterious Job Called Oda Nobunaga',                                                          'translated'),\n\t\t('Defense Build',                                                                   'I hate being in pain, so I think I\u2019ll make a full defense build.',                            'translated'),\n\t\t('Return of the 8th Class Mage',                                                    'Return of the 8th Class Mage',                                                                'translated'),\n\t\t('Waiting For You Online',                                                          'Waiting For You Online',                                                                      'translated'),\n\t\t('Liu Yao: The Revitalization of Fuyao Sect',                                       'Liu Yao: The Revitalization of Fuyao Sect',                                                   'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Because There Were 100 Goddesses ',                   'Because There Were 100 Goddesses in Charge of Reincarnation, I Received 100 Cheat Skills',    'translated'),\n\t\t('Botsuraku Youtei Volume',                             'Botsuraku Youtei Nanode, Kajishokunin wo Mezasu',                                             'translated'),\n\t\t('Reincarnated into a Werewolf',                        'Jinrou e no Tensei, Maou no Fukukan',                                                         'translated'),\n\t\t('Reincarnated Into Werewolf ',                         'Jinrou e no Tensei, Maou no Fukukan',                                                         'translated'),\n\t\t('Uchi no Musume no Tame naraba',                       'Uchi no Musume no Tame Naraba, Ore Moshikashitara Maou mo Taoserukamo Shirenai.',             'translated'),\n\t\t('Botsuraku Youtei Volume',                             'Botsuraku Youtei Nanode, Kajishokunin wo Mezasu',                                             'translated'),\n\t\t('Devouring The Heavens',                               'Devouring The Heavens',                                                                       'translated'),\n\t\t('The Taming of the Yandere',                           'The Taming of the Yandere',                                                                   'translated'),\n\t\t('Maou Ni',                                             'Maou ni Nattanode, Dungeon Tsukutte Jingai Musume to Honobono Suru',                          'translated'),\n\t\t('The Strong The Few Cultivators On Campus',            'The Strong The Few Cultivators On Campus',                                                    'translated'),\n\t\t('The Strong, The Few, True Cultivators on Campus',     'The Strong The Few Cultivators On Campus',                                                    'translated'),\n\t\t('Evolution Theory of the Hunter',                      'Evolution Theory of the Hunter',                                                              'translated'),\n\t\t('Beast Piercing The Heavens',                          'Beast Piercing The Heavens',                                                                  'translated'),\n\t\t('Tower of Karma',                                      'Tower of Karma',                                                                              'translated'),\n\t\t('400 Year Old Virgin Demon King',                      '400 Year Old Virgin Demon King',                                                              'translated'),\n\t\t('Expecting to Fall into Ruin Volume',                  'Botsuraku Youtei Nanode, Kajishokunin wo Mezasu',                                             'translated'),\n\t\t('Genius Sword Immortal',                               'Genius Sword Immortal',                                                                       'translated'),\n\t\t('Evil God Average',                                    'Evil God Average',                                                                            'translated'),\n\t\t('The God Slaying Hero',                                'The God Slaying Hero And The Seven Covenants',                                                'translated'),\n\t\t('First Hunter',                                        'The First Hunter',                                                                            'translated'),\n\t\t('Shadow Rogue',                                        'Shadow Rogue',                                                                                'translated'),\n\t\t('Black Haired Knight',                                 'Black Haired Knight',                                                                         'translated'),\n\t\t('The Lazy Swordmaster',                                'The Lazy Swordmaster',                                                                        'translated'),\n\t\t('Uchi Musume',                                         'Uchi Musume',                                                                                 'translated'),\n\t\t('Hero without Blood or Tear',                          'Hero without Blood or Tear',                                                                  'translated'),\n\t\t\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-06-18T05:56:39.017595"
 ],
 "Asian Novel Translations": [
  "def extractNovelsChroniclesoftejCom(item):\n\t'''\n\tParser for 'novels.chroniclesoftej.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Beastly Fei',       'Beastly F\u0113i that Go Against the Heaven: Coerced by the Hu\u00e1ng Sh\u016b',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-02T06:13:30.043794"
 ],
 "Asian Reincarnator": [
  "def extractAsianreincarnatorHomeBlog(item):\n\t'''\n\tParser for 'asianreincarnator.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Evil Imperial Monarch',       'The Evil Imperial Monarch',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-16T20:33:45.941478"
 ],
 "Asocial Jungle Transcriptions": [
  "def extractAsocialtranscriptionsHomeBlog(item):\n\t'''\n\tParser for 'asocialtranscriptions.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Ugly Prince',       'The Ugly Prince',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T07:19:20.262014"
 ],
 "Aster Lucerne Translations": [
  "def extractAsterlucerneWordpressCom(item):\n\t'''\n\tParser for 'asterlucerne.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Saikyou Mahoushi no Inton Keikaku',       'Saikyou Mahoushi no Inton Keikaku',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-24T11:13:27.652487"
 ],
 "Asthmatic Spider Translations": [
  "def extractAsthmaticSpiderTranslations(item):\n\t\"\"\"\n\tAsthmatic Spider Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Ore to Kawazu-san' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ore to Kawazu-san', vol, chp, frag=frag, postfix=postfix)\n\tif 'Grimoire X Reverse' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Grimoire X Reverse', vol, chp, frag=frag, postfix=postfix)\n\tif 'Grimoire X Rebirth' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Grimoire X Rebirth', vol, chp, frag=frag, postfix=postfix)\n\tif 'Sleep Learning' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sleep Learning', vol, chp, frag=frag, postfix=postfix)\n\tif 'Grimoire X Rebirth' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Grimoire X Rebirth', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2018-06-20T05:46:05.834801"
 ],
 "Astral Novel Translations": [
  "def extractAstralnoveltranslationsCom(item):\n\t'''\n\tParser for 'astralnoveltranslations.com'\n\t'''\n\n\treturn None",
  "2018-02-24T10:30:30.145900"
 ],
 "Asura Tales": [
  "def extractAsuraTales(item):\n\t\"\"\"\n\tAsura Tales\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Asylum Translations": [
  "def extractAsylumTranslations(item):\n\t\"\"\"\n\tParser for 'Asylum Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Aten Translations": [
  "def extractAtenTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Skill Taker' in item['tags'] or 'Skill Taker Ch' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Skill Taker\u2019s World Domination ~ Building a Slave Harem from Scratch', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Auantum Novel": [
  "def extractAuantumNovel(item):\n\t\"\"\"\n\tParser for 'Auantum Novel'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Aura Realm": [
  "def extractAurarealmCom(item):\n\t'''\n\tParser for 'aurarealm.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp is not None or vol is not None) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\n\ttagmap = [\n\t\t('Dragon Blood Warrior',       'Dragon Blood Warrior',                      'translated'),\n\t\t('Against the Fate',           'Against the Fate',                          'translated'),\n\t\t('Almighty Student',           'Almighty Student',                          'translated'),\n\t\t('Hell\\'s Cinema',             'Hell\\'s Cinema',                            'translated'),\n\t\t('Noire de Plaisir',           'Noire de Plaisir ~ Pleasure Training of the Fallen Vampire Princess~',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-04-28T21:01:03.986122"
 ],
 "Aurora Translates": [
  "def extractAuroranovelsWordpressCom(item):\n\t'''\n\tParser for 'auroranovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Cannon Fodder Cheat System',       'Cannon Fodder Cheat System',                      'translated'),\n\t\t('100k Volts Electrocutes You',      '100k Volts Electrocutes You',                     'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-23T08:27:56.681598"
 ],
 "Automatic Manual": [
  "def extractAutomaticmanualWordpressCom(item):\n\t'''\n\tParser for 'automaticmanual.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Bastard Called Brave And The Former Fiance',       'The Bastard Called Brave And The Former Fiance',                                               'translated'),\n\t\t('The man whose fianc\u00e9es were stolen',                   'The man whose fianc\u00e9es were stolen from him by the hero, is picked up by the goddess',         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T06:37:47.945178"
 ],
 "Avaritia Chan": [
  "def extractAvaritiakun(item):\n\t\"\"\"\n\tAvaritia-kun\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Divine protection',  'The divine protection that I got was a power that increase a girl level with semen', 'translated'),\n\t\t('Rose',               'Rose in a Yuri Field', 'translated'),\n\t\t('Rose and lily field',   'Rose in a Yuri Field', 'translated'),\n\t\t('Perfect Sex',           'Perfect Sex', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\t\t\n\treturn False",
  "2017-07-15T23:39:52.068328"
 ],
 "Avaritia-kun": [
  "def extractAvaritiakun(item):\n\t\"\"\"\n\tAvaritia-kun\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('The divine protection that I got was a power that increase a girl level with semen',  'The divine protection that I got was a power that increase a girl level with semen', 'translated'),\n\t\t('Rose in a Yuri Field',  'Rose in a Yuri Field', 'translated'),\n\t\t('Rose and lily field',   'Rose in a Yuri Field', 'translated'),\n\t\t('Perfect Sex',           'Perfect Sex', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\t\t\n\treturn False",
  "2017-04-07T04:01:54.225325"
 ],
 "Average Translations": [
  "def extractWorkNwongNet(item):\n\t'''\n\tParser for 'work.nwong.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Poison-Wielding Fugitive',                        'Poison-Wielding Fugitive',                                       'translated'),\n\t\t('I Said Make My Abilities Average!',               'I Said Make My Abilities Average',                               'translated'),\n\t\t('I Said Make My Abilities Average',                'I Said Make My Abilities Average',                               'translated'),\n\t\t('Head Over Heels from the Scarf I Lent Her',       'Head Over Heels from the Scarf I Lent Her',                      'translated'),\n\t\t('Dimension Wave',                                  'Dimension Wave',                                                 'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-10T03:33:31.065158"
 ],
 "Avert Translations": [
  "def extractAvert(item):\n\t\"\"\"\n\t# Avert Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (vol or chp or frag):\n\t\treturn False\n\tif 'rokujouma' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Rokujouma no Shinryakusha!', vol, chp, frag=frag, postfix=postfix)\n\telif 'fuyo shoukan mahou' in item['title'].lower() or 'fuyo shoukan mahou' in item['tags'] or 'fuyou shoukan mahou' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Boku wa Isekai de Fuyo Mahou to Shoukan Mahou wo Tenbin ni Kakeru', vol, chp, frag=frag, postfix=postfix)\n\telif 'regarding reincarnated to slime chapter' in item['title'].lower() or 'Tensei Shitara Slime Datta Ken' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shitara Slime Datta Ken', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\tif re.match('^Release:? fuyo shoukan mahou? vol ?\\\\d+ chapter \\\\d+', item['title'], re.IGNORECASE):\n\t\treturn buildReleaseMessageWithType(item, 'Boku wa Isekai de Fuyo Mahou to Shoukan Mahou wo Tenbin ni Kakeru', vol, chp, frag=frag, postfix=postfix)\n\n\t\t\n\treturn False",
  "2018-06-17T06:53:18.327247"
 ],
 "Awakenings": [
  "\ndef extractAwakeningsEmbklitzkeCom(item):\n\t'''\n\tParser for 'awakenings.embklitzke.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-16T08:51:16.906386"
 ],
 "Aya Translation": [
  "def extractTranslasiSanusiMe(item):\n\t'''\n\tParser for 'translasi.sanusi.me'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\tif 'Bahasa Indonesia' in item['tags']:\n\t\treturn None\n\t\t\n\n\ttagmap = [\n\t\t('The Adventure of Miko',                                       'The Story of Drifted Girls in Different World ~The Adventure of Miko~',                                                                               'translated'),\n\t\t('Yuusha ga Onna da to Dame Desuka?',                           'Yuusha Ga Onna Da to Dame Desu Ka?',                                                                                                                  'translated'),\n\t\t('Hentai Maid Vampire Wants to Lick Lolita Ojousama\u2019s Pantsu',  'Hentai Maid Vampire Wants to Lick Lolita Ojousama\u2019s Pantsu',                                                                                          'translated'),\n\t\t('The Escape Destination is Demon King Dungeon?',               'The Escape Destination is Demon King Dungeon?',                                                                                                       'translated'),\n\t\t('Necromancer Girl\\'s Strongest Second Playthrough',            'Necromancer Girl\\'s Strongest Second Playthrough',                                                                                                    'translated'),\n\t\t('Even Though I Just Want to be A Easy Going Adventurer! ~The Legendary Sword is No Match For Bronze Sword+999 in Front of Me~',  'Even Though I Just Want to be A Easy Going Adventurer! ~The Legendary Sword is No Match For Bronze Sword+999 in Front of Me~',                                                                                          'translated'),\n\t\t('Juu Sai No Saikyou Madoushi',                                 'Juu Sai No Saikyou Madoushi',                                                                                                                         'translated'),\n\t\t('The Adventure of Claire',                                     'The Story of Drifted Girls in Different World ~The Adventure of Claire~',                                                                             'translated'),\n\t\t('Aiming For Harem Queen in Different World',                   'Aiming For Harem Queen in Different World \u2013Story of Self-Proclaimed Ordinary High School Girl Struggling in Different World\u2013',                        'translated'),\n\t\t('Bishoujo vampire',                                            'Isekai de Bishoujo Kyuketsuki ni Natta no de \u201cMiryou\u201d de Onnanoko wo Otoshi, Kuni wo Horoboshimasu ~Sennou to Kyuketsu ni Kaerareteiku Otometachi~',  'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T04:07:37.198904"
 ],
 "Ayax World": [
  "def extractAyaxWorld(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ayyshadow's TLs": [
  "def extractAyyshadowtransWordpressCom(item):\n\t'''\n\tParser for 'ayyshadowtrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Waiting For You Online',       'Waiting For You Online',                      'translated'),\n\t\t('Runaway Guide',                'Runaway Guide',                               'translated'),\n\t\t('Undead',                       'Undead',                                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-14T05:46:21.853954"
 ],
 "Azrnah Translations": [
  "def extractAzrnahtranslationsWordpressCom(item):\n\t'''\n\tParser for 'azrnahtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('TUP ',    'The Untouchable President',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-05T03:53:16.937429"
 ],
 "Azure Sky Translation": [
  "def extractAzureSky(item):\n\t\"\"\"\n\t# extractAzureSky\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Shinde Hajimaru'.lower() in item['title'].lower():\n\t\tpostfix = ''\n\t\tif 'prologue' in item['title'].lower():\n\t\t\tpostfix = 'Prologue'\n\t\treturn buildReleaseMessageWithType(item, 'Shinde Hajimaru Isekai Tensei', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Azure.Zink Translating": [
  "\ndef extractAzurezinktranslatingBlogspotCom(item):\n\t'''\n\tParser for 'azurezinktranslating.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:35:20.398572"
 ],
 "Azuresky Translation": [
  "def extractAzuureskyBlogspotCom(item):\n\t'''\n\tParser for 'azuuresky.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('World defying dan god chapter ',  'World defying dan god',           'translated'),\n\t\t('Tensei Shoujo no Rirekisho',      'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',               'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-04T05:37:43.463168"
 ],
 "Azuron's Cleaning Practise": [
  "def extractAzuroncleaningWordpressCom(item):\n\t'''\n\tParser for 'azuroncleaning.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif item['tags'] == ['Uncategorized']:\n\t\ttitlemap = [\n\t\t\t('Qinglian Chronicles Chapter ',               'Qinglian Chronicles',                   'translated'),\n\t\t\t('How To Die As Heavy As Mount Tai Chapter ',  'How To Die As Heavy As Mount Tai',      'translated'),\n\t\t]\n\t\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('HTDASAMT',                               'How To Die As Heavy As Mount Tai',                      'translated'),\n\t\t('How to die as heavy as mount tai',       'How To Die As Heavy As Mount Tai',                      'translated'),\n\t\t('PRC',                                    'PRC',                                                   'translated'),\n\t\t('Loiterous',                              'Loiterous',                                             'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-07-22T09:15:50.459265"
 ],
 "Azurro 4 Cielo": [
  "def extractAzurro(item):\n\t\"\"\"\n\n\t\"\"\"\n\t\n\tif not 'translation project' in item['tags']:\n\t\treturn None\n\tif not 'review' in item['tags']:\n\t\treturn None\n\tif 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol):\n\t\treturn None\n\t\t\n\tif 'A Naive Short-tempered Girl' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'A Naive Short-tempered Girl', vol, chp, frag=frag, postfix=postfix)\n\tif 'Substitute Bride' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Substitute Bride', vol, chp, frag=frag, postfix=postfix)\n\tif 'Husband is Great Black Belly (\u8001\u516c\u662f\u8179\u9ed1\u5927\u4eba)' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Husband is Great Black Belly', vol, chp, frag=frag, postfix=postfix)\n\tif \"The CEO's Pregnant Wife (\u603b\u88c1\u7684\u5b55\u59bb)\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"The CEO's Pregnant Wife\", vol, chp, frag=frag, postfix=postfix)\n\tif 'The Wolf Husband and The Green Plum Wife (\u72fc\u7af9\u9a6c\u4e0e\u9752\u6885\u59bb)' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Wolf Husband and The Green Plum Wife', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2018-03-27T04:23:06.946041"
 ],
 "BAMTranslations": [
  "def extractBamtranslationsHomeBlog(item):\n\t'''\n\tParser for 'bamtranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Himajin, Maou no Sugata de Isekai e Tokidoki Cheat na burari Tabi',       'Himajin, Maou no Sugata de Isekai e Tokidoki Cheat na burari Tabi',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T14:57:25.813153"
 ],
 "BB MTL Translations": [
  "def extractBbmtlsWordpressCom(item):\n\t'''\n\tParser for 'bbmtls.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('RBDLS',                                        'Raising a Bun with a Daily Life System',                      'translated'),\n\t\t('Raising a Bun with a Daily Life System',       'Raising a Bun with a Daily Life System',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T07:56:47.418486"
 ],
 "BC Novels": [
  "def extractBcnovelsCom(item):\n\t'''\n\tParser for 'bcnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('When the Protagonist of a Fanfiction',               'When a Fanfic Protagonist Transmigrated into the Original Novel',     'translated'),\n\t\t('Reader and Protagonist',                             'The Reader and Protagonist Definitely Have to Be in True Love',       'translated'),\n\t\t('Everyday the Protagonist Wants to Capture Me',       'Everyday the Protagonist Wants to Capture Me',                        'translated'),\n\t\t('Prince\\'s Loyal Lover',                              'Prince\\'s Loyal Lover',                                               'translated'),\n\t\t('The Scum Villain\u2019s Self-Saving System',              'The Scum Villain\\'s Self-Saving System',                              'translated'),\n\t\t('I Can\u2019t Write Any \u2018Below the Neck\u2019 Love Scenes',     'I Can\\'t Write Any \\'Below the Neck\\' Love Scenes',                   'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-16T04:32:04.059594"
 ],
 "BL Drama Diary": [
  "def extractBlDramaDiary(item):\n\t\"\"\"\n\tParser for 'BL Drama Diary'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "BL Novel Obsession": [
  "def extractBLNovelObsession(item):\n\t\"\"\"\n\t'BL Novel Obsession'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Feng Mang' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Feng Mang', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\n\ttagmap = [\n\t\t('Deceive',          'Deceive',                        'translated'),\n\t\t('Feng Mang',        'Feng Mang',                      'translated'),\n\t\t('15P 7H 6SM',       '15P 7H 6SM',                     'translated'),\n\t\t('goldenassistant',  'Golden Assistant',               'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-10-20T07:46:03.194824"
 ],
 "BL to the world": [
  "\ndef extractBltotheuniverseWordpressCom(item):\n\t'''\n\tParser for 'bltotheuniverse.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-12T09:39:17.391834"
 ],
 "BLCX Translations": [
  "\ndef extractBlcxtranslationsGithubIo(item):\n\t'''\n\tParser for 'blcxtranslations.github.io'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:15:53.004319"
 ],
 "BLlove": [
  "def extractBllovetranslationsWordpressCom(item):\n\t'''\n\tParser for 'bllovetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('CDAW',       'Continuation of the Dream in Another World',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T11:06:17.373531"
 ],
 "Bad Grammar translations": [
  "def extractBadgrammartranslationsWordpressCom(item):\n\t'''\n\tParser for 'badgrammartranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Super God Gene',       'Super God Gene',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-14T08:05:41.801774"
 ],
 "Bad Translation": [
  "def extractBadTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "BaiXingHeiYue Translations": [
  "def extractBaixingheiyueTranslations(item):\n\t'''\n\tParser for 'BaiXingHeiYue Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"Flash Marriage\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Flash Marriage\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-03-25T09:16:34.805180"
 ],
 "Baka Dogeza Translation": [
  "def extractBakaDogeza(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif 'chapter' in item['title'].lower() and (vol or chp):\n\t\treturn buildReleaseMessageWithType(item, 'Knights & Magic', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Baka Pervert": [
  "def extractBakaPervert(item):\n\t\"\"\"\n\t# 'Baka Pervert'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'fanfic' in item['title'].lower():\n\t\treturn None\n\n\tif 'antihero' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Ultimate Antihero', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('hxh'):\n\t\treturn buildReleaseMessageWithType(item, 'Hybrid x Heart Magis Academy Ataraxia', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('magika vol'):\n\t\treturn buildReleaseMessageWithType(item, 'Magika No Kenshi To Shoukan Maou', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('arifureta chapter') and 'finished' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Arifureta Shokugyou de Sekai Saikyou', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('arifureta '):\n\t\treturn buildReleaseMessageWithType(item, 'Arifureta Shokugyou de Sekai Saikyou', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('bahamut ') and 'finished' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Saijaku Muhai no Bahamut', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('seigensou ') and 'finished' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Seirei Gensouki', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('sevens ') and 'finished' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Sevens', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('campiones ') and 'finished' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Campione', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2019-01-26T14:51:59.078319"
 ],
 "Baka Pubs": [
  "\ndef extractBakapubsWordpressCom(item):\n\t'''\n\tParser for 'bakapubs.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:39.272477"
 ],
 "Baka Translations": [
  "\ndef extractNovelIdBlogniveCom(item):\n\t'''\n\tParser for 'novel-id.blognive.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-20T10:09:44.154833"
 ],
 "Baka-Tsuki": [
  "def extractBakaTsuki(item):\n\t\"\"\"\n\tParser for 'Baka-Tsuki'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Bakahou": [
  "def extractBakahou(item):\n\t\"\"\"\n\tParser for 'Bakahou'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Bakakashira": [
  "def extractBakakashiraWordpressCom(item):\n\t'''\n\tParser for 'bakakashira.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ee, Teni Shippai!? \u2026..Seikou?',       'Ee, Teni Shippai!? \u2026..Seikou?',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-29T06:16:45.639946"
 ],
 "Bakalation": [
  "\ndef extractBakalationBlogspotCom(item):\n\t'''\n\tParser for 'bakalation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:36:35.515968"
 ],
 "Bananas Translation": [
  "def extractBananas(item):\n\t\"\"\"\n\tParser for 'Bananas'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tchp_prefixes = [\n\t\t\t('AARASL',                          'An A-ranked Adventurer\u2019s \u201cSlow-living\u201d',                             'translated'), \n\t\t\t('Isekai Taneuma',                  'Isekai Taneuma',                                                     'translated'), \n\t\t\t('Gang of Yuusha',                  'Gang of Yusha',                                                      'translated'), \n\t\t\t('Gang of Yusha',                   'Gang of Yusha',                                                      'translated'), \n\t\t\t('Soul Eater of the Rebellion',     'Soul Eater of the Rebellion',                                        'translated'), \n\t\t\t('Sparta Teikoku ',                 'Sparta Teikoku Kenkoku Senki ',                                      'translated'), \n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-01-26T11:27:04.172447"
 ],
 "Banoffee Translations": [
  "def extractBanoffeetranslationsBlogspotCom(item):\n\t'''\n\tParser for 'banoffeetranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == []:\n\t\ttitlemap = [\n\t\t\t('Runaway Guide Chapter ',      'Runaway Guide',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T07:21:03.431520"
 ],
 "BarelyTranslation": [
  "def extractBarelytranslationCom(item):\n\t'''\n\tParser for 'barelytranslation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ultraman \u2013 Only Want To Protect You',       'Ultraman \u2013 Only Want To Protect You',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-20T07:20:01.167967"
 ],
 "Barnnn's Translations": [
  "def extractBarnnnBlogspotCom(item):\n\t'''\n\tParser for 'barnnn.blogspot.com'\n\t'''\n\t\n\tif 'Voice Drama' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\tif 'Lower Bound Volume' in item['title'] and vol is None:\n\t\tvol = 2\n\tif 'Upper Bound Volume' in item['title'] and vol is None:\n\t\tvol = 1\n\n\ttagmap = [\n\t\t('Monster Hunter: Cross Soul',       'Monster Hunter: Cross Soul',                      'translated'),\n\t\t('The Girl Who Ate The Death God',   'The Girl Who Ate The Death God',                  'translated'),\n\t\t('kino\\'s journey',                  'Kino\\'s Journey',                                 'translated'),\n\t\t('Cross Road',                       'Cross Road: In Their Cases',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-23T08:29:55.550965"
 ],
 "Barolaide": [
  "def extractBarolaideHomeBlog(item):\n\t'''\n\tParser for 'barolaide.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-20T06:14:01.948968"
 ],
 "Basic LN Translations": [
  "def extractBasiclntranslationsWordpressCom(item):\n\t'''\n\tParser for 'basiclntranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Do You Think Someone Like You Can Defeat the Demon King?',       'Do You Think Someone Like You Can Defeat the Demon King?',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-23T08:51:48.872411"
 ],
 "Bastion:  The Last Hope": [
  "\ndef extractBastionthelasthopeBlogspotCom(item):\n\t'''\n\tParser for 'bastionthelasthope.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:06.605033"
 ],
 "Bay City Runaway": [
  "\ndef extractBaycityrunawayWordpressCom(item):\n\t'''\n\tParser for 'baycityrunaway.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:36.460388"
 ],
 "Bayabusco Translation": [
  "def extractBayabuscoTranslation(item):\n\t\"\"\"\n\t# 'Bayabusco Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Ex Strongest Swordsman', 'Former Strongest Swordsman Long For Magic In Different World',  'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\n\ttitlemap = [\n\t\t('Demon King',                                                   'The Demon King Seems to Conquer the World',                     'translated'),\n\t\t('World Teacher',                                                'World Teacher',                                                 'translated'),\n\t\t('Tensei Shoujo no Rirekisho',                                   'Tensei Shoujo no Rirekisho',                                    'translated'),\n\t\t('Former Strongest Swordsman Long For Magic In Different World', 'Former Strongest Swordsman Long For Magic In Different World',  'translated'),\n\t\t('Ex Strongest Swordsman Longs For Magic In Different World',    'Former Strongest Swordsman Long For Magic In Different World',  'translated'),\n\t\t('Ex Strongest Swordsman Long For Magic In Different World',     'Former Strongest Swordsman Long For Magic In Different World',  'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-02-10T03:31:49.194250"
 ],
 "Bcat00 Translation": [
  "def extractBcat00(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttitlemap = [\n\t\t('Overturning the Heavens chapter', 'Overturning the Heavens',                                                           'translated'),\n\t\t('Law of the devil',                'Law of the Devil',                                                                  'translated'),\n\t\t('Miracle doctor',                  'Miracle Doctor, Abandoned Daughter: The Sly Emperor\\'s Wild Beast-Tamer Empress',   'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-02-06T05:10:02.333887"
 ],
 "BeRsErk Translations": [
  "def extractBeRsErkTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "BeamMeUpScotty's Stuff": [
  "def extractBeammeupscottysstuffWordpressCom(item):\n\t'''\n\tParser for 'beammeupscottysstuff.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('A Change of Pace',       'A Change of Pace',                      'oel'),\n\t\t('Two Worlds',             'Two Worlds',                            'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-26T02:57:23.281186"
 ],
 "Bear Bear Translations": [
  "def extractBearBearTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Becoming a better writer": [
  "\ndef extractBecomingabetterwriterWordpressCom(item):\n\t'''\n\tParser for 'becomingabetterwriter.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:59.805434"
 ],
 "Beehugger": [
  "def extractBeehugger(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Summary' in item['tags']:\n\t\treturn None\n\t\t\n\t\t\n\tif 'Battle Emperor' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Battle Emperor', vol, chp, frag=frag, postfix=postfix)\n\tif 'Battle Emperor Chapter ' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Battle Emperor', vol, chp, frag=frag, postfix=postfix)\n\tif 'Sword Spirit' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sword Spirit', vol, chp, frag=frag, postfix=postfix)\n\tif 'Sword Spirit Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Sword Spirit', vol, chp, frag=frag, postfix=postfix)\n\t# if 'Forty Millenniums of Cultivation' in item['tags'] and (chp or vol):\n\t# \treturn buildReleaseMessageWithType(item, 'Forty Millenniums of Cultivation', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-12-15T04:21:17.964121"
 ],
 "Beer Happy Translations": [
  "def extractBeerHappyTranslations(item):\n\t\"\"\"\n\tParser for 'Beer Happy Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif \"Shaman's Awakening\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Shaman's Awakening\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-03-10T09:37:33.533557"
 ],
 "Beetleman Translations": [
  "\ndef extractBarrykaizerBlogspotCom(item):\n\t'''\n\tParser for 'barrykaizer.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:55:53.987871"
 ],
 "Benazir's Blog": [
  "\ndef extractBenazircariBlogspotCom(item):\n\t'''\n\tParser for 'benazircari.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:30.836995"
 ],
 "Bent Translations": [
  "def extractBenttranslationsWordpressCom(item):\n\t'''\n\tParser for 'benttranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Can You Connect to Your Wifi?',       'Can You Connect to Your Wifi?',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-04T03:31:48.654427"
 ],
 "Berry MTL": [
  "def extractBerryMtl(item):\n\t'''\n\tParser for 'Berry MTL'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"I Can Speak to Animals and Demons\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"I Can Speak to Animals and Demons\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-03-27T03:21:07.373167"
 ],
 "Berry Translation": [
  "def extractBerrytranslationWordpressCom(item):\n\t'''\n\tParser for 'berrytranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Black-bellied Movie Emperor\u2019s Clever Wife (BME) \u2013 ',  'Black-bellied Movie Emperor\\'s Clever Wife',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-15T05:50:56.065477"
 ],
 "Berseker Translations": [
  "def extractBersekerTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif 'Because the world has changed into a death game is funny' in item['tags'] and (chp or vol or 'Prologue' in postfix):\n\t\treturn buildReleaseMessageWithType(item, 'Sekai ga death game ni natta no de tanoshii desu', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Betwixted Translations": [
  "def extractBetwixtedtranslationsBlogspotCom(item):\n\t'''\n\tParser for 'betwixtedtranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('King of Classical Music',       'King of Classical Music',                      'translated'),\n\t\t('Gentle Beast',                  'Gentle Beast',                                 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-26T07:50:02.201427"
 ],
 "Bibi Translations": [
  "def extractBibitranslationsCom(item):\n\t'''\n\tParser for 'bibitranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Marriage of the Di Daughter',       'Marriage of the Di Daughter',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T07:57:25.550202"
 ],
 "Biblioth\u00e8que Armaria": [
  "def extractBibliothequearmariaWordpressCom(item):\n\t'''\n\tParser for 'bibliothequearmaria.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('qltt',       'Green Dragon Totem',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-20T06:15:28.702223"
 ],
 "Big Dipper Paradise": [
  "def extractDipperwebWordpressCom(item):\n\t'''\n\tParser for 'dipperweb.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['tags'] == ['translation'] and item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, \"Inner Demons\", vol, chp, frag=frag, postfix=postfix)\n\n\tif item['title'].startswith(\"Inner Demons \"):\n\t\treturn buildReleaseMessageWithType(item, \"Inner Demons\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-06-16T05:59:06.381726"
 ],
 "Bijinsans": [
  "def extractBijinsans(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Benkyou no Kamisama wa Hitomishiri' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Benkyou no Kamisama wa Hitomishiri', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Binbogami": [
  "def extractBinbogamiWordpressCom(item):\n\t'''\n\tParser for 'binbogami.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hazure Skill',       'Hazure Skill \u2018Mapping\u2019 wo Te ni Shita Ore wa, Saikyou Party to Tomo ni Dungeon ni Idomu',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-14T08:06:46.866842"
 ],
 "Binggo&Corp": [
  "def extractBinggoCorp(item):\n\t\"\"\"\n\t# Binggo & Corp Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Jiang Ye' in item['title'] and 'Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Jiang Ye', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ze Tian Ji' in item['title'] and 'Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Ze Tian Ji', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Binhjamin": [
  "def extractBinhjamin(item):\n\t\"\"\"\n\t# Binhjamin\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (vol or chp or frag or postfix):\n\t\treturn False\n\tif ('SRKJ' in item['title'] or 'SRKJ-Sayonara Ryuu' in item['tags']) and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Sayonara Ryuusei Konnichiwa Jinsei', vol, chp, frag=frag, postfix=postfix)\n\tif 'Unborn' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Unborn', vol, chp, frag=frag, postfix=postfix)\n\tif 'Bu ni Mi' in item['title'] or '100 Years Of Martial Arts' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, '100 Years Of Martial Arts', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Biolumi Translations": [
  "def extractBiolumitranslationsTumblrCom(item):\n\t'''\n\tParser for 'biolumitranslations.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Devil\\'s Origin',       'The Devil\\'s Origin',                      'translated'),\n\t\t('The Unicorn Legion',        'The Unicorn Legion',                       'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-07-23T08:13:43.850588"
 ],
 "Bionicark Translations": [
  "def extractBionicarkTranslations(item):\n\t\"\"\"\n\tBionicark Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Birdy Translations": [
  "def extractBirdyTranslations(item):\n\t\"\"\"\n\tParser for 'Birdy Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Spear Master and the Black Cat Chapter '):\n\t\treturn buildReleaseMessageWithType(item, 'Spear Master and the Black Cat', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Bisugo Translations": [
  "\ndef extractBisugotlWordpressCom(item):\n\t'''\n\tParser for 'bisugotl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:40:47.610402"
 ],
 "BitGray": [
  "def extractBitgrayWordpressCom(item):\n\t'''\n\tParser for 'bitgray.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Swamp Girl!',       'Swamp Girl!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-04-22T07:54:24.276062"
 ],
 "Bitter Coffee TL": [
  "def extractCoffeetoobitterWordpressCom(item):\n\t'''\n\tParser for 'coffeetoobitter.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('lotow',       'Laws of the Other World',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Laws of the Other World Chapter ',        'Laws of the Other World',                      'translated'),\n\t\t('Laws of the Other World: Chapter ',       'Laws of the Other World',                      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-05T07:26:54.691414"
 ],
 "Black Hare White Hare": [
  "def extractOfloatWordpressCom(item):\n\t'''\n\tParser for 'ofloat.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('refined-sunflower-and-the-little-priest',       'Refined Sunflower and the Little Priest',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-01T21:54:11.083923"
 ],
 "Black Hat Magick": [
  "\ndef extractBlackhatmagickCom(item):\n\t'''\n\tParser for 'blackhatmagick.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:32.171180"
 ],
 "Black Soulz": [
  "\ndef extractBlacksoulzBlogspotCom(item):\n\t'''\n\tParser for 'blacksoulz.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-20T06:16:03.802852"
 ],
 "BlackMaskedPhantom": [
  "def extractBlackmaskedphantomWordpressCom(item):\n\t'''\n\tParser for 'blackmaskedphantom.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Aloof King',                                                                  'Aloof King and Cold (Acting) Queen',                                                         'translated'),\n\t\t('The Adventures of the Idiot Hero, the Logical Mage, and Their Friends',       'The Adventures of the Idiot Hero, the Logical Mage, and Their Friends',                      'oel'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-07-18T05:40:01.537915"
 ],
 "Blackbox Translations": [
  "def extractBlackboxTlCom(item):\n\t'''\n\tParser for 'blackbox-tl.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Antelope and Night Wolf',                   'The Antelope and Night Wolf',                                  'translated'),\n\t\t('awm',                                           'AWM: PUBG',                                                    'translated'),\n\t\t('LRotPB',                                        'Lantern: Reflection of the Peach Blossoms',                    'translated'),\n\t\t('SASAM',                                         'My Senior Is Always Salivating After Me',                      'translated'),\n\t\t('My Senior Is Always Salivating After Me',       'My Senior Is Always Salivating After Me',                      'translated'),\n\t\t('TSNLT',                                         'The Script Is Not Like This',                                  'translated'),\n\t\t('The Script Is Not Like This',                   'The Script Is Not Like This',                                  'translated'),\n\t\t('ISMM',                                          'I Ship My Adversary X Me',                                     'translated'),\n\t\t('I Ship My Adversary X Me',                      'I Ship My Adversary X Me',                                     'translated'),\n\t\t('QZ',                                            'Qizi',                                                         'translated'),\n\t\t('Qizi',                                          'Qizi',                                                         'translated'),\n\t\t('Ta',                                            'Thousand Autumns',                                             'translated'),\n\t\t('Thousand Autumns',                              'Thousand Autumns',                                             'translated'),\n\t\t('TYQHM',                                         'Those Years In Quest of Honour Mine',                          'translated'),\n\t\t('POBE',                                          'A President\\'s Out-of-Body Experience',                        'translated'),\n\t\t('A President\\'s Out-of-Body Experience',         'A President\\'s Out-of-Body Experience',                        'translated'),\n\t\t('Peerless',                                      'Peerless',                                                     'translated'),\n\t\t('Slow-Witted',                                   'Slow-Witted',                                                  'translated'),\n\t\t('Breaking through the Clouds',                   'Breaking through the Clouds',                                  'translated'),\n\t\t('HoG',                                           'Heart of Glass',                                               'translated'),\n\t\t('heart of glass',                                'Heart of Glass',                                               'translated'),\n\t\t('Fuck Off Unless You\\'re The One',               'Fuck Off Unless You\\'re The One',                              'translated'),\n\t\t('FOYO',                                          'Fuck Off Unless You\\'re The One',                              'translated'),\n\t\t('A Fox Spirit\\'s Guide to Sleeping with Men',    'A Fox Spirit\\'s Guide to Sleeping with Men',                   'translated'),\n\t\t('FSGSM',                                         'A Fox Spirit\\'s Guide to Sleeping with Men',                   'translated'),\n\t\t('YGMCT',                                         'You\\'ve Got Mail: A Cautionary Tale',                          'translated'),\n\t\t('You\\'ve Got Mail: A Cautionary Tale',           'You\\'ve Got Mail: A Cautionary Tale',                          'translated'),\n\t\t('MLP',                                           'My Little Poplar',                                             'translated'),\n\t\t('My Little Poplar',                              'My Little Poplar',                                             'translated'),\n\t\t('Times of Our Lives',                            'Times of Our Lives',                                           'translated'),\n\t\t('CFSB',                                          '[Rebirth] The Cannon Fodder Strikes Back',                     'translated'),\n\t\t('[Rebirth] The Cannon Fodder Strikes Back',      '[Rebirth] The Cannon Fodder Strikes Back',                     'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-10T03:03:53.056183"
 ],
 "Blade of Hearts": [
  "def extractBladeOfHearts(item):\n\t\"\"\"\n\t# 'Blade of Hearts'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Blanca's Blogging Block": [
  "def extractBlancabloggingblockWordpressCom(item):\n\t'''\n\tParser for 'blancabloggingblock.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Mahousekai',                            'Mahousekai no Uketsukejou ni Naritaidesu',                      'translated'),\n\t\t('Matsurikaden',                          'The Legend of Bureaucrat Matsurika',                            'translated'),\n\t\t('Matsurika Kanriden',                    'The Legend of Bureaucrat Matsurika',                            'translated'),\n\t\t('Tsurugi no Joou to Rakuin no Ko',       'Tsurugi no Joou to Rakuin no Ko',                               'translated'),\n\t\t('shounen onmyouji',                      'Shounen Onmyouji',                                              'translated'),\n\t\t('Kyoto Holmes',                          'Kyoto Teramachi Sanjou no Holmes',                              'translated'),\n\t\t('Kyoholmes',                             'Kyoto Teramachi Sanjou no Holmes',                              'translated'),\n\t\t('Kaminai',                               'Kamisama no Inai Nichiyoubi',                                   'translated'),\n\t\t('Jungfrau',                              'Kenkoku no Jungfrau',                                           'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-02T07:23:51.914725"
 ],
 "Blastron Does Some Things": [
  "def extractBlastronDoesSomeThings(item):\n\t\"\"\"\n\tParser for 'Blastron Does Some Things'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('honzuki no gekokujou',       'honzuki no gekokujou',                      'translated'),\n\t\t('kumo desu ga nani ka',       'kumo desu ga nani ka',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T08:37:53.357256"
 ],
 "Blazes' Amateur Translations": [
  "def extractAmateurtranslationsCom(item):\n\t'''\n\tParser for 'amateurtranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Phoenix Against The World',       'Across the Stunning Beast Princess: Phoenix Against the World',   'translated'),\n\t\t('Hidden Marriage',                 'Hidden Marriage',                                                 'translated'),\n\t\t('Sonata: FAAAM',                   'Sonata: Fleeing To Avoid An Arranged Marriage',                   'translated'),\n\t\t('Princess Husband',                'Princess Husband, Too Mensao!',                                   'translated'),\n\t\t('My Chief Husband',                'My Chief Husband, Too Mensao!',                                   'translated'),\n\t\t('Level-Up Dr',                     'Level Up Doctor Choi Kiseok',                                     'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-15T04:27:43.802546"
 ],
 "Blazing Translations": [
  "def extractKnW(item):\n\t\"\"\"\n\t# Groups involved in KnW:\n\t# \tBlazing Translations\n\t# \tCapsUsingShift Tl\n\t# \tInsignia Pierce\n\t# \tKiriko Translations\n\t# \tKonjiki no Wordmaster\n\t# \tLoliquent\n\t# \tBlazing Translations\n\t# \tPummels Translations\n\t# \tXCrossJ\n\t# \tProbably another dozen randos per week.\n\t# Really. Fuck you people. Tag your shit, and start a group blog.\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\ttags = item['tags']\n\ttitle = item['title']\n\tsrc = item['srcname']\n\tpostfix = ''\n\tif src == 'XCrossJ' and 'Cross Gun' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Cross Gun', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Character Analysis' in item['title']:\n\t\treturn False\n\tif 'Chapter' in title and src == 'Blazing Translations':\n\t\tif 'By:' in title:\n\t\t\treturn False\n\t\tif 'Comment' in title:\n\t\t\treturn False\n\t\tif ':' in title:\n\t\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\telif '-' in title:\n\t\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\telse:\n\t\t\tpostfix = ''\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\tif ('Chapters' in tags and 'Konjiki no Wordmaster' in tags or 'Konjiki no Wordmaster Web Novel Chapters' in tags or 'Konjiki' in tags or src == 'Loliquent' and \n\t    'Konjiki no Wordmaster' in title):\n\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\telif 'Konjiki no Wordmaster Chapters' in tags or 'Konjiki no Moji Tsukai' in tags or src == 'Kiriko Translations' and ('KnW' in tags or 'KnW Chapter' in title\n\t    ) or src == 'CapsUsingShift Tl' and 'Konjiki no Wordmaster' in title or src == 'Pummels Translations' and 'Konjiki no Word Master Chapter' in title or src == 'XCrossJ' and 'Konjiki no Moji Tsukai' in title or src == 'Insignia Pierce' and 'Konjiki no Word Master Chapter' in title:\n\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Blessed Mango Translation": [
  "def extractBlessedmangoWordpressCom(item):\n\t'''\n\tParser for 'blessedmango.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('sss_architect',       'Expelled SSS-rank architect, rebuilding the demon kings castle!',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-12T08:53:50.665270"
 ],
 "Blob Translations": [
  "def extractWwwBlobtranslationsCom(item):\n\t'''\n\tParser for 'www.blobtranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif \"(Teaser)\" in item['title']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('Side Character Transmigrations : The Final Boss is No Joke',       'Side Character Transmigrations : The Final Boss is No Joke',     'translated'),\n\t\t('Liu Yao: The Revitalization of Fuyao Sect',                        'Liu Yao: The Revitalization of Fuyao Sect',                      'translated'),\n\t\t('Demon Lord, Retry',                                                'Demon Lord, Retry',                                              'translated'),\n\t\t('Sheng Shi Wang Fei',                                               'Sheng Shi Wang Fei',                                             'translated'),\n\t\t('Lord and Dragon',                                                  'Lord and Dragon',                                                'translated'),\n\t\t('Perfect Superstar',                                                'Perfect Superstar',                                              'translated'),\n\t\t('My Youth Begins With Loving You',                                  'My Youth Begins With Loving You',                                'translated'),\n\t\t('Garudeina Oukoku Koukoku Ki',                                      'Garudeina Oukoku Koukoku Ki',                                    'translated'),\n\t\t('Sorrowful Legend of Kanashi Village',                              'Sorrowful Legend of Kanashi Village',                            'translated'),\n\t\t('herscherik',                                                       'Herscherik (Reincarnated Prince Series)',                        'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\turlfrag = [\n\t\t('/side-character-transmigrations-the-final-boss-is-no-joke/chapter-',       'Side Character Transmigrations : The Final Boss is No Joke',     'translated'),\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-07T05:54:27.658352"
 ],
 "Blood Belt of The Goddess": [
  "\ndef extractLamiadaughterBlogspotCom(item):\n\t'''\n\tParser for 'lamiadaughter.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:24.404649"
 ],
 "Blood Songs' Translations": [
  "\ndef extractBloodsongsWordpressCom(item):\n\t'''\n\tParser for 'bloodsongs.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:56:24.718860"
 ],
 "Blood of a Marionette": [
  "\ndef extractBloodmarionetteWordpressCom(item):\n\t'''\n\tParser for 'bloodmarionette.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:42.971112"
 ],
 "Blooming Translation": [
  "\ndef extractBloomingtranslationHomeBlog(item):\n\t'''\n\tParser for 'bloomingtranslation.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-06T07:21:28.705507"
 ],
 "Blu de Blob translations": [
  "def extractBludeblobtranslationsWordpressCom(item):\n\t'''\n\tParser for 'bludeblobtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('SEG Chapter ',  'Sinister Ex-girlfriend',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-15T05:51:51.497426"
 ],
 "Blublub": [
  "def extractBlublub(item):\n\t\"\"\"\n\t# 'Blublub'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Blue Bunny Translations": [
  "def extractBluebunnytranslationsWordpressCom(item):\n\t'''\n\tParser for 'bluebunnytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('IHM',       'I Have Medicine',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-25T05:54:40.981421"
 ],
 "Blue Moon Unbreakables": [
  "\ndef extractBluemoonunbreakablesrevisedBlogspotCom(item):\n\t'''\n\tParser for 'bluemoonunbreakablesrevised.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:43.000584"
 ],
 "Blue Phoenix": [
  "def extractBluePhoenix(item):\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Chapter') and item['tags'] == ['Uncategorized']:\n\t\treturn buildReleaseMessageWithType(item, 'Blue Phoenix', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif item['title'].startswith('Blue Phoenix Chapter ') and item['tags'] == ['Uncategorized']:\n\t\treturn buildReleaseMessageWithType(item, 'Blue Phoenix', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif item['title'].startswith('Overthrowing Fate Chapter ') and item['tags'] == ['Uncategorized']:\n\t\treturn buildReleaseMessageWithType(item, 'Overthrowing Fate', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Blue Silver Translations": [
  "def extractBlueSilverTranslations(item):\n\t\"\"\"\n\t# Blue Silver Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Douluo Dalu' in item['tags']:\n\t\tproc_str = '%s %s' % (item['tags'], item['title'])\n\t\tproc_str = proc_str.replace(\"'\", ' ')\n\t\tchp, vol = extractChapterVol(proc_str)\n\t\treturn buildReleaseMessageWithType(item, 'Douluo Dalu', vol, chp)\n\tif 'Immortal Executioner' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Immortal Executioner', vol, chp, frag=frag, postfix=postfix)\n\tif 'Stellar War Storm' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Stellar War Storm', vol, chp, frag=frag, postfix=postfix)\n\tif 'Bringing The Farm To Live In Another World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Bringing The Farm To Live In Another World', vol, chp, frag=frag, postfix=postfix)\n\tif 'Law of the Devil' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Law of the Devil', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-09-18T06:53:02.345205"
 ],
 "Bluefire Translations": [
  "def extractBluefireTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Blues Translation": [
  "def extractH942204573WordpressCom(item):\n\t'''\n\tParser for 'h942204573.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Assistant Architect',       'Assistant Architect',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-02T04:49:37.779877"
 ],
 "Blurb Translations": [
  "def extractBlurbtranslationsWordpressCom(item):\n\t'''\n\tParser for 'blurbtranslations.wordpress.com'\n\t\n\tsource is ded\n\t'''\n\t\n\treturn None",
  "2019-01-26T11:58:57.185285"
 ],
 "Blyai Heaven": [
  "def extractBlyaiWordpressCom(item):\n\t'''\n\tParser for 'blyai.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TPRPGAV',       'The Protagonist is in the Right Position to Get Along with the Villain',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T06:39:57.131634"
 ],
 "Bonbon BL Translations": [
  "def extractBonbonbltranslationsWordpressCom(item):\n\t'''\n\tParser for 'bonbonbltranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('HMH Chapter ',       'His Majesty\\'s Hostage',                                                  'translated'),\n\t\t('TMCRVP V',           'Transmigrating into a Mob Character to Rehabilitate the Villain',         'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-27T07:00:36.395093"
 ],
 "Bonutzuu": [
  "def extractBonutzuuWordpressCom(item):\n\t'''\n\tParser for 'bonutzuu.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\tif 'review' in item['tags']:\n\t\treturn None\n\tif 'Anime' in item['tags']:\n\t\treturn None\n\tif 'Games' in item['tags']:\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Zombie Kiss',       'Zombie Kiss',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-05-30T22:54:51.351852"
 ],
 "Book Lovers": [
  "def extractBookloversZone(item):\n\t'''\n\tParser for 'booklovers.zone'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'juliet marillier' in item['tags']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('how to escape from an implacable man',       'How to Escape from the Implacable Man',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\treturn False",
  "2017-04-22T08:17:52.552066"
 ],
 "Book Translations and Reviews": [
  "def extractMaynoveltranslationsWordpressCom(item):\n\t'''\n\tParser for 'maynoveltranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rebirth of Chen An',                'Rebirth of Chen An',                               'translated'),\n\t\t('Rebirth of Brotherly Love',         'Rebirth of Brotherly Love',                        'translated'),\n\t\t('PRC',                               'PRC',                                              'translated'),\n\t\t('Loiterous',                         'Loiterous',                                        'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-24T23:27:37.134753"
 ],
 "Bookboat": [
  "def extractBookboatblogWordpressCom(item):\n\t'''\n\tParser for 'bookboatblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"Haroon\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Haroon\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-08-01T04:59:37.042993"
 ],
 "Books Movies and Beyond": [
  "def extractBooksMoviesAndBeyond(item):\n\t\"\"\"\n\t# 'Books Movies and Beyond'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Booksnail": [
  "def extractBooksnail712WordpressCom(item):\n\t'''\n\tParser for 'booksnail712.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ashes of Love',                    'Ashes of Love',                                   'translated'),\n\t\t('Transcendence of the Frost',       'Transcendence of the Frost',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-20T07:10:56.766618"
 ],
 "Bookworm": [
  "def extractXahxiaoranWordpressCom(item):\n\t'''\n\tParser for 'xahxiaoran.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('IWUPWAJC ',                                           'I Woke Up Pregnant With An Undead\\'s Child',          'translated'),\n\t\t('I Woke Up Pregnant With An Undead\u2019s Child Chapter ',  'I Woke Up Pregnant With An Undead\\'s Child',          'translated'),\n\t\t('The Rich And Powerful Chang An Chapter ',             'The Rich And Powerful Chang An',                      'translated'),\n\t\t('TRAPC ',                                              'The Rich And Powerful Chang An',                      'translated'),\n\t\t('TRAHC ',                                              'The Rich And Powerful Chang An',                      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-23T12:09:33.768530"
 ],
 "Bored Trans": [
  "\ndef extractBoredtrans95440947WordpressCom(item):\n\t'''\n\tParser for 'boredtrans95440947.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-26T01:08:19.225014"
 ],
 "Bored Translation": [
  "\ndef extractBoredtranslationBlogspotCom(item):\n\t'''\n\tParser for 'boredtranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:36:39.920197"
 ],
 "Bored Translations": [
  "def extractBoredtranslationsHomeBlog(item):\n\t'''\n\tParser for 'boredtranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn _buildReleaseMessage(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == ['Uncategorized']:\n\t\ttitlemap = [\n\t\t\t('Max Level Witch c',  'While Killing Slimes for 300 Years, I Became the MAX Level Unknowingly',      'translated'),\n\t\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T06:01:34.985309"
 ],
 "Boredom = THIS": [
  "\ndef extractBoredomequalsthisWordpressCom(item):\n\t'''\n\tParser for 'boredomequalsthis.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:40.343778"
 ],
 "Boring Translation": [
  "\ndef extractAnoobsiteWordpressCom(item):\n\t'''\n\tParser for 'anoobsite.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-04T03:31:34.715141"
 ],
 "Bowl of Warm Soup": [
  "def extractEggdroptlWordpressCom(item):\n\t'''\n\tParser for 'eggdroptl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('tvhss',       'The Villain Has Something to Say',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-21T23:42:37.772202"
 ],
 "Bo~": [
  "def extractBo(item):\n\t\"\"\"\n\tBo\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Brass Bolts": [
  "\ndef extractBrassboltsBlogspotCom(item):\n\t'''\n\tParser for 'brassbolts.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:01.432745"
 ],
 "Breaking off the engagement .. Bring it on!": [
  "def extractBreakingOffTheEngagementBringItOn(item):\n\t'''\n\tParser for 'Breaking off the engagement .. Bring it on!'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t(\"Breaking off the engagement .. Bring it on!\",       'Breaking off the engagement .. Bring it on!',               'translated'),\n\t\t# (\"Wizard's Soul \u301c\u604b\u306e\u8056\u6226\u301c\",                        'Wizard\\'s Soul ~Holy War of Love~',                         'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-20T07:19:49.047857"
 ],
 "Broken Jinsei": [
  "def extractJinseiwahidoiWordpressCom(item):\n\t'''\n\tParser for 'jinseiwahidoi.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Okoborehime to Entaku no Kishi',          'Okoborehime to Entaku no Kishi',                         'translated'),\n\t\t('Outaishihi ni Nante Naritakunai!!',       'Outaishihi ni Nante Naritakunai!!',                      'translated'),\n\t\t('Tyrannical Wang\\'s Beloved Wife',         'Tyrannical Wang\\'s Beloved Wife',                        'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-13T10:01:50.886649"
 ],
 "Broken World": [
  "\ndef extractBrokenworldwebWordpressCom(item):\n\t'''\n\tParser for 'brokenworldweb.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:25.800120"
 ],
 "Brotakus": [
  "def extractBrotakusCom(item):\n\t'''\n\tParser for 'brotakus.com'\n\t'''\n\tif 'Anime' in item['tags']:\n\t\treturn None\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('gakusen toshi asterisk',         'Gakusen Toshi Asterisk',                        'translated'),\n\t\t('I Shall Seal the Heavens',       'I Shall Seal the Heavens',                      'translated'),\n\t\t('ISSTH',                          'I Shall Seal the Heavens',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-29T06:18:09.117124"
 ],
 "Bruin Translation": [
  "def extractBruinTranslation(item):\n\t\"\"\"\n\t# 'Bruin Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif not item['title']:\n\t\treturn False\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith('Volume'):\n\t\treturn buildReleaseMessageWithType(item, 'Otherworldly Evil Monarch', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "BrushMTL": [
  "def extractBrushmtlWordpressCom(item):\n\t'''\n\tParser for 'brushmtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Here is Blue Justice!',       'Here is Blue Justice!',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-05T08:04:27.647489"
 ],
 "Bu Bu Jing Xin Translation": [
  "def extractBuBuJingXinTrans(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif 'bu bu jing xin' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Bu Bu Jing Xin', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Bubble Tea Translations": [
  "def extractBubbleteatranslationsWordpressCom(item):\n\t'''\n\tParser for 'bubbleteatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ice Lord Prime Minister\\'s Black-Bellied Wife',       'Ice Lord Prime Minister\\'s Black-Bellied Wife',                      'translated'),\n\t\t('ILPMBBW',                                             'Ice Lord Prime Minister\\'s Black-Bellied Wife',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-30T05:32:48.353428"
 ],
 "Build Desks": [
  "def extractBuilddesksWordpressCom(item):\n\t'''\n\tParser for 'builddesks.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ryuugoroshi',       'Ryuugoroshi no Sugosuhibi',            'translated'),\n\t\t('Elvenblood',        'Senketsu no Elf',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-29T03:38:36.205601"
 ],
 "BujangTL": [
  "def extractBujangtranslationWordpressCom(item):\n\t'''\n\tParser for 'bujangtranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PCN',       'Pendekar Cambuk Naga',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-25T07:11:16.035348"
 ],
 "Bunko to Ikemen": [
  "\ndef extractMkkbunkotoikemenWordpressCom(item):\n\t'''\n\tParser for 'mkkbunkotoikemen.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn _buildReleaseMessage(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-07T07:52:40.320215"
 ],
 "Burei Dan Works": [
  "def extractBureiDan(item):\n\t\"\"\"\n\t# Burei Dan Works\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Isekai Canceller' in item['tags'] and (chp or vol or frag or postfix):\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Canceller', vol, chp, frag=frag, postfix=postfix)\n\tif 'Kenja ni Natta' in item['tags'] and (chp or vol or frag or postfix):\n\t\treturn buildReleaseMessageWithType(item, 'Kenja ni Natta', vol, chp, frag=frag, postfix=postfix)\n\tif 'Han-Ryuu Shoujo no Dorei Raifu' in item['tags'] and (chp or vol or frag or postfix):\n\t\treturn buildReleaseMessageWithType(item, 'Han-Ryuu Shoujo no Dorei Raifu', vol, chp, frag=frag, postfix=postfix)\n\tif 'To Aru Ninki Jikkou Player no VRMMO Funtou Ki' in item['tags'] and (chp or vol or frag or postfix):\n\t\treturn buildReleaseMessageWithType(item, 'To Aru Ninki Jikkou Player no VRMMO Funtou Ki', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Burning Feathers": [
  "def extractAshenfeatherWordpressCom(item):\n\t'''\n\tParser for 'ashenfeather.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Sweet Curse! Battle-Android summoned to a Different world!',       'Sweet Curse! Battle-Android summoned to a Different world!',                      'translated'),\n\t\t('She was called God, as well as Satan',                             'She was called God, as well as Satan',                                            'translated'),\n\t\t('She was Called Both God & Satan',                                  'She was called God, as well as Satan',                                            'translated'),\n\t\t('At the Northern Fort',                                             'At the Northern Fort',                                                            'translated'),\n\t\t('Girl with the Golden-Cat Eyes',                                    'Girl with the Golden-Cat Eyes',                                                   'oel'),\n\t\t('Parabellum',                                                       'Parabellum',                                                                      'oel'),\n\t\t('Sky Gardens',                                                      'Sky Gardens',                                                                     'oel'),\n\t\t('Manuke FPS',                                                       'Manuke FPS',                                                                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-21T23:52:26.698483"
 ],
 "Bursting Chrysanthemums": [
  "def extractBurstingchrysanthemumsTumblrCom(item):\n\t'''\n\tParser for 'burstingchrysanthemums.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Reader and Protagonist Definitely Have to Be in True Love',                'The Reader and Protagonist Definitely Have to Be in True Love',                               'translated'),\n\t\t('The Daily Task of Preventing My Disciple from Turning to the Dark Side',       'The Daily Task of Preventing My Disciple from Turning to the Dark Side',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-23T07:42:57.061947"
 ],
 "Butterfly's Curse": [
  "def extractButterflyscurseStream(item):\n\t'''\n\tParser for 'butterflyscurse.stream'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('QTF Record',       'Quick Transmigration Cannon Fodder\u2019s Record of Counterattacks',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-23T07:43:36.626314"
 ],
 "Buzy Honey Bee": [
  "\ndef extractBuzyhoneybeeBlog(item):\n\t'''\n\tParser for 'buzyhoneybee.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-03T04:29:46.195014"
 ],
 "Byzaboo Translations": [
  "def extractByzabootlWordpressCom(item):\n\t'''\n\tParser for 'byzabootl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Santairiku Eiyuuki',       'Heroic Chronicles of The Three Continents \u2014 Chronicles of Rebuilding An Empire with Modern Knowledge\u2014',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-24T03:35:33.377261"
 ],
 "C Novels 2 C": [
  "def extractCNovels2C(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "C&L Machine Translating": [
  "def extractCandlHomeBlog(item):\n\t'''\n\tParser for 'candl.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('zombie master',                                                                                   'Zombie Master',                                                                                                  'translated'),\n\t\t('Because I Was Excluded Out of the Class Transfer, I Decided to Steal My Classmate\u2019s Lover',       'Because I Was Excluded Out of the Class Transfer, I Decided to Steal My Classmate\\'s Lover',                     'translated'),\n\t\t('OTOTSUKAI WA SHI TO ODORU',                                                                       'Ototsukai wa Shi to Odoru',                                                                                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-27T10:53:45.396233"
 ],
 "C-Cafe Translations": [
  "\ndef extractCCafeSuespagesCom(item):\n\t'''\n\tParser for 'c-cafe.suespages.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:49:08.460394"
 ],
 "C-Novel Tranlations\u2026": [
  "def extractCNovelTranlations(item):\n\t\"\"\"\n\t# 'C-Novel Tranlations\u2026'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "C.E. Light Novel Translations": [
  "def extractCeLn(item):\n\t\"\"\"\n\n\t####################################################################################################################################################\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif 'Seirei Gensouki' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Seirei Gensouki - Konna Sekai de Deaeta Kimi ni', vol, chp, frag=frag, postfix=postfix)\n\tif 'Mushi Uta' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Mushi-Uta', vol, chp, frag=frag, postfix=postfix)\n\tif 'Shinonome Yuuko series' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Shinonome Yuuko wa Tanpen Shousetsu o Aishite Iru', vol, chp, frag=frag, postfix=postfix)\n\tif 'Mismarca Koukoku Monogatari' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Mismarca Koukoku Monogatari', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "CClaw Translations": [
  "def extractCclawtranslationsHomeBlog(item):\n\t'''\n\tParser for 'cclawtranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Ore Ga Suki Nano Wa Imouto Dakedo Imouto Janai',             'Ore Ga Suki Nano Wa Imouto Dakedo Imouto Janai',          'translated'),\n\t\t('Kawaikereba Hentai demo Suki ni Natte Kuremasu Ka? Volume',  'Kawaikereba Hentai demo Suki ni Natte Kuremasu Ka?',      'translated'),\n\t\t('Boku no Kanojo Sensei Volume ',                              'Boku no Kanojo Sensei',                                   'translated'),\n\t\t('Berserk of Gluttony (LN) Volume ',                           'Berserk of Gluttony (LN)',                                'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-03T04:10:32.187562"
 ],
 "CGTranslations": [
  "def extractCgtranslationsMe(item):\n\t'''\n\tParser for 'cgtranslations.me'\n\t'''\n\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif ('Gifting (Fanfic)' in item['tags'] and 'LN Chapters' in item['tags']) or \\\n\t\titem['tags'] == ['Gifting (Fanfic)']:\n\t\treturn buildReleaseMessageWithType(item, 'Gifting this World with Wonderful Blessings!', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\tif 'Gifting (Fanfic)' in item['tags'] and 'explosion' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kono Subarashii Sekai ni Bakuen wo!', vol, chp, frag=frag, postfix=postfix)\n\t\n\tif ('KonoSuba' in item['tags'] and 'LN Chapters' in item['tags']):\n\t\treturn buildReleaseMessageWithType(item, 'KonoSuba', vol, chp, frag=frag, postfix=postfix)\n\t\n\t\n\treturn False",
  "2018-04-23T04:26:49.868596"
 ],
 "CN Novel Machine Translator": [
  "\ndef extractCnMtranslatorTumblrCom(item):\n\t'''\n\tParser for 'cn-mtranslator.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:53:48.364187"
 ],
 "COMO's Stash": [
  "def extractComonokomonoWordpressCom(item):\n\t'''\n\tParser for 'comonokomono.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('For My Healing Life',       'For My Healing Life',                      'translated'),\n\t\t('fmhl',                      'For My Healing Life',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-16T04:29:14.832733"
 ],
 "Cab novels n shit": [
  "def extractCabnovelsWordpressCom(item):\n\t'''\n\tParser for 'cabnovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"xi ling empire\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Xyrin Empire\", vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith(\"XE \"):\n\t\treturn buildReleaseMessageWithType(item, \"Xyrin Empire\", vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith(\"(Ch.\"):\n\t\treturn buildReleaseMessageWithType(item, \"Xyrin Empire\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-06-15T05:03:32.009743"
 ],
 "Caelum Lex": [
  "\ndef extractWwwCaelumLexCom(item):\n\t'''\n\tParser for 'www.caelum-lex.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-23T00:25:25.607305"
 ],
 "Caffae Translations": [
  "def extractHomescribbleMybluemixNet(item):\n\t'''\n\tParser for 'homescribble.mybluemix.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Great Tang Idyll Translations',       'Great Tang Idyll',                      'translated'),\n\t\t('Great Tang Idyll Chapters',           'Great Tang Idyll',                      'translated'),\n\t\t('GTI',                                 'Great Tang Idyll',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T06:59:30.026624"
 ],
 "Caged Bramblings In A Pavilion": [
  "def extractCagedBramblingsInAPavilion(item):\n\t\"\"\"\n\tCaged Bramblings In A Pavilion\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Cages: a captivity story": [
  "\ndef extractCaptivitystoryWordpressCom(item):\n\t'''\n\tParser for 'captivitystory.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:29.642795"
 ],
 "Calico x Tabby": [
  "def extractCalicoxTabby(item):\n\t\"\"\"\n\t# Calico x Tabby\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Meow Meow Meow' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Meow Meow Meow', vol, chp, frag=frag)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "CapsUsingShift Tl": [
  "def extractKnW(item):\n\t\"\"\"\n\t# Groups involved in KnW:\n\t# \tBlazing Translations\n\t# \tCapsUsingShift Tl\n\t# \tInsignia Pierce\n\t# \tKiriko Translations\n\t# \tKonjiki no Wordmaster\n\t# \tLoliquent\n\t# \tBlazing Translations\n\t# \tPummels Translations\n\t# \tXCrossJ\n\t# \tProbably another dozen randos per week.\n\t# Really. Fuck you people. Tag your shit, and start a group blog.\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\ttags = item['tags']\n\ttitle = item['title']\n\tsrc = item['srcname']\n\tpostfix = ''\n\tif src == 'XCrossJ' and 'Cross Gun' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Cross Gun', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Character Analysis' in item['title']:\n\t\treturn False\n\tif 'Chapter' in title and src == 'Blazing Translations':\n\t\tif 'By:' in title:\n\t\t\treturn False\n\t\tif 'Comment' in title:\n\t\t\treturn False\n\t\tif ':' in title:\n\t\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\telif '-' in title:\n\t\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\telse:\n\t\t\tpostfix = ''\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\tif ('Chapters' in tags and 'Konjiki no Wordmaster' in tags or 'Konjiki no Wordmaster Web Novel Chapters' in tags or 'Konjiki' in tags or src == 'Loliquent' and \n\t    'Konjiki no Wordmaster' in title):\n\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\telif 'Konjiki no Wordmaster Chapters' in tags or 'Konjiki no Moji Tsukai' in tags or src == 'Kiriko Translations' and ('KnW' in tags or 'KnW Chapter' in title\n\t    ) or src == 'CapsUsingShift Tl' and 'Konjiki no Wordmaster' in title or src == 'Pummels Translations' and 'Konjiki no Word Master Chapter' in title or src == 'XCrossJ' and 'Konjiki no Moji Tsukai' in title or src == 'Insignia Pierce' and 'Konjiki no Word Master Chapter' in title:\n\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Cardboard Translations": [
  "def extractCardboardtranslationsCom(item):\n\t'''\n\tParser for 'cardboardtranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('JM ',          'A Demon Lord\\'s Tale: Dungeons, Monster Girls, and Heartwarming Bliss',      'translated'),\n\t\t\t('TSKD ',        'Tensei Shitara Ken Deshita',                                                 'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-01-05T07:36:16.223904"
 ],
 "Carnation Scans": [
  "def extractCarnationscansWeeblyCom(item):\n\t'''\n\tParser for 'carnationscans.weebly.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('According to Rumors',                            'According to Rumors, He Seems to be Trash.',                                                     'translated'),\n\t\t('Mastering Magic in an Otome Game',               'Reincarnated into an Otome Game? Who Cares! I\u2019m Too Busy Mastering Magic!',                      'translated'),\n\t\t('The Villainess Wants to Marry a Commoner',       'The Villainess Wants to Marry a Commoner',                                                       'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-12T23:33:50.666709"
 ],
 "Carthian Dreams": [
  "\ndef extractCarthiandreamsBlogspotCom(item):\n\t'''\n\tParser for 'carthiandreams.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:59.675600"
 ],
 "Cas Project Site": [
  "def extractCasProjectSite(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn buildReleaseMessageWithType(item, 'Era of Cultivation', vol, chp, frag=frag, postfix=postfix)\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Cat Scans": [
  "def extractCatScans(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Catato Patch": [
  "def extractWwwCatatopatchCom(item):\n\t'''\n\tParser for 'www.catatopatch.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('The Devil\\'s Evolution Catalog ',  'The Devil\\'s Evolution Catalog',      'translated'),\n\t\t('The Undying Drama',                'The Undying Drama',                   'translated'),\n\t\t('Marquis of Grand Xia',             'Marquis of Grand Xia',                'translated'),\n\t\t('Appraiser\\'s Job',                 'Appraiser\\'s Job',                    'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-28T05:53:59.788760"
 ],
 "Cathar(tic) City": [
  "def extractCatharcityWordpressCom(item):\n\t'''\n\tParser for 'catharcity.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\t\t\n\ttagmap = [\n\t\t('Love in Another Life',                        'Love in Another Life: My Gentle Tyrant',                      'translated'),\n\t\t('Ballad of Ten Thousand Gu',                   'Ballad of Ten Thousand Gu',                                   'translated'),\n\t\t('One Night, One Day, One Year, One Lifetime',  'One Night, One Day, One Year, One Lifetime',                  'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-11-05T03:47:21.158996"
 ],
 "Catherine": [
  "\ndef extractEeriefairytaleBlogspotCom(item):\n\t'''\n\tParser for 'eeriefairytale.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:23.449524"
 ],
 "Catora": [
  "def extractCatorablogWordpressCom(item):\n\t'''\n\tParser for 'catorablog.wordpress.com'\n\t'''\n\t\n\tif not 'eng' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('LV999 Villager',       'LV999 Villager',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-21T06:30:42.755296"
 ],
 "Cautr's": [
  "def extractCautrs(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'Reviews' in item['tags']:\n\t\treturn None\n\t\t\n\t\t\n\treturn False",
  "2018-01-17T05:10:06.468653"
 ],
 "CaveScans": [
  "def extractCaveScans(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Celestially Demonic Rabbitism Sect": [
  "def extractRabbitcultivationCom(item):\n\t'''\n\tParser for 'rabbitcultivation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Evil Child Black Bellied Mother',    'Evil Child Black Bellied Mother',                                          'translated'),\n\t\t('My Wayward Ex-Wife',                 'My Wayward Ex-Wife',                                                       'translated'),\n\t\t('Concubines Stunning Daughter',       'Concubine\\'s Stunning Daughter : Ghost Emperor Please Be Lenient',         'translated'),\n\t\t('Concubine\\'s Stunning Daughter',     'Concubine\\'s Stunning Daughter : Ghost Emperor Please Be Lenient',         'translated'),\n\t\t('Loiterous',                          'Loiterous',                                                                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-30T23:56:09.196296"
 ],
 "Cerita Kata": [
  "\ndef extractCeritakata00BlogspotCom(item):\n\t'''\n\tParser for 'ceritakata00.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:32:26.127791"
 ],
 "Ceruleonice Translations": [
  "def extractCeruleonice(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'martial emperor reborn' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial Emperor Reborn', vol, chp, frag=frag, postfix=postfix)\n\tif 'Totem' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Totem', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Cfensi": [
  "def extractCfensiWordpressCom(item):\n\t'''\n\tParser for 'cfensi.wordpress.com'\n\t'''\n\t\n\t\n\tbad = [\n\t\t\t'mainland china',\n\t\t]\n\t\t\n\tif any([tmp in item['tags'] for tmp in bad]):\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-02T04:57:00.382224"
 ],
 "Cha's Spoiler-ish Translations": [
  "def extractChaspoilerishtranslationsWordpressCom(item):\n\t'''\n\tParser for 'chaspoilerishtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I heard you are an alien',              'I heard you are an alien',                             'translated'),\n\t\t('Different World Business Symbol',       'Different World Business Symbol',                      'translated'),\n\t\t('I\\'m Not Shouldering This Blame',       'I\\'m Not Shouldering This Blame',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-18T05:48:37.164173"
 ],
 "Chaleuria": [
  "def extractChaleuriaCom(item):\n\t'''\n\tParser for 'chaleuria.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TLCPS',       'The Long Chase for the President\u2019s Spouse',                      'translated'),\n\t\t('UTDS',        'Urban Tales of Demons and Spirits',                              'translated'),\n\t\t('RIAH',        'Reborn into a Hamster for 233 Days',                             'translated'),\n\t\t('rdf',         'Records of the Dragon Follower',                                 'translated'),\n\t\t('RDF',         'Records of the Dragon Follower',                                 'translated'),\n\t\t('DITA',        'Deep in the Act',                                                'translated'),\n\t\t('CGPA',        'The Complete Guide to the Use and Care of a Personal Assistant', 'translated'),\n\t\t('RDE',         'Rest in a Demon\\'s Embrace',                                     'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-10T03:22:57.228599"
 ],
 "Chamber's Cleanup Service": [
  "def extractKtlchamberWordpressCom(item):\n\t'''\n\tParser for 'ktlchamber.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('God of Music',       'God of Music',                      'translated'),\n\t\t('Possessing Nothing', 'Possessing Nothing',                'translated'),\n\t\t('One Man Army',       'One Man Army',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-30T09:43:42.071996"
 ],
 "Chaos Words": [
  "def extractChaosWords(item):\n\t\"\"\"\n\tChaos Words\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Chaotic Neutral": [
  "def extractChaoticNeutral(item):\n\t\"\"\"\n\tParser for 'Chaotic Neutral'\n\t\"\"\"\n\tif 'asks' in item['tags']:\n\t\treturn None\n\tif 'reblog' in item['tags']:\n\t\treturn None\n\t\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2018-04-04T04:10:27.825690"
 ],
 "Chaotic Sword Translations": [
  "def extractChaoticSwordTranslations(item):\n\t\"\"\"\n\tChaotic Sword Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Chaotic Translations": [
  "def extractChaoticTranslations(item):\n\t\"\"\"\n\tChaotic Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Charlotte Donnelly": [
  "def extractBabelfishoutofwaterWordpressCom(item):\n\t'''\n\tParser for 'babelfishoutofwater.wordpress.com'\n\t'''\n\n\tbadtags = ['goodreads', 'readathon', 'Writing', 'Blog']\n\t\n\tif any([tmp in item['tags'] for tmp in badtags]):\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-05T08:08:27.971171"
 ],
 "Chauffeur Translations": [
  "def extractChauffeurTranslations(item):\n\t\"\"\"\n\t'Chauffeur Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = {\n\t\t'Hyaku ma no Shu'                                  : 'Hyaku ma no Shu',\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\t\t\n\treturn False",
  "2017-03-26T09:41:50.301658"
 ],
 "Cheap Machine Translations": [
  "def extractCheapmachinetranslationsBlogspotCom(item):\n\t'''\n\tParser for 'cheapmachinetranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('MSLOL - Chapter',             'The Mad Summoner of League of Legends',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-05-19T07:31:43.737777"
 ],
 "Cheddar!": [
  "def extractCheddar(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Chenguang's Orchard": [
  "\ndef extractChenguangsorchardBlogspotCom(item):\n\t'''\n\tParser for 'chenguangsorchard.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:56:10.826730"
 ],
 "Cherrie Cake": [
  "\ndef extractCherriecakeCom(item):\n\t'''\n\tParser for 'cherriecake.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-26T08:38:15.950594"
 ],
 "Cherry Light Translations": [
  "\ndef extractCherrylightHomeBlog(item):\n\t'''\n\tParser for 'cherrylight.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-08T23:53:53.928411"
 ],
 "CherryClan Translations": [
  "def extractCherryclannovelsWordpressCom(item):\n\t'''\n\tParser for 'cherryclannovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I Am An NPC',                                       'I Am An NPC',                                                      'translated'),\n\t\t('Sorry, I\\'m an NPC',                                'I Am An NPC',                                                      'translated'),\n\t\t('Rebirth of the Strongest Female Emperor',           'Rebirth of the Strongest Female Emperor',                          'translated'),\n\t\t('Rebirth and Rise: The Campus Business Woman',       'Rebirth and Rise: The Campus Business Woman',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('I Have Medicine [System]',                          'I Have Medicine [System]',                                         'translated'),\n\t\t('I Am An NPC',                                       'I Am An NPC',                                                      'translated'),\n\t\t('Rebirth of the Strongest Female Emperor',           'Rebirth of the Strongest Female Emperor',                          'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T02:51:53.205704"
 ],
 "Chestnut Translations": [
  "def extractChestnuttranslationsWordpressCom(item):\n\t'''\n\tParser for 'chestnuttranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rebirth of the Rich and Wealthy',       'Rebirth of the Rich and Wealthy',                      'translated'),\n\t\t('rebirth',                               'Rebirth of the Rich and Wealthy',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-01-17T05:07:46.106407"
 ],
 "Chibi Translation": [
  "def extractChibitranslationWordpressCom(item):\n\t'''\n\tParser for 'chibitranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Food Chain',       'The Man Standing on Top of the Food Chain',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-07-17T03:52:44.338033"
 ],
 "Chichi's Takeups": [
  "def extractChichilationsHomeBlog(item):\n\t'''\n\tParser for 'chichilations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Qinglian Chronicles',       'Qinglian Chronicles',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-27T11:33:14.762695"
 ],
 "Chilly Territory": [
  "def extractChillyTerritory(item):\n\t\"\"\"\n\tParser for 'Chilly Territory'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Chimp's MTL Spot": [
  "def extractChimpsMTLSpot(item):\n\t\"\"\"\n\tChimp's MTL Spot\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "China Light Novel": [
  "def extractChinaLightNovel(item):\n\t\"\"\"\n\tChina Light Novel\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Twin Sword',                 'Twin Sword',                                'translated'),\n\t\t('Devil\\'s Examination',       'Devil\\'s Examination',                      'translated'),\n\t\t('Against the Fate',           'Against the Fate',                          'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-06-02T07:29:34.524034"
 ],
 "China Novel.net": [
  "def extractChinaNovelNet(item):\n\t\"\"\"\n\tChina Novel.net\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Shura\u2019s Wrath Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Shura\u2019s Wrath', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Chinese BL Translations": [
  "def extractChineseBLTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('Novel: City of Endless Rain',                  'City of Endless Rain',              'translated'),\n\t\t('Novel: Cold Sands',                            'Cold Sands',                        'translated'),\n\t\t('Novel: The Rental Shop Owner',                 'The Rental Shop Owner',             'translated'),\n\t\t('Novel: Till Death Do Us Part',                 'Till Death Do Us Part',             'translated'),\n\t\t('Novel: Love Late',                             'Love Late',                         'translated'),\n\t\t('Novel: Spring Once More',                      'Spring Once More',                  'translated'),\n\t\t('Novel: Brother',                               'Brother',                           'translated'),\n\t\t('Novel: Living to Suffer',                      'Living to Suffer',                  'translated'),\n\t\t('Novel: How Dare You Attack My Support!',       'How Dare You Attack My Support!',   'translated'),\n\t\t('Novel: Going Out of the Way to Love You',      'Going Out of the Way to Love You',  'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-02-10T03:34:07.249747"
 ],
 "Chinese Novel Translated": [
  "def extractChineseNovelTranslated(item):\n\t\"\"\"\n\tChinese Novel Translated\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Chinese Novel Translation": [
  "def extractKurokarasublogWordpressCom(item):\n\t'''\n\tParser for 'kurokarasublog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('POTATOES ARE THE ONLY THING THAT\u2019S NEEDED IN THIS WORLD! Chapter ',   'Potatoes Are the Only Thing That\\'s Needed in This World!',      'translated'),\n\t\t('Potatoes are the only things that\u2019s needed in this world! Chapter ',  'Potatoes Are the Only Thing That\\'s Needed in This World!',      'translated'),\n\t\t('LITERARY SUPERSTAR \u2013 CHAPTER ',                                       'Literary Superstar',                                             'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-07T05:52:33.079971"
 ],
 "Chinese Novels Translation": [
  "\ndef extractChinesenoveltranslationsSimplegamesdevCom(item):\n\t'''\n\tParser for 'chinesenoveltranslations.simplegamesdev.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:39.104827"
 ],
 "Chinese Weaboo Translations": [
  "def extractChineseWeabooTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "ChineseNovelTranslations": [
  "def extractDarkness7913BlogspotCom(item):\n\t'''\n\tParser for 'darkness7913.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Transmigrating into a demon spirit to blow up the entire world',  'Transmigrating into a Demon Spirit to Blow up the Entire World',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T07:59:51.172942"
 ],
 "Chocolate Milk Translations": [
  "def extractChocolatranslationsWordpressCom(item):\n\t'''\n\tParser for 'chocolatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Entertainment Industry\\'s Gourmet Food Service',       'Entertainment Industry\\'s Gourmet Food Service',                      'translated'),\n\t\t('Rebirth of a CV Star',                                 'Rebirth of a CV Star',                                                'translated'),\n\t\t('Rebirth into an Interstellar Marriage',                'Rebirth into an Interstellar Marriage',                               'translated'),\n\t\t('RIAIM',                                                'Rebirth into an Interstellar Marriage',                               'translated'),\n\t\t('Still Saving The World Today',       'Still Saving The World Today',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-09-02T07:13:42.615735"
 ],
 "ChocolateCosmos Translations": [
  "def extractChocolateCosmosTranslations(item):\n\t\"\"\"\n\tChocolateCosmos Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'Short Stories' in item['tags']:\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Demon King',             'Demon King',          'translated'),\n\t\t('flower demon inn',       'Flower Demon\\'s Inn', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in tagmap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\treturn False",
  "2017-09-16T10:24:45.481233"
 ],
 "Chongmei Translations": [
  "def extractChongmeiTranslations(item):\n\t\"\"\"\n\tParser for 'Chongmei Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Choyce.club": [
  "def extractChoyceClub(item):\n\t\"\"\"\n\t'Choyce.club'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Chrona Zero": [
  "def extractChronaZero(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'tensei jinsei' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Cheat Aru Kedo Mattari Kurashitai\u300aTensei Jinsei o Tanoshimou!\u300b', vol, chp, frag=frag, postfix=postfix)\n\tif 'Level up by walking' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Level up By Walking: in 10 thousand steps I will be level 10000', vol, chp, frag=frag, postfix=postfix)\n\tif 'When you actually went to be another world not as the Hero but as the Slave and then...' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'When you actually went to be another world not as the Hero but as the Slave and then...', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Chronicles of Gaia": [
  "def extractChroniclesofGaia(item):\n\t\"\"\"\n\t'Chronicles of Gaia'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Dawn Traveler',                               'Dawn Traveler',                                              'translated'),\n\t\t('The Dungeon Demon Lord is the Weakest',       'The Dungeon Demon Lord is the Weakest',                      'translated'),\n\t\t('Elqueeness',                                  'Spirit King Elqueeness',                                     'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-01-20T12:59:43.279040"
 ],
 "ChronoKnight": [
  "def extractWwwChronoknightCom(item):\n\t'''\n\tParser for 'www.chronoknight.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The World Is Overflowing with Monster',       'The World Is Overflowing with Monster, I\u2019m Taking a Liking to This Life',                      'translated'),\n\t\t('The Auto-Mode Broke',                         'On the 6th Playthrough of the Otome Game, the Auto-Mode Broke',                                'translated'),\n\t\t('Kaifuku Jutsushi no Yarinaoshi ~ Sokushi Mahou to Skill Copy no Choetsu Heal',       'Kaifuku Jutsushi no Yarinaoshi ~ Sokushi Mahou to Skill Copy no Choetsu Heal',                      'translated'),\n\t\t('kuro no maou',                                'Kuro no Maou',                                                                                 'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-16T04:25:46.670283"
 ],
 "Chronon Translations": [
  "def extractChrononTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\titem['title'] = item['title'].replace('\u2019', '')\n\tif 'Weapons cheat'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Modern weapons cheat in another world', vol, chp, frag=frag, postfix=postfix)\n\tif 'Heavenly Tribulation'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Heavenly Tribulation', vol, chp, frag=frag, postfix=postfix)\n\tif 'I can speak'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'I Can Speak with Animals and Demons', vol, chp, frag=frag, postfix=postfix)\n\tif 'I Bought a Girl'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'I Bought a Girl', vol, chp, frag=frag, postfix=postfix)\n\tif 'Girl Corps'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Girl Corps', vol, chp, frag=frag, postfix=postfix)\n\tif 'Modern Weapons'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Modern weapons cheat in another world', vol, chp, frag=frag, postfix=postfix)\n\tif 'Upper World'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Reincarnation ~ From the lower world to the upper world', vol, chp, frag=frag, postfix=postfix)\n\tif 'I work as a healer'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, \"I Work As A Healer In Another World's Labyrinth City\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Chronos Chronicles": [
  "\ndef extractChronoschroniclesWordpressCom(item):\n\t'''\n\tParser for 'chronoschronicles.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:32.454176"
 ],
 "Chrysanthemum Conqueror Translations": [
  "\ndef extractChrysanthemumconquerortranslationsHomeBlog(item):\n\t'''\n\tParser for 'chrysanthemumconquerortranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-26T00:36:16.136808"
 ],
 "Chrysanthemum Garden": [
  "def extractDanmeiMelimeliartsCom(item):\n\t'''\n\tParser for 'danmei.melimeliarts.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('As the Minor Gay Love Rival in Het Novels',    'As the Minor Gay Love Rival in Het Novels',                                                              'translated'),\n\t\t('Strategy to Capture That Scum Gong',           'Strategy to Capture That Scum Gong',                                                                     'translated'),\n\t\t('SCSG',                                         'Strategy to Capture That Scum Gong',                                                                     'translated'),\n\t\t('Fantasy Farm',                                 'Fantasy Farm',                                                                                           'translated'),\n\t\t('Vanguard of the Eternal Night',                'Vanguard of the Eternal Night',                                                                          'translated'),\n\t\t('Don\\'t You Like Me',                           'Don\\'t You Like Me',                                                                                     'translated'),\n\t\t('Lord of End of World',                         'Lord of End of World',                                                                                   'translated'),\n\t\t('Who Touched My Tail!',                         'Who Touched My Tail!',                                                                                   'translated'),\n\t\t('Raising a Bun with a Daily Life System',       'Raising a Bun with a Daily Life System',                                                                 'translated'),\n\t\t('Perfect Destiny',                              'Quick Transmigration: Perfect Destiny Summary',                                                          'translated'),\n\t\t('Rebirth of the Supreme Celestial Being',       'Rebirth of the Supreme Celestial Being',                                                                 'translated'),\n\t\t('My Cherry Will Explode in the Apocalypse',                          'My Cherry Will Explode in the Apocalypse',                                          'translated'),\n\t\t('It\u2019s Actually Not Easy Wanting to be a Supporting Male Lead',       'It\u2019s Actually Not Easy Wanting to be a Supporting Male Lead',                       'translated'),\n\t\t('Seizing Dreams',                                                    'Seizing Dreams',                                                                    'translated'),\n\t\t('Back to the Apocalypse',                                            'Back to the Apocalypse',                                                            'translated'),\n\t\t('Killing The Same Person Every Time',                                'Killing The Same Person Every Time',                                                'translated'),\n\t\t('Don\\'t Pick Up Boyfriends From the Trash Bin',                      'Don\\'t Pick Up Boyfriends From the Trash Bin',                                      'translated'),\n\t\t('Game, Live Broadcast',                                              'Game, Live Broadcast',                                                              'translated'),\n\t\t('First Lazy Merchant of the Beast World',                            'Number One Lazy Merchant of the Beast World',                                      'translated'),\n\t\t('Number One Lazy Merchant of the Beast World',                       'Number One Lazy Merchant of the Beast World',                                      'translated'),\n\t\t('Game, Live Stream',                                                 'Game, Live Stream',                                                                'translated'),\n\t\t('This World Has Gone Crazy',                                         'This World Has Gone Crazy',                                                        'translated'),\n\t\t('My Vegetative Partner Opened His Eyes in Anger After I Ran Away',   'My Vegetative Partner Opened His Eyes in Anger After I Ran Away',                  'translated'),\n\t\t('The Demon King Always Thinks I\\'m Secretly in Love with Him',       'The Demon King Always Thinks I\\'m Secretly in Love with Him',                      'translated'),\n\t\t('Nurturing the Hero to Avoid Death',                                 'Nurturing the Hero to Avoid Death',                                                'translated'),\n\t\t('Ever Since I Take Home An Adonis Who Has Lost His Business',        'Ever Since I Take Home An Adonis Who Has Lost His Business',                       'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:01:04.832461"
 ],
 "ChubbyCheeks": [
  "def extractChubbyCheeks(item):\n\t\"\"\"\n\t# 'ChubbyCheeks'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Notices' in item['tags']:\n\t\treturn None\n\t\t\n\tif 'A Mistaken Marriage Match: Mysteries in the Imperial Harem' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'A Mistaken Marriage Match: Mysteries in the Imperial Harem', vol, chp, frag=frag, postfix=postfix)\n\tif 'Rebirth of the Malicious Empress of Military Lineage' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Rebirth of the Malicious Empress of Military Lineage', vol, chp, frag=frag, postfix=postfix)\n\t\n\treturn False",
  "2017-03-10T09:47:12.713134"
 ],
 "ChuuniHime Translations": [
  "\ndef extractChuunihimeWordpressCom(item):\n\t'''\n\tParser for 'chuunihime.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-01-05T10:10:49.760716"
 ],
 "Ciaran Hillock": [
  "def extractCiaranHillock(item):\n\t\"\"\"\n\tParser for 'Ciaran Hillock'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\t\t\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-07-25T05:18:45.201981"
 ],
 "Circa Translations": [
  "def extractCircaTranslations(item):\n\t\"\"\"\n\tCirca Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Circle of Shards": [
  "def extractCircleofShards(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tprint(item['title'])\n\tprint(item['tags'])\n\tprint(\"'{}', '{}', '{}', '{}'\".format(vol, chp, frag, postfix))\n\tif re.match('^Chapter \\\\d+', item['title'], re.IGNORECASE):\n\t\treturn buildReleaseMessageWithType(item, 'Circle of Shards', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Circus Translations": [
  "def extractCircusTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'German Translation' in item['tags']:\n\t\treturn None\n\tif 'Turkish Translation' in item['tags']:\n\t\treturn None\n\tif 'Spanish translation' in item['tags']:\n\t\treturn None\n\tif chp or vol:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shitara Slime Datta Ken', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Citadel": [
  "\ndef extractUnillustratedWordpressCom(item):\n\t'''\n\tParser for 'unillustrated.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:16.241862"
 ],
 "City of Roses": [
  "\ndef extractThecityofrosesCom(item):\n\t'''\n\tParser for 'thecityofroses.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-31T17:10:03.793206"
 ],
 "Clare K. R. Miller": [
  "def extractClarekrmillerCom(item):\n\t'''\n\tParser for 'clarekrmiller.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Chatoyant College',  'Chatoyant College',               'oel'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-12-26T02:32:27.648887"
 ],
 "Clesesia Blogspot~": [
  "def extractClesesiaBlogspot(item):\n\t\"\"\"\n\tClesesia Blogspot~\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('I Became Vampire girl when dead in another world', 'I Became Vampire girl when dead in another world',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-04-17T04:41:18.555506"
 ],
 "Clicky Click Translation": [
  "def extractClicky(item):\n\t\"\"\"\n\t# Clicky Click Translation\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'MEMORIZE' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'MEMORIZE', vol, chp, frag=frag, postfix=postfix)\n\tif 'R8CM' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Revolution of the 8th Class Mage', vol, chp, frag=frag, postfix=postfix)\n\tif 'Dusk Howler' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dusk Howler', vol, chp, frag=frag, postfix=postfix)\n\tif 'Legendary Moonlight Sculptor' in item['tags'] and any([('Volume' in tag) for tag in item['tags']]):\n\t\treturn buildReleaseMessageWithType(item, 'Legendary Moonlight Sculptor', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Clock 08": [
  "def extractClock08TumblrCom(item):\n\t'''\n\tParser for 'clock08.tumblr.com'\n\t'''\n\n\treturn None",
  "2017-07-18T02:12:25.427320"
 ],
 "Cloud Manor": [
  "def extractCloudManor(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Book of Sun & Moon Swordplay' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Book of Sun & Moon Swordplay', vol, chp, frag=frag, postfix=postfix)\n\tif 'It is a Straight Road' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'It is a Straight Road', vol, chp, frag=frag, postfix=postfix)\n\tif 'Pursuit of Liao Yue Murderer' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Pursuit of Liao Yue Murderer', vol, chp, frag=frag, postfix=postfix)\n\tif 'Rice Pot Next Door' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Rice Pot Next Door', vol, chp, frag=frag, postfix=postfix)\n\tif 'Man from Wild South' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Man from the Wild South', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-07-06T04:02:06.076521"
 ],
 "Cloud Translates": [
  "def extractCloudtranslatesWordpressCom(item):\n\t'''\n\tParser for 'cloudtranslates.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('heart of glass',                    'Heart of Glass',                                   'translated'),\n\t\t('Breaking through the Clouds',       'Breaking through the Clouds',                      'translated'),\n\t\t('ISMM',                              'I Ship My Adversary X Me',                         'translated'),\n\t\t('I Ship My Adversary X Me',          'I Ship My Adversary X Me',                         'translated'),\n\t\t('SW',                                'Slow-Witted',                                      'translated'),\n\t\t('Slow-Witted',                       'Slow-Witted',                                      'translated'),\n\t\t('LRotPB',                            'Lantern: Reflection of the Peach Blossoms',        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-20T09:30:37.882593"
 ],
 "Cloud Translations": [
  "def extractCloudTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Cloudy Translations": [
  "def extractCloudyTranslations(item):\n\t'''\n\tParser for 'Cloudy Translations'\n\t'''\n\t\n\tif 'wedding' in item['tags']:\n\t\t# Really?\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t(\"Kill The Dragon\",                                                               \"Kill The Dragon\",                                                                  'translated'),\n\t\t(\"The Reborn Little Girl Won't Give Up\",                                          \"The Reborn Little Girl Won't Give Up\",                                             'translated'),\n\t\t(\"KonjikinoWordMasster\",                                                          \"Konjiki no Word Master (LN)\",                                                      'translated'),\n\t\t(\"The Saint's Magic Power is Omnipotent\",                                         \"The Saint's Magic Power is Omnipotent (LN)\",                                       'translated'),\n\t\t(\"Regarding the Duke with Gynophobia and the Eccentric Lady Scholar\",             \"Regarding the Duke with Gynophobia and the Eccentric Lady Scholar\",                'translated'),\n\t\t(\"The White Cat that Swore Vengeance was Just Lazying on the Dragon King\u2019s Lap\",  \"The White Cat that Swore Vengeance was Just Lazying on the Dragon King\u2019s Lap\",     'translated'),\n\t\t(\"Regarding the Duke with Gynophobia and the Eccentric Lady Scholar\",             \"Regarding the Duke with Gynophobia and the Eccentric Lady Scholar\",                'translated'),\n\t\t(\"aku no joou no kiseki\",                                                         \"Aku no Joou no Kiseki\",                                                            'translated'),\n\t\t(\"The Beauty's Secret\",                                                           \"The Beauty's Secret\",                                                              'translated'),\n\t\t(\"shut-in magician\",                                                              \"Shut-in Magician\",                                                                 'translated'),\n\t\t(\"I Quit Being a Noble and Became a Commoner\",                                    \"I Quit Being a Noble and Became a Commoner\",                                       'translated'),\n\t\t(\"Drop!!\u3000\uff5eA Tale of the Fragrance Princess\uff5e\",                                  \"Drop!! ~A Tale of the Fragrance Princess~ [LN]\",                                   'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-02-23T11:58:50.352453"
 ],
 "Clover's Nook": [
  "def extractCloversNook(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'A mistaken marriage match: A generation of military counselor' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'A mistaken marriage match: A generation of military counselor', vol, chp, frag=frag, postfix=postfix)\n\tif 'A mistaken marriage match: Record of washed grievances' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'A mistaken marriage match: Record of washed grievances', vol, chp, frag=frag, postfix=postfix)\n\tif 'Three Marriages' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Three Marriages', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Clown World Translations": [
  "def extractClownworldtranslationsHomeBlog(item):\n\t'''\n\tParser for 'clownworldtranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('sekaigame',       'Kono Sekai ga Game da to, Ore dake ga Shitte Iru',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T22:44:10.525558"
 ],
 "Clumsy Translations": [
  "\ndef extractClumsytranslationsWordpressCom(item):\n\t'''\n\tParser for 'clumsytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:28.282158"
 ],
 "Cl\u00f4ture of Yellow": [
  "def extractCl\u00f4tureOfYellow(item):\n\t\"\"\"\n\tParser for 'Cl\u00f4ture of Yellow'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Cnovel <3": [
  "def extractCnovel3(item):\n\t\"\"\"\n\tParser for 'Cnovel <3'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('scum villain system',       'The Scum Villain\\'s Self-Saving System',                      'translated'),\n\t\t('Demon King',                'Demon King: The Parting of Orchid and Cang',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-05T09:03:10.968234"
 ],
 "CoMega Translations": [
  "\ndef extractWwwComegatranslationsCom(item):\n\t'''\n\tParser for 'www.comegatranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-09-05T04:58:45.650216"
 ],
 "Coba2-aja": [
  "def extractCobaSemuanyaBlogspotCom(item):\n\t'''\n\tParser for 'coba-semuanya.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Game' in item['tags']:\n\t\treturn None\n\tif 'Bahasa Indonesia' in item['title']:\n\t\treturn None\n\tif 'BahasaIndonesia' in item['title']:\n\t\treturn None\n\t\t\n\n\ttagmap = [\n\t\t('Goblin Kingdom',       'Goblin Kingdom',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-29T03:24:26.277696"
 ],
 "Cocobees": [
  "def extractCocobees(item):\n\t\"\"\"\n\tParser for 'Cocobees'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Code-Zero's Blog": [
  "def extractCodeZerosBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "ColdLove Translations": [
  "\ndef extractColdlovetranslationsWordpressCom(item):\n\t'''\n\tParser for 'coldlovetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-23T05:56:59.317992"
 ],
 "Collection.": [
  "def extractCollection(item):\n\t\"\"\"\n\tParser for 'Collection.'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Comet Translations": [
  "\ndef extractComettranslationsWeeblyCom(item):\n\t'''\n\tParser for 'comettranslations.weebly.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-04T01:34:46.179335"
 ],
 "Commercial Novel": [
  "\ndef extractCommercialnovelBlogspotCom(item):\n\t'''\n\tParser for 'commercialnovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-18T05:29:12.694209"
 ],
 "Comrade Yang's Corner": [
  "\ndef extractComradeyangmrWordpressCom(item):\n\t'''\n\tParser for 'comradeyangmr.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:46:31.498389"
 ],
 "Confessions of a Drama Addict": [
  "def extractConfessionsOfADramaAddict(item):\n\t\"\"\"\n\tParser for 'Confessions of a Drama Addict'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Confused Translations": [
  "def extractConfusedTranslations(item):\n\t'''\n\tParser for 'Confused Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = {\n\t\t'Youkoso Jitsuryoku'                      : 'Youkoso Zitsuryoku Shijou Shugi no Kyoushitsu e',\n\t\t'Gamers!'                                 : 'Gamers!',\n\t\t\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\n\n\treturn False",
  "2019-02-10T03:34:54.958145"
 ],
 "ConstantChaotic": [
  "\ndef extractCcKhatUs(item):\n\t'''\n\tParser for 'cc.khat.us'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-30T20:25:33.777510"
 ],
 "Contractor": [
  "\ndef extractContractorwebserialWordpressCom(item):\n\t'''\n\tParser for 'contractorwebserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:27.625491"
 ],
 "Convallaria's Library": [
  "def extractConvallariaslibraryWordpressCom(item):\n\t'''\n\tParser for 'convallariaslibrary.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Flower Selling Girl is a Replacement Bride',                      'The Flower Selling Girl is a Replacement Bride',                        'translated'),\n\t\t('Destination of Crybird',                                              'Destination of Crybird',                                                'translated'),\n\t\t('Marietta-hime no Konrei',                                             'Marietta-hime no Konrei',                                               'translated'),\n\t\t('Observation Record of A Self-Proclaimed Villainess\\' Fiance',         'Observation Record of A Self-Proclaimed Villainess\\' Fiancee',          'translated'),\n\t\t('Observation Record of A Self-Proclaimed Villainess\\' Fiancee',        'Observation Record of A Self-Proclaimed Villainess\\' Fiancee',          'translated'),\n\t\t('Different World Gender Change',                                       'Different World Gender Change',                                         'translated'),\n\t\t('Watashi wa Teki ni Narimasen!',                                       'Watashi wa Teki ni Narimasen!',                                         'translated'),\n\t\t('But God Forced Me to Reincarnate',                                    'But God Forced Me to Reincarnate',                                      'oel'),\n\t\t('Returning to the Other World with My Children',                       'Returning to the Other World with My Children',                         'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-14T05:23:36.835126"
 ],
 "Cookie Novels": [
  "def extractWwwCookienovelsCom(item):\n\t'''\n\tParser for 'www.cookienovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('female-general-and-eldest-princess',       'Female General And Eldest Princess',                      'translated'),\n\t\t('facing-you',                               'Facing You',                                              'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-21T06:38:18.828540"
 ],
 "CookiePasta Translations": [
  "def extractCookiePasta(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn buildReleaseMessageWithType(item, 'Douluo Dalu 2 - Jueshi Tangmen', vol, chp, frag=frag, postfix=postfix)\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Cookies 'N Cream Translations": [
  "def extractCookiesncreamtranslationsWordpressCom(item):\n\t'''\n\tParser for 'cookiesncreamtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Phoenix Against the World Chapter ',                                           'Across the Stunning Beast Princess: Phoenix Against the World',      'translated'),\n\t\t('Descent of the Phoenix Chapter ',                                              'Descent of the Phoenix \u2013 13 Years Old Princess Consort',             'translated'),\n\t\t('Modern Cinderella Chapter ',                                                   'Modern Cinderella',                                                  'translated'),\n\t\t('Pampered Fei: Brimming with Cuteness Chapter ',                                'Pampered Fei: Brimming with Cuteness',                               'translated'),\n\t\t('Pampered Fei Brimming with Cuteness Chapter ',                                 'Pampered Fei: Brimming with Cuteness',                               'translated'),\n\t\t('Raising a Fox Consort: The Cold Demonic Wang\u2019s Sweet Love Chapter ',           'Raising a Fox Consort: The Cold Demonic Wang\\'s Sweet Love',         'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-23T12:10:20.971935"
 ],
 "Corensi's Corner": [
  "def extractCorensiWordpressCom(item):\n\t'''\n\tParser for 'corensi.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ball and Foreign Devils',       'Bringing Along a Ball and Hiding from Foreign Devils',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-26T06:10:53.363621"
 ],
 "Cosmic Translation": [
  "def extractCosmicTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Cosy Sphere": [
  "def extractCosysphereWordpressCom(item):\n\t'''\n\tParser for 'cosysphere.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Into the World of Medicine',                       'Into the World of Medicine',                      'translated'), \n\t\t('MGSSGW',                                           'Major General Spoils his Soul-guiding Wife',                      'translated'), \n\t\t('Major General Spoils his Soul-guiding Wife',       'Major General Spoils his Soul-guiding Wife',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-13T05:07:41.044938"
 ],
 "Cotton Candy Tea": [
  "def extractCottoncandyteaCom(item):\n\t'''\n\tParser for 'cottoncandytea.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Lady is a Stalker',       'The Lady is a Stalker',                      'translated'),\n\t\t('Your Majesty is So Handsome',       'Your Majesty is So Handsome',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-13T04:17:14.944853"
 ],
 "Counting Aries Translations": [
  "def extractCountingariesWordpressCom(item):\n\t'''\n\tParser for 'countingaries.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('HCTCTM',                               'How Could This Cat Tease Me?',                        'translated'),\n\t\t('Scholar\u2026I Don\\'t Want Any\u2026Meow',       'Scholar\u2026I Don\\'t Want Any\u2026Meow',                      'translated'),\n\t\t('AUP',                                  'Appreciation of Unconventional Plants',               'translated'),\n\t\t('LCU',                                  'The Last Cat in the Universe',                        'translated'),\n\t\t('QTSGF',                                'Quick Transmigration: Snatching Golden Fingers',      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:07:37.907409"
 ],
 "Crack of Dawn Translations": [
  "def extractCrackofDawnTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Crank": [
  "\ndef extractThecrankWordpressCom(item):\n\t'''\n\tParser for 'thecrank.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:34.924849"
 ],
 "Crappy MTL": [
  "def extractCrappymtlBlogspotCom(item):\n\t'''\n\tParser for 'crappymtl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Very Pure Very Vague',       'Very Pure Very Vague',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-07-16T02:50:48.896001"
 ],
 "Crappy Machine Translation": [
  "def extractCrappyMachineTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Blade Online' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Blade Online', vol, chp, frag=frag, postfix=postfix)\n\tif \"Another World's Savior\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Another World's Savior\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "CrappyAss Translations R-18": [
  "def extractCrappyasstranslationstooWordpressCom(item):\n\t'''\n\tParser for 'crappyasstranslationstoo.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Lady Philia D\\'la Love\\'s Mistakes',       'Lady Philia D\\'la Love\\'s Mistakes',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:08:50.705027"
 ],
 "Crappyass Translations": [
  "def extractCrappyasstranslationsWordpressCom(item):\n\t'''\n\tParser for 'crappyasstranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Konyaku-sha ga Akuyaku de Komattemasu',                  'Konyaku-sha ga Akuyaku de Komattemasu',                                 'translated'),\n\t\t('kuroneko ouji wa tsukiyo ni warau',                      'The Black Cat Prince Laughed At The Moon',                              'translated'),\n\t\t('The Black Cat Prince Laughed At The Moon',               'The Black Cat Prince Laughed At The Moon',                              'translated'),\n\t\t('The Me Who Wants To Escape The Princess Training',       'The Me Who Wants To Escape The Princess Training',                      'translated'),\n\t\t('The Civil Officer Can Have Sweet Dreams',                'The Civil Officer Can Have Sweet Dreams',                               'translated'),\n\t\t('Everyday Is Fun Mob',                                    'I May Be A Mob But Because My Favorite Is Here, Everyday Is Fun',       'translated'),\n\t\t('Lady Philia D\\'la Love\\'s Mistakes',                     'Lady Philia D\\'la Love\\'s Mistakes',                                    'translated'),\n\t\t('The Reincarnated Young Lady Aim to Be an Adventurer',     'The Reincarnated Young Lady Aim to Be an Adventurer',                    'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T22:30:15.245033"
 ],
 "CrazedCookies": [
  "\ndef extractCrazedcookiesWordpressCom(item):\n\t'''\n\tParser for 'crazedcookies.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-08T23:53:10.103369"
 ],
 "Crazy Translations": [
  "def extractCrazytranslationsBlogspotCom(item):\n\t'''\n\tParser for 'crazytranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('The Road To Slaying God: Chapter',   'The Road To Slaying God',      'translated'), \n\t\t('The Road To Slaying God : Chapter',  'The Road To Slaying God',      'translated'), \n\t\t('The Road To Slaying God :Chapter',   'The Road To Slaying God',      'translated'), \n\t\t('The Road To Slaying God - Chapter',  'The Road To Slaying God',      'translated'), \n\t\t('The Road To slaying God: Chaper',  'The Road To Slaying God',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-11T06:24:01.868071"
 ],
 "Crazy for HE Novels": [
  "def extractCrazyForHENovels(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) and not 'preview' in item['title']:\n\t\treturn False\n\tchp = frag\n\tfrag = None\n\tif '\u5982\u679c\u8717\u725b\u6709\u7231\u60c5 When A Snail Loves \u2013 \u4e01\u58a8 Ding Mo (HE)(Incomplete)' in item['tags'] or 'When a snail loves' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'When A Snail Loves', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Crazy silver moon": [
  "def extractCrazysilvermoonWordpressCom(item):\n\t'''\n\tParser for 'crazysilvermoon.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Number One Zombie Wife',       'Number One Zombie Wife',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-20T06:16:18.711659"
 ],
 "Cream Savers": [
  "def extractCreamSavers(item):\n\t\"\"\"\n\tParser for 'Cream Savers'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Creative Stories Home": [
  "def extractCreativestorieshomeWordpressCom(item):\n\t'''\n\tParser for 'creativestorieshome.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Skulls', 'Skulls',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:34:03.841282"
 ],
 "Creepy Crawly": [
  "\ndef extractCreepycrawlynovelBlogspotCom(item):\n\t'''\n\tParser for 'creepycrawlynovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:59.933124"
 ],
 "Creepy and Evil Translations": [
  "def extractCreepyAndEvilTranslations(item):\n\t\"\"\"\n\tParser for 'Creepy and Evil Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Crescendo Cove": [
  "\ndef extractWwwCrescendocoveCom(item):\n\t'''\n\tParser for 'www.crescendocove.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-20T00:06:18.409019"
 ],
 "Crescent Moon": [
  "def extractMikazuki2017WordpressCom(item):\n\t'''\n\tParser for 'mikazuki2017.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('CL : ',        'Crescent Love',                          'oel'),\n\t\t('CL: Chapter',  'Crescent Love',                          'oel'),\n\t\t('HIHEZL : ',    'He is His Excellency Zhi Li',            'translated'),\n\t\t('HIHEZL: ',     'He is His Excellency Zhi Li',            'translated'),\n\t\t('TUMBT: ',      'The Ugly Man\u2019s Big Transformation',      'translated'),\n\t\t('TUMBT : ',     'The Ugly Man\u2019s Big Transformation',      'translated'),\n\t\t('BTM : ',       'Beyond the Moon',                        'translated'),\n\t\t('BTM: ',        'Beyond the Moon',                        'translated'),\n\t\t('BMHS : ',      'Beloved Marriage in High Society',       'translated'),\n\t\t('BHMS: ',       'Beloved Marriage in High Society',       'translated'),\n\t\t('BHMS : ',      'Beloved Marriage in High Society',       'translated'),\n\t\t('Jubo : ',      'Jubo',                                   'translated'),\n\t\t('S&OP : ',      'Superstar and Ordinary People',          'translated'),\n\t\t('SP: ',         'Special Property',                       'translated'),\n\t\t('19Y: ',        '19 Years',                               'translated'),\n\t\t('LMTW : ',      'Love is More Than a Word',               'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent in item['title']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-13T04:19:59.177375"
 ],
 "Crimson Lilies": [
  "def extractCrimsonliliesWordpressCom(item):\n\t'''\n\tParser for 'crimsonlilies.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Gratifying the Royal Family',       'Gratifying the Royal Family',                      'translated'),\n\t\t('The Outrageously Fierce Young Lady',       'The Outrageously Fierce Young Lady',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T21:56:11.202718"
 ],
 "Crimson Translation": [
  "def extractCrimsonjianghuWordpressCom(item):\n\t'''\n\tParser for 'crimsonjianghu.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, \"Elite Hidden Marriage: Black Bellied President dotes on Wife\", vol, chp, frag=frag, postfix=postfix)\n\t\n\n\treturn False",
  "2017-10-07T10:10:09.451289"
 ],
 "CrystalRainDescends": [
  "def extractCrystalRainDescends(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Honey Stewed Squid' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Honey Stewed Squid', vol, chp, frag=frag, postfix=postfix)\n\tif 'Bloom' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Bloom', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "CtrlAlcal\u00e1": [
  "def extractCtrlAlcala(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Chronicles Of Adrian Weiss Chapter'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Starry Heaven Saga: The Chronicles Of Adrian Weiss', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Magical Tournament Volume' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Magical Tournament: Rise Of The Black Swan', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Type: Hybrid' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Type: Hybrid', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Elementals:' in item['title'] or 'Elementals Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Elementals: Crystal Garden', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "CubbyFox": [
  "\ndef extractCubbyfoxWordpressCom(item):\n\t'''\n\tParser for 'cubbyfox.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-06T03:25:12.844220"
 ],
 "Cubbyfox Translation": [
  "def extractCubbyfoxSite(item):\n\t'''\n\tParser for 'cubbyfox.site'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Sweet Pampering',                  'Hidden Marriage Sweet Pampering: The Conglomerate\u2019s Little Wife',                      'translated'),\n\t\t('Bad Girl Xiaomei',                 'Yin Xiaomei The Bad girl',                                                             'translated'),\n\t\t('Poisonous Empress Dowagers',       'The Enchanting Empress Dowager is Really Poisonous',                                   'translated'),\n\t\t('MTL Sweet Pampering',              'Hidden Marriage Sweet Pampering: The Conglomerate\u2019s Little Wife',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-27T11:01:44.273391"
 ],
 "Currently TLing [Bu ni Mi]": [
  "def extractCurrentlyTLingBuniMi(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('[BNM]'):\n\t\treturn buildReleaseMessageWithType(item, 'Bu ni Mi wo Sasagete Hyaku to Yonen. Elf de Yarinaosu Musha Shugyou', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('[DD]'):\n\t\treturn buildReleaseMessageWithType(item, 'Doll Dungeon', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('[HCLS]'):\n\t\treturn buildReleaseMessageWithType(item, 'High Comprehension Low Strength', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t('Abyss Domination',                 'Abyss Domination',           'translated'),\n\t\t('Nine Yang Sword Saint',            'Nine Yang Sword Saint',      'translated'),\n\t\t('Mysterious World Beast God',       'Mysterious World Beast God', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-07-25T05:20:11.135452"
 ],
 "Currylover Translation": [
  "def extractSetsunatranslationWordpressCom(item):\n\t'''\n\tParser for 'setsunatranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t\t('Harem',  'My Sister is Jealous of Another World Girls~Fun Harem Store Management',               'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif item['tags'] != ['Light Novel']:\n\t\treturn False\n\n\tchp_prefixes = [\n\t\t\t('Harem ',  'My Sister is Jealous of Another World Girls~Fun Harem Store Management',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-02-26T05:41:42.090996"
 ],
 "D. Thourson Palmer": [
  "\ndef extractDthoursonpalmerCom(item):\n\t'''\n\tParser for 'dthoursonpalmer.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:17.468040"
 ],
 "DDS Translation": [
  "\ndef extractDdstranslationBlogspotCom(item):\n\t'''\n\tParser for 'ddstranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:50:33.337337"
 ],
 "DEADline Translations": [
  "\ndef extractDeadlinelnBlogspotCom(item):\n\t'''\n\tParser for 'deadlineln.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:48:54.131507"
 ],
 "DEV": [
  "def extractHttp363WordpressCom(item):\n\t'''\n\tParser for 'http363.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Cleasing the Shou\\'s Image',       'The Strategy of Washing Clean a Slag Shou',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-12T09:01:28.868563"
 ],
 "DHH Translations": [
  "def extractDHHTranslations(item):\n\t\"\"\"\n\t# 'DHH Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'Video Games' in item['tags']:\n\t\treturn None\n\t\t\n\n\ttagmap = [\n\t\t(\"god's left hand\",                             \"god's left hand\",                             'translated'),\n\t\t(\"you're beautiful when you smile\",             \"You're Beautiful When You Smile\",             'translated'),\n\t\t('undefeatable - league of legends',            'Undefeated - League of Legends',              'translated'),\n\t\t('fish playing while trapped in a secret room', 'Fish Playing While Trapped in a Secret Room', 'translated'),\n\t\t('Shui Fu Shen Qing',                           'Shui Fu Shen Qing',                           'translated'),\n\t\t('The Most Majestic You',                       'The Most Majestic You',                       'translated'),\n\t\t('Mo Bao Fei Bao',                              'Mo Bao Fei Bao',                              'translated'),\n\t\t('Starlight Has No Past',                       'Starlight Has No Past',                       'translated'),\n\t\t('Those Sweet Times',                           'Those Sweet Times',                           'translated'),\n\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif item['title'].startswith('Tea of Summer - Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Tea of Summer', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2019-01-26T14:49:24.431920"
 ],
 "DM Translations": [
  "def extractDmtranslationscnWordpressCom(item):\n\t'''\n\tParser for 'dmtranslationscn.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\ttagmap = [\n\t\t('TSLDB',       'The Strongest Legend of Dragon Ball',                      'translated'), \n\t\t('OPTS',        'One Piece Talent System',                                  'translated'), \n\t\t('GGS',         'Galactic Garbage Station',                                 'translated'), \n\t\t('HOM',         'Heroes of Marvel',                                         'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif item['tags'] != ['Uncategorized']:\n\t\treturn False\n\t\t\n\t\t\n\ttitlemap = [\n\t\t('Time Traveler V',  'Time Traveler',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-04-27T11:21:27.094607"
 ],
 "DMlations": [
  "def extractDmlationsWordpressCom(item):\n\t'''\n\tParser for 'dmlations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Promise Sealed with our Lips',       'The Promise Sealed with our Lips',                      'translated'),\n\t\t('RSCB',                                   'Rebirth of the Supreme Celestial Being',                'translated'),\n\t\t('Seizing Dreams',                         'Seizing Dreams',                                        'translated'),\n\t\t('sd',                                     'Seizing Dreams',                                        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-16T20:34:26.651033"
 ],
 "DOW's Translations": [
  "def extractDOWsTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "DRZTranslation": [
  "def extractDrztranslationWordpressCom(item):\n\t'''\n\tParser for 'drztranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Perfect Super Star Chapter',   'Perfect Superstar',      'translated'),\n\t\t('Perfect Superstar Chapter ',   'Perfect Superstar',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-10-26T05:26:20.327015"
 ],
 "DXHaseoXD Translations": [
  "def extractDxhaseoxdtBlogspotCom(item):\n\t'''\n\tParser for 'dxhaseoxdt.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\n\turlfrag = [\n\t\t('/empress-running-away-with-ball-chapter',  'Empress Running Away with the Ball!',                      'translated'),\n\t\t('/virtual-world-conquering-world-chapter',  'Virtual World: Conquering the World',                      'translated'),\n\t\t('/legend-of-asura-chapter',                 'Legend of the Asura',                                      'translated'),\n\t\t('/cold-kings-dominating-love-genius',       'Cold King\\'s Dominating Love, Genius Medical Consort',     'translated'),\n\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Cold King\\'s Dominating Love, Genius Medical Consort Chapter',           'Cold King\\'s Dominating Love, Genius Medical Consort',          'translated'),\n\t\t('Empress Running Away with the Ball! Chapter',                            'Empress Running Away with the Ball!',                           'translated'),\n\t\t('Evil Emperor\\'s Poisonous Consort: Divine Doctor Young Miss Chapter ',   'Evil Emperor\\'s Poisonous Consort: Divine Doctor Young Miss',   'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-09-14T07:26:04.907526"
 ],
 "DaEgo": [
  "def extractLucksegoCom(item):\n\t'''\n\tParser for 'lucksego.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Reincarnated As A Dragons Egg',       'Reincarnated As A Dragons Egg',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-04T02:51:36.514048"
 ],
 "DadIsHero Fan Translations": [
  "def extractDadIsHeroFanTranslations(item):\n\t\"\"\"\n\t# 'DadIsHero Fan Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dai-Maou Translations": [
  "\ndef extractDarklain0725WordpressCom(item):\n\t'''\n\tParser for 'darklain0725.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:26.600393"
 ],
 "Daikyun Translations": [
  "def extractDaikyunTranslations(item):\n\t\"\"\"\n\tDaikyun Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('The Annals of the Flame Kingdom'.lower()):\n\t\treturn buildReleaseMessageWithType(item, 'The Annals of the Flame Kingdom', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('the evil organization\u2019s recruitment ad '):\n\t\treturn buildReleaseMessageWithType(item, 'The Evil Organization\u2019s Recruitment Ad', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('teora \u2013'):\n\t\treturn buildReleaseMessageWithType(item, 'The Evil Organization\u2019s Recruitment Ad', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t('TEORA',       'The Evil Organization\u2019s Recruitment Ad',                      'translated'),\n\t\t('PRC',         'PRC',                      'translated'),\n\t\t('IBFDD',       'This Time, I Became the Fiance of a Duke\u2019s Daughter. But She is Rumored to have Bad Personality, and Ten Years Older',                      'translated'),\n\t\t('Loiterous',   'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)",
  "2018-06-12T02:52:14.609486"
 ],
 "Daily Dose Novels": [
  "def extractDailyDoseNovels(item):\n\t\"\"\"\n\t'Daily Dose Novels'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Castle of Black Iron' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Castle of Black Iron', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Daily-Dallying": [
  "def extractDailyDallying(item):\n\t\"\"\"\n\n\t\"\"\"\n\t\n\tif 'Secret Life of Daily' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t(\"Notes Exchange\",                 \"Notes Exchange History Alteration\",                    'translated'),\n\t\t(\"Conquering Hero's Heroines\",     \"Stealing Hero's Lovers\",                               'translated'),\n\t\t('Nidome no Yuusha',               'Nidome no Yuusha',                                     'translated'),\n\t\t(\"Nobunaga's Imouto\",              \"Nobunaga's Younger Sister is My Wife\",                 'translated'),\n\t\t('Harem Slave Master',             'Most Wicked Harem Slave Master',                       'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-06-04T02:52:36.449609"
 ],
 "Dakotah Sicking Web Novels": [
  "def extractDakotahsickingWordpressCom(item):\n\t'''\n\tParser for 'dakotahsicking.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Lead vs Fantasy',    'Lead vs Fantasy',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\n\treturn False",
  "2018-04-28T02:29:22.658621"
 ],
 "Dan-Danmein Translations": [
  "def extractDandanmeintranslationsWordpressCom(item):\n\t'''\n\tParser for 'dandanmeintranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Feng Mang',       'Feng Mang',                      'translated'),\n\t\t('Blood Contract',       'Blood Contract',                      'translated'),\n\t\t('Aloof King and Cool-Acting Queen',       'Aloof King and Cool-Acting Queen',                      'translated'),\n\t\t('Bring Along a Ball and Hiding from Foreign Devils',       'Bring Along a Ball and Hiding from Foreign Devils',                      'translated'),\n\t\t('The Wife is First',       'The Wife is First',                      'translated'),\n\t\t('Begging You to Break Off This Engagement!',       'Begging You to Break Off This Engagement!',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T05:17:43.832842"
 ],
 "Dandelion TL": [
  "def extractDandeliontlfreeWordpressCom(item):\n\t'''\n\tParser for 'dandeliontlfree.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Black Tea Specialist',       'I am The Black Tea Specialist Cheat of The Chivalric Order!',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-12T08:58:44.825038"
 ],
 "Dandelion Trail": [
  "def extractDandelionTrail(item):\n\t\"\"\"\n\tParser for 'Dandelion Trail'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Daniel's Blog, Translation and other geeky things": [
  "\ndef extractDanielyangNinja(item):\n\t'''\n\tParser for 'danielyang.ninja'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-23T08:16:19.745145"
 ],
 "Danny's Story": [
  "\ndef extractDannystoryWordpressCom(item):\n\t'''\n\tParser for 'dannystory.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:31.136518"
 ],
 "Dao Seeker Blog": [
  "def extractDaoSeekerBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Otherworldly Evil Monarch' in item['tags'] or 'Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Otherworldly Evil Monarch', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dao of MTL": [
  "def extractMtldaoBlogspotCom(item):\n\t'''\n\tParser for 'mtldao.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Immortal Becomes a Stay-at-home Dad After Return',       'Immortal Becomes a Stay-at-home Dad After Return',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:42:42.713611"
 ],
 "Daoist": [
  "def extractDaoIst(item):\n\t'''\n\tParser for 'dao.ist'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('zombie master',                            'Zombie Master',                         'translated'),\n\t\t('Master\\'s Smile',                          'Master\\'s Smile',                       'translated'),\n\t\t('I became the Villainess\u2019s Brother',        'I became the Villainess\\'s Brother',    'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T07:39:38.743357"
 ],
 "Dark Blood Age": [
  "def extractDarbloodageBlogspotCom(item):\n\t'''\n\tParser for 'darbloodage.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['tags'] == [] and item['title'].lower().startswith(\"chapter \"):\n\t\treturn buildReleaseMessageWithType(item, \"Dark Blood Age\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-06-16T06:02:21.024973"
 ],
 "Dark Blood/Le sombre sang": [
  "\ndef extractDarkbloodhunterBlogspotCom(item):\n\t'''\n\tParser for 'darkbloodhunter.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:37.089466"
 ],
 "Dark Circles Translations": [
  "def extractDarkcirclestranslationsCom(item):\n\t'''\n\tParser for 'darkcirclestranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('SRGGD',       'Supernatural Rebirth Genius Girl Diviner',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-26T06:09:07.937344"
 ],
 "Dark Roads": [
  "\ndef extractDarkroadtalesBlogspotCom(item):\n\t'''\n\tParser for 'darkroadtales.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:07.493399"
 ],
 "Dark Translations": [
  "def extractDarkTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('kuang shen'):\n\t\treturn buildReleaseMessageWithType(item, 'Kuang Shen', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('sheng wang chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Sheng Wang', vol, chp, frag=frag, postfix=postfix)\n\tif 'lord xue ying chapter' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Lord Xue Ying', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Darkness7913": [
  "\ndef extractDarkness7913WordpressCom(item):\n\t'''\n\tParser for 'darkness7913.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-14T08:33:27.628700"
 ],
 "Darkstruck": [
  "\ndef extractDarkstruckWordpressCom(item):\n\t'''\n\tParser for 'darkstruck.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:56:29.265330"
 ],
 "Datebayo Blog": [
  "def extractDatebayoBlog(item):\n\t\"\"\"\n\tDatebayo Blog\n\t\"\"\"\n\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\t\n\t\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False",
  "2018-04-29T03:35:37.669003"
 ],
 "Daune O'Shaunnessey": [
  "\ndef extractDaunekBlogspotCom(item):\n\t'''\n\tParser for 'daunek.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:25.532035"
 ],
 "Daupao": [
  "def extractDaupao(item):\n\t\"\"\"\n\tDaupao\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Infinite Stratos Archetype Breaker',       'Infinite Stratos Archetype Breaker',                      'translated'),\n\t\t('Infinite Stratos',                          'Infinite Stratos',                                         'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-12-28T04:20:57.160309"
 ],
 "David Chart's Blog": [
  "\ndef extractWwwDavidchartCom(item):\n\t'''\n\tParser for 'www.davidchart.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T05:41:56.462296"
 ],
 "Dawn Translation": [
  "def extractDawninfinityBlogspotCom(item):\n\t'''\n\tParser for 'dawninfinity.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Dawn Infinity', 'Dawn Infinity',                'oel'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-02T07:36:58.502378"
 ],
 "DawnGlare": [
  "\ndef extractNovelDawnglareCom(item):\n\t'''\n\tParser for 'novel.dawnglare.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:15:51.848744"
 ],
 "Dawning Howls": [
  "def extractDawningHowls(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Dragon Flies Phoenix Dances' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Flies Phoenix Dances', vol, chp, frag=frag, postfix=postfix)\n\tif 'Eastern Palace' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Eastern Palace', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Daydream Translations": [
  "def extractDaydreamTranslations(item):\n\t\"\"\"\n\tParser for 'Daydream Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Daydrop": [
  "def extractDaydropNowakiNet(item):\n\t'''\n\tParser for 'daydrop.nowaki.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Yes, No, or Maybe Half?',       'Yes, No, or Maybe Half?',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:13:37.419016"
 ],
 "Dead Too, Rights": [
  "\ndef extractDeadtoorightsBlogspotCom(item):\n\t'''\n\tParser for 'deadtoorights.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:38.582359"
 ],
 "Deadly Forgotten Legends": [
  "def extractDeadlyForgottenLegends(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Deadly Novels": [
  "def extractDeadlynovelsTk(item):\n\t'''\n\tParser for 'deadlynovels.tk'\n\t'''\n\t\n\t\n\tbadwords = [\n\t\t\t'Talent System',\n\t\t]\n\tif any([bad in item['tags'] for bad in badwords]):\n\t\treturn None\n\n\n\t\n\tif any([tmp.endswith(\" VIP\") for tmp in item['tags'] if tmp]):\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\t\t\n\n\ttagmap = [\n\t\t('Pirate in naruto world',              'Pirate in naruto world',                             'translated'),\n\t\t('One Piece Invincible',                'One Piece Invincible',                               'translated'),\n\t\t('The Mad Cultivator',                  'The Mad Cultivator',                                 'translated'),\n\t\t('Master of ninja world',               'Master of ninja world',                              'translated'),\n\t\t('My Fury Will Burn The Heavens',       'My Fury Will Burn The Heavens',                      'translated'),\n\t\t('Marvel Super Extraction',             'Marvel Super Extraction',                            'translated'),\n\t\t('One Piece Bounty System',             'One Piece Bounty System',                            'translated'),\n\t\t('Peerless Emporor System',             'Peerless Emporor System',                            'translated'),\n\t\t('Supreme Naruto',                      'Supreme Naruto',                                     'translated'),\n\t\t('System of Anger',                     'System of Anger',                                    'translated'),\n\t\t('Strongest Naruto System',             'Strongest Naruto System',                            'translated'),\n\t\t('Marvel: The King',                    'Marvel: The King',                                   'translated'),\n\t\t('Friendship System',                   'Friendship System',                                  'translated'),\n\t\t('One Piece system in Marvel world',    'One Piece system in Marvel world',                   'translated'),\n\t\t('Wants to die',                        'Wants to die',                                       'translated'),\n\t\t('One Piece Enhancement',               'One Piece Enhancement',                              'translated'),\n\t\t('I am Vegeta',                         'I am Vegeta',                                        'translated'),\n\t\t('Marvel Happy system',                 'Marvel Happy system',                                'translated'),\n\t\t('Source System Naruto',                'Source System Naruto',                               'translated'),\n\t\t('Dragon Ball : Broly',                 'Dragon Ball : Broly',                                'translated'),\n\t\t('Scientist to God',                    'Scientist to God',                                   'translated'),\n\t\t('One Piece Infinity Gloves',           'One Piece Infinity Gloves',                          'translated'),\n\t\t('Pervert in One Piece World',          'Pervert in One Piece World',                         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T06:57:53.625383"
 ],
 "Deadly's Translations": [
  "def extractCallmedeadlytranslationsHomeBlog(item):\n\t'''\n\tParser for 'callmedeadlytranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == ['Uncategorized']:\n\t\ttitlemap = [\n\t\t\t('Supernatural Clairvoyant Chapter',  'Supernatural Clairvoyant',      'translated'),\n\t\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:00:19.400804"
 ],
 "Dearest Fairy": [
  "def extractDearestFairy(item):\n\t\"\"\"\n\tParser for 'Dearest Fairy'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Death Knight": [
  "def extractDeathKnight(item):\n\t\"\"\"\n\tParser for 'Death Knight'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Death Might's Translating Legion": [
  "def extractDeathMightSTranslatingLegion(item):\n\t\"\"\"\n\tParser for 'Death Might's Translating Legion'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Death Saved's Graveyard of Burning Sands": [
  "\ndef extractDsgobsWordpressCom(item):\n\t'''\n\tParser for 'dsgobs.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:35.321425"
 ],
 "Death, taxes, and fandom.": [
  "def extractDeathTaxesAndFandom(item):\n\t\"\"\"\n\tParser for 'Death, taxes, and fandom.'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Deep Azure Sky": [
  "def extractDeepAzureSky(item):\n\t\"\"\"\n\tDeep Azure Sky\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Deep Dream Translations": [
  "def extractDeepdreamtranlationsHomeBlog(item):\n\t'''\n\tParser for 'deepdreamtranlations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Scum Shou\\'s Survival Guide',                 'The Scum Shou\\'s Survival Guide',                      'translated'),\n\t\t('TSSSG',                                           'The Scum Shou\\'s Survival Guide',                      'translated'),\n\t\t('TSWCSS',                                          'The Strategy of Washing Clean a Slag Shou',                      'translated'),\n\t\t('The Strategy of Washing Clean a Slag Shou',       'The Strategy of Washing Clean a Slag Shou',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-27T12:09:39.338354"
 ],
 "Defan's Translations": [
  "def extractDefansTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('F-Rank no Boukun',       'F-Rank no Boukun',                      'translated'),\n\t\t('Kokoro Connect',         'Kokoro Connect',                        'translated'), \n\t\t('Sword Art Online',       'Sword Art Online',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('SAO: Project Alicization',  'Sword Art Online: Project Alicization',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-11-26T07:31:40.399571"
 ],
 "Defiring": [
  "def extractDefiring(item):\n\t\"\"\"\n\t# Defiring\n\n\t\"\"\"\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\t\t\n\ttagmap = [\n\t\t('Almadinos Eiyuuden',                        'Almadinos Eiyuuden',                       'translated'),\n\t\t('Tsuyokute New Saga',                        'Tsuyokute New Saga (LN)',                  'translated'),\n\t\t('World teacher',                             'World teacher',                            'translated'),\n\t\t('My Death Flags Show No Sign of Ending',     'My Death Flags Show No Sign of Ending',    'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('World teacher',                                       'World teacher',                            'translated'),\n\t\t('Shinka no Mi',                                        'Shinka no Mi',                             'translated'),\n\t\t('My death Flags show no Sign of Ending \u2013 Chapter',     'My Death Flags Show No Sign of Ending',    'translated'),\n\t\t('Almadinos Eiyuuden',                                  'Almadinos Eiyuuden',                       'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\treturn False",
  "2019-01-06T23:29:16.787271"
 ],
 "Dekinai Diary": [
  "def extractDekinaiDiary(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Konjiki no Moji Tsukai' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Word Master', vol, chp, frag=frag, postfix=postfix)\n\tif 'Konjiki no Word Master' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Word Master', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-03-27T03:12:12.329411"
 ],
 "Deleted": [
  "\ndef extractCacatuasulphureacitrinocristataTumblrCom(item):\n\t'''\n\tParser for 'cacatuasulphureacitrinocristata.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:55.583403"
 ],
 "Delicious Translations": [
  "def extractDeliciousTranslations(item):\n\t\"\"\"\n\t# 'Delicious Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Pet Charm'):\n\t\treturn buildReleaseMessageWithType(item, 'Pet Charm', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('School Beauty Personal Bodyguard'):\n\t\treturn buildReleaseMessageWithType(item, 'School Beauty Personal Bodyguard', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Delightful Diversion": [
  "def extractWwwDdiversionXyz(item):\n\t'''\n\tParser for 'www.ddiversion.xyz'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('If You Don\\'t Go To Hell Who Will',       'If You Don\\'t Go To Hell Who Will',                      'translated'),\n\t\t('Deadly Delivery',                         'Deadly Delivery',                                        'translated'),\n\t\t('Strongest Counterattack',                 'Strongest Counterattack',                                'translated'),\n\t\t('Slowly Falling For Changkong',            'Slowly Falling For Changkong',                           'translated'),\n\t\t('Ring The Chime Of Grievance',             'Ring The Chime Of Grievance',                            'translated'),\n\t\t('PRC',                                     'PRC',                                                    'translated'),\n\t\t('Loiterous',                               'Loiterous',                                              'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-20T22:18:52.744451"
 ],
 "Dell Stories": [
  "\ndef extractDellstoriesWordpressCom(item):\n\t'''\n\tParser for 'dellstories.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:34.199557"
 ],
 "Delta Flight": [
  "\ndef extractDeltaflightBlogspotCom(item):\n\t'''\n\tParser for 'deltaflight.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:01.917691"
 ],
 "Delta Translations": [
  "def extractDeltatranslationsOrg(item):\n\t'''\n\tParser for 'deltatranslations.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Summoning the Holy Sword',        'Summoning the Holy Sword',                       'translated'), \n\t\t('King of Mercenaries',             'King of Mercenaries',                            'translated'), \n\t\t('For a Prosperous World',          'For a Prosperous World',                         'translated'), \n\t\t('Battle of the Third Reich',       'Battle of the Third Reich',                      'translated'), \n\t\t('EDSG',                            'Eight Desolate Sword God',                       'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-26T07:55:10.675920"
 ],
 "Demerith Translation": [
  "def extractDemerithTranslation(item):\n\t\"\"\"\n\t# 'Demerith Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Demon Scorpion Translations": [
  "def extractDemonScorpionTranslations(item):\n\t\"\"\"\n\tDemon Scorpion Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'MER' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial Emperor Reborn', vol, chp, frag=frag, postfix=postfix)\n\tif 'Arcane D' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Arcane Devastation', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-03-10T09:38:24.207810"
 ],
 "Demon Translations": [
  "def extractDemonTranslations(item):\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Gate Of Good Fortune' in item['tags'] or item['title'].startswith('New TGOGF Chapter Release!!'):\n\t\treturn buildReleaseMessageWithType(item, 'The Gate Of Good Fortune', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Unsuspecting Journey' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Unsuspecting Journey', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "DemonZVirus": [
  "def extractDemonzvirusBlogspotCom(item):\n\t'''\n\tParser for 'demonzvirus.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Kagerou',  'Kagerou, Batsubyoushimasu!',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-06-01T21:49:43.957601"
 ],
 "Dennou's Translation Blog": [
  "\ndef extractDennouTranslationsTumblrCom(item):\n\t'''\n\tParser for 'dennou-translations.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:54:09.403420"
 ],
 "Descent Subs": [
  "def extractDescentSubs(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Desert Steel": [
  "\ndef extractDesertsteelWordpressCom(item):\n\t'''\n\tParser for 'desertsteel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:42.489907"
 ],
 "Desiring Translation": [
  "\ndef extractDesiringtranslationCom(item):\n\t'''\n\tParser for 'desiringtranslation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:40:33.719550"
 ],
 "Desolate Tale": [
  "def extractDesolatetlCom(item):\n\t'''\n\tParser for 'desolatetl.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Awakening',       'Awakening',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-26T03:24:38.607667"
 ],
 "Desolate Translation": [
  "\ndef extractDesolatetlWordpressCom(item):\n\t'''\n\tParser for 'desolatetl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-14T03:20:22.569368"
 ],
 "Desolation Angel Translations": [
  "\ndef extractWwwDesolationangeltranslationsCom(item):\n\t'''\n\tParser for 'www.desolationangeltranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:37:11.157661"
 ],
 "Destiny Translations": [
  "\ndef extractDestinytranslations007WordpressCom(item):\n\t'''\n\tParser for 'destinytranslations007.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-23T05:56:57.969897"
 ],
 "Deus Ex Machine Translations": [
  "\ndef extractDeusexmachinetranslationsWordpressCom(item):\n\t'''\n\tParser for 'deusexmachinetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:31.329299"
 ],
 "Devil Fox": [
  "def extractDevilfoxblogWordpressCom(item):\n\t'''\n\tParser for 'devilfoxblog.wordpress.com'\n\t'''\n\t\n\treturn None\n\t\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T11:08:26.325743"
 ],
 "Devil Fox Nest": [
  "def extractWwwDevilfoxxBlog(item):\n\t'''\n\tParser for 'www.devilfoxx.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('MWBT',       'In the Future, My Whole Body is a Treasure',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-27T10:50:30.359259"
 ],
 "Devil Pending": [
  "def extractDevilpendingBlogspotCom(item):\n\t'''\n\tParser for 'devilpending.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Transformation At Another World During Rebirth',  'Transformation At Another World During Rebirth',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T06:42:21.194180"
 ],
 "Dew And Frost": [
  "def extractDewandfrostHomeBlog(item):\n\t'''\n\tParser for 'dewandfrost.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I Have Amnesia, Don\\'t Be Noisy!',       'I Have Amnesia, Don\\'t Be Noisy!',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-15T05:46:38.809631"
 ],
 "Dewey Night Unrolls": [
  "def extractDeweyNightUnrolls(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\t\n\ttagmap = [\n\t\t('Chaos Of Beauty',           'Chaos Of Beauty',           'translated'),\n\t\t('Jianghu Road is Curved',    'Jianghu Road is Curved',    'translated'),\n\t\t('Grabbing Your Hand Dragging You Away',    'Grabbing Your Hand Dragging You Away',    'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\treturn False",
  "2017-08-21T04:58:34.841069"
 ],
 "Dijon in Pieces": [
  "def extractDijoninpiecesWordpressCom(item):\n\t'''\n\tParser for 'dijoninpieces.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Me and the Tigress ',                 'Me and the Tigress',                     'translated'),\n\t\t('I was a Sword when I Reincarnated ',  'I was a Sword when I Reincarnated',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif item['tags'] != ['Uncategorized']:\n\t\treturn None\n\t\t\n\ttitlemap = [\n\t\t('Tigress ',  'Me and the Tigress',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-02-17T08:37:00.791649"
 ],
 "Dino's Translation": [
  "def extractTranslatedinoBlogspotCom(item):\n\t'''\n\tParser for 'translatedino.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Weakest Skeleton',       'My entire class has been reincarnated \u2013 I became the weakest skeleton!',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-07-16T03:03:49.704470"
 ],
 "Diputs Lounge": [
  "def extractIdleshelfBlogspotCom(item):\n\t'''\n\tParser for 'idleshelf.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('DKOD Chapters',       'Devil King From The Otherworldly Dimension',                      'translated'),\n\t\t('HM Chapters',         'Heavenly Monarch',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:15:18.078779"
 ],
 "Dis Acedia": [
  "\ndef extractDisacediaWordpressCom(item):\n\t'''\n\tParser for 'disacedia.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:34.418019"
 ],
 "Disappointing Translations": [
  "def extractDisappointingTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'GSB' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Galaxy Shattering Blade', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Distracted Chinese": [
  "def extractDistractedChinese(item):\n\t\"\"\"\n\t# 'Distracted Chinese'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('the heartbeat at the tip of the tongue',       'The Heartbeat at the Tip of the Tongue', 'translated'),\n\t\t('\u820c\u5c16\u4e0a\u7684\u5fc3\u8df3',                                 'The Heartbeat at the Tip of the Tongue', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-04-07T04:03:41.944384"
 ],
 "Distracted Translations": [
  "def extractDistractedTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tltags = [tmp.lower() for tmp in item['tags']]\n\tif 'gonna get captured' in ltags or 'Get Captured: Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Like Hell I\u2019m Gonna Get Captured!', vol, chp, frag=frag, postfix=postfix)\n\tif 'Girl Who Ate Death' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Shinigami wo Tabeta Shouko', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dividing Canaan: The Journals of Canaan Quintanilla by D.A. Hernandez": [
  "\ndef extractTruthiscreationBlogspotCom(item):\n\t'''\n\tParser for 'truthiscreation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:29.858230"
 ],
 "Divine Dao Library": [
  "def extractWwwDivinedaolibraryCom(item):\r\n\t'''\r\n\tParser for 'www.divinedaolibrary.com'\r\n\t'''\r\n\r\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\r\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\r\n\t\treturn None\r\n\r\n\ttagmap = [\r\n\t\t('The Ring That Defies The Heavens',                                      'The Mightiest System',                                              'translated'), \r\n\t\t('The Mightiest System',                                                  'The Mightiest System',                                              'translated'), \r\n\t\t('My Amazing WeChat is Connected to the Three Realms',                    'My Amazing WeChat is Connected to the Three Realms',                'translated'), \r\n\t\t('Pivot of the Sky',                                                      'Pivot of the Sky',                                                  'translated'), \r\n\t\t('Omni-Magician',                                                         'Omni-Magician',                                                     'translated'), \r\n\t\t('Martial Peak',                                                          'Martial Peak',                                                      'translated'), \r\n\t\t('Dragon\\'s Soul',                                                        'Dragon\\'s Soul',                                                    'oel'), \r\n\t\t('Martial Family',                                                        'Martial Family',                                                    'oel'), \r\n\t\t('Rise of the Three Gods',                                                'Rise of the Three Gods',                                            'oel'), \r\n\t]\r\n\r\n\tfor tagname, name, tl_type in tagmap:\r\n\t\tif tagname in item['tags']:\r\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\r\n\r\n\treturn False",
  "2019-06-02T07:38:24.065939"
 ],
 "Diwasteman": [
  "def extractDiwasteman(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'commentary' in item['title'].lower():\n\t\treturn False\n\t\t\n\ttagmap = [\n\t\t('Parameter remote controller',      'Parameter remote controller',                  'translated'),\n\t\t('maou no hajimekata',               'Maou no Hajimekata',                           'translated'),\n\t\t('Is my reality a love game??',      'Is my reality a love game??',                  'translated'),\n\t\t('Ero Gacha',                        'Ero Gacha',                                    'translated'),\n\t\t('Women gather in a cheap house',    'The Gathering of Women in a Cheap House',      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-10-28T06:28:01.747168"
 ],
 "Djurasico Animations": [
  "def extractDjurasicoBlogspotCom(item):\n\t'''\n\tParser for 'djurasico.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Common Sense of a Dukes daughter',                        'Common Sense of a Duke\\'s Daughter',                      'translated'),\n\t\t('Common Sense of a Duke\\'s Daughter',                      'Common Sense of a Duke\\'s Daughter',                      'translated'),\n\t\t('Koushaku Reijou no Tashinami',                            'Common Sense of a Duke\\'s Daughter',                      'translated'),\n\t\t('Koushaku Reijou no Tashinami novel',                      'Common Sense of a Duke\\'s Daughter',                      'translated'),\n\t\t('The adventurer who received undesired immortality',       'Unwilling Undead Adventurer',                             'translated'),\n\t\t('Garudeina Oukoku Koukoku Ki',                             'Garudeina Oukoku Koukoku Ki',                             'translated'),\n\t\t('Maidens grand summoning',                                 'Maidens grand summoning',                                 'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-10T03:35:57.818149"
 ],
 "Do Machines Dream of Better Translations?": [
  "def extractDonovelsdreamofbettertranslationsWordpressCom(item):\n\t'''\n\tParser for 'donovelsdreamofbettertranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Last Boss Witch',           'The Last Boss Witch Will Keep Her Past Self\u2019s Crush Until Her Dying Day',                                                'translated'),\n\t\t('Darkness Villainess',       'I\\'m Not a Villainess!! Just Because I Can Control Darkness Doesn\\'t Mean I\\'m a Bad Person! (LN)',                      'translated'),\n\t\t('Villainess vs Zombies',     'Villainess vs Zombies',                                                                                                  'translated'),\n\t\t('The Ice\u2019s Yearning',        'The Ice\u2019s Yearning',                                                                                                     'translated'),\n\t\t('Ice Queen',                 'The Ice\u2019s Yearning',                                                                                                     'translated'),\n\t\t('cinderella',                'Fake Cinderella (WN)',                                                                                                   'translated'),\n\t\t('Loiterous',                 'Loiterous',                                                                                                              'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-07T00:50:34.953889"
 ],
 "Do Not Take The Shells": [
  "\ndef extractDonottaketheshellsWordpressCom(item):\n\t'''\n\tParser for 'donottaketheshells.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:44.456242"
 ],
 "Doctor's Translation": [
  "\ndef extractWbnoveltranslationWordpressCom(item):\n\t'''\n\tParser for 'wbnoveltranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:53:03.616383"
 ],
 "Dogecore Translations": [
  "def extractDogecoretranslationsWordpressCom(item):\n\t'''\n\tParser for 'dogecoretranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('TGNR',       'The Great Nation Remodeling of Reincarnated Princess ~Let\u2019s Build an Unrivaled Country~',    'translated'),\n\t\t('PKAW',       'The Pseudo-Kunoichi From a Different World',                                                 'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\treturn False",
  "2017-10-23T02:46:50.479045"
 ],
 "DokuHana Translations": [
  "def extractDokuHanaTranslations(item):\n\t\"\"\"\n\t#'DokuHana Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dolion\u2019s Apathy": [
  "def extractDolionsapathyWordpressCom(item):\n\t'''\n\tParser for 'dolionsapathy.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['tags'] == ['Uncategorized']:\n\t\ttitlemap = [\n\t\t\t('Peerless Genius System',  'Peerless Genius System',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-13T04:20:59.060612"
 ],
 "Domina Urbana": [
  "\ndef extractDominaurbanaWordpressCom(item):\n\t'''\n\tParser for 'dominaurbana.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:38.504736"
 ],
 "Dominant Programmer": [
  "def extractDominantprogrammerWordpressCom(item):\n\t'''\n\tParser for 'dominantprogrammer.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Reincarnation Hypnosis Ability',                                                                'I, Who had Arrived in Another World, Will Live As I Like With My Hypnosis Ability',     'translated'),\n\t\t('I, Who had Arrived in Another World, Will Live As I Like With My Hypnosis Ability',             'I, Who had Arrived in Another World, Will Live As I Like With My Hypnosis Ability',     'translated'),\n\t\t('Mind Controlling My Childhood Friend, I Made Her My Sex Slave',                                 'Mind Controlling My Childhood Friend, I Made Her My Sex Slave',                         'translated'),\n\t\t('Eroge Reincarnation ~Please Don\\'t Collect Onee-chan\\'s CGs~',                                  'Eroge Reincarnation ~Please Don\\'t Collect Onee-chan\\'s CGs~',                          'translated'),\n\t\t('Saimin Regulation',                                                                             'Saimin Regulation',                                                                     'translated'),\n\t\t('As The Spirit-Sama Says',                                                                       'As The Spirit-Sama Says',                                                               'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-27T10:06:49.931116"
 ],
 "Don't Feed The Dark": [
  "\ndef extractFreezombienovelWordpressCom(item):\n\t'''\n\tParser for 'freezombienovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:39.284977"
 ],
 "Dorayakiz": [
  "def extractDorayakiz(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Doushi no Jikan scanlations": [
  "def extractDoushiNoJikanScanlations(item):\n\t\"\"\"\n\tParser for 'Doushi no Jikan scanlations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'zestiria manga' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('zestiria novel',       'Tales of Zestiria',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-09-13T05:49:06.728534"
 ],
 "Dove Translations": [
  "def extractDovetranslationsHomeBlog(item):\n\t'''\n\tParser for 'dovetranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Guide To The Peak Of Quick Transmigration',       'The Guide To The Peak Of Quick Transmigration',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:42:29.839479"
 ],
 "DragomirCM": [
  "def extractDragomirCM(item):\n\t\"\"\"\n\t# DragomirCM\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif not postfix and ':' in item['title']:\n\t\tpostfix = item['title'].split(':')[-1]\n\tif 'Magic Academy' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I was reincarnated as a Magic Academy!', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif '100 Luck' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, '100 Luck and the Dragon Tamer Skill!', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dragon MT": [
  "def extractDragonMT(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Dragon Life' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Life', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Drake Translations": [
  "def extractDrakeTranslations(item):\n\t\"\"\"\n\t'Drake Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Bandit Be Ambitious',       'Bandit, Be Ambitious! To Accomplish Kingdom Revival!', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-04-11T02:53:58.858624"
 ],
 "Dramas, Books & Tea": [
  "def extractDramasBooksTea(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"I Don't Like This World I Only Like You\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"I Don't Like This World I Only Like You\", vol, chp, frag=frag, postfix=postfix)\n\tif 'The Youthful You Who Was So Beautiful' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Youthful You Who Was So Beautiful', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dreadful Decoding": [
  "def extractDreadfulDecoding(item):\n\t\"\"\"\n\n\t\"\"\"\n\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\textractVol = re.search('\\\\[[A-Z]+(\\\\d+)\\\\]', item['title'])\n\tif not vol and extractVol:\n\t\tvol = int(extractVol.group(1))\n\textractChp = re.search('SECT\\\\.(\\\\d+) ', item['title'])\n\tif chp == 1 and 'SECT.' in item['title'] and extractChp:\n\t\tchp = int(extractChp.group(1))\n\tif 'Gun Gale Online' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sword Art Online Alternative - Gun Gale Online', vol, chp, frag=frag, postfix=postfix)\n\tif 'RotTS' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sword Art Online Alternative - Rondo of the Transient Sword', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2018-04-04T04:14:20.779949"
 ],
 "Dream Avenue": [
  "def extractDreamAvenue(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dream Bigger": [
  "def extractDreamsintheseaTumblrCom(item):\n\t'''\n\tParser for 'dreamsinthesea.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('the s ranks that i\\'ve raised',       'The S-Ranks that I\\'ve raised',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-01T21:47:31.301010"
 ],
 "Dream Potato": [
  "def extractWwwDreampotatoCom(item):\n\t'''\n\tParser for 'www.dreampotato.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Magi\u2019s Grandson',                                              'Magi\\'s Grandson',                                                            'translated'),\n\t\t('I Was a Sword When I Reincarnated (WN)',                       'I Was a Sword When I Reincarnated (WN)',                                      'translated'),\n\t\t('Tensei Saki ga Shoujo Manga no Shiro Buta Reijou datta',       'Tensei Saki ga Shoujo Manga no Shiro Buta Reijou datta',                      'translated'),\n\t\t('Otoko Nara Ikkokuichijou no Aruji o Mezasa Nakya, ne?',        'Otoko Nara Ikkokuichijou no Aruji o Mezasa Nakya, ne?',                       'translated'),\n\t\t('The Lazy Swordmaster',                                         'The Lazy Swordmaster',                                                        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-04T04:29:06.890833"
 ],
 "Dream of Desires": [
  "def extractWwwDreamofdesiresCom(item):\n\t'''\n\tParser for 'www.dreamofdesires.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Good Morning, Mr.President!',       'Good Morning, Mr.President!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-30T22:55:19.400100"
 ],
 "Dreaming Demon": [
  "\ndef extractDremingdemonWordpressCom(item):\n\t'''\n\tParser for 'dremingdemon.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-09T04:59:49.481174"
 ],
 "Dreamless Window's translation": [
  "def extractDreamlessWindowsTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\t\n\tif 'Anime' in item['tags']:\n\t\treturn None\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False",
  "2018-05-02T05:09:30.063826"
 ],
 "Dreams of Jianghu": [
  "def extractDreamsOfJianghu(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tbad = ['pictures']\n\tif any([(tmp in item['tags']) for tmp in bad]):\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('TBVW',    'To Be A Virtuous Wife',                    'translated'),\n\t\t('WC',      'World of Cultivation',                     'translated'),\n\t\t('8TT',     'Eight Treasure Trousseau',                 'translated'),\n\t\t('4.6',     '4.6 Billion Years Symphony of Evolution',  'translated'),\n\t\t('Zuo Mo',  'World of Cultivation',                     'translated'),\n\t\t('ZX',      'Zhui Xu',                                  'translated'),\n\t\t('AUW',     'An Unyielding Wind',                       'translated'),\n\t\t('ADND',    'Ascending, Do Not Disturb',                'translated'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-11-26T07:55:38.116568"
 ],
 "Dreams of Yesteryear": [
  "def extractDreamsofyesteryearWordpressCom(item):\n\t'''\n\tParser for 'dreamsofyesteryear.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, \"Emperor of the Human Way\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-04-22T07:55:37.714152"
 ],
 "Dreamz Translation": [
  "def extractDreamztranslationCom(item):\n\t'''\n\tParser for 'dreamztranslation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('GOD LEVEL DEMON',       'God Level Demon',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-04T03:32:36.569409"
 ],
 "Drew Hayes Novels": [
  "\ndef extractStarterserialsCom(item):\n\t'''\n\tParser for 'starterserials.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:14.497223"
 ],
 "Drizzle Reads": [
  "def extractDrizzlebumreadsHomeBlog(item):\n\t'''\n\tParser for 'drizzlebumreads.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Sect Master and Psycho',       'Sect Master and Psycho',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:11:51.025962"
 ],
 "Dry Mass": [
  "def extractDrymassWordpressCom(item):\n\t'''\n\tParser for 'drymass.wordpress.com'\n\t'''\n\t\n\tif 'Trait Order (ID)' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Trait Order (EN)',       'Trait Order',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-05T07:10:54.969104"
 ],
 "Dsrealm Translations": [
  "def extractDsrealmCom(item):\n\t'''\n\tParser for 'dsrealm.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Reincarnated As A Dragons Egg',       'Reincarnated As A Dragons Egg',                      'translated'),\n\t\t('Dullahan',                            'I\\'m a Dullahan, Looking for my Head',               'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\tif item['title'].startswith(\"Chapter\") and item['tags'] == ['Uncategorized']:\n\t\treturn buildReleaseMessageWithType(item, \"Reincarnated as a Dragon\u2019s Egg \uff5eLets Aim to Be the Strongest\uff5e\", vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith(\"News and Chapter\") and item['tags'] == ['Uncategorized']:\n\t\treturn buildReleaseMessageWithType(item, \"Reincarnated as a Dragon\u2019s Egg \uff5eLets Aim to Be the Strongest\uff5e\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2018-02-07T07:25:43.303565"
 ],
 "Ducky's English Translations": [
  "def extractDuckysEnglishTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "DuelNoir": [
  "def extractNop(dummy_item):\n\t\"\"\"\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dummy Translations": [
  "def extractDummytranslationsWordpressCom(item):\n\t'''\n\tParser for 'dummytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The people who are supposed to kill me fell for me instead',         'The People Who\u2019re Suppose to Kill Me All Fell for Me Instead',                      'translated'),\n\t\t('The People Who\u2019re Suppose to Kill Me All Fell for Me Instead',       'The People Who\u2019re Suppose to Kill Me All Fell for Me Instead',                      'translated'),\n\t\t('The target always thinks that I like him',                           'The target always thinks that I like him',                                          'translated'),\n\t\t('The little flower god and the emperor',                              'The little flower god and the emperor',                                             'translated'),\n\t\t('Number One Zombie Wife',                                             'Number One Zombie Wife',                                                            'translated'),\n\t\t('The General\\'s cat always wants to climb into my bed',               'The General\\'s cat always wants to climb into my bed',                              'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-02T07:39:48.221261"
 ],
 "Dumplings, Ramen, and Randomness": [
  "def extractRamenwithrandomnessWordpressCom(item):\n\t'''\n\tParser for 'ramenwithrandomness.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('YYGG(Interstellar)',       'Yin Yang Eye GunGun\u2019s Marriage Contract(Interstellar)',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:31:51.552971"
 ],
 "Duran Daru Translation": [
  "def extractDuranDaruTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Durasama": [
  "def extractDurasama(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Arifureta' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Arifureta', vol, chp, frag=frag, postfix=postfix)\n\tif 'Manuke FPS' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Manuke na FPS Player ga isekai e ochita baai', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dusk Tales": [
  "def extractDuskTales(item):\n\t\"\"\"\n\t'Dusk Tales'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dusk: Origins": [
  "\ndef extractDuskoriginsBlogspotCom(item):\n\t'''\n\tParser for 'duskorigins.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:30.347866"
 ],
 "Dust to Rust": [
  "def extractDustToRust(item):\n\t\"\"\"\n\tParser for 'Dust to Rust'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Kyuuketsu Hime' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kyuuketsu Hime wa Barairo no Yume o Miru', vol, chp, frag=frag, postfix=postfix)\n\tif 'Vampire Princess' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kyuuketsu Hime wa Barairo no Yume o Miru', vol, chp, frag=frag, postfix=postfix)\n\tif 'Reincarnate into a Slime' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shitara Slime Datta Ken', vol, chp, frag=frag, postfix=postfix)\n\tif 'Slime' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shitara Slime Datta Ken', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-10-23T02:43:47.707403"
 ],
 "Dwrf TL": [
  "def extractDwrfTL(item):\n\t\"\"\"\n\tDwrf TL\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('the world is fun as it became a death game',       'The World Has Become a Death Game and It\\'s Fun',                      'translated'),\n\t\t('DG:FW',                                            'The World Has Become a Death Game and It\\'s Fun',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-05-18T02:42:13.812098"
 ],
 "Dynamis Gaul Light Novel": [
  "def extractDynamisGaul(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Reincarnated by the God of Creation' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Reincarnated by the God of Creation', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Status Meister' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Status Meister', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Dysry Summaries": [
  "def extractDysrySummaries(item):\n\t\"\"\"\n\tDysry Summaries\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Summary' in item['tags']:\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "E's Web Novel Translations": [
  "def extractEswebnoveltranslationsHomeBlog(item):\n\t'''\n\tParser for 'eswebnoveltranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Game of the Wealthy',       'Game of the Wealthy: Privately Kept Sweetheart Treasure',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:20:51.772393"
 ],
 "E. Zani Fiction": [
  "def extractEZaniFiction(item):\n\t\"\"\"\n\tParser for 'E. Zani Fiction'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "EC Webnovel": [
  "def extractECWebnovel(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('volume'):\n\t\treturn buildReleaseMessageWithType(item, 'EC', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('great merchant - dao ming'):\n\t\treturn buildReleaseMessageWithType(item, 'Great Merchant - Dao Ming', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "EG-Smart-Translation": [
  "def extractEGSmartTranslation(item):\n\t\"\"\"\n\tEG-Smart-Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "EGSN Blog": [
  "def extractEGSNBlog(item):\n\t\"\"\"\n\tEGSN Blog\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "ELYSION Translation": [
  "def extractELYSIONTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "EVTranslation": [
  "def extractEvtranslationHomeBlog(item):\n\t'''\n\tParser for 'evtranslation.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Quan Qiu Gao Wu',       'Quan Qiu Gao Wu',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:21:53.650772"
 ],
 "EXENovels": [
  "def extractWwwExenovelsCom(item):\n\t'''\n\tParser for 'www.exenovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif '[Teaser]' in item['title']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('History\\'s Strongest Manager',       'History\\'s Strongest Manager',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T02:53:45.143464"
 ],
 "EZ Translations": [
  "def extractEZTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Eaglewood Crumbs": [
  "def extractChenxiangruxieWordpressCom(item):\n\t'''\n\tParser for 'chenxiangruxie.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Chen Xiang Ru Xie',       'Chen Xiang Ru Xie',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:02:29.567499"
 ],
 "Eastern Fantasy": [
  "def extractEasternFantasy(item):\n\t\"\"\"\n\tParser for 'Eastern Fantasy'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('The Alma Chronicles',       'The Alma Chronicles',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-07-18T05:21:00.999075"
 ],
 "Easygoing Vice Translations": [
  "def extractEasygoingvicetlWordpressCom(item):\n\t'''\n\tParser for 'easygoingvicetl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Level Up Just By Eating',       'Level Up Just By Eating',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-22T06:26:42.980304"
 ],
 "Ebisu Translations": [
  "def extractEbisutranslationsWordpressCom(item):\n\t'''\n\tParser for 'ebisutranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Invijible Panda',                                                                'Invijible Panda',                                                                               'oel'),   # wtf?\n\t\t('I Reincarnated and Tried to Become a Genius Child Actor. I Want to Quit.',       'I Reincarnated and Tried to Become a Genius Child Actor. I Want to Quit.',                      'translated'),\n\t\t('Hey, Don\\'t Act Unruly!',                                                        'Hey, Don\\'t Act Unruly!',                                                                       'translated'),\n\t\t('The support manages adventurer parties',                                         'The support manages adventurer parties',                                                        'translated'),\n\t\t('My Pet Is a Holy Maiden',                                                        'My Pet Is a Holy Maiden',                                                                       'translated'),\n\t\t('I Bought a Girl',                                                                'I Bought a Girl',                                                                               'translated'),\n\t\t('I Heard You Like Me Too',                                                        'I Heard You Like Me Too',                                                                       'translated'),\n\t\t('Wife, You Can\\'t Run After Eating',                                              'Wife, You Can\\'t Run After Eating',                                                             'translated'),\n\t\t('Can\\'t Leave This Room Until I Get First Place on Syosetu',                      'Can\\'t Leave This Room Until I Get First Place on Syosetu',                                     'translated'),\n\t\t('Child Rearing Hero and Demon King\\'s children',                                  'Child Rearing Hero and Demon King\\'s children',                                                 'translated'),\n\t\t('How Is It My Fault That I Look Like a Girl!',                                    'How Is It My Fault That I Look Like a Girl!',                                                   'translated'),\n\t\t('Pampering Big Cat Wife',                                                         'Pampering Big Cat Wife',                                                                        'translated'),\n\t\t('Reincarnated as My Little Sister',                                               'Reincarnated as My Little Sister',                                                              'translated'),\n\t\t('Strongly Pampered Male Wife',                                                    'Strongly Pampered Male Wife',                                                                   'translated'),\n\t\t('Perfect Superstar',                                                              'Perfect Superstar',                                                                             'translated'),\n\t\t('Being An Author Is A High Risk Occupation',                                      'Being An Author Is A High Risk Occupation',                                                     'translated'),\n\t\t('Shoujo Grand Summoning',                                                         'Shoujo Grand Summoning',                                                                        'translated'),\n\t\t('The Worst Princes\\' Battle Over Giving Up the Throne',                           'The Worst Princes\\' Battle Over Giving Up the Throne',                                          'translated'),\n\t\t('In Search Of Love',                                                              'In Search Of Love',                                                                             'translated'),\n\t\t('Unlimited Anime Works',                                                          'Unlimited Anime Works',                                                                         'translated'),\n\t\t('Holistic Fantasy',                                                               'Holistic Fantasy',                                                                              'translated'),\n\t\t('Little Husband, Little Wife, Little Immortal',                                   'Little Husband, Little Wife, Little Immortal',                                                  'translated'),\n\t\t('Reborn as the Hero\\'s Daughter! Time to Become the Hero Once More!',             'Reborn as the Hero\\'s Daughter! Time to Become the Hero Once More!',                            'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('HIIMFTILLAG',                                    'How Is It My Fault That I Look Like a Girl!',                                                   'translated'),\n\t\t('HDAU',                                           'Hey, Don\\'t Act Unruly!',                                                                       'translated'),\n\t\t('TSOUG',                                          'The School\\'s Omnipotent Useless Garbage',                                                      'translated'),\n\t\t('IBAG',                                           'I Bought a Girl',                                                                               'translated'),\n\t\t('SMAP',                                           'The support manages adventurer parties',                                                        'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent in item['title']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:01:41.974737"
 ],
 "EccentricTranslations": [
  "def extractEccentricTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('True Immortal',    'True Immortal',                        'oel'),\n\t\t('ILK',    'Invincible Leveling King',                        'translated'),\n\t\t('ATF',    'After Transformation, Mine and Her Wild Fantasy', 'translated'),\n\t\t('DTW',    'Doctoring the World',                             'translated'),\n\t\t('TKDG',   'The Kind Death God',                              'translated'),\n\t\t('SPO',    'Single Player Only',                              'translated'),\n\t\t('VW:CCM', 'Virtual World: Close Combat Mage',                'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('TKDG ',                 'The Kind Death God',                                   'translated'),\n\t\t('SPO ',                  'Single Player Only',                                   'translated'),\n\t\t('ATF ',                  'After Transformation, Mine and Her Wild Fantasy',      'translated'),\n\t\t('Doctoring the World',   'Doctoring the World',                                  'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in tagmap:\n\t\tif item['title'].lower().startswith(titlecomponent.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\t\t\n\treturn False",
  "2018-05-22T06:26:34.433554"
 ],
 "Eclipse Court": [
  "\ndef extractEclipsecourtBlogspotCom(item):\n\t'''\n\tParser for 'eclipsecourt.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:53.897278"
 ],
 "Ectoplasmic Cat MTL": [
  "def extractEctocatstoriesHomeBlog(item):\n\t'''\n\tParser for 'ectocatstories.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('S Class',       'The S-Classes That I Raised',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:16:04.095867"
 ],
 "Eden": [
  "\ndef extractAnathemaofedenWordpressCom(item):\n\t'''\n\tParser for 'anathemaofeden.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:23.181155"
 ],
 "Eden Translations": [
  "def extractEdentranslationsblogWordpressCom(item):\n\t'''\n\tParser for 'edentranslationsblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"School Beauty Personal Bodyguard\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"School Beauty Personal Bodyguard\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-08-01T04:57:41.623549"
 ],
 "Egg MTL": [
  "def extractGudemtlHomeBlog(item):\n\t'''\n\tParser for 'gudemtl.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Pleasing Start Over',       'Pleasing Start Over',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-16T04:33:55.729866"
 ],
 "Ehmed Translations": [
  "def extractEhmedtranslationsWordpressCom(item):\n\t'''\n\tParser for 'ehmedtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Almighty Student',                               'Almighty Student',                                              'translated'),\n\t\t('The Primordial Throne',                          'The Primordial Throne',                                         'translated'),\n\t\t('Very Pure and Ambiguous',                        'Very Pure and Ambiguous',                                       'translated'),\n\t\t('Overgod Ascension',                              'Overgod Ascension',                                             'translated'),\n\t\t('Top Quality Beauty Cultivation Technique',       'Top Quality Beauty Cultivation Technique',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-09T05:13:29.880429"
 ],
 "Eikasia": [
  "\ndef extractEighthcirclestudiosCom(item):\n\t'''\n\tParser for 'eighthcirclestudios.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-07T08:13:25.883557"
 ],
 "Elemental Cobalt": [
  "def extractElementalCobalt(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('arifureta chapter') or 'Arifureta Translation' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Arifureta Shokugyou de Sekai Saikyou', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\tif item['title'].lower().startswith('reincarnated as a villager \u2013 strongest slow-life'):\n\t\treturn buildReleaseMessageWithType(item, 'Reincarnated as a Villager ~ Strongest Slow-life', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\tif item['title'].lower().startswith('requiem to the stars'):\n\t\treturn buildReleaseMessageWithType(item, 'Requiem to the Stars', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Hawtness' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Hawtness', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Time and Place' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Time and Place', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Tales of an Enchantress' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tales of an Enchantress', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\t\t\n\treturn False",
  "2017-08-30T04:34:15.433964"
 ],
 "Elevenses: The Daring Exploits of Agents 1111 and 711": [
  "\ndef extractElevensesadventureWordpressCom(item):\n\t'''\n\tParser for 'elevensesadventure.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:30.302005"
 ],
 "Elli Phantomhive\u2665": [
  "def extractElliPhantomhive(item):\n\t\"\"\"\n\tParser for 'Elli Phantomhive\u2665'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ellionora Translation": [
  "def extractEllionoraTranslation(item):\n\t\"\"\"\n\tEllionora Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ellionora Translations": [
  "\ndef extractEllionoratranslationCom(item):\n\t'''\n\tParser for 'ellionoratranslation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-21T04:27:19.860139"
 ],
 "Elpis Creation": [
  "\ndef extractElpiscreationCom(item):\n\t'''\n\tParser for 'elpiscreation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-09T05:57:59.816869"
 ],
 "Elysian": [
  "def extractElysiantranslationsBlogspotCom(item):\n\t'''\n\tParser for 'elysiantranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('FSTSG Chapter ',  'Face Slapping The Slag Gong System (Quick Transmigration)',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-03-26T06:28:30.313447"
 ],
 "Elysiel": [
  "def extractElysielCom(item):\n\t'''\n\tParser for 'elysiel.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Reincarnated Swordmaster',                                   'Reincarnated Swordmaster',                                                  'translated'),\n\t\t('Green Skin',                                                 'Green Skin',                                                                'translated'),\n\t\t('Dragon Poor',                                                'Dragon Poor',                                                               'translated'),\n\t\t('Max Level His Majesty in Moorim',                            'Max Level His Majesty in Moorim',                                           'translated'),\n\t\t('PRC',                                                        'PRC',                                                                       'translated'),\n\t\t('Loiterous',                                                  'Loiterous',                                                                 'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-22T22:11:37.973176"
 ],
 "Elysr translations": [
  "\ndef extractElsyrtransWordpressCom(item):\n\t'''\n\tParser for 'elsyrtrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:29.630001"
 ],
 "Emerald Mayblossom": [
  "def extractEmeraldmayblossomBlogspotCom(item):\n\t'''\n\tParser for 'emeraldmayblossom.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I Heard You Like Me Too (\u807d\u8aaa\u4f60\u4e5f\u559c\u6b61\u6211)',       'I Heard You Like Me Too',                      'translated'),\n\t\t('Precisely In Love With You (\u5c31\u662f\u611b\u4e0a\u4f60)',        'Precisely In Love With You',                       'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T11:05:05.260992"
 ],
 "Emergency Exit's Release Blog": [
  "def extractEmergencyExitsReleaseBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Emma's TL": [
  "def extractEmmaFanmilyOrg(item):\n\t'''\n\tParser for 'emma.fanmily.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Legend of Concubine\u2019s Daughter Minglan (The Story of Minglan)',       'The Legend of the Concubine\\'s Daughter Minglan',                      'translated'),\n\t\t('Minglan',                                                             'The Legend of the Concubine\\'s Daughter Minglan',                      'translated'),\n\t\t('History\u2019s Strongest Senior Brother',                                  'History\u2019s Strongest Senior Brother',                                   'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:28:59.974619"
 ],
 "Empress": [
  "def extractSkeletonqueen06WordpressCom(item):\n\t'''\n\tParser for 'skeletonqueen06.wordpress.com'\n\t'''\n\n\n\tbadwords = [\n\t\t\t'Anime Ending Song',\n\t\t\t'Manga',\n\t\t\t'Doujinshi',\n\t\t]\n\tif any([bad in item['tags'] for bad in badwords]):\n\t\treturn None\n\n\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('akuyaku reijo',       'Akuyaku Reijo Nanode Rasubosu o Katte Mimashita',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:33:28.199171"
 ],
 "Empty Boundaries": [
  "def extractEmptyBoundaries(item):\n\t\"\"\"\n\tParser for 'Empty Boundaries'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Emruyshit Translations": [
  "def extractEmruyshitTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "En Xiao": [
  "def extractEnXiao(item):\n\t\"\"\"\n\tParser for 'En Xiao'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttitlemap = [\n\t\t('Who Dares Slander My Senior Brother \u2013 ',         'Who Dares Slander My Senior Brother',      'translated'),\n\t\t('Who Dares Slander My Senior Brother \u2013 Chapter',  'Who Dares Slander My Senior Brother',      'translated'),\n\t\t('Founder of Diabolism \u2013 Chapter',                 'Founder of Diabolism',                     'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\treturn False",
  "2017-08-16T05:19:18.042279"
 ],
 "EnLn": [
  "def extractEnlnGenerasiNet(item):\n\t'''\n\tParser for 'enLN.generasi.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('imouto sae ireba ii',       'Imouto sae Ireba ii.',                      'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-07-18T05:17:02.135792"
 ],
 "EnTruce Translations": [
  "def extractEnTruceTranslations(item):\n\t\"\"\"\n\t# EnTruce Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'kuro no maou' in item['title'].lower() and 'chapter' in item['title'].lower() and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Kuro no Maou', vol, chp, frag=frag, postfix=postfix)\n\tif 'kuro no maou' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Kuro no Maou', vol, chp, frag=frag, postfix=postfix)\n\tif 'maken no daydreamer' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Maken no Daydreamer', vol, chp, frag=frag, postfix=postfix)\n\tif 'knw' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Enchanting Elementalist": [
  "\ndef extractEnchantingelementalistWordpressCom(item):\n\t'''\n\tParser for 'enchantingelementalist.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-27T07:41:14.149453"
 ],
 "End Online Novel": [
  "def extractEndOnline(item):\n\t\"\"\"\n\n\t\"\"\"\n\ttitle = item['title']\n\tfor tag in item['tags']:\n\t\tif 'volume' in tag.lower():\n\t\t\ttitle = tag + ' ' + title\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(title)\n\tif not (chp or vol) or 'published' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Eternal Anime War',        'Eternal Anime War',                       'oel'),\n\t\t('End Online',               'End Online',                              'oel'),\n\t\t('Chronicle of the Eternal', 'Chronicle of the Eternal',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-03-10T06:44:59.706624"
 ],
 "End of Doom MTL": [
  "def extractEndofDoomMTL(item):\n\t\"\"\"\n\tEnd of Doom MTL\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Doom Lord' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Doom Lord', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "EndKun": [
  "def extractEndKun(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "EndOfDays42 Translations": [
  "def extractWwwEodtranslationsAsia(item):\n\t'''\n\tParser for 'www.eodtranslations.asia'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\ttagmap = [\n\t\t('Otonari no Tenshi-sama ni Itsu no Aida ni ka Dame Ningen ni Sareteiru ken',     'Otonari no Tenshi-sama ni Itsu no Aida ni ka Dame Ningen ni Sareteiru ken',                         'translated'), \n\t\t('Sage Reincarnation',                                                            'Different World Reincarnation I Obtained the Second Occupation of a Sage, I became the strongest',  'translated'), \n\t\t('I Truly Am The God of Learning',                                                'I Truly Am The God of Learning',                                                                    'translated'), \n\t\t('Jaryu Tensei',                                                                  'Jaryu Tensei',                                                                                      'translated'), \n\t\t('Slime Tensei Monogatari',                                                       'Slime Tensei Monogatari',                                                                           'translated'), \n\t\t('Soshite Shoujo wa Akujo no Karade o Te ni Ireru',                               'Soshite Shoujo wa Akujo no Karade o Te ni Ireru',                                                   'translated'), \n\t\t('Kanchigai Tensai',                                                              'I Got Reincarnated And Mistaken As A Genius?',                                                      'translated'), \n\t\t('My Fiance is in Love with My Little Sister',                                    'My Fiance is in Love with My Little Sister',                                                        'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2019-06-07T06:15:56.174730"
 ],
 "Endeta": [
  "def extractEndeta(item):\n\t\"\"\"\n\tParser for 'Endeta'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "EndlessFantasy Translations": [
  "def extractEndlessfantasyTranslations(item):\n\t\"\"\"\n\tParser for 'EndlessFantasy Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'fanfic' in item['title'].lower():\n\t\treturn None\n\n\t\n\ttitlemap = [\t\t\n\t\t('My Father-in-law is Lu Bu \u2013 ',                                        'My Father-in-law is Lu Bu',                                      'translated'), \n\t\t('My Father-in-law is Lu Bu Chapter',                                   'My Father-in-law is Lu Bu',                 'translated'), \n\t\t('Masked Knight \u2013 ',                                                    'Masked Knight',                                                  'translated'), \n\t\t('Masked Knight Chapter',                                               'Masked Knight',                                                  'translated'), \n\t\t('Epoch of Twilight \u2013 Chapter',                                         'Epoch of Twilight',                                              'translated'), \n\t\t\t\n\t\t('Age of Cosmic Exploration \u2013 Chapter',                                 'Age of Cosmic Exploration',                                      'translated'), \n\t\t('MMORPG: Rebirth of the Legendary Guardian- Chapter',                  'MMORPG: Rebirth of the Legendary Guardian',                      'translated'), \n\t\t('MMORPG: Rebirth of the Legendary Guardian \u2013 Chapter',                 'MMORPG: Rebirth of the Legendary Guardian',                      'translated'), \n\t\t('MMORPG: Rebirth of the Legendary Guardian : Chapter',                 'MMORPG: Rebirth of the Legendary Guardian',                      'translated'), \n\t\t\n\t\t('Full Marks Hidden Marriage: Pick Up a Son, Get a Free Husband \u2013',     'Full Marks Hidden Marriage: Pick Up a Son, Get a Free Husband',  'translated'), \n\t\t('I Am Supreme \u2013 Chapter',                                              'I am Supreme',                                                   'translated'), \n\t\t('Pursuit of the Truth \u2013',                                              'Pursuit of the Truth',                                           'translated'), \n\t\t\t\n\t\t\t\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\n\treturn False",
  "2017-08-01T04:44:29.285467"
 ],
 "Engrish Translation": [
  "def extractNop(dummy_item):\n\t\"\"\"\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Enlate": [
  "def extractEnlate(item):\n\t\"\"\"\n\tParser for 'Enlate'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "EnlightenedWorks": [
  "\ndef extractEnlightenedworks(item):\n\t'''\n\tParser for 'EnlightenedWorks'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:53.653958"
 ],
 "Enne@ennaine": [
  "def extractWwwEnnaineTk(item):\n\t'''\n\tParser for 'www.ennaine.tk'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Kiss Addiction',       'Kiss Addiction',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-23T08:55:22.680538"
 ],
 "Ensig's Writings": [
  "def extractEnsigsWritings(item):\n\t\"\"\"\n\t#'Ensig's Writings'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Sword-shisho' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I was a Sword when I Reincarnated!', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Gentle Demon' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Demon Noble Girl ~Tale of a Gentle Demon~', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Undead(?) Life' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Life(?) as an Undead', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ensj Translations": [
  "def extractEnsjTranslations(item):\n\t\"\"\"\n\t# Ensj Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\t\n\ttagmap = [\n\t\t('RMB',       'Record of Muwui\u2019s Battles',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Tutorials' in item['tags']:\n\t\treturn None\n\t\t\n\tif 'King Shura' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'King Shura', vol, chp, frag=frag, postfix=postfix)\n\tif 'I\\'m Sorry For Being Born In This World!' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I\\'m Sorry For Being Born In This World!', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Record of a Thousand Lives' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Record of a Thousand Lives', vol, chp, frag=frag, postfix=postfix)\n\tif 'Running Away From The Hero!' in item['tags']:\n\t\tif not frag:\n\t\t\tmatch = re.search('\\\\((\\\\d+)\\\\)', item['title'])\n\t\t\tif match:\n\t\t\t\tfrag = int(match.group(1))\n\t\treturn buildReleaseMessageWithType(item, 'Running Away From The Hero!', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\ttitlemap = [\n\t\t('[King Shura]',      'King Shura',            'translated'),\n\t\t('Invisible dragon',  'Invisible dragon',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-08-07T06:17:08.149035"
 ],
 "Ente38 translations": [
  "def extractEnte38translations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Enter The Farside": [
  "\ndef extractEnterthefarsideWordpressCom(item):\n\t'''\n\tParser for 'enterthefarside.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:35.509802"
 ],
 "Enter the Rabbit Hole": [
  "def extractJackofalltastesconnoisseurofnoneWordpressCom(item):\n\t'''\n\tParser for 'jackofalltastesconnoisseurofnone.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('A Tale of Two Phoenixes',       'A Tale of Two Phoenixes',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:47:11.883542"
 ],
 "Entertainment & Snacks": [
  "\ndef extractEntertainmentandsnacksBlogspotCom(item):\n\t'''\n\tParser for 'entertainmentandsnacks.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:35:39.758295"
 ],
 "Entirely Presenting You": [
  "\ndef extractEntirelypresentingyouWordpressCom(item):\n\t'''\n\tParser for 'entirelypresentingyou.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:48.600045"
 ],
 "Epithetic": [
  "def extractEpithetic(item):\n\t\"\"\"\n\t# 'Epithetic'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Epyon Translations": [
  "def extractEpyonTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'magic robot aluminare ch' in item['title'].lower():\n\t\tmatch = re.search('ch ?(\\\\d+)\\\\-(\\\\d+)', item['title'])\n\t\tif match:\n\t\t\tchp = match.group(1)\n\t\t\tfrag = match.group(2)\n\t\t\treturn buildReleaseMessageWithType(item, 'Magic Robot Aluminare', vol, chp, frag=frag, postfix=postfix)\n\t\treturn buildReleaseMessageWithType(item, 'Magic Robot Aluminare', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Erelith": [
  "\ndef extractWirkowritingsBlogspotCom(item):\n\t'''\n\tParser for 'wirkowritings.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:40.103120"
 ],
 "Eren's Translations": [
  "def extractErenstranslationHomeBlog(item):\n\t'''\n\tParser for 'erenstranslation.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Nii-san',       'Do You Think You Can Run After Reincarnating, Nii-san?',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:19:06.023078"
 ],
 "ErikaWalker": [
  "\ndef extractErikawalker(item):\n\t'''\n\tParser for 'ErikaWalker'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:54.119519"
 ],
 "Erilyn's Translations": [
  "def extractErilyntranslateBlogspotCom(item):\n\t'''\n\tParser for 'erilyntranslate.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Manowa',       'Manowa Mamono Taosu Nouryoku Ubau Watashi Tsuyokunaru',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-15T05:40:58.199753"
 ],
 "Ero Light Novel Translations": [
  "def extractEroLightNovelTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Adolescent Adam' in item['tags']:\n\t\tif 'Adolescent Adam 2' in item['title']:\n\t\t\tif not vol:\n\t\t\t\tvol = 1\n\t\t\treturn buildReleaseMessageWithType(item, 'Shishunki na Adam', vol + 1, chp, frag=frag, postfix=postfix)\n\t\treturn buildReleaseMessageWithType(item, 'Shishunki na Adam', vol, chp, frag=frag, postfix=postfix)\n\n\n\ttagmap = [\n\t\t('Makina',                                             'The Slutty Adventures of Magical Princess Makina',                    'translated'),\n\t\t('Harem Castle',                                       'Harem Castle',                                                        'translated'),\n\t\t('Harem Pirates',                                      'Harem Pirates',                                                       'translated'),\n\t\t(\"Student Council President's Secret Laid Bare\",       \"Student Council President's Secret Laid Bare\",                        'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\tchp_prefixes = [\n\t\t\t('Milk Princess',                                        'Milk Princess',                                            'translated'),\n\t\t\t('Harem Dynast',                                         'Harem Dynast',                                             'translated'),\n\t\t\t('Harem Sister',                                         'Harem Sister',                                             'translated'),\n\t\t\t('Harem Caravan',                                        'Harem Caravan',                                            'translated'),\n\t\t\t('Erogenous Beauty Salon by Succubus Girls: Chapter',    'Erogenous Beauty Salon by Succubus Girls',                 'translated'),\n\t\t\t('Erogenous Beauty Salon by Succubus Girls 2: Chapter',  'Erogenous Beauty Salon by Succubus Girls 2',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\t\n\n\treturn False",
  "2018-12-27T05:30:30.886161"
 ],
 "Ero Ranobe": [
  "\ndef extractEroranobeWordpressCom(item):\n\t'''\n\tParser for 'eroranobe.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-12T09:39:17.897033"
 ],
 "Eros Workshop": [
  "def extractErosWorkshop(item):\n\t\"\"\"\n\t# Eros Workshop\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Young God Divine Armaments' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Young God Divine Armaments', vol, chp, frag=frag, postfix=postfix)\n\tif 'Communicationally Challenged' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Komyunan no Ore ga, Koushou Skill ni Zenfuri Shite Tensei Shita Kekka', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-06-17T07:50:33.427402"
 ],
 "Erotic Translations": [
  "\ndef extractErotictranslationsTumblrCom(item):\n\t'''\n\tParser for 'erotictranslations.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-31T06:05:20.297658"
 ],
 "Erratic Translations": [
  "def extractErratictranslationsTumblrCom(item):\n\t'''\n\tParser for 'erratictranslations.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"Space Rebirth\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Space Rebirth\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-07-15T23:46:37.372717"
 ],
 "Errorknife Translations": [
  "def extractErrorknifeWordpressCom(item):\n\t'''\n\tParser for 'errorknife.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Gang of Yuusha',       'Gang of Yuusha',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T07:28:19.024034"
 ],
 "Eschaton City": [
  "\ndef extractEschatoncityBlogspotCom(item):\n\t'''\n\tParser for 'eschatoncity.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:23.544779"
 ],
 "Estelion's Legal Imouto": [
  "\ndef extractLegalimoutoWordpressCom(item):\n\t'''\n\tParser for 'legalimouto.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-04T00:47:42.058724"
 ],
 "Estelion's Secret Imouto Novel Translation": [
  "\ndef extractEstelionimoutoBlogspotCom(item):\n\t'''\n\tParser for 'estelionimouto.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-20T06:48:59.164513"
 ],
 "Estelion's secret Imouto": [
  "def extractImoutositeWordpressCom(item):\n\t'''\n\tParser for 'imoutosite.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif ' Manga ' in item['title']:\n\t\treturn None\n\t\t\n\tltitle = item['title'].lower()\n\t\t\n\tchp_prefixes = [\n\t\t\t(\"chapter \",                       \"The Reincarnated Vampire Wants an Afternoon Nap\",                  False),\n\t\t\t(\"arge chapter \",                  \"The Reincarnated Vampire Wants an Afternoon Nap\",                  False),\n\t\t\t(\"arge chaper \",                   \"The Reincarnated Vampire Wants an Afternoon Nap\",                  False),\n\n\t\t\t(\"mile \",                          \"I Said Make My Abilities Average!\",                                False),\n\t\t\t(\"kazane chapter\",                 \"Manowa Mamono Taosu Nouryoku Ubau Watashi Tsuyokunaru\",            False),\n\t\t\t(\"mira \",                          \"She Professed Herself The Pupil Of The Wiseman\",                   False),\n\t\t\t(\"cathy chapter\",                  \"Sword Saint\\'s Disciple\",                                          False),\n\t\t\t(\"asley chapter\",                  'The Principle of a Philosopher by eternal fool \"Asley\"',           False),\n\t\t\t(\"kaoru's chapter \",               'Average Potion Maker Goddess',                                     False),\n\t\t\t(\"kaoru chapter \",                 'Average Potion Maker Goddess',                                     False),\n\t\t\t(\"kaoru chaper \",                  'Average Potion Maker Goddess',                                     False),\n\t\t\t(\"mitsuha \",                       'Saving 80,000 Gold in an Another World for Retirement',            False),\n\t\t\t(\"taru chapter \",                'Even I have become a beautiful girl, but I was just spending my time playing as a Net-Game addict',            False),\n\t\t]\n\n\tfor titlefrag, series, require_chp in chp_prefixes:\n\t\tif ltitle.startswith(titlefrag) and (not require_chp or 'chapter' in ltitle.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix)\n\n\turlfrag = [\n\t\t('/potion-maker-chapter-',                  'Average Potion Maker Goddess',     'translated'),\n\t\t('/average-potion-maker-goddess-chapter-',  'Average Potion Maker Goddess',     'translated'),\n\t\t('/potion-maker-goddess-average-chapter-',  'Average Potion Maker Goddess',     'translated'),\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\t\n\treturn False",
  "2018-12-31T03:48:11.600530"
 ],
 "Estimated Time of Arrival": [
  "\ndef extractThesolmannBlogspotCom(item):\n\t'''\n\tParser for 'thesolmann.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:15.112452"
 ],
 "Eternal Dreamland Translation": [
  "def extractEternalDreamlandTranslation(item):\n\t\"\"\"\n\tEternal Dreamland Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Amorous Slave Girl' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Amorous Slave Girl', vol, chp, frag=frag, postfix=postfix)\n\tif 'Dragon Blood Warrior' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Blood Warrior', vol, chp, frag=frag, postfix=postfix)\n\tif 'Love Affair With Sister-In-Law' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Love Affair With Sister-In-Law', vol, chp, frag=frag, postfix=postfix)\n\tif 'Peerless Demonic Lord' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Peerless Demonic Lord', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Eternal Goddess Aria": [
  "def extractEternarianovelsCom(item):\n\t'''\n\tParser for 'eternarianovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Other World\\'s Monster Breeder',       'Other World\\'s Monster Breeder',                      'translated'),\n\t\t('pokegod',                              'Other World\\'s Monster Breeder',                      'translated'),\n\t\t('Le Festin de Vampire',                 'Le Festin de Vampire',                                'translated'),\n\t\t('I\\'m OP, but I Began an Inn',          'Cheat Dakedo Yadoya Hajimemashita.',                  'translated'),\n\t\t('PRC',                                  'PRC',                                                 'translated'),\n\t\t('Loiterous',                            'Loiterous',                                           'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-02T05:11:28.439070"
 ],
 "Eternal Kifune's Translations": [
  "def extractEternalkifuneWordpressCom(item):\n\t'''\n\tParser for 'eternalkifune.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Hiota no Kanojo',  'Hiota no Kanojo ga Ore no Motteru Eroge ni Kyoumi Shinshin Nanda ga\u2026\u2026',      'translated'),\n\t\t('Hiota V',          'Hiota no Kanojo ga Ore no Motteru Eroge ni Kyoumi Shinshin Nanda ga\u2026\u2026',      'translated'),\n\t\t('Izure Shinwa',     'Izure Shinwa no Ragnarok',                                                   'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T05:28:34.955474"
 ],
 "Ethereal Novels": [
  "def extractEtherealNovels(item):\n\t'''\n\tParser for 'Ethereal Novels'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = {\n\n\t\t'Miracle Doctor, Wild Empress: Genius Summoner'                                  : 'Miracle Doctor, Wild Empress: Genius Summoner',\n\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\n\treturn False",
  "2017-03-25T09:25:02.084355"
 ],
 "Etheria Translations": [
  "def extractEtheriaTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Eugene Rain": [
  "def extractEugeneRain(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Eugene Woodbury": [
  "def extractEugeneWoodbury(item):\n\t\"\"\"\n\tParser for 'Eugene Woodbury'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Eunieberry": [
  "\ndef extractUfufuahaharoadtobecominganeetWordpressCom(item):\n\t'''\n\tParser for 'ufufuahaharoadtobecominganeet.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:40:45.782560"
 ],
 "Euricette": [
  "def extractEuricetteWordpressCom(item):\n\t'''\n\tParser for 'euricette.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Greatest Alchemist',            'Someday Will I Be The Greatest Alchemist?',                                                                                                                                           'translated'),\n\t\t('The Elf is a Freeloader',       'The Elf is a Freeloader',                                                                                                                                                             'translated'),\n\t\t('Stepmother',                    'I Obtained a Stepmother. I Obtained a Little Brother. It Appears That Little Brother Is Not Father\\'s Child, but a Scum King\\'s Child, However, Don\\'t Mind It Please ( \u00b4_\u309d`)',      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-30T09:45:38.876258"
 ],
 "Eve's Translations": [
  "def extractEvestranslationsWordpressCom(item):\n\t'''\n\tParser for 'evestranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('SML',               'It\\'s Actually Not Easy Wanting to be a Supporting Male Lead',                      'translated'),\n\t\t('IANEWtbaSML',       'It\\'s Actually Not Easy Wanting to be a Supporting Male Lead',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-24T08:49:41.587725"
 ],
 "EvelanTranslations": [
  "def extractEvelantranslationsWordpressCom(item):\n\t'''\n\tParser for 'evelantranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('God of Thunder',       'God of Thunder',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-07T09:53:06.144777"
 ],
 "Evening Boat Translations": [
  "def extractEveningBoatTranslations(item):\n\t\"\"\"\n\t'Evening Boat Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ever Night Blog": [
  "def extractEverNightBlog(item):\n\t\"\"\"\n\tParser for 'Ever Night Blog'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Every Day, Every Night (Translations)": [
  "def extractMainichimaibanWordpressCom(item):\n\t'''\n\tParser for 'mainichimaiban.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('vfsca',       'The Villain\u2019s Face-Slapping Counterattack',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-14T00:10:08.085362"
 ],
 "Everyday Average Cat": [
  "\ndef extractRaisingmytailBlogspotCom(item):\n\t'''\n\tParser for 'raisingmytail.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-04T03:33:09.966926"
 ],
 "Evida's Indo Romance": [
  "def extractEvidasIndoRomance(item):\n\t\"\"\"\n\t# \"Evida's Indo Romance\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Evilarion": [
  "def extractEvilarionWordpressCom(item):\n\t'''\n\tParser for 'evilarion.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Are my sister\\'s possessive?', 'Are my sister\\'s possessive?',                'oel'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:36:32.166433"
 ],
 "Evilations": [
  "def extractEvilationsCom(item):\n\t'''\n\tParser for 'evilations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TQBCT',                                          'Top Quality Beauty Cultivation Technique',                      'translated'),\n\t\t('Top Quality Beauty Cultivation Technique',       'Top Quality Beauty Cultivation Technique',                      'translated'),\n\t\t('OA',                                             'Overgod Ascension',                                             'translated'),\n\t\t('Overgod Ascension',                              'Overgod Ascension',                                             'translated'),\n\t\t('MCIA',                                           'My Consort Is Alpha',                                           'translated'),\n\t\t('My Consort Is Alpha',                            'My Consort Is Alpha',                                           'translated'),\n\t\t('VPAATP',                                         'Very Pure and Ambiguous: The Prequel',                          'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-11T21:54:42.157043"
 ],
 "Evillious Translation": [
  "\ndef extractDoeClotureofyellowTumblrCom(item):\n\t'''\n\tParser for 'doe-clotureofyellow.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-22T08:53:36.359236"
 ],
 "ExMachina.Asia": [
  "def extractExMachinaAsia(item):\n\t\"\"\"\n\tExMachina.Asia\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Ultimate Assassin System' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ultimate Assassin System', vol, chp, frag=frag, postfix=postfix)\n\tif \"We live in dragon's peak\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"We live in dragon's peak\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-03-10T10:21:00.498389"
 ],
 "Exiled Rebels Scanlations": [
  "def extractExiledrebelsscanlationsCom(item):\n\t'''\n\tParser for 'exiledrebelsscanlations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\n\ttagmap = [\n\t\t(\"President isn\u2019t \u2018Mary Sue\u2019\",                          \"President isn\u2019t 'Mary Sue'\",                               'translated'),\n\t\t('I am a Chef in the Modern Era',                       'I am a Chef in the Modern Era',                            'translated'),\n\t\t('If Only Time Stopped at the Moment We First Met',     'If Only Time Stopped at the Moment We First Met',          'translated'),\n\t\t('My Wife Always Thought I Did Not Love Him (Rebirth)', 'My Wife Always Thought I Did Not Love Him (Rebirth)',      'translated'),\n\t\t('The Palaces of the Twelve Sacred Beasts',             'The Palaces of the Twelve Sacred Beasts',                  'translated'),\n\t\t('Gaze at the Scenes of Debauchery',                    'Gaze at the Scenes of Debauchery',                         'translated'),\n\t\t('Spring Trees and Sunset Clouds',                      'Spring Trees and Sunset Clouds',                           'translated'),\n\t\t('Grandmaster of Demonic Cultivation',                  'Grandmaster of Demonic Cultivation',                       'translated'),\n\t\t('LMW Chapters',                                        'The Legendary Master\\'s Wife',                             'translated'),\n\t\t('The Legendary Master\\'s Wife',                        'The Legendary Master\\'s Wife',                             'translated'),\n\t\t('Sickly Tyrannical',                                   'Sickly Tyrannical',                                        'translated'),\n\t\t('A Heart of a Smith',                                  'A Heart of a Smith',                                       'translated'),\n\t\t('Mr. Fashionable',                                     'Mr. Fashionable',                                          'translated'),\n\t\t('Spirit Hotel',                                        'Spirit Hotel',                                             'translated'),\n\t\t('Never, My Alpha',                                     'Never, My Alpha',                                          'oel'), \n\t\t('Fractured Moonlight',                                 'Fractured Moonlight',                                      'oel'), \n\t\t('Inked',                                               'Inked',                                                    'oel'), \n\t\t('Only Mine Chapters',                                  'Only Mine',                                                'oel'), \n\t\t('OM Chapters',                                         'Only Mine',                                                'oel'), \n\t\t('Secrets Within the Resounding Sound',                 'Secrets Within the Resounding Sound',                      'oel'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-06-07T05:55:35.655302"
 ],
 "Exo/Asunder": [
  "\ndef extractExoasunderWordpressCom(item):\n\t'''\n\tParser for 'exoasunder.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:31.079629"
 ],
 "ExpNull": [
  "def extractExpNull(item):\n\t\"\"\"\n\tExpNull\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Experimental Translations": [
  "def extractExperimentaltranslationsWordpressCom(item):\n\t'''\n\tParser for 'experimentaltranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Harrasing Thief Girl',       'Harrasing Thief Girl',                      'translated'),\n\t\t('Armored Girl Monette',       'Armored Girl Monette',                      'translated'),\n\t\t('Lucy Blanchett Remembered',  'Lucy Blanchett Remembered',                 'translated'),\n\t\t('Slow Prison Life',           'Slow Prison Life',                          'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-16T04:15:14.449083"
 ],
 "Explore": [
  "def extractExplore(item):\n\t\"\"\"\n\tExplore\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\tchp_prefixes = [\n\t\t\t('geww ',                                                                'Ghost Emperor Wild Wife: Dandy Eldest Miss',                                         'translated'),\n\t\t\t('VGAFH',                                                                'Village girl as head of the family: picked up a general for farming',                'translated'),\n\t\t\t('The Rebirth of Deceased Consort that Astounded the World chapter ',    'The Rebirth of Deceased Consort that Astounded the World',                           'translated'),\n\t\t\t('Man Man Qing Luo chapter ',                                            'Man Man Qing Luo',                                                                   'translated'),\n\t\t\t('Hilarious Pampered Consort ',                                          'Hilarious Pampered Consort',                                                         'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\tif item['title'].lower().startswith('geww '):\n\t\treturn buildReleaseMessageWithType(item, 'Ghost Emperor Wild Wife: Dandy Eldest Miss', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2018-04-28T02:36:51.825067"
 ],
 "Extant Visions": [
  "def extractExtantVisions(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Lily Ex Machina' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Lily Ex Machina', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Seeking Elysium' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Seeking Elysium', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\t\t\n\treturn False",
  "2017-05-30T22:44:37.356733"
 ],
 "Eye of Adventure ": [
  "def extractEyeofAdventure(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "FF": [
  "def extractFf(item):\n\t\"\"\"\n\tParser for 'FF'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fable Wind": [
  "def extractFableWind(item):\n\t\"\"\"\n\tParser for 'Fable Wind'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fabled Forest": [
  "def extractFabledforestWordpressCom(item):\n\t'''\n\tParser for 'fabledforest.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('stolen love',       'Stolen Love',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T06:35:34.803870"
 ],
 "Faded Works Productions": [
  "\ndef extractFadedworksBlogspotCom(item):\n\t'''\n\tParser for 'fadedworks.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:56.677905"
 ],
 "FailTranslations": [
  "def extractFailTranslations(item):\n\t\"\"\"\n\tFailTranslations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fairly Accurate Translations": [
  "def extractFairlyAccurateTranslations(item):\n\t\"\"\"\n\tFairly Accurate Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('card disciple \u2013 chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Card Disciple', vol, chp, frag=frag, postfix=postfix)\n\tif 'Card Disciple' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Card Disciple', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fak Translations": [
  "def extractFakTranslations(item):\n\t\"\"\"\n\t# 'Fak Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Shrouding the Heavens' in item['tags'] or 'STH' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Shrouding the Heavens', vol, chp, frag=frag, postfix=postfix)\n\tif 'KGGD' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Killing Grounds of Gods and Devils', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fake Fruit Translation": [
  "def extractFakeFruitTranslation(item):\n\t\"\"\"\n\tFake Fruit Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Bringing the Supermarket to the Apocalypse' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Bringing the Supermarket to the Apocalypse', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fake USAW Translation": [
  "def extractFakeUsawTranslation(item):\n\t\"\"\"\n\tParser for 'Fake USAW Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fake typist": [
  "def extractFaketypist(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Magician wants Normality' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Madoushi wa Heibon wo Nozomu', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Falamar Translation": [
  "def extractFalamarTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Isekai ni kanaderu densetsu' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai ni kanaderu densetsu ~toki wo tomeru mono~', vol, chp, frag=frag, postfix=postfix)\n\tif 'The road to become a transition master in another world' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Road to Become a Transition Master in Another World', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Falinmer": [
  "def extractFalinmer(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tmatch = re.search('(\\\\d+)\\\\-(\\\\d+)', item['title'])\n\tif not vol and match:\n\t\tvol = match.group(1)\n\t\tchp = match.group(2)\n\tif item['title'].lower().startswith('mcm') and not 'raw' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Magi Craft Meister', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fallen God's Sanctuary": [
  "def extractFallengodssanctuaryWordpressCom(item):\n\t'''\n\tParser for 'fallengodssanctuary.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Eiyuu Seirei Musume',       'Chichi wa Eiyuu, Haha wa Seirei, Musume no Watashi wa Tenseisha.',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T05:19:12.617693"
 ],
 "Fallen To MTL": [
  "def extractFallentomtlWordpressCom(item):\n\t'''\n\tParser for 'fallentomtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Whitewashing Manual',       'Scum Mal\\'s Whitewashing Manual',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-25T07:19:29.768082"
 ],
 "Fallen Translations": [
  "def extractFallentranslationsBlogspotCom(item):\n\t'''\n\tParser for 'fallentranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('I Heard You Like Me Too (',                    'I Heard You Like Me Too',                        'translated'),\n\t\t('Being An Author Is A High Risk Occupation (',  'Being An Author Is A High Risk Occupation',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-24T11:01:01.101435"
 ],
 "False Memoir: Based on an Untrue Story": [
  "\ndef extractFalsememoirCom(item):\n\t'''\n\tParser for 'falsememoir.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T05:42:00.526715"
 ],
 "Family Fiendly": [
  "def extractFamilyfiendlyWordpressCom(item):\n\t'''\n\tParser for 'familyfiendly.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Nanashi no Satsujinki wa Isekai de Kyou mo Warau',       'Nanashi no Satsujinki wa Isekai de Kyou mo Warau',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:36:49.678679"
 ],
 "FanTranslations": [
  "\ndef extractFantranslationsblogWordpressCom(item):\n\t'''\n\tParser for 'fantranslationsblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:56:38.873564"
 ],
 "Fanatical": [
  "def extractFanatical(item):\n\t\"\"\"\n\t# Fanatical Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'C-Drama' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('One Life One Incarnation Beautiful Bones', 'One Life, One Incarnation - Beautiful Bones', 'translated'),\n\t\t('Best to Have Met You',                     'Zuimei Yujian Ni',                            'translated'),\n\t\t('Blazing Sunlight',                         'Blazing Sunlight',                            'translated'),\n\t\t('Wipe Clean After Eating',                  'Chigan Mojing',                               'translated'),\n\t\t(\"Don't be So Proud\",                        \"Don't be So Proud\",                           'translated'),\n\t\t('Together Forever',                         'Together Forever',                            'translated'),\n\t\t('Your Humble Servant is Guilty!',           'Your Humble Servant is Guilty!',              'translated'),\n\t\t('Stewed Squid with Honey',                  'Stewed Squid with Honey',                     'translated'),\n\t\t('Mo Bao Fei Bao',                           'Mo Bao Fei Bao',                              'translated'),\n\t\t('Hua Xu Yin',                               'Hua Xu Yin',                                  'translated'),\n\t\t('Turning Back Time',                        'Turning Back Time',                           'translated'),\n\t\t('He Yi Sheng Xiao Mo',                      'He Yi Sheng Xiao Mo',                         'translated'),\n\t\t('The Journey of Flower',                    'The Journey of Flower',                       'translated'),\n\t\t('You Are Still Here',                       'You Are Still Here',                          'translated'),\n\t\t('Come & Eat Shan Shan',                     'Come & Eat Shan Shan',                        'translated'),\n\t\t('Three Lives Three Worlds Pillow Book',     'Three Lives Three Worlds Pillow Book',        'translated'),\n\t\t('Heavy Sweetness Ash Like Frost',           'Heavy Sweetness Ash Like Frost',              'translated'),\n\t\t('You\\'re My Glory',                         'You\\'re My Glory',                            'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\t\t\n\t\t\n\treturn False",
  "2018-04-28T02:39:30.870977"
 ],
 "FanficTLs": [
  "\ndef extractFanfictlsWordpressCom(item):\n\t'''\n\tParser for 'fanfictls.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-08T06:02:25.626199"
 ],
 "Fantasy 44 Translations": [
  "def extractUminovelBlogspotCom(item):\n\t'''\n\tParser for 'uminovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('With contract Skill many Brides!',       'With contract Skill many Brides!',                      'translated'),\n\t\t('WCSB',                                   'With contract Skill many Brides!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-18T05:56:58.623418"
 ],
 "Fantasy Edge": [
  "\ndef extractFantasyedgenovelWordpressCom(item):\n\t'''\n\tParser for 'fantasyedgenovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:56:44.454622"
 ],
 "Fantasy Translation": [
  "def extractFantasytranslationWordpressCom(item):\n\t'''\n\tParser for 'fantasytranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('GOD LEVEL DEMON',       'God Level Demon',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T07:29:44.399500"
 ],
 "Fantasy World Online": [
  "def extractFWOCom(item):\n\t'''\n\tParser for 'f-w-o.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('A Cheeky Kendo God',       'A Cheeky Kendo God',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:17:49.662952"
 ],
 "Fantasy novels": [
  "def extractFantasyNovels(item):\n\t\"\"\"\n\tFantasy Novels\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fantasy-Books": [
  "def extractFantasyBooksLive(item):\n\t\"\"\"\n\tfantasy-books.live\n\t\"\"\"\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'short story' in item['tags']:\n\t\treturn None\n\t\n\t# This series is unparsable, because it has no sane chapter numbering.\n\tif '69526' in item['tags']:\n\t\treturn None\n\t\n\t\n\n\ttagmap = [\n\n\t\t   \n\t\t('Champion is Playing',                                                     'Champion is Playing',                                                           'translated'),\n\t\t('A Monster Who Levels Up',                                                 'A Monster Who Levels Up',                                                       'translated'),\n\t\t('Beloved Empress',                                                         'Beloved Empress',                                                               'translated'),\n\t\t('Black Haired King',                                                       'Black Haired King',                                                             'translated'),\n\t\t('Castle of Black Iron',                                                    'Castle of Black Iron',                                                          'translated'),\n\t\t('Common Sense of a Duke\\'s Daughter',                                      'Common Sense of a Duke\\'s Daughter',                                            'translated'),\n\t\t('Emperor of the North',                                                    'Emperor of the North',                                                          'translated'),\n\t\t('Eternal Reverence',                                                       'Eternal Reverence',                                                             'translated'),\n\t\t('Girl, I\\'ll Teach You Cultivation',                                       'Girl, I\\'ll Teach You Cultivation',                                             'translated'),\n\t\t('Godfather',                                                               'Godfather',                                                                     'translated'),\n\t\t('Godly Student',                                                           'Godly Student',                                                                 'translated'),\n\t\t('Grave Robber',                                                            'Grave Robber',                                                                  'translated'),\n\t\t('Great Han\u2019s Female General Wei Qiqi',                                     'Great Han\\'s Female General Wei Qiqi',                                          'translated'),\n\t\t('Hello, Heir!',                                                            'Hello, Heir!',                                                                  'translated'),\n\t\t('Hello, Wife!',                                                            'Hello, Wife!',                                                                  'translated'),\n\t\t('Heroes of the Past',                                                      'Heroes of the Past',                                                            'translated'),\n\t\t('I Was Caught up in a Hero Summoning, but That World Is at Peace',         'I Was Caught up in a Hero Summoning, but That World Is at Peace',               'translated'),\n\t\t('Idle Wife, Evil Husband',                                                 'Idle Wife, Evil Husband',                                                       'translated'),\n\t\t('Immortal Pilgrimage',                                                     'Immortal Pilgrimage',                                                           'translated'),\n\t\t('Invincible Level Up',                                                     'Invincible Level Up',                                                           'translated'),\n\t\t('Kusuriya no Hitorigoto',                                                  'Kusuriya no Hitorigoto',                                                        'translated'),\n\t\t('Let Me Tease You',                                                        'Let Me Tease You',                                                              'translated'),\n\t\t('Level 1 Hero Slave',                                                      'Level 1 Hero Slave',                                                            'translated'),\n\t\t('Girl, I\u2019ll Teach You Cultivation',                                        'Girl, I\\'ll Teach You Cultivation',                                             'translated'),\n\t\t('Lone Harem Meister',                                                      'Lone Harem Meister',                                                            'translated'),\n\t\t('Marquis of Grand Xia',                                                    'Marquis of Grand Xia',                                                          'translated'),\n\t\t('Midnight Offering',                                                       'Midnight Offering',                                                             'translated'),\n\t\t('Minister Family\\'s Black Belly Woman',                                    'Minister Family\\'s Black Belly Woman',                                          'translated'),\n\t\t('My Entire Class Was Summoned to Another World Except for Me',             'My Entire Class Was Summoned to Another World Except for Me',                   'translated'),\n\t\t('Mystic Nan',                                                              'Mystic Nan',                                                                    'translated'),\n\t\t('Never Marry a Man With Two Tintins',                                      'Never Marry a Man With Two Tintins',                                            'translated'),\n\t\t('Official Savior',                                                         'Official Savior',                                                               'translated'),\n\t\t('On the Way Home I Got a Bride and Twin Daughters Who Were Dragons',       'On the Way Home I Got a Bride and Twin Daughters, Who Were Dragons',            'translated'),\n\t\t('On the Way Home I Got a Bride and Twin Daughters, Who Were Dragons',      'On the Way Home I Got a Bride and Twin Daughters, Who Were Dragons',            'translated'),\n\t\t('One Man\u2019s Journey',                                                       'One Man\\'s Journey',                                                            'translated'),\n\t\t('Ore no Isekai Shimai ga Jichou Shinai!',                                  'Ore no Isekai Shimai ga Jichou Shinai!',                                        'translated'),\n\t\t('Primordial Blood Throne',                                                 'Primordial Blood Throne',                                                       'translated'),\n\t\t('pygmalion',                                                               'Pygmalion Is Planting Seeds',                                                   'translated'),\n\t\t('Rebirth of an Abandoned Woman',                                           'Rebirth of an Abandoned Woman',                                                 'translated'),\n\t\t('Refusing To Serve Me? Then Off With Your Head!',                          'Refusing To Serve Me? Then Off With Your Head!',                                'translated'),\n\t\t('Refusing to Serve Me? Then Off With Your Head',                           'Refusing To Serve Me? Then Off With Your Head!',                                'translated'),\n\t\t('Revolution of the 8th Class Mage',                                        'Revolution of the 8th Class Mage',                                              'translated'),\n\t\t('She Died',                                                                'She Died',                                                                      'translated'),\n\t\t('Skirt-Chasing Young Monarch',                                             'Skirt-Chasing Young Monarch',                                                   'translated'),\n\t\t('Skirt-Chasing Young Monarch: City Lady-Killer',                           'Skirt-Chasing Young Monarch: City Lady-Killer',                                 'translated'),\n\t\t('Spring and Autumn\\'s Dream',                                              'Spring and Autumn\\'s Dream',                                                    'translated'),\n\t\t('Super Driver',                                                            'Super Driver',                                                                  'translated'),\n\t\t('Super Evolution',                                                         'Super Evolution',                                                               'translated'),\n\t\t('The Devil\u2019s Evolution Catalog',                                           'The Devil\u2019s Evolution Catalog',                                                 'translated'),\n\t\t('The General\u2019s Little Peasant Wife',                                       'The General\u2019s Little Peasant Wife',                                             'translated'),\n\t\t('The Harem Was a Forced Goal',                                             'The Harem Was a Forced Goal',                                                   'translated'),\n\t\t('The Last Surviving Alchemist',                                            'The Last Surviving Alchemist',                                                  'translated'),\n\t\t('The Military Female Soldier With Unwavering Stubbornness',                'The Military Female Soldier With Unwavering Stubbornness!',                     'translated'),\n\t\t('The Military Female Soldier With Unwavering Stubbornness',                'The Military Female Soldier With Unwavering Stubbornness!',                     'translated'),\n\t\t('The Returner',                                                            'The Returner',                                                                  'translated'),\n\t\t('The Royal Princess Fox',                                                  'The Royal Princess Fox',                                                        'translated'),\n\t\t('The Second Coming of Avarice',                                            'The Second Coming of Avarice',                                                  'translated'),\n\t\t('The Strange Adventure of a Broke Mercenary',                              'The Strange Adventure of a Broke Mercenary',                                    'translated'),\n\t\t('The Strongest Wingless Gargoyle',                                         'The Strongest Wingless Gargoyle',                                               'translated'),\n\t\t('The Two-Faced Venerate Emperor Give Me A Hug',                            'The Two-Faced Venerate Emperor, Give Me A Hug',                                 'translated'),\n\t\t('The Two-Faced Venerate Emperor',                                          'The Two-Faced Venerate Emperor, Give Me A Hug',                                 'translated'),\n\t\t('The Two-Faced Venerate Emperor, Give Me A Hug',                           'The Two-Faced Venerate Emperor, Give Me A Hug',                                 'translated'),\n\t\t('The Undying Drama',                                                       'The Undying Drama',                                                             'translated'),\n\t\t('The Urban Successor of God of Gluttony',                                  'The Urban Successor of God of Gluttony',                                        'translated'),\n\t\t('The Villains Need to Save the World?',                                    'The Villains Need to Save the World?',                                          'translated'),\n\t\t('The Woman Who Accepted Her Fate',                                         'The Woman Who Accepted Her Fate',                                               'translated'),\n\t\t('The Yu Brother\\'s Case Book',                                             'The Yu Brother\\'s Case Book',                                                   'translated'),\n\t\t('Transcending Evolution',                                                  'Transcending Evolution',                                                        'translated'),\n\t\t('Virtual Evolution',                                                       'Virtual Evolution',                                                             'translated'),\n\t\t('Age Of Worldwide Monsters',                                               'Age Of Worldwide Monsters',                                                     'translated'),\n\t\t('I Have A Manor In The Post-Apocalyptic Era',                              'I Have A Manor In The Post-Apocalyptic Era',                                    'translated'),\n\t\t('Watchmen',                                                                'Watchmen',                                                                      'translated'),\n\t\t('Womanizing Mage',                                                         'Womanizing Mage',                                                               'translated'),\n\t\t('Xian Wang Dotes On Wife',                                                 'Xian Wang Dotes On Wife',                                                       'translated'),\n\t\t('Yandere Megami No Hakoniwa',                                              'Yandere Megami No Hakoniwa',                                                    'translated'),\n\t\t('Princess and the General',                                                'Princess and the General',                                                      'translated'),\n\t\t('Yong Heng Zhi Zun',                                                       'Yong Heng Zhi Zun',                                                             'translated'),\n\t\t('Devouring Heaven Sword God',                                              'Devouring Heaven Sword God',                                                    'translated'),\n\t\t('The Magic Academy\u2019s Romantic Circumstances',                              'The Magic Academy\u2019s Romantic Circumstances',                                    'translated'),\n\n\n\t\t('Aeterna Saga',                                                            'Aeterna Saga',                                                                  'oel'),\n\t\t('Antagonist Rewind',                                                       'Antagonist Rewind',                                                             'oel'),\n\t\t('Black Titan',                                                             'Black Titan',                                                                   'oel'),\n\t\t('Black Watch Asylum',                                                      'Black Watch Asylum',                                                            'oel'),\n\t\t('David the Demon',                                                         'David the Demon',                                                               'oel'),\n\t\t('Divine Cruelty',                                                          'Divine Cruelty',                                                                'oel'),\n\t\t('Ethereal Heavens',                                                        'Ethereal Heavens',                                                              'oel'),\n\t\t('Fighting God',                                                            'Fighting God',                                                                  'oel'),\n\t\t('Girl, I\\'ll Teach You Cultivation',                                       'Girl, I\\'ll Teach You Cultivation',                                             'oel'),\n\t\t('God\\'s Island',                                                           'God\\'s Island',                                                                 'oel'),\n\t\t('Heathens',                                                                'Heathens',                                                                      'oel'),\n\t\t('Heavenward on Golden Wings Book 2',                                       'Heavenward on Golden Wings',                                                    'oel'),\n\t\t('Heavenward On Golden Wings',                                              'Heavenward on Golden Wings',                                                    'oel'),\n\t\t('Hidden Forge: Lucem Ac Tenebras',                                         'Hidden Forge: Lucem Ac Tenebras',                                               'oel'),\n\t\t('I Didn\\'t Even Want to Live, But God Forced Me to Reincarnate',           'I Didn\\'t Even Want to Live, But God Forced Me to Reincarnate',                 'oel'),\n\t\t('Indomitable Oathbreaker',                                                 'Indomitable Oathbreaker',                                                       'oel'),\n\t\t('KARMA STREAMER',                                                          'Karma Streamer',                                                                'oel'),\n\t\t('Kingdom of Lost Souls',                                                   'Kingdom of Lost Souls',                                                         'oel'),\n\t\t('Level 1 Hero Slave',                                                      'Level 1 Hero Slave',                                                            'oel'),\n\t\t('Life and Times of Mitch and Akki',                                        'Life and Times of Mitch and Akki',                                              'oel'),\n\t\t('Lord of Darkness',                                                        'Lord of Darkness',                                                              'oel'),\n\t\t('Magical Tournament',                                                      'Magical Tournament',                                                            'oel'),\n\t\t('Number One Commander',                                                    'Number One Commander',                                                          'oel'),\n\t\t('One Man\\'s Journey',                                                      'One Man\\'s Journey',                                                            'oel'),\n\t\t('Orphans of a Dead Nation',                                                'Orphans of a Dead Nation',                                                      'oel'),\n\t\t('Path of Blood',                                                           'Path of Blood',                                                                 'oel'),\n\t\t('Project Cypher',                                                          'Project Cypher',                                                                'oel'),\n\t\t('Red Souls',                                                               'Red Souls',                                                                     'oel'),\n\t\t('Regarding The Life of A Certain Fallen Noble',                            'Regarding The Life of A Certain Fallen Noble',                                  'oel'),\n\t\t('Solitary Sword Sovereign',                                                'Solitary Sword Sovereign',                                                      'oel'),\n\t\t('Son of the Night',                                                        'Son of the Night',                                                              'oel'),\n\t\t('The Abandoned',                                                           'The Abandoned',                                                                 'oel'),\n\t\t('The Adventures of the Mask Maker',                                        'The Adventures of the Mask Maker',                                              'oel'),\n\t\t('The Average Man',                                                         'The Average Man',                                                               'oel'),\n\t\t('The Clockwork Raven',                                                     'The Clockwork Raven',                                                           'oel'),\n\t\t('The Golden Children',                                                     'The Golden Children',                                                           'oel'),\n\t\t('The Lost Crest',                                                          'The Lost Crest',                                                                'oel'),\n\t\t('Three Lifetimes',                                                         'Three Lifetimes',                                                               'oel'),\n\t\t('threelifetimes',                                                          'Three Lifetimes',                                                               'oel'),\n\t\t('Walking With Giants',                                                     'Walking With Giants',                                                           'oel'),\n\n\n\n\t\t# So CR did a major rewrite for their site. For no good reason, and it fucked up the tags. \n\t\t# Siiiiigh.\n\t\t('102',                                                                     'Beloved Empress',                                                               'translated'), \n\t\t('110',                                                                     'Heroes of the Past',                                                            'translated'), \n\t\t('111',                                                                     'Yandere Megami No Hakoniwa',                                                    'translated'), \n\t\t('112',                                                                     'The Two-Faced Venerate Emperor, Give Me A Hug',                                 'translated'), \n\t\t('117',                                                                     'The Military Female Soldier With Unwavering Stubbornness',                      'translated'), \n\t\t('124',                                                                     'One Man\\'s Journey',                                                            'translated'), \n\t\t('127',                                                                     'Womanizing Mage',                                                               'translated'), \n\t\t('128',                                                                     'The Villains Need to Save the World?',                                          'translated'), \n\t\t('130',                                                                     'Hello, Wife!',                                                                  'translated'), \n\t\t('132',                                                                     'Hello, Heir!',                                                                  'translated'), \n\t\t('133',                                                                     'Godly Student',                                                                 'translated'), \n\t\t('136',                                                                     'Eternal Reverence',                                                             'translated'), \n\t\t('20979',                                                                   'Never Marry a Man with Two Tintins',                                            'translated'), \n\t\t('24542',                                                                   'Son of the Night',                                                              'oel'), \n\t\t('27144',                                                                   'Number One Commander',                                                          'oel'), \n\t\t('28844',                                                                   'I Didn\\'t Even Want to Live, But God Forced Me to Reincarnate!',                'oel'), \n\t\t('32',                                                                      'Karma Streamer',                                                                'oel'), \n\t\t('35542',                                                                   'The Second Coming of Avarice',                                                  'translated'), \n\t\t('43830',                                                                   'Super Driver',                                                                  'translated'), \n\t\t('45915',                                                                   'Kingdom of Lost Souls',                                                         'oel'), \n\t\t('67',                                                                      'Ore no Isekai Shimai ga Jichou Shinai!',                                        'translated'), \n\t\t('71',                                                                      'Invincible Level Up',                                                           'translated'), \n\t\t('73',                                                                      'Rebirth of an Abandoned Woman',                                                 'translated'), \n\t\t('78',                                                                      'The General\\'s Little Peasant Wife',                                            'translated'), \n\t\t('80',                                                                      'Kusuriya no Hitorigoto',                                                        'translated'), \n\t\t('83',                                                                      'Great Han\\'s Female General Wei Qiqi',                                          'translated'), \n\t\t('91',                                                                      'Skirt-Chasing Young Monarch: City Lady-Killer',                                 'translated'), \n\t\t('76459',                                                                   'Invincible Exchange System',                                                    'translated'), \n\t\t('70560',                                                                    'Princess and the General',                                                     'translated'), \n\t\t('9311',                                                                    'The Returner',                                                                  'translated'), \n\t\t('1274',                                                                    'The Devil\u2019s Evolution Catalog',                                                 'translated'), \n\t\t('140',                                                                     'The Last Surviving Alchemist',                                                  'translated'), \n\t\t('116',                                                                     'Xian Wang Dotes On Wife',                                                       'translated'), \n\t\t('60831',                                                                   'Devouring Heaven Sword God',                                                    'translated'), \n\t\t('80744',                                                                   'Song of Adolescence',                                                           'translated'), \n\t\t('The Dragon Within',                                                       'The Dragon Within',                                                             'oel'),\n\t\t('42254',                                                                   'The Dragon Within',                                                             'oel'),\n\t\t('56862',                                                                   'Magikind',                                                                      'oel'),\n\t\t('Earth\u2019s Core',                                                            'Earth\\'s Core',                                                                 'oel'),\n\t\t('A Tail\u2019s Misfortune',                                                     'A Tail\\'s Misfortune',                                                          'oel'),\n\t\t('Impulsive: Descendants of the Gifted',                                    'Impulsive: Descendants of the Gifted',                                          'oel'),\n\t\t('Sky Fall Legend',                                                         'Sky Fall Legend',                                                               'oel'),\n\t\t('Nothing But Bones',                                                       'Nothing But Bones',                                                             'oel'),\n\t\t('Substitute Hero',                                                         'Substitute Hero',                                                               'oel'),\n\t\t('71838',                                                                   'Turn-Based Engineer',                                                           'oel'),\n\t\t('78094',                                                                   'Chrysalis',                                                                     'oel'),\n\t\t('62895',                                                                   'Conquer',                                                                       'oel'),\n\t\t('77749',                                                                   'A Collage of Stories',                                                          'oel'),\n\t\t('77299',                                                                   'Reborn: Apocalypse',                                                            'oel'),\n\t\t('61891',                                                                   'The Wrold of Algratha',                                                         'oel'),\n\t\t('76674',                                                                   'Tales of the ESDF',                                                             'oel'),\n\t\t('65170',                                                                   'Re: Sword Emperor',                                                             'oel'),\n\t\t('58640',                                                                   'Impulsive: Descendants of the Gifted',                                          'oel'),\n\t\t('66420',                                                                   'The Predator',                                                                  'oel'),\n\t\t('Magikind',                                                                'Magikind',                                                                      'oel'),\n\t\t('77387',                                                                   'Endless Path : Infinite Cosmos',                                                'oel'),\n\t\t('66260',                                                                   'Death\\'s Embrace',                                                              'oel'),\n\t\t('62818',                                                                   'A Tail\u2019s Misfortune',                                                           'oel'),\n\t\t('I Didn\u2019t Even Want to Live, But God Forced Me to Reincarnate!',           'I Didn\u2019t Even Want to Live, But God Forced Me to Reincarnate!',                 'oel'),\n\t\t\n\n\t\t('112',                        'The Two-Faced Venerate Emperor, Give Me A Hug',                                   'translated'),    \n\t\t('134',                        'Hidden Forge: Lucem Ac Tenebras',                                                 'oel'),    \n\t\t('38302',                      'Indomitable Oathbreaker',                                                         'oel'),    \n\t\t('56305',                      'Earth\u2019s Core',                                                                    'oel'),    \n\t\t('56417',                      'Dragon\u2019s Heart. Stone Will.',                                                     'oel'),    \n\t\t('A.I.',                       'A.I.',                                                                            'oel'),    \n\t\t('58482',                      'A.I.',                                                                            'oel'),    \n\t\t('60455',                      'Sky Fall Legend',                                                                 'oel'),    \n\t\t('Sovereign of the Gates',     'Sovereign of the Gates',                                                          'oel'),    \n\t\t('61242',                      'Sovereign of the Gates',                                                          'oel'),    \n\t\t('70384',                      'I Have A Manor In The Post-Apocalyptic Era',                                      'translated'),    \n\t\t('73971',                      'Champion is Playing',                                                             'translated'),    \n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\tsnames = [\n\t\t\t'Aeterna Saga', \n\t\t\t'Antagonist Rewind',\n\t\t\t'Black Watch Asylum', \n\t\t\t'Castle of Black Iron', \n\t\t\t'Fighting God', \n\t\t\t'Grave Robber',\n\t\t\t'Heavenward on Golden Wings Book 2', \n\t\t\t'Heavenward On Golden Wings', \n\t\t\t'Invincible Level Up', \n\t\t\t'Let Me Tease You',\n\t\t\t'Life and Times of Mitch and Akki', \"God's Island\", 'Black Titan', \n\t\t\t'Lone Harem Meister',\n\t\t\t'Lone Harem Meister',\n\t\t\t'Lone Harem Meister', \n\t\t\t'Magical Tournament', \n\t\t\t'My Entire Class Was Summoned to Another World Except for Me',\n\t\t\t'Mystic Nan',\n\t\t\t'Mystical Nan', \n\t\t\t'Official Savior',\n\t\t\t'Orphans of a Dead Nation', \n\t\t\t'Path of Blood',\n\t\t\t'Primordial Blood Throne',\n\t\t\t'Rebirth of an Abandoned Woman', \n\t\t\t'Regarding The Life of A Certain Fallen Noble',\n\t\t\t'She Died',\n\t\t\t'Skirt-Chasing Young Monarch',\n\t\t\t'Super Insight System',\n\t\t\t'The Abandoned', \n\t\t\t'The Adventures of the Mask Maker',\n\t\t\t'The Clockwork Raven', \n\t\t\t'The Harem Was a Forced Goal',\n\t\t\t'The Royal Princess Fox',\n\t\t\t'The Strongest Wingless Gargoyle',\n\t\t\t'The Woman Who Accepted Her Fate',\n\t\t\t'Three Lifetimes', \n\t\t\t'Transcending Evolution', \n\t\t\t'Villainess', \n\t\t\t'Virtual Evolution', \n\t\t\t'Walking With Giants', \n\t    ]\n\t    \n\ttlut = {tmp.lower(): tmp for tmp in snames}\n\t\n\ttlut['midnight offering'] = 'Midnight Offering: Hades\\'s Little Pet'\n\ttlut['pygmalion'] = 'Pygmalion Is Planting Seeds'\n\ttlut['hogw chapter'] = 'Heavenward On Golden Wings'\n\ttlut['invincible leveling up'] = 'Level up Is Getting Me Undefeatable'\n\t\n\tltags = [tmp.lower() for tmp in item['tags']]\n\t\n\t\n\tfor key, value in tlut.items():\n\t\tif key in ltags:\n\t\t\tif '/translations/' in item['linkUrl']:\n\t\t\t\n\t\t\t\ttl_type = 'translated'\n\t\t\telif '/originals/' in item['linkUrl']:\n\t\t\t\ttl_type = 'oel'\n\t\t\telse:\n\t\t\t\t# This /shouldn't/ get hit.\n\t\t\t\treturn False\n\t\t\treturn buildReleaseMessageWithType(item, value, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\t\t\t\n\ttitlemap = [\n\t\t('The Strongest Wingless Gargoyle',                                      'The Strongest Wingless Gargoyle',                               'translated'),\n\t\t('My Entire Class Was Summoned to Another World Except for Me',          'My Entire Class Was Summoned to Another World Except for Me',   'translated'),\n\t\t('The Harem Was a Forced Goal',                                          'The Harem Was a Forced Goal',                                   'translated'),\n\t\t('HoGW Chapter',                                                         'Heavenward on Golden Wings',                                    'oel'),\n\t\t('HoGW BK II',                                                           'Heavenward on Golden Wings',                                    'oel'),\n\t\t('Invincible Level Up',                                                  'Invincible Level Up',                                           'translated'),\n\t\t('Two-Faced Venerate Emperor, Give Me A Hug: Chapter ',                  'The Two-Faced Venerate Emperor',                                'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\t\n\tif 'Dragon\u2019s Heart. Stone Will. Book I. LitRPG wuxia series' in item['tags'] and vol is None:\n\t\tvol = 1\n\t\treturn buildReleaseMessageWithType(item, 'Dragon\\'s Heart', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\t\n\treturn False",
  "2019-06-15T23:48:03.225275"
 ],
 "Fate and Affinity": [
  "def extractFateAndAffinity(item):\n\t\"\"\"\n\tParser for 'Fate and Affinity'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fate's Fool": [
  "\ndef extractJeremiahowensWordpressCom(item):\n\t'''\n\tParser for 'jeremiahowens.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:34.609945"
 ],
 "FeedProxy": [
  "def extractFeedProxy(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Comment'):\n\t\treturn None\n\t\n\tbad_tags = [\n\t\t\t'TVB',\n\t\t\t'drama thoughts',\n\t\t\t'modern drama',\n\t\t\t'RAW',\n\t\t\t'Manga',\n\t\t]\n\t\n\tif any([tmp in item['tags'] for tmp in bad_tags]):\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Princess Weiyang',                             'The Princess Wei Yang',                                                                              'translated'),\n\t\t('Ookura Teruko Detective Story Compilation',    'Ookura Teruko Detective Story Compilation',                                                          'translated'),\n\t\t('The Man Picked up by the Gods',                'Kamitachi ni Hirowareta Otoko',                                                                      'translated'),\n\t\t('Goblin Kingdom',                               'Goblin Kingdom',                                                                                     'translated'),\n\t\t('Growth Cheat',                                 \"I've Became Able to Do Anything With My Growth Cheat, but I Can't Seem to Get Out of Being Jobless\", 'translated'),\n\t\t('Invincible Saint',                             'Invincible Saint ~Salaryman, the Path I Walk to Survive in This Other World~',                       'translated'),\n\t\t('I came back but the world is still a fantasy', 'Kaettekite mo Fantasy!?',                                                                            'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('The Man Picked up by the Gods -', 'Kamitachi ni Hirowareta Otoko', 'translated'),\n\t\t('Goblin Kingdom -',                'Goblin no Oukoku',              'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\t\n\t# So. this guy has zero useful tags. LOTS of useless tags, but zero useful ones.\n\tif '/~r/Xiakeluojiao/' in item['linkUrl']:\n\t\tif any(['Book' in tag for tag in item['tags']]):\n\t\t\treturn buildReleaseMessageWithType(item, 'Zhu Xian', vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\treturn False",
  "2017-05-08T03:31:15.705171"
 ],
 "Feels Bad Translation": [
  "def extractFeelsBadTranslation(item):\n\t\"\"\"\n\t'Feels Bad Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Feels Bad Translations": [
  "def extractFeelsBadTranslations(item):\n\t\"\"\"\n\tFeels Bad Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fei Jin Chuan": [
  "def extractFeijinchuanWordpressCom(item):\n\t'''\n\tParser for 'feijinchuan.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Martial Inverse',       'Martial Inverse',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\ttitlemap = [\n\t\t('Martial Inverse \u2013 Chapter',  'Martial Inverse',      'translated'),\n\t]\n\n\tif item['tags'] == ['Uncategorized']:\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T09:06:41.991715"
 ],
 "Fickle Fortune": [
  "\ndef extractHerbadluckBlogspotCom(item):\n\t'''\n\tParser for 'herbadluck.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:20.478112"
 ],
 "Fiction at Courage, my friend": [
  "\ndef extractCourageMyFriendOrg(item):\n\t'''\n\tParser for 'courage-my-friend.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:17.343789"
 ],
 "Fiction, Ideas, and Poetry": [
  "\ndef extractFictionweeklyNet(item):\n\t'''\n\tParser for 'fictionweekly.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:26.998264"
 ],
 "Fifteen Seconds Translation": [
  "def extractFifteensecondstranslationWordpressCom(item):\n\t'''\n\tParser for 'fifteensecondstranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Knight\u2019s & Magic',            'Knight\\'s & Magic',               'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:44:01.374277"
 ],
 "Fighting Dreamers Scanlations": [
  "def extractFightingDreamersScanlations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Light Novel' in item['tags'] and 'Slayers Special' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Slayers Special', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fine By Me Translations": [
  "def extractFinebymetranslationsWordpressCom(item):\n\t'''\n\tParser for 'finebymetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Death Progress Bar',       'Death Progress Bar',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-12T11:11:02.932676"
 ],
 "Fiona of Fail": [
  "\ndef extractFionaoffailBlogspotCom(item):\n\t'''\n\tParser for 'fionaoffail.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:28.924438"
 ],
 "Fioret": [
  "def extractFioretWordpressCom(item):\n\t'''\n\tParser for 'fioret.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Kumo Desu ga, Nani ka?',       'Kumo Desu ga, Nani ka?',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-12T06:17:23.479148"
 ],
 "Fire Translations": [
  "def extractFiretranslationsWordpressCom(item):\n\t'''\n\tParser for 'firetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Konjiki no Word Master',       'Konjiki no Moji Tsukai',                      'translated'),\n\t\t('Konjiki no Moji Tsukai',       'Konjiki no Moji Tsukai',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T08:00:41.694510"
 ],
 "Firebird Fiction": [
  "def extractFirebirdFictionCom(item):\n\t'''\n\tParser for 'firebird-fiction.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\tif 'Haventon Chronicles' in item['tags'] and 'Lord of the Wolves' in item['title']:\n\t\tvol = 2\n\t\treturn buildReleaseMessageWithType(item, \"Haventon Chronicles\", vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\t\t\t\n\ttagmap = [\n\t\t('Lawgiver\\'s Blade', 'Lawgiver\\'s Blade',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\t\n\treturn False",
  "2019-06-07T06:16:58.902956"
 ],
 "Firebird's Nest": [
  "def extractFirebirdsNest(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'no-fatigue' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'No Fatigue', vol, chp, frag=frag, postfix=postfix)\n\tif 'mondaiji' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Mondaiji-tachi ga Isekai Kara Kuru Sou Desu yo?', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Firestarter": [
  "\ndef extractBlazewebserialWordpressCom(item):\n\t'''\n\tParser for 'blazewebserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:24.736662"
 ],
 "FishyTranslation": [
  "def extractWwwFishytranslationCom(item):\n\t'''\n\tParser for 'www.fishytranslation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Op Waifus',                                          'Being Able to Edit Skills in Another World, I Gained OP Waifus',                               'translated'),\n\t\t('Rebirth Junior High School',                         'Rebirth Junior High School: The Exceling Top Student Goddess',                                 'translated'),\n\t\t('How to Raise a Silver-Haired Loli',                  'How to Raise a Silver-Haired Loli',                                                            'translated'),\n\t\t('The Pitiful Me Does Not Need a Dazzling Life',       'The Pitiful Me Does Not Need a Dazzling Life',                                                 'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T06:43:52.136940"
 ],
 "Five Dollar Mail": [
  "\ndef extractFivedollarmailBlogspotCom(item):\n\t'''\n\tParser for 'fivedollarmail.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:33.637985"
 ],
 "Five Star Specialists": [
  "def extractFiveStar(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Xian Ni' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Xian Ni', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fixation": [
  "\ndef extractFixingfixationWordpressCom(item):\n\t'''\n\tParser for 'fixingfixation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:24.945951"
 ],
 "Flaming Deity": [
  "\ndef extractFlamingdeityBlogspotCom(item):\n\t'''\n\tParser for 'flamingdeity.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-09T07:25:13.312317"
 ],
 "Fleeting Phoenix Translations": [
  "def extractFleetingPhoenixTranslations(item):\n\t\"\"\"\n\tParser for 'Fleeting Phoenix Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = {\n\n\t\t'Star Martial God Technique'                       : 'Star Martial God Technique',\n\t\t'Assassin Farmer'                                  : 'Assassin Farmer',\n\t\t'Forbidden Love'                                   : 'Forbidden Love',\n\t\t'Ling Qi'                                          : 'Ling Qi',\n\t\t'Tehe\u266a Wolf'                                       : 'Tehe(*\u00b4\u2200`)\u266a I Was Picked Up By a Wolf',\n\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\t\t\t\n\treturn False",
  "2017-05-16T06:15:42.468833"
 ],
 "Flesh to Plush": [
  "\ndef extractFleshtoplushBlogspotCom(item):\n\t'''\n\tParser for 'fleshtoplush.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-30T06:22:40.423054"
 ],
 "FleurDeLys Translations": [
  "def extractFleurdelystranslationsTumblrCom(item):\n\t'''\n\tParser for 'fleurdelystranslations.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('mhneb',       'Mulan Has No Elder Brother',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-29T05:10:40.465482"
 ],
 "Flicker Hero": [
  "def extractFlickerHero(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Flower Bridge Too": [
  "def extractFlowerBridgeToo(item):\n\t\"\"\"\n\t# FlowerBridgeToo\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Flower Moon Translations": [
  "def extractFlowermoontranslationsWordpressCom(item):\n\t'''\n\tParser for 'flowermoontranslations.wordpress.com'\n\t'''\n\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\tif 'Notice' in item['tags']:\n\t\treturn None\n\tif 'schedule' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Case Files of the Genius Asshole',  'Case Files of the Genius Asshole',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-07-05T03:55:51.884692"
 ],
 "Flower Province": [
  "def extractTheflowergarden1412WordpressCom(item):\r\n\t'''\r\n\tParser for 'theflowergarden1412.wordpress.com'\r\n\t'''\r\n\r\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\r\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\r\n\t\treturn None\r\n\r\n\ttagmap = [\r\n\t\t('TRWSB Releases',                        'The Rebirth Waste Strikes Back',            'translated'),\r\n\t\t('SA Releases',                           'Superstar Aspirations',                     'translated'),\r\n\t\t('PRC',       'PRC',                      'translated'),\r\n\t\t('Loiterous', 'Loiterous',                'oel'),\r\n\t]\r\n\r\n\tfor tagname, name, tl_type in tagmap:\r\n\t\tif tagname in item['tags']:\r\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\r\n\r\n\r\n\treturn False",
  "2018-04-03T04:11:54.735471"
 ],
 "Flower Succulent": [
  "\ndef extractFlowersucculentWordpressCom(item):\n\t'''\n\tParser for 'flowersucculent.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-19T08:32:25.755030"
 ],
 "Flowing Freedom": [
  "def extractRuinohonyakuWordpressCom(item):\n\t'''\n\tParser for 'ruinohonyaku.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('kondo wa zettai ni jama shimasen!',              'I Swear I Won\\'t Bother You Again!',                      'translated'),\n\t\t('I won\\'t be a bother for sure this time!',       'I Swear I Won\\'t Bother You Again!',                      'translated'),\n\t\t('\u4eca\u5ea6\u306f\u7d76\u5bfe\u306b\u90aa\u9b54\u3057\u307e\u305b\u3093\u3063\uff01',                   'I Swear I Won\\'t Bother You Again!',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-05T08:26:53.142356"
 ],
 "Flying Saucer Translation": [
  "def extractFlyingsaucertranslatesBlogspotCom(item):\n\t'''\n\tParser for 'flyingsaucertranslates.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Secret Service Mysterious Doctor',  'Poisoning the World: The Secret Service Mysterious Doctor is a Young Beastly Wife',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T06:51:05.690906"
 ],
 "Fmgandalf Translations": [
  "def extractFmgandalfWordpressCom(item):\n\t'''\n\tParser for 'fmgandalf.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('BS ',      'Black Summoner',                              'translated'),\n\t\t\t('Mitsy',    'Makikomarete Isekai Teni suru Yatsu wa',      'translated'),\n\t\t\t('GOGMS ',   'Gun-ota ga Majou Sekai ni Tensei Shitara',    'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T02:15:06.701550"
 ],
 "For Kalimdor!": [
  "def extractForKalimdor(item):\n\t\"\"\"\n\tFor Kalimdor\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Bringing The Farm To Live In Another World'):\n\t\treturn buildReleaseMessageWithType(item, 'Bringing The Farm To Live In Another World', vol, chp, frag=frag, postfix=postfix)\n\tif 'BTFTLIAW' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Bringing The Farm To Live In Another World', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "For Riches or More": [
  "\ndef extractRichesormoreWordpressCom(item):\n\t'''\n\tParser for 'richesormore.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:25.228206"
 ],
 "Forbidentry": [
  "def extractForbidentry(item):\n\t\"\"\"\n\tParser for 'Forbidentry'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Forerunner's Odyssey": [
  "def extractWasabilinusWordpressCom(item):\n\t'''\n\tParser for 'wasabilinus.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [ \n\t\t('The Forerunner\\'s Odyssey', 'The Forerunner\\'s Odyssey',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:53:41.529925"
 ],
 "Forever Nubi": [
  "\ndef extractNubi96WordpressCom(item):\n\t'''\n\tParser for 'nubi96.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:53:25.332069"
 ],
 "Forgetful Dreamer": [
  "def extractForgetfulDreamer(item):\n\t\"\"\"\n\t# Forgetful Dreamer\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif '\u30e4\u30f3\u30c7\u30ec\u7cfb\u4e59\u5973\u30b2\u30fc\u306e\u4e16\u754c\u306b\u8ee2\u751f\u3057\u3066\u3057\u307e\u3063\u305f\u3088\u3046\u3067\u3059' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'It seems like I got reincarnated into the world of a Yandere Otome game', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Forgotten Conqueror": [
  "def extractForgottenConqueror(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif chp:\n\t\treturn buildReleaseMessageWithType(item, 'Forgotten Conqueror', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Forsaken Moonlight": [
  "def extractForsakenmoonlightWordpressCom(item):\n\t'''\n\tParser for 'forsakenmoonlight.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['tags'] == ['Uncategorized']:\n\t\tprefix = item['title'].split(\" \")[0]\n\t\ttry:\n\t\t\tint(prefix)\n\t\t\t\n\t\t\treturn buildReleaseMessageWithType(item, \"Reborn Spoiled Ming Wangfei\", vol, chp, frag=frag, postfix=postfix, tl_type=\"translated\")\n\t\t\t\n\t\texcept ValueError:\n\t\t\tpass\n\n\ttagmap = [\n\t\t('RSMW',       'Reborn Spoiled Ming Wangfei',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-02T08:12:57.992485"
 ],
 "Forthemoney Translations": [
  "def extractForthemoneyTranslations(item):\n\t\"\"\"\n\tForthemoney Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "FortunEternal": [
  "def extractWwwFortuneeternalCom(item):\n\t'''\n\tParser for 'www.fortuneeternal.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('World Game Universe',       'Dunia Game Universe',                                                                   'translated'),\n\t\t('Dunia Game Universe',       'Dunia Game Universe',                                                                   'translated'),\n\t\t('tensei jinsei',             'Cheat aru kedo mattari kurashitai\u300aTensei jinsei o tanoshimou!\u300b',                      'translated'),\n\t\t('Only Me',                   'Only Me',                                                                               'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-18T05:22:14.031191"
 ],
 "Four Slimes Translation": [
  "def extractFourslimesHomeBlog(item):\n\t'''\n\tParser for 'fourslimes.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Isekai tensei no boukensha',       'Isekai Tensei no Boukensha',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:22:47.667599"
 ],
 "Fourtrans": [
  "def extractFourtranslationsWordpressCom(item):\n\t'''\n\tParser for 'fourtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Master of Monsters \u2013 Volume ',  'Master of Monsters',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-04T05:38:30.255127"
 ],
 "Fox's coffee time": [
  "def extractFoxscoffeetimeWordpressCom(item):\n\t'''\n\tParser for 'foxscoffeetime.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Otherworld dining hall (WN)',                                  'The Other World Dining Hall (WN)',                                                                'translated'), \n\t\t('Tensei Saki ga Shoujo Manga no Shiro Buta Reijou datta',       'Tensei Saki ga Shoujo Manga no Shiro Buta Reijou datta',                                          'translated'), \n\t\t('Troubled Knight',                                              'A Knight Troubled by Duke\u2019s Daughter Who Drew Near, will Run away for the Time Being',            'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-24T08:50:26.174257"
 ],
 "Foxaholic": [
  "def extractFoxaholicWordpressCom(item):\n\t'''\n\tParser for 'foxaholic.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Law of Transmigration: The Black-Hearted God\u2019s Domineering Love',            'The Law of Transmigration: The Black-Hearted God\u2019s Domineering Love',                           'translated'),\n\t\t('Quick Transmigration\\'s Strategical Attack: 100 Ways to Get the Male God',       'Quick Transmigration\\'s Strategical Attack: 100 Ways to Get the Male God',                      'translated'),\n\t\t('Oh My General',                                                                  'Oh My General',                                                                                 'translated'),\n\t\t('Good Man Operation Guide',                                                       'Good Man Operation Guide',                                                                      'translated'),\n\t\t('Male God Shine Bright!',                                                         'Male God Shine Bright!',                                                                        'translated'),\n\t\t('The Queen\\'s Husband',                                                           'The Queen\\'s Husband',                                                                          'translated'),\n\t\t('Rebirth and Redemption',                                                         'Rebirth and Redemption',                                                                        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:22:26.680746"
 ],
 "Foxs' Wuxia": [
  "\ndef extractFoxswuxiaWordpressCom(item):\n\t'''\n\tParser for 'foxswuxia.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-06T05:49:06.257015"
 ],
 "FraiziarTL": [
  "\ndef extractFraiziartlWordpressCom(item):\n\t'''\n\tParser for 'fraiziartl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-03T01:27:33.142167"
 ],
 "Freezing Light Novels": [
  "def extractFreezingLightNovels(item):\n\t\"\"\"\n\tParser for 'Freezing Light Novels'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Friendship Is Power": [
  "def extractFriendshipIsPower(item):\n\t\"\"\"\n\t'Friendship Is Power'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Forty Millenniums of Cultivation Chapters' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Forty Millenniums of Cultivation Chapters', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fringe Manatee Translates": [
  "def extractFringemanateeBlogspotCom(item):\n\t'''\n\tParser for 'fringemanatee.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('HFR',       'Hunter of the Forbidden Region',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-16T20:34:53.221387"
 ],
 "Fringe Octopus Translates": [
  "def extractWwwFringeoctopusCom(item):\n\t'''\n\tParser for 'www.fringeoctopus.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TWQQF',                                            'Transmigration with QQ Farm',                                                'translated'),\n\t\t('Black Belly Wife',                                 'Black Belly Wife',                                                           'translated'),\n\t\t('BBW',                                              'Black Belly Wife',                                                           'translated'),\n\t\t('Transmigrating with a Cleaver',                    'Transmigrating with a Cleaver',                                              'translated'),\n\t\t('PRC',                                              'PRC',                                                                        'translated'),\n\t\t('Loiterous',                                        'Loiterous',                                                                  'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:02:53.971551"
 ],
 "Fringe Octopus's Misc Translation": [
  "def extractFotranslatesBlogspotCom(item):\n\t'''\n\tParser for 'fotranslates.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Apartment for Rent',       'Apartment for Rent',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T06:52:46.375346"
 ],
 "Froglation": [
  "def extractFroglationXyz(item):\n\t'''\n\tParser for 'froglation.xyz'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tbad = [\n\t\t\t'Fukusyu wo Chikatta Shironeko wa Ryuuou no Hiza no ue de Damin wo Musaboru (Manga)',\n\t\t]\n\t\n\tif any([tmp in item['tags'] for tmp in bad]):\n\t\treturn None\n\n\ttagmap = [\n\t\t('Fukusyu wo Chikatta Shironeko wa Ryuuou no Hiza no ue de Damin wo Musaboru',            'Fukusyu wo Chikatta Shironeko wa Ryuuou no Hiza no ue de Damin wo Musaboru',                           'translated'),\n\t\t('Fukusyu wo Chikatta Shironeko wa Ryuuou no Hiza no ue de Damin wo Musaboru (WN)',       'Fukusyu wo Chikatta Shironeko wa Ryuuou no Hiza no ue de Damin wo Musaboru (WN)',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-19T07:39:12.402185"
 ],
 "From Winter's Ashes": [
  "\ndef extractFromwintersashesCom(item):\n\t'''\n\tParser for 'fromwintersashes.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:24.354563"
 ],
 "Frostfire 10": [
  "def extractFrostfire10(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn buildReleaseMessageWithType(item, 'Overlord', vol, chp, frag=frag, postfix=postfix)\n",
  "2017-03-08T04:59:21.700134"
 ],
 "FrozKDI Translations": [
  "def extractFrozkdiWordpressCom(item):\n\t'''\n\tParser for 'frozkdi.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('NPC Town',       'NPC Town-building Game',                             'translated'),\n\t\t('Slowlife',       'Murajin Tensei Saikyou no Slow Life',                'translated'),\n\t\t('Unei Houou',     'Hisshou Dungeon Un\\'ei Houhou',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T05:42:31.098546"
 ],
 "Frozen's Lazy Blog": [
  "def extractFrozensLazyBlog(item):\n\t\"\"\"\n\tFrozen's Lazy Blog\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\n\ttagmap = [\n\t\t('Kuusen Madoushi',           'Kuusen Madoushi',                                           'translated'),\n\t\t('Last Embryo',               'Last Embryo',                                               'translated'),\n\t\t('Vanquish Overlord',         'Vanquish Overlord',                                         'translated'),\n\t\t('Majo no Tabitabi',          'Majo no Tabitabi',                                          'translated'),\n\t\t('Okaa-san wa Suki desu ka?', 'Okaa-san wa Suki desu ka?',                                 'translated'),\n\t\t('Amagi Brilliant Park',      'Amagi Brilliant Park',                                      'translated'),\n\t\t('mondaiji',                  'Mondaiji-tachi ga Isekai kara Kuru Sou Desu yo?',           'translated'),\n\t\t('Rakudai Kishi',             'Rakudai Kishi No Eiyuutan',                                 'translated'),\n\t\t('Isekai NEET',               'Did You Think Another World Would Motivate A NEET?',        'translated'),\n\t\t('Riku and Chise',            'Riku and Chise: The Paperboy and The Princess',             'translated'),\n\t\t('Granblue Fantasy',          'Granblue Fantasy',                                          'translated'),\n\t\t('Miyamoto Sakura',           'Just A Story About Miyamoto Sakura Being Cute',             'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\t\t\n\treturn False",
  "2019-05-06T02:36:57.302014"
 ],
 "Fuchsia": [
  "\ndef extractFuchsiaxxxTumblrCom(item):\n\t'''\n\tParser for 'fuchsiaxxx.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-15T04:53:18.859631"
 ],
 "Fudge Translations": [
  "def extractFudgeTranslations(item):\n\t\"\"\"\n\t# Fudge Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'SoE' in item['title'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'The Sword of Emperor', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Emperor of Solo Play Chapter') and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Emperor of Solo Play', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fuheidage Translations": [
  "def extractFuheidageWordpressCom(item):\n\t'''\n\tParser for 'fuheidage.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TAGOQT',       'Special Agent\\'s Rebirth: The Almighty Goddess of Quick Transmigration',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Special agent rebirth: Quick transmigration goddess \u2013 Chapter ',       'Special Agent\\'s Rebirth: The Almighty Goddess of Quick Transmigration',                      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-30T05:25:34.403711"
 ],
 "Fui a Part-Timer Translator": [
  "\ndef extractParttimerFuiBlogspotCom(item):\n\t'''\n\tParser for 'parttimer-fui.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:49:07.098997"
 ],
 "Fuji Translation": [
  "def extractFujitranslationWordpressCom(item):\n\t'''\n\tParser for 'fujitranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('My Wife is a Martial Alliance Head',                 'My Wife is a Martial Alliance Head',               'translated'), \n\t\t('My CEO Wife',                                        'My CEO Wife',                                      'translated'), \n\t\t('Mai Kitsune Waifu',                                  'Mai Kitsune Waifu',                                'translated'), \n\t\t('Rebirth of the Super Thief',                         'Rebirth of the Super Thief',                       'translated'), \n\t\t('Matchless Supernatural of the Three Kingdom',        'Matchless Supernaturals of the Three Kingdom',     'translated'), \n\t\t('Matchless Supernaturals of the Three Kingdom',       'Matchless Supernaturals of the Three Kingdom',     'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2019-03-26T22:44:33.381247"
 ],
 "Fun With Stela": [
  "def extractFunwithstelaWebId(item):\n\t'''\n\tParser for 'funwithstela.web.id'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\ttagmap = [\n\t\t('Because The Pig Duke Has Been Reincarnated, This Time I Will Say I Like You',       'Because The Pig Duke Has Been Reincarnated, This Time I Will Say I Like You',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Piggy Duke',  'Because The Pig Duke Has Been Reincarnated, This Time I Will Say I Like You',                      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\treturn False",
  "2018-06-17T07:09:21.788702"
 ],
 "Fung Shen": [
  "def extractFungShen(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Shrouded' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Shrouded', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Fushigi Translations": [
  "def extractFushigiTranslations(item):\n\t'''\n\tParser for 'Fushigi Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\t\t\n\ttagmap = [\n\t\t('Isekai Quest After School!',       'Isekai Quest After School!',                      'translated'),\n\t\t(\"Yuusha no Segare\",                 \"Yuusha no Segare\",                                'translated'), \n\t\t(\"Majo no Tabitabi\",                 \"Majo no Tabitabi\",                                'translated'), \n\t\t(\"Diego no Kyojin\",                  \"Diego no Kyojin\",                                 'translated'), \n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\n\n\treturn False",
  "2018-11-26T07:28:45.885947"
 ],
 "Fusion: The Journey (\u5947\u5e7b\u4e4b\u65c5)": [
  "\ndef extractFusionthejourneyBlogspotCom(item):\n\t'''\n\tParser for 'fusionthejourney.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:39.781909"
 ],
 "Futile Struggle": [
  "def extractFutileStruggle(item):\n\t'''\n\tParser for 'Futile Struggle'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = {\n\n\t\t'Kanna no Kanna'                                  : 'Kanna no Kanna',\n\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\n\treturn False",
  "2017-03-25T09:24:06.614180"
 ],
 "Future Translations": [
  "\ndef extractFuturetranslationsWordpressCom(item):\n\t'''\n\tParser for 'futuretranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:35.003841"
 ],
 "Fuwa Fuwa Tales~": [
  "def extractFuwaFuwaTales(item):\n\t\"\"\"\n\tFuwa Fuwa Tales\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Prince Herscherik and The Kingdom of Sorrow',                 'Prince Herscherik and The Kingdom of Sorrow',                                'translated'),\n\t\t('By A Slight Mistake',                                         'By A Slight Mistake',                                                        'translated'),\n\t\t('The Magnificent Battle Records of a Former Noble Lady',       'The Magnificent Battle Records of a Former Noble Lady',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-07-18T05:42:07.978810"
 ],
 "Fuyu Neko's": [
  "def extractFuyunekoWordpressCom(item):\n\t'''\n\tParser for 'fuyuneko.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Wu Gate',              'The Crazy Adventures of Wu Gate',                      'translated'),\n\t\t('Meow Meow Meow',       'Meow Meow Meow',                                       'translated'),\n\t\t('chongfei manual',      'Chongfei Manual',                                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Meow Meow Meow Ch ',       'Meow Meow Meow',                                       'translated'),\n\t\t('ChongFei Manual Ch ',      'Chongfei Manual',                                      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-26T03:25:27.546828"
 ],
 "Fuyu Neko's Translations": [
  "def extractWwwFuyunekoOrg(item):\n\t'''\n\tParser for 'www.fuyuneko.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('ChongFei Manual Ch ',                        'ChongFei Manual',                        'translated'),\n\t\t\t('The Dreamer in the Spring Boudoir - Ch ',    'The Dreamer in the Spring Boudoir',      'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-07-22T09:13:59.430607"
 ],
 "Fuyukai TL": [
  "def extractWwwFuyukaiClub(item):\n\t'''\n\tParser for 'www.fuyukai.club'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I\\'ve Been Killing Slimes for 300 Years',       'I\\'ve Been Killing Slimes for 300 Years',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('I\u2019ve Been Killing Slimes for 300 Years \u2013 Chapter ',       'I\\'ve Been Killing Slimes for 300 Years',                      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-07-24T03:34:47.303385"
 ],
 "Fuzion Life": [
  "def extractFuzionLife(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "GBHouseTranslation": [
  "\ndef extractRozenkristalWordpressCom(item):\n\t'''\n\tParser for 'rozenkristal.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:56:23.022796"
 ],
 "Gakuen Seikatsu": [
  "def extractGakuseitranslationsWordpressCom(item):\n\t'''\n\tParser for 'gakuseitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PGT',       'Every Morning the Most Popular Girl at School Sits Next to Me on the Train',    'translated'),\n\t\t('Monrabu',   'Monku no Tsukeyou ga Nai Rabukome',                                             'translated'),\n\t\t('Kou2TL',   'The Results From When I Time Leaped to My Second Year of High School and Confessed to the Teacher I Liked at the Time',                                             'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-30T02:37:26.685393"
 ],
 "Gakusei Translations": [
  "\ndef extractGakuseitranslationsCom(item):\n\t'''\n\tParser for 'gakuseitranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-30T03:19:17.497134"
 ],
 "Game of Scanlation": [
  "def extractGameOfScanlation(item):\n\t\"\"\"\n\tParser for 'Game of Scanlation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Gaochao Translations": [
  "def extractGaochaoTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Otherworldly Evil Monarch' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Otherworldly Evil Monarch', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Garden of Translations": [
  "def extractGardenoftranslationsCom(item):\n\t'''\n\tParser for 'gardenoftranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Books to Dominate Married Women',       'Books to Dominate Married Women',                      'translated'),\n\t\t('Isekai tensei no boukensha',            'Isekai tensei no boukensha',                           'translated'),\n\t\t('Destination of Crybird',                'Destination of Crybird',                               'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-05T05:01:24.478582"
 ],
 "Gargoyle Web Serial": [
  "def extractGargoyleWebSerial(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Gashacon Epubs": [
  "def extractGashaconepubsWordpressCom(item):\n\t'''\n\tParser for 'gashaconepubs.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\tif 'Epubs' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-26T03:48:48.769704"
 ],
 "Gashacon Gamer": [
  "def extractGashacongamerWordpressCom(item):\n\t'''\n\tParser for 'gashacongamer.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Grimm, The Mythical Detective',       'Grimm, The Mythical Detective',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:15:16.576402"
 ],
 "GeekyOven": [
  "\ndef extractGeekyovenCom(item):\n\t'''\n\tParser for 'geekyoven.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-12-05T11:22:30.772983"
 ],
 "Geniusly Plain": [
  "def extractGeniuslyplainWordpressCom(item):\n\t'''\n\tParser for 'geniuslyplain.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('What an Audacious and Sly Servant!',       'What an Audacious and Sly Servant!',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-31T03:35:51.134522"
 ],
 "Ghost Touch": [
  "\ndef extractGhosttouchWordpressCom(item):\n\t'''\n\tParser for 'ghosttouch.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:28.555446"
 ],
 "Gifting Translations": [
  "def extractGiftingtranslationsNet(item):\n\t'''\n\tParser for 'giftingtranslations.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Things From Another World',       'Things From Another World',                      'translated'),\n\t\t('My Girlfriend Is A Zombie',       'My Girlfriend Is A Zombie',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('[MGZ] Chapter',  'My Girlfriend Is A Zombie',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-05-14T02:38:35.421857"
 ],
 "Gila Translation Monster": [
  "def extractGilaTranslation(item):\n\t\"\"\"\n\t# Gila Translation Monster\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tltags = [tmp.lower() for tmp in item['tags']]\n\tif 'dawn traveler' in ltags and 'translation' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Dawn Traveler', vol, chp, frag=frag, postfix=postfix)\n\tif 'different world business symbol' in ltags and 'translation' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Different World Business Symbol', vol, chp, frag=frag, postfix=postfix)\n\tif 'star sea lord' in ltags and 'translation' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Star Sea Lord', vol, chp, frag=frag, postfix=postfix)\n\tif 'tensei shitara slime datta ken' in ltags and 'translation' in ltags:\n\t\tif not 'chapter' in item['title'].lower() and chp:\n\t\t\tfrag = None\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shitara Slime Datta Ken', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "GileGati": [
  "def extractNovelGilegatiCom(item):\n\t'''\n\tParser for 'novel.gilegati.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Spirit Conductor',       'Spirit Conductor',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-03T06:22:10.569193"
 ],
 "Giraffe Corps": [
  "def extractGiraffe(item):\n\t\"\"\"\n\t# Giraffe Corps\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Ti Shen' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tishen', vol, chp, frag=frag, postfix=postfix)\n\tif 'True Star' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Juxing', vol, chp, frag=frag, postfix=postfix)\n\tif 'Gong Hua' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Gong Hua', vol, chp, frag=frag, postfix=postfix)\n\tif 'Chen Yue Zhi Yao' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Chen Yue Zhi Yao', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Girly Novels": [
  "def extractGirlyNovels(item):\n\t\"\"\"\n\tGirly Novels\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'The Captivating Crown Prince' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Captivating Crown Prince', vol, chp, frag=frag, postfix=postfix)\n\tif 'chongfei manual' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Chongfei Manual', vol, chp, frag=frag, postfix=postfix)\n\tif 'Black Belly Wife' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Black Belly Wife', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Royals Cute Little Wife' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Royals Cute Little Wife', vol, chp, frag=frag, postfix=postfix)\n\tif 'Prince' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Captivating Crown Prince', vol, chp, frag=frag, postfix=postfix)\n\tif 'empress' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Beloved Empress', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-05-30T22:57:42.137199"
 ],
 "GirlyBoysAlliance": [
  "\ndef extractGirlyboysallianceMozelloCom(item):\n\t'''\n\tParser for 'girlyboysalliance.mozello.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-14T04:51:02.532935"
 ],
 "Glamourist Extraordinaire": [
  "\ndef extractGlamouristextraordinaireWordpressCom(item):\n\t'''\n\tParser for 'glamouristextraordinaire.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:37.237063"
 ],
 "Gloomy Translations": [
  "def extractGloomytranslationsBlogspotCom(item):\n\t'''\n\tParser for 'gloomytranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hey Don\\'t Act Unruly!',       'Hey Don\\'t Act Unruly!',                      'translated'),\n\t\t('Master Summoner Online',       'Master Summoner Online',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-09-11T03:43:35.590164"
 ],
 "Glyph Books": [
  "\ndef extractGlyphbooksCom(item):\n\t'''\n\tParser for 'glyphbooks.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:24.404780"
 ],
 "Go Create Me Translations": [
  "def extractTranslationsGocreatemeCom(item):\n\t'''\n\tParser for 'translations.gocreateme.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('My Girlfriend Is A Zombie',       'My Girlfriend Is A Zombie',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-22T06:16:10.552586"
 ],
 "God Awful Machine Translator": [
  "def extractGodAwfulMachineTranslator(item):\n\t\"\"\"\n\tParser for 'God Awful Machine Translator'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "God Level Demon Translation": [
  "\ndef extractGodleveldemontranslationWordpressCom(item):\n\t'''\n\tParser for 'godleveldemontranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:39:09.488615"
 ],
 "God of ABC": [
  "def extractGodofabcBlogspotCom(item):\n\t'''\n\tParser for 'godofabc.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('RE:Yandere',                                          'RE:Yandere',                                                         'translated'),\n\t\t('Synthesis',                                           'Synthesis',                                                          'translated'),\n\t\t('These Dangerous Girls Placed Me Into Jeopardy',       'These Dangerous Girls Placed Me Into Jeopardy',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T06:29:03.461807"
 ],
 "Goddess! Grant Me a Girlfriend!!": [
  "def extractGoddessGrantMeaGirlfriend(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'ggmag chapter' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Goddess! Grant Me a Girlfriend!!', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Golden Plastic Sisters Translation Group": [
  "\ndef extractGoldenplasticsistersTumblrCom(item):\n\t'''\n\tParser for 'goldenplasticsisters.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-17T09:17:25.020344"
 ],
 "Gomigeemu": [
  "def extractGomigeemu(item):\n\t\"\"\"\n\tParser for 'Gomigeemu'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Good Wife Translation": [
  "def extractGoodWifeTranslation(item):\n\t\"\"\"\n\tParser for 'Good Wife Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Goodfae": [
  "\ndef extractMobsandmagicWordpressCom(item):\n\t'''\n\tParser for 'mobsandmagic.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:26.981284"
 ],
 "Grandlation": [
  "def extractGrandlation(item):\n\t\"\"\"\n\tGrandlation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'DMWG' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon-Marked War God', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('DMWG Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Dragon-Marked War God', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Yang God Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Yang God', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Gravity Tales": [
  "def extractGravityTranslation(item):\n\t\"\"\"\n\t# Gravity Translation\n\talso\n\t# Gravity Tales\n\t# GravityTales\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'gravitytales.com/post/the-kings-avatar-manhua/' in item['linkUrl']:\n\t\treturn None\n\t\n\turlfrag = [\n\t\t('gravitytales.com/post/earths-core/',                              'Earth\\'s Core',                                  'oel'),\n\t\t('gravitytales.com/post/the-divine-element/',                       'The Divine Elements',                            'oel'),\n\t\t('gravitytales.com/post/rebirth-of-the-heavenly-demon/',            'Rebirth of the Heavenly Demon',                  'translated'),\n\t\t('gravitytales.com/post/ghost-blows-out-the-light/',                'Ghost Blows Out the Light',                      'translated'),\n\t\t('gravitytales.com/post/demons-diary/',                             'Demon\\'s Diary',                                 'translated'),\n\t\t('gravitytales.com/post/shuras-wrath/',                             'Shura\\'s Wrath',                                 'translated'),\n\t\t('gravitytales.com/post/peerless-battle-spirit/',                   'Peerless Battle Spirit',                         'translated'),\n\t\t('gravitytales.com/post/dragons-soul/',                             'Dragon\\'s Soul',                                 'translated'),\n\t\t('gravitytales.com/post/ia/',                                       'Infinity Armament',                              'translated'),\n\t\t('gravitytales.com/post/aethernea/',                                'Aethernea',                                      'oel'),\n\t\t('gravitytales.com/post/apocalypse-summoner/',                      'Apocalypse Summoner',                            'translated'),\n\t\t('gravitytales.com/post/dungeon-hunter/',                           'Dungeon Hunter',                                 'translated'),\n\t\t('gravitytales.com/post/overthrowing-fate/',                        'Overthrowing Fate',                              'oel'),\n\t\t('gravitytales.com/post/chronicles-of-gu-hai/',                     'Chronicles of Gu Hai',                           'translated'),\n\t\t('gravitytales.com/post/a-dragons-curiosity/',                      'A Dragon\\'s Curiosity',                          'translated'),\n\t\t('gravitytales.com/post/the-good-student/',                         'The Good Student',                               'oel'),\n\t\t('gravitytales.com/post/martial-void-king/',                        'Martial Void King',                              'oel'),\n\t\t\n\t\t('gravitytales.com/post/beauty-and-the-bodyguard/',                 'Beauty and the Bodyguard',                       'translated'),\n\t\t('gravitytales.com/post/castle-of-black-iron/',                     'Castle of Black Iron',                           'translated'),\n\t\t('gravitytales.com/post/dimensional-sovereign/',                    'Dimensional Sovereign',                          'translated'),\n\t\t('gravitytales.com/post/epoch-of-twilight/',                        'Epoch of Twilight',                              'translated'),\n\t\t('gravitytales.com/post/forty-millenniums-of-cultivation/',         'Forty Millenniums of Cultivation',               'translated'),\n\t\t('gravitytales.com/post/how-to-avoid-death-on-a-daily-basis/',      'How to Avoid Death on a Daily Basis',            'oel'),\n\t\t('gravitytales.com/post/i-am-supreme/',                             'I Am Supreme',                                   'translated'),\n\t\t('gravitytales.com/post/immortal-mortal/',                          'Immortal Mortal',                                'translated'),\n\t\t('gravitytales.com/post/library-of-heavens-path/',                  'Library of Heaven\\'s Path',                      'translated'),\n\t\t('gravitytales.com/post/mmorpg-rebirth-of-the-legendary-guardian/', 'MMORPG: Rebirth of the Legendary Guardian',      'translated'),\n\t\t('gravitytales.com/post/shen-yin-wang-zuo/',                        'Shen Yin Wang Zuo',                              'translated'),\n\t\t('gravitytales.com/post/strongest-abandoned-son/',                  'Strongest Abandoned Son',                        'translated'),\n\t\t('gravitytales.com/post/the-avalon-of-five-elements/',              'The Avalon Of Five Elements',                    'translated'),\n\t\t('gravitytales.com/post/versatile-mage/',                           'Versatile Mage',                                 'translated'),\n\t\t('gravitytales.com/post/war-sovereign-soaring-the-heavens/',        'War Sovereign Soaring the Heavens',              'translated'),\n\t\t('gravitytales.com/post/way-of-choices/',                           'Way of Choices',                                 'translated'),\n\t\t('gravitytales.com/post/godly-model-creator/',                      'Godly Model Creator',                            'translated'),\n\t\t('gravitytales.com/post/a-mercenarys-war/',                         'A Mercenary\\'s War',                             'translated'),\n\t\t('gravitytales.com/post/master-of-the-stars/',                      'Master of the Stars',                            'translated'),\n\t\t('gravitytales.com/post/eternal-martial-sovereign/',                'Eternal Martial Sovereign',                      'translated'),\n\t\t('gravitytales.com/post/reincarnation-of-the-strongest-sword-god/', 'Reincarnation Of The Strongest Sword God',       'translated'),\n\t\t\n\t\t('gravitytales.com/post/the-kings-avatar/',                         'The King\\'s Avatar',                             'translated'),\n\t\t('gravitytales.com/post/the-black-card/',                           'The Black Card',                                 'translated'),\n\t\t('gravitytales.com/post/returning-from-the-immortal-world/',        'Returning from the Immortal World',              'translated'),\n\t\t('gravitytales.com/post/seeking-the-flying-sword-path',             'Seeking the Flying Sword Path',                  'translated'),\n\t\t('gravitytales.com/novel/hardcore-qi-worlds/',                      'Hardcore: Qi Worlds',                            'oel'),\n\t\t('gravitytales.com/post/era-of-disaster/',                          'Era of Disaster',                                'translated'),\n\t\t('gravitytales.com/post/hardcore-qi-worlds/',                       'Era of Disaster',                                'translated'),\n\t\t(\"gravitytales.com/post/shrouding-the-heavens/\",                    \"Shrouding the Heavens\",                          'translated'),\n\t\t(\"gravitytales.com/post/the-world-online/\",                         \"The World Online\",                               'translated'),\n\t\t\n\t\t(\"gravitytales.com/post/atypical-reincarnation/\",                   \"Atypical Reincarnation\",                          'translated'),\n\t\t(\"gravitytales.com/post/phoenix-destiny/\",                          \"Phoenix Destiny\",                                 'translated'),\n\t\t(\"gravitytales.com/post/chaotic-sword-god/\",                        \"Chapter Sword God\",                               'translated'),\n\t\t(\"gravitytales.com/post/everlasting-immortal-firmament/\",           \"Everlasting Immortal Firmament\",                  'translated'),\n\t\t(\"gravitytales.com/post/leveling-up-and-becoming-undefeatable/\",    \"Leveling Up And Becoming Undefeatable\",           'translated'),\n\t\t(\"gravitytales.com/post/immortal-and-martial-dual-cultivation/\",    \"Immortal and Martial Dual Cultivation\",           'translated'),\n\t\t(\"gravitytales.com/post/the-records-of-the-human-emperor/\",         \"The Human Emperor\",                               'translated'),\n\t\t(\"gravitytales.com/post/king-of-gods/\",                             \"King of Gods\",                                    'translated'),\n\t\t(\"gravitytales.com/post/rise-of-humanity/\",                         \"Rise of Humanity\",                                'translated'),\n\t\t(\"gravitytales.com/post/age-of-adepts/\",                            \"Age of Adepts\",                                   'translated'),\n\t\t(\"gravitytales.com/post/hidden-assassin/\",                          \"Hidden Assassin\",                                 'translated'),\n\t\t\n\t\t\n\t\t('gravitytales.com/post/the-new-world/',                            'The New World',                                   'oel'),\n\t\t('gravitytales.com/post/spirit-hunters-of-maoshan-sect/',           'Spirit Hunters of Maoshan Sect',                  'translated'),\n\t\t('gravitytales.com/post/golden-time/',                              'Golden Time',                                     'translated'),\n\t\t('gravitytales.com/post/rise-of-the-wasteland/',                    'Rise of the Wasteland',                           'translated'),\n\t\t('gravitytales.com/post/abyss-domination/',                         'Abyss Domination',                                'translated'),\n\t\t('gravitytales.com/post/the-lords-empire/',                         'The Lord\\'s Empire Chapter',                      'translated'),\n\t\t('gravitytales.com/post/ace-of-ace/',                               'Ace of Ace',                                      'translated'),\n\t\t('gravitytales.com/post/virtual-world-close-combat-mage/',          'Virtual World: Close Combat Mage',                'translated'),\n\t\t('gravitytales.com/post/legend-of-legends/',                        'Legend of Legends',                               'translated'),\n\t\t('gravitytales.com/post/the-first-hunter/',                         'The First Hunter',                                'translated'),\n\t\t('gravitytales.com/post/so-pure-so-flirtatious/',                   'So Pure, So Flirtatious',                         'translated'),\n\t\t('gravitytales.com/post/the-city-of-terror/',                       'The City of Terror',                              'translated'),\n\t\t('gravitytales.com/post/apocalypse-hunter/',                        'Apocalypse Hunter',                               'translated'),\n\t\t('gravitytales.com/post/a-war-between-spies/',                      'A War Between Spie',                              'translated'),\n\t]\n\n\tlinklower = item['linkUrl'].lower()\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in linklower:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\tltags = [tmp.lower().replace('\u2019', \"'\") for tmp in item['tags']]\n\t\n\n\ttagmap = [\n\t\t('zhan long',                                     'Zhan Long',                                     'translated'),\n\t\t('quan zhi gao shou',                             'Quan Zhi Gao Shou',                             'translated'),\n\t\t('battle through the heavens',                    'Battle Through the Heavens',                    'translated'),\n\t\t('chaotic sword god',                             'Chaotic Sword God',                             'translated'),\n\t\t('true martial world',                            'True Martial World',                            'translated'),\n\t\t('wu dong qian kun',                              'Wu Dong Qian Kun',                              'translated'),\n\t\t(\"demon's diary\",                                 \"Demon's Diary\",                                 'translated'),\n\t\t('blue phoenix',                                  'Blue Phoenix',                                  'oel'),\n\t\t(\"the ancient's son\",                             \"The Ancient's Son\",                             'oel'),\n\t\t('mo tian ji',                                    'Mo Tian Ji',                                    'translated'),\n\t\t('great demon king',                              'Great Demon King',                              'translated'),\n\t\t('heavenly star',                                 'Heavenly Star',                                 'translated'),\n\t\t('conquest',                                      'Conquest',                                      'translated'),\n\t\t('shadow rogue',                                  'Shadow Rogue',                                  'translated'),\n\t\t('terror paradise',                               'Terror Paradise',                               'translated'),\n\t\t('the divine elements',                           'The Divine Elements',                           'oel'),\n\t\t('the divine element',                            'The Divine Elements',                           'oel'),\n\t\t('cult of the sacred runes',                      'Cult of the Sacred Runes',                      'translated'),\n\t\t(\"a record of a mortal's journey to immortality\", \"A Record of a Mortal's Journey to Immortality\", 'translated'),\n\t\t('ancient godly monarch',                         'Ancient Godly Monarch',                         'translated'),\n\t\t(\"i'm really a superstar\",                        \"I'm Really a Superstar\",                        'translated'),\n\t\t('chaotic lightning cultivation',                 'Chaotic Lightning Cultivation',                 'translated'),\n\t\t(\"the king's avatar\",                             \"The King's Avatar\",                             'translated'),\n\t\t('ze tian ji',                                    'Ze Tian Ji',                                    'translated'),\n\t\t('way of choices',                                'Ze Tian Ji',                                    'translated'),\n\t\t('str',                                           'Sovereign of the Three Realms',                 'translated'),\n\t\t('dimensional sovereign',                         'Dimensional Sovereign',                         'translated'),\n\t\t('dungeon hunter',                                'Dungeon Hunter',                                'translated'),\n\t\t('king of gods',                                  'King of Gods',                                  'translated'),\n\t\t('overthrowing fate',                             'Overthrowing Fate',                             'translated'),\n\t\t('paradise of the demons and gods',               'Paradise of the Demons and Gods',               'translated'),\n\t\t('reincarnator',                                  'Reincarnator',                                  'translated'),\n\t\t('the experimental log of the crazy lich',        'The Experimental Log of the Crazy Lich',        'translated'),\n\t\t('king of gods',                                  'King of Gods',                                  'translated'),\n\t\t('martial world',                                 'Martial World',                                 'translated'),\n\t\t('rmji',                                          \"A Record of A Mortal's Journey to Immortality\", 'translated'),\n\t\t('the nine cauldrons',                            'The Nine Cauldrons',                            'translated'),\n\t\t('the trembling world',                           'The Trembling World',                           'translated'),\n\t\t('ancient strengthening technique',               'Ancient Strengthening Technique',               'translated'),\n\t\t('nine heavenly thunder manual',                  'Nine Heavenly Thunder Manual',                  'translated'),\n\t\t('the beginning after the end',                   'The Beginning After the End',                   'oel'),\n\t\t(\"a dragon's curiosity\",                          \"A Dragon's Curiosity\",                          'oel'),\n\t]\n\t\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in ltags:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('The King\u2019s Avatar Chapter ',     \"The King's Avatar\",                'translated'),\n\t\t('Against Heaven :',               'Against Heaven',                   'translated'),\n\t\t('Great Demon King',               'Great Demon King',                 'translated'),\n\t\t('Ascension of The Alchemist God', 'Ascension of the Alchemist God',   'translated'),\n\t\t('TAG Chapter',                    'Ascension of the Alchemist God',   'translated'),\n\t\t('The Alchemist God: Chapter',     'Ascension of the Alchemist God',   'translated'),\n\t\t('Might of the Stars',             'Might of the Stars',               'oel'),\n\t\t('Conquest Chapter',               'Conquest',                         'translated'),\n\t\t('Blood Hourglass',                'Blood Hourglass',                  'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\ttitlestart = [\n\t\t('a dragon\u2019s curiosity chapter',                                    'A Dragon\u2019s Curiosity',                                                              'translated'),\n\t\t('a record of a mortal\u2019s journey to immortality \u2013 chapter',         \"A Record of A Mortal's Journey to Immortality\",                                     'translated'),\n\t\t('ancient strengthening technique: chapter',                        'Ancient Strengthening Technique',                                                   'translated'),\n\t\t('blue phoenix chapter',                                            'Blue Phoenix',                                                                      'oel'),\n\t\t('blue phoenix \u2013 chapter',                                          'Blue Phoenix',                                                                      'oel'),\n\t\t('btth ',                                                           'Battle Through the Heavens',                                                        'translated'),\n\t\t('chaotic lightning cultivation chapter',                           'Chaotic Lightning Cultivation',                                                     'translated'),\n\t\t('chaotic sword god chapter',                                       'Chaotic Sword God',                                                                 'translated'),\n\t\t('cult of the sacred runes',                                        'Cult of the Sacred Runes',                                                          'translated'),\n\t\t('earth\\'s core book',                                              \"Earth's Core\",                                                                      'oel'),\n\t\t('era of shamans chapter',                                          'Era of Shamans',                                                                    'translated'),\n\t\t('hedonist sovereign chapter',                                      'Hedonist Sovereign',                                                                'translated'),\n\t\t('htaddb chapter',                                                  'How To Avoid Death On A Daily Basis',                                               'oel'),\n\t\t('imdc chapter',                                                    'Immortal and Martial Dual Cultivation',                                             'translated'),\n\t\t('iras',                                                            'I\u2019m Really a Superstar',                                                            'translated'),\n\t\t('i\u2019m really a superstar chapter',                                  \"I'm Really a Superstar\",                                                            'translated'),\n\t\t('jiu shen chapter',                                                'Jiu Shen',                                                                          'translated'),\n\t\t('king of gods chapter ',                                           'King of Gods',                                                                      'translated'),\n\t\t('king of gods \u2013 ',                                                 'King of Gods',                                                                      'translated'),\n\t\t('lord xue ying chapters',                                          'Lord Xue Ying',                                                                     'translated'),\n\t\t('martial world chapter',                                           'Martial World',                                                                     'translated'),\n\t\t('master of the stars chapter',                                     'Master of the Stars',                                                               'translated'),\n\t\t('mw chapter',                                                      'Martial World',                                                                     'translated'),\n\t\t('nine heavenly thunder manual chapter',                            'Nine Heavenly Thunder Manual',                                                      'translated'),\n\t\t('paradise of the demons and gods ',                                'Paradise of the Demons and Gods',                                                   'translated'),\n\t\t('paradise of the demons and gods chapter',                         'Paradise of the Demons and Gods',                                                   'translated'),\n\t\t('qzgs ',                                                           'Quan Zhi Gao Shou',                                                                 'translated'),\n\t\t('reincarnator',                                                    'Reincarnator',                                                                      'translated'),\n\t\t('rmji ',                                                           \"A Record of a Mortal's Journey to Immortality\",                                     'translated'),\n\t\t('shura\\'s wrath chapter ',                                         'Shura\\'s Wrath',                                                                    'translated'),\n\t\t('the beginning after the end',                                     'The Beginning After the End',                                                       'oel'),\n\t\t('the experimental log of the crazy lich chapter',                  'The Experimental Log of the Crazy Lich',                                            'translated'),\n\t\t('the king\\'s avatar chapter',                                      'The King\\'s Avatar',                                                                'translated'),\n\t\t('the king\u2019s avatar (qzgs)',                                        \"The King's Avatar\",                                                                 'translated'),\n\t\t('the nine cauldrons book',                                         'The Nine Cauldrons',                                                                'translated'),\n\t\t('the nine cauldrons chapter',                                      'The Nine Cauldrons',                                                                'translated'),\n\t\t('the trembling world chapter ',                                    'The Trembling World',                                                               'translated'),\n\t\t('tka chapter ',                                                    \"The King's Avatar\",                                                                 'translated'),\n\t\t('true martial world chapter',                                      'True Martial World',                                                                'translated'),\n\t\t('zl ',                                                             'Zhan Long',                                                                         'translated'),\n\t\t('ztj chapter',                                                     'Ze Tian Ji',                                                                        'translated'),\n\t\t('apocalypse hunter chapter ',                                      'Apocalypse Hunter',                                                                 'translated'),\n\t]\n\n\n\tltitle = item['title'].lower()\n\tfor titlecomponent, name, tl_type in titlestart:\n\t\tif ltitle.startswith(titlecomponent):\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\tif item['title'].startswith('RMJI') and 'Release' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, \"A Record of A Mortal's Journey to Immortality\", vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\n\n\t\t\n\treturn False",
  "2018-07-04T07:35:44.824040"
 ],
 "Gravity Translation": [
  "def extractGravityTranslation(item):\n\t\"\"\"\n\t# Gravity Translation\n\talso\n\t# Gravity Tales\n\t# GravityTales\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tltags = [tmp.lower().replace('\u2019', \"'\") for tmp in item['tags']]\n\tif 'announcement' in ltags:\n\t\treturn None\n\tif 'The King\u2019s Avatar Chapter ' in item['title'] or item['title'].startswith('The King\u2019s Avatar (QZGS)') or item['title'].startswith('TKA Chapter '):\n\t\treturn buildReleaseMessageWithType(item, \"The King's Avatar\", vol, chp, frag=frag, postfix=postfix)\n\tif 'Against Heaven :' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Against Heaven', vol, chp, frag=frag, postfix=postfix)\n\tif 'Great Demon King' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Great Demon King', vol, chp, frag=frag, postfix=postfix)\n\tif 'zhan long' in ltags or item['title'].startswith('ZL '):\n\t\treturn buildReleaseMessageWithType(item, 'Zhan Long', vol, chp, frag=frag, postfix=postfix)\n\tif 'quan zhi gao shou' in ltags or item['title'].startswith('QZGS '):\n\t\treturn buildReleaseMessageWithType(item, 'Quan Zhi Gao Shou', vol, chp, frag=frag, postfix=postfix)\n\tif 'battle through the heavens' in ltags or item['title'].startswith('BTTH '):\n\t\treturn buildReleaseMessageWithType(item, 'Battle Through the Heavens', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ascension of The Alchemist God' in item['title'] or 'TAG Chapter' in item['title'] or 'The Alchemist God: Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Ascension of the Alchemist God', vol, chp, frag=frag, postfix=postfix)\n\tif 'chaotic sword god' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Chaotic Sword God', vol, chp, frag=frag, postfix=postfix)\n\tif 'true martial world' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'True Martial World', vol, chp, frag=frag, postfix=postfix)\n\tif 'wu dong qian kun' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Wu Dong Qian Kun', vol, chp, frag=frag, postfix=postfix)\n\tif \"demon's diary\" in ltags:\n\t\treturn buildReleaseMessageWithType(item, \"Demon's Diary\", vol, chp, frag=frag, postfix=postfix)\n\tif 'blue phoenix' in ltags or item['title'].startswith('Blue Phoenix Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Blue Phoenix', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif \"the ancient's son\" in ltags:\n\t\treturn buildReleaseMessageWithType(item, \"The Ancient's Son\", vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Might of the Stars' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Might of the Stars', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'mo tian ji' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Mo Tian Ji', vol, chp, frag=frag, postfix=postfix)\n\tif 'great demon king' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Great Demon King', vol, chp, frag=frag, postfix=postfix)\n\tif 'heavenly star' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Heavenly Star', vol, chp, frag=frag, postfix=postfix)\n\tif 'conquest' in ltags or 'Conquest Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Conquest', vol, chp, frag=frag, postfix=postfix)\n\tif 'shadow rogue' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Shadow Rogue', vol, chp, frag=frag, postfix=postfix)\n\tif 'terror paradise' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Terror Paradise', vol, chp, frag=frag, postfix=postfix)\n\tif 'the divine elements' in ltags or 'the divine element' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'The Divine Elements', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'cult of the sacred runes' in ltags or item['title'].startswith('Cult of the Sacred Runes'):\n\t\treturn buildReleaseMessageWithType(item, 'Cult of the Sacred Runes', vol, chp, frag=frag, postfix=postfix)\n\tif 'Blood Hourglass' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Blood Hourglass', vol, chp, frag=frag, postfix=postfix)\n\tif \"A Dragon's Curiosity\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"A Dragon's Curiosity\", vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'RMJI' in item['tags'] or item['title'].startswith('RMJI') and 'Release' in item['title'] or item['title'].lower().startswith(\n\t    'a record of a mortal\u2019s journey to immortality \u2013 chapter'):\n\t\treturn buildReleaseMessageWithType(item, \"A Record of A Mortal's Journey to Immortality\", vol, chp, frag=frag, postfix=postfix)\n\tif 'The Nine Cauldrons' in item['tags'] or item['title'].startswith('The Nine Cauldrons Chapter') or item['title'].startswith('The Nine Cauldrons book'):\n\t\treturn buildReleaseMessageWithType(item, 'The Nine Cauldrons', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Trembling World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Trembling World', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ancient Strengthening Technique' in item['tags'] or item['title'].lower().startswith('ancient strengthening technique: chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Ancient Strengthening Technique', vol, chp, frag=frag, postfix=postfix)\n\tif 'Nine Heavenly Thunder Manual' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Nine Heavenly Thunder Manual', vol, chp, frag=frag, postfix=postfix)\n\tif \"a record of a mortal's journey to immortality\" in ltags or item['title'].startswith('RMJI '):\n\t\treturn buildReleaseMessageWithType(item, \"A Record of a Mortal's Journey to Immortality\", vol, chp, frag=frag, postfix=postfix)\n\tif 'martial world' in ltags or item['title'].startswith('MW Chapter') or item['title'].startswith('Martial World Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Martial World', vol, chp, frag=frag, postfix=postfix)\n\tif 'ancient godly monarch' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Ancient Godly Monarch', vol, chp, frag=frag, postfix=postfix)\n\tif \"i'm really a superstar\" in ltags or item['title'].lower().startswith('i\u2019m really a superstar chapter'):\n\t\treturn buildReleaseMessageWithType(item, \"I'm Really a Superstar\", vol, chp, frag=frag, postfix=postfix)\n\tif 'The Beginning After the End' in item['tags'] or item['title'].lower().startswith('the beginning after the end'):\n\t\treturn buildReleaseMessageWithType(item, 'The Beginning After the End', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif item['title'].lower().startswith('chaotic lightning cultivation chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Chaotic Lightning Cultivation', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('a dragon\u2019s curiosity chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'A Dragon\u2019s Curiosity', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('paradise of the demons and gods chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Paradise of the Demons and Gods', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('lord xue ying chapters'):\n\t\treturn buildReleaseMessageWithType(item, 'Lord Xue Ying', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('chaotic sword god chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Chaotic Sword God', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('era of shamans chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Era of Shamans', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('jiu shen chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Jiu Shen', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('true martial world chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'True Martial World', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('reincarnator'):\n\t\treturn buildReleaseMessageWithType(item, 'Reincarnator', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('king of gods \u2013 '):\n\t\treturn buildReleaseMessageWithType(item, 'King of Gods', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('iras'):\n\t\treturn buildReleaseMessageWithType(item, 'I\u2019m Really a Superstar', vol, chp, frag=frag, postfix=postfix)\n\tif 'chaotic lightning cultivation' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Chaotic Lightning Cultivation', vol, chp, frag=frag, postfix=postfix)\n\tif \"the king's avatar\" in ltags:\n\t\treturn buildReleaseMessageWithType(item, \"The King's Avatar\", vol, chp, frag=frag, postfix=postfix)\n\tif 'ze tian ji' in ltags or 'way of choices' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Ze Tian Ji', vol, chp, frag=frag, postfix=postfix)\n\tif 'str' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Sovereign of the Three Realms', vol, chp, frag=frag, postfix=postfix)\n\tif 'dimensional sovereign' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Dimensional Sovereign', vol, chp, frag=frag, postfix=postfix)\n\tif 'dungeon hunter' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Dungeon Hunter', vol, chp, frag=frag, postfix=postfix)\n\tif 'king of gods' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'King of Gods', vol, chp, frag=frag, postfix=postfix)\n\tif 'overthrowing fate' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Overthrowing Fate', vol, chp, frag=frag, postfix=postfix)\n\tif 'paradise of the demons and gods' in ltags or item['title'].lower().startswith('Paradise of the Demons and Gods '):\n\t\treturn buildReleaseMessageWithType(item, 'Paradise of the Demons and Gods', vol, chp, frag=frag, postfix=postfix)\n\tif 'reincarnator' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Reincarnator', vol, chp, frag=frag, postfix=postfix)\n\tif 'the experimental log of the crazy lich' in ltags or item['title'].lower().startswith('the experimental log of the crazy lich chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'The Experimental Log of the Crazy Lich', vol, chp, frag=frag, postfix=postfix)\n\tif 'king of gods' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'King of Gods', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Blue Phoenix \u2013 Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Blue Phoenix', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Green Lily Translations": [
  "def extractGreenlilytranslationsWordpressCom(item):\n\t'''\n\tParser for 'greenlilytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('MDWTTMED',       'My Disciple Wants to Tease Me Every Day',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-26T07:17:05.235409"
 ],
 "Green Tea Translations": [
  "def extractGreenteatranslationsWordpressCom(item):\n\t'''\n\tParser for 'greenteatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\t\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\t\n\tif item['tags'] == ['Uncategorized'] and chp:\n\t\treturn buildReleaseMessageWithType(item, 'Mr. President, Unbridled Love', vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\n\n\treturn False",
  "2017-12-26T02:27:48.121598"
 ],
 "Grim Darkz Translations": [
  "\ndef extractGrimdarkztranslationsWordpressCom(item):\n\t'''\n\tParser for 'grimdarkztranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:44.207708"
 ],
 "GrimdarkZ Translations": [
  "def extractGrimdarkZTranslations(item):\n\t\"\"\"\n\t# 'GrimdarkZ Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Devouring The Heavens' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Devouring The Heavens', vol, chp, frag=frag, postfix=postfix)\n\tif 'Kuro no Hiera Glaphicos' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kuro no Hiera Glaphicos', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Grow with me": [
  "def extractGrowWithMe(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'zui wu dao' in item['tags']:\n\t\tvol, chp, frag = frag, chp, 0\n\t\treturn buildReleaseMessageWithType(item, 'Zui Wu Dao', vol, chp, frag=frag, postfix=postfix)\n\tif re.search('Your Highness[\\\\W\\\\-\\\\. ]+I know my wrongs\\\\.?', item['title'], re.IGNORECASE):\n\t\treturn buildReleaseMessageWithType(item, 'Your Highness, I Know My Wrongs', vol, chp, frag=frag, postfix=postfix)\n\tif re.search('The Eunuch is Pregnant[\\\\W\\\\-\\\\. ]?-[\\\\W\\\\-\\\\. ]?Chapter', item['title'], re.IGNORECASE):\n\t\treturn buildReleaseMessageWithType(item, 'The Eunuch is Pregnant', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-03-25T08:41:14.685435"
 ],
 "Guana Translations": [
  "def extractGuanatranslationsWordpressCom(item):\n\t'''\n\tParser for 'guanatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('PEN DOWN A MARRIAGE: CHAPTER',              'Pen Down A Marriage',      'translated'),\n\t\t('PEN DOWN A MARRIAGE (\u843d\u7b14\u6210\u5a5a ) CHAPTER',   'Pen Down A Marriage',      'translated'),\n\t\t('PEN DOWN A MARRIAGE (\u843d\u7b14\u6210\u5a5a ): CHAPTER',  'Pen Down A Marriage',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-09T08:33:46.572164"
 ],
 "Gude Translation": [
  "def extractGudetranslationBlogspotCom(item):\n\t'''\n\tParser for 'gudetranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('QTIAD',       'Quick Transmigration: I\\'m Almost Dead',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:45:32.710327"
 ],
 "Gugel Translation": [
  "def extractGugeltranslationBlogspotCom(item):\n\t'''\n\tParser for 'gugeltranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('i will quietly leave',       'I Will Quietly Disappear.',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T08:43:26.129979"
 ],
 "Gundam Wing Tales": [
  "def extractGundamWingTales(item):\n\t\"\"\"\n\tParser for 'Gundam Wing Tales'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Guqin Translations": [
  "def extractGuqintranslationsWordpressCom(item):\n\t'''\n\tParser for 'guqintranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Golden Age Legitimate Fei',       'Golden Age Legitimate Fei',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-31T05:24:02.913481"
 ],
 "Guro Translation": [
  "def extractGuroTranslation(item):\n\t\"\"\"\n\t# 'GuroTranslation'\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tltags = [tmp.lower() for tmp in item['tags']]\n\tif 'tensei shitara slime datta ken' in ltags:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shitara Slime Datta Ken', vol, chp, frag=frag, postfix=postfix)\n\tif '1000 nin no homunkurusu no shoujo tachi ni kakomarete isekai kenkoku' in ltags:\n\t\treturn buildReleaseMessageWithType(item, '1000 nin no Homunkurusu no Shoujo tachi ni Kakomarete Isekai Kenkoku', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Guro's Library of Stories": [
  "def extractGurosLibraryofStories(item):\n\t\"\"\"\n\tGuro's Library of Stories\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "HIGH ENERGY Translations": [
  "\ndef extractHighenergytranslationsWordpressCom(item):\n\t'''\n\tParser for 'highenergytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:37:23.312106"
 ],
 "HIscension": [
  "def extractHiscensionCom(item):\n\t'''\n\tParser for 'hiscension.com'\n\t'''\n\tif item['title'].startswith(\"Protected: \"):\n\t\treturn None\n\tif 'Rant-dom' in item['tags']:\n\t\treturn None\n\t\t\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('MWFW',       'Bringing Modern Weapons to a Fantasy World',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-31T03:40:30.503930"
 ],
 "Hachidori Translations": [
  "def extractHachidoriTranslations(item):\n\t\"\"\"\n\tParser for 'Hachidori Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Charging Magic with a Smile' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Charging Magic with a Smile', vol, chp, frag=frag, postfix=postfix)\n\tif 'Kokugensou wo Item Cheat' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kokugensou wo Item Cheat', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ochitekita Naga to Majo no Kuni' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ochitekita Naga to Majo no Kuni', vol, chp, frag=frag, postfix=postfix)\n\tif 'Humans are the Strongest Race' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Humans are the Strongest Race', vol, chp, frag=frag, postfix=postfix)\n\tif 'Seiun wo Kakeru' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Seiun wo Kakeru', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-03-11T05:31:11.590939"
 ],
 "Hainemakoru Translations": [
  "def extractHainemakorutranslationsBlogspotCom(item):\n\t'''\n\tParser for 'hainemakorutranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif 'news' in item['tags']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('10000 STEPS',                                                                  'Level Up Just by Walking. In 10 Thousand Steps It Will Be Level 10000!',                      'translated'),\n\t\t('Level Up Just by Walking. In 10 Thousand Steps It Will Be Level 10000!',       'Level Up Just by Walking. In 10 Thousand Steps It Will Be Level 10000!',                      'translated'),\n\t\t('Ecstas Online',                                                                'Ecstas Online',                                                                               'translated'),\n\t\t('Is He A Hero? Yes',                                                            'Is He A Hero? Yes',                                                                           'translated'),\n\t\t('Obtaining the Strongest Cheat',                                                'Obtaining the Strongest Cheat',                                                               'translated'),\n\t\t('Humans are the Strongest Race',                                                'Humans are the Strongest Race',                                                               'translated'),\n\t\t('Humans are the Strongest Race [LN]',                                           'Humans are the Strongest Race [LN]',                                                          'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-15T04:23:57.348398"
 ],
 "Hajiko translation": [
  "def extractHajiko(item):\n\t\"\"\"\n\t# Hajiko translation\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Ryuugoroshi no Sugosuhibi' in item['title'] or 'Ryuugoroshi no Sugosu Hibi' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ryugoroshi no Sugosuhibi', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Hakureina": [
  "def extractHakureina(item):\n\t\"\"\"\n\tParser for 'Hakureina'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Hakushaku to Yousei": [
  "def extractHakushakuToYousei(item):\n\t\"\"\"\n\tParser for 'Hakushaku to Yousei'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Halcyon Translations": [
  "def extractHalcyonTranslations(item):\n\t\"\"\"\n\t'Halcyon Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Shura\u2019s Wrath Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Shura\u2019s Wrath', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "HalfElementMaster Translation": [
  "def extractHalfElementMasterTranslation(item):\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Halosty's Tales": [
  "def extractHalostystalesCom(item):\n\t'''\n\tParser for 'halostystales.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I\\'m Gonna be a Wizard When I Grow up Again!',         'I\\'m Gonna be a Wizard When I Grow up Again!',                'oel'),\n\t\t('blood',                                                'Blood',                                                       'oel'),\n\t\t('The Immortal Berserker',                               'The Immortal Berserker',                                      'oel'),\n\t\t('Strength',                                             'The Only Thing I Can Upgrade Is Strength',                    'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T05:43:48.321377"
 ],
 "Hamster428": [
  "def extractHamster428(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Mei Gongqing' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Mei Gongqing', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Hanashi Oba-san": [
  "def extractHanashiObasan(item):\n\t\"\"\"\n\t'Hanashi Oba-san'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('The Hero Suddenly Proposed to Me But',       'The Hero Suddenly Proposed to me, but\u2026',           'translated'),\n\t\t('Hero Suddenly Proposed',                     'The Hero Suddenly Proposed to me, but\u2026',           'translated'),\n\t\t('souryo-sama no koiwazurai',                  'A Monk\\'s Lovesickness',                           'translated'),\n\t\t('Monk\\'s Lovesickness',                       'A Monk\\'s Lovesickness',                           'translated'),\n\t\t('Magic Academy\\'s Romantic Circumstances',    'The Magic Academy\\'s Romantic Circumstances',      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Renai Jijou',    'The Magic Academy\\'s Romantic Circumstances', 'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-12-31T03:51:33.631947"
 ],
 "Hand of Vecna": [
  "def extractHandofvecnaBlogspotCom(item):\n\t'''\n\tParser for 'handofvecna.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('A Wild Last Boss Appeared',       'A Wild Last Boss Appeared',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-26T07:32:35.029559"
 ],
 "Hannitried": [
  "\ndef extractHannitriedHomeBlog(item):\n\t'''\n\tParser for 'hannitried.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn _buildReleaseMessage(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-07T07:52:35.557756"
 ],
 "Happy Sheep Translation": [
  "def extractHappysheeptraductionWordpressCom(item):\n\t'''\n\tParser for 'happysheeptraduction.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Back to the Apocalyse : Chapter',  'Back to the Apocalyse',      'translated'),\n\t\t('Back to the Apocalypse : Chapter',  'Back to the Apocalyse',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-21T02:37:35.487420"
 ],
 "HappyFloof Translations": [
  "def extractHappyfloofBlogspotCom(item):\n\t'''\n\tParser for 'happyfloof.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('HILSBO',       'Hero? I\\'ve Long Stopped Being One',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T06:54:55.129412"
 ],
 "Happythexceed \u306e Corner": [
  "def extractHappythexceed\u306eCorner(item):\n\t\"\"\"\n\tParser for 'Happythexceed \u306e Corner'\n\t\"\"\"\n\treturn None",
  "2018-06-19T06:45:09.426490"
 ],
 "HarHar Translation": [
  "def extractHarhartlWordpressCom(item):\n\t'''\n\tParser for 'harhartl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Sons, Too Mensao',                    'Sons, Too Mensao',                                   'translated'),\n\t\t('My Chief Husband, Too Mensao!',       'My Chief Husband, Too Mensao!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-11T05:30:12.660914"
 ],
 "Hara FTranslation": [
  "\ndef extractHaraftranslationWordpressCom(item):\n\t'''\n\tParser for 'haraftranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:37.495631"
 ],
 "Haraguro Scans": [
  "def extractHaraguroscansBlogspotCom(item):\r\n\t'''\r\n\tParser for 'haraguroscans.blogspot.com'\r\n\t'''\r\n\r\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\r\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\r\n\t\treturn None\r\n\tif 'Manga' in item['tags']:\r\n\t\treturn None\r\n\t\t\r\n\ttagmap = [\r\n\t\t('GJ-Bu',       'GJ Bu',                      'translated'), \r\n\t]\r\n\r\n\tfor tagname, name, tl_type in tagmap:\r\n\t\tif tagname in item['tags']:\r\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\r\n\r\n\r\n\treturn False",
  "2017-05-05T09:08:35.653041"
 ],
 "Harry Potter and the Methods of Rationality": [
  "\ndef extractHpmorCom(item):\n\t'''\n\tParser for 'hpmor.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-03T17:31:29.641474"
 ],
 "Haru no Sutori": [
  "def extractHaruNoSutori(item):\n\t\"\"\"\n\tParser for 'Haru no Sutori'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "HaruChika & Ghost Hunt Translations": [
  "def extractHaruchikaGhostHuntTranslations(item):\n\t\"\"\"\n\tParser for 'HaruChika & Ghost Hunt Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "HaruPARTY": [
  "def extractHaruPARTY(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Yuusha Party' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Yuusha Party no Kawaii Ko ga Ita no de, Kokuhaku Shite', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Haruchika Novel": [
  "def extractNop(dummy_item):\n\t\"\"\"\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Haru\u2605": [
  "def extractHaru(item):\n\t\"\"\"\n\tParser for 'Haru\u2605'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Hasutsuki": [
  "def extractHasutsuki(item):\n\t\"\"\"\n\tHasutsuki\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Kinju Tsukai',                    'Seiju no Kuni no Kinju Tsukai',                      'translated'),\n\t\t('Kurono Senki',                    'Kuro no senki',                                      'translated'),\n\t\t('Kuro no senki',                   'Kuro no senki',                                      'translated'),\n\t\t('Annals of The Flame Kingdom',     'Annals of The Flame Kingdom',                        'translated'),\n\t\t('Demon Army Staff Officer',        'Demon Army Staff Officer',                           'translated'),\n\t\t('Wortenia Senki',                  'Wortenia Senki',                                     'translated'),\n\t\t('Wortenia War',                    'Wortenia Senki',                                     'translated'),\n\t\t('Reform',                          'Tsumi Kake Tensei Ryoushu no Kaikaku',               'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\ttitlemap = [\n\t\t('Record of Wortenia War \u2013 ',                    'Wortenia Senki',                                     'translated'),\n\t\t('Flame Kingdom \u2013 ',                             'Annals of The Flame Kingdom',                        'translated'),\n\t\t('Demon Army Staff Officer \u2013 ',                  'Demon Army Staff Officer',                           'translated'),\n\t\t('Kuro no Senki \u2013 ',                             'Kuro no senki',                                      'translated'),\n\t\t('The Girl and The War \u2013 ',                      'The Girl and The War',                               'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\t\n\treturn False",
  "2018-11-07T05:46:04.980027"
 ],
 "Heart Crusade Scans": [
  "def extractHeartCrusadeScans(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Heart n' Habit": [
  "def extractNovelsHeartnhabitCom(item):\n\t'''\n\tParser for 'novels.heartnhabit.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttag_title_map = [\n\t\t('Black Belly Boss\\'s Pet Wife (\u9ed1\u8001\u5927\u4eec\u7684\u5ba0\u59bb)',     'Black Belly Boss\\'s Pet Wife',                                 'translated'),\n\t\t('Black Belly Boss\\'s Pet Wife',                      'Black Belly Boss\\'s Pet Wife',                                 'translated'),\n\t\t('LITTLE GOBLIN: Master don\\'t come here!',           'LITTLE GOBLIN: Master don\\'t come here!',                      'translated'),\n\t\t('LITTLE GOBLIN: Master, don\u2019t come here!',           'LITTLE GOBLIN: Master don\\'t come here!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tag_title_map:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tfor titlecomponent, name, tl_type in tag_title_map:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\treturn False",
  "2018-07-02T05:05:56.769974"
 ],
 "Heavenly Enchantress": [
  "\ndef extractWwwHeavenlyenchantressCom(item):\n\t'''\n\tParser for 'www.heavenlyenchantress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T09:27:19.151704"
 ],
 "Heavenly Star Translations": [
  "def extractHeavenlyStarTranslations(item):\n\t\"\"\"\n\tParser for 'Heavenly Star Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Heavens Justice Translation": [
  "def extractHeavensJusticeTranslation(item):\n\t\"\"\"\n\tHeavens Justice Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Heavy Armoured Truck In Post-apocalyptic World": [
  "\ndef extractIndimtlWordpressCom(item):\n\t'''\n\tParser for 'indimtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-16T11:23:47.958736"
 ],
 "Hecate's Corner": [
  "def extractHecatesCorner(item):\n\t\"\"\"\n\t\"Hecate's Corner\"\n\t\"\"\"\n\t\n\tif '\u30d8\u30ab\u30c6\u306e\u30aa\u30b9\u30b9\u30e1' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Meido',                        'Maid will go on through thick and thin!',     'translated'),\n\t\t('HeroxMaou',                    'HeroxMaou',                                   'translated'),\n\t\t('Lightning Empress Maid',       'Lightning Empress Maid',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('L.E.M. C.',                   'Lightning Empress Maid',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\treturn False",
  "2018-05-02T04:39:01.187477"
 ],
 "Heliakon Translations": [
  "def extractHeliakontranslationsWordpressCom(item):\n\t'''\n\tParser for 'heliakontranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Villains Need to Save the World?',       'The Villains Need to Save the World?',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-11T06:25:15.209328"
 ],
 "Helidwarf": [
  "def extractHelidwarf(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Alderamin on the Sky' in item['tags']:\n\t\tif not vol:\n\t\t\tvol = 2\n\t\treturn buildReleaseMessageWithType(item, 'Alderamin on the Sky', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Hell Satan": [
  "\ndef extractHell5AtanWordpressCom(item):\n\t'''\n\tParser for 'hell5atan.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:46.671977"
 ],
 "Hell Yeah 524": [
  "def extractHellYeah524(item):\n\t\"\"\"\n\t# 'Hell Yeah 524'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith('Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Awakening \u2013 \u4eff\u5982\u6628\u65e5', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Awakening: Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Awakening \u2013 \u4eff\u5982\u6628\u65e5', vol, chp, frag=frag, postfix=postfix)\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith('Shadow Rogue: '):\n\t\treturn buildReleaseMessageWithType(item, 'Shadow Rogue', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('The Almighty Martial Arts System Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'The Almighty Martial Arts System', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Inverted Dragon Scale: Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Inverted Dragon Scale', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-12-08T05:21:04.655319"
 ],
 "Helli Translations": [
  "def extractHellitranslationsWordpressCom(item):\n\t'''\n\tParser for 'hellitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rebirth of the Wolfish Silkpants Bottom',       'Rebirth of the Wolfish Silkpants Bottom',                      'translated'),\n\t\t('Demon Boss in the Human World',                 'Demon Boss in the Human World [Entertainment Circle]',         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('RWSB Chapter',                'Rebirth of the Wolfish Silkpants Bottom',         'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',                      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',                               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-26T07:42:14.236459"
 ],
 "Hello Translations": [
  "def extractHelloTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "HelloReaders": [
  "\ndef extractHellotranslatorWordpressCom(item):\n\t'''\n\tParser for 'hellotranslator.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:40:33.488919"
 ],
 "Hellping": [
  "def extractHellping(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Hellsing Federation Translations": [
  "def extractHellsingFederationTranslations(item):\n\t\"\"\"\n\tParser for 'Hellsing Federation Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Hendricksen-sama": [
  "def extractHendricksensama(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Henouji Translation": [
  "def extractHenoujiTranslation(item):\n\t\"\"\"\n\t# Henouji Translation\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tnumeric_start = False\n\ttry:\n\t\tv = int(item['title'].split(' ')[0])\n\t\tnumeric_start = True\n\texcept ValueError:\n\t\tpass\n\t\n\tif item['tags'] == ['Web Novel'] and chp and not vol and  numeric_start:\n\t\tvol = 3\n\t\treturn buildReleaseMessageWithType(item, 'Kazuha Axeplant\u2019s Third Adventure', vol, chp, frag=frag, postfix=postfix)\n\tif item['tags'] == ['Light Novel'] and chp and not vol and  numeric_start:\n\t\tvol = 3\n\t\treturn buildReleaseMessageWithType(item, 'Kazuha Axeplant\u2019s Third Adventure', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\tif 'Get Naked' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Kazuha Axeplant\u2019s Third Adventure', vol, chp, frag=frag, postfix=postfix)\n\tif 'What Came to Mind During my Third Time in Another World was to For now Get Naked' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kazuha Axeplant\u2019s Third Adventure', vol, chp, frag=frag, postfix=postfix)\n\tif ('Tensai Slime' in item['tags'] or 'Tensei Slime' in item['tags']):\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shitara Slime Datta Ken', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-08-30T04:26:10.999357"
 ],
 "Heretic": [
  "\ndef extractHereticunboundWordpressCom(item):\n\t'''\n\tParser for 'hereticunbound.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:40.565908"
 ],
 "Heretical Edge": [
  "\ndef extractCeruleanscrawlingWordpressCom(item):\n\t'''\n\tParser for 'ceruleanscrawling.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:33.686334"
 ],
 "Hero Go Home": [
  "\ndef extractWwwHerogohomeCom(item):\n\t'''\n\tParser for 'www.herogohome.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:26.069226"
 ],
 "Heroic Legend of Arslan Translations": [
  "def extractHeroicLegendOfArslanTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Heroic Novels": [
  "def extractHeroicNovels(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('id',                              'ID \u2013 The Greatest Fusion Fantasy',    'translated'),\n\t\t('Magician City',                   'Magician City',                       'translated'),\n\t\t('The Hero',                        'The Hero',                            'translated'),\n\t\t('reader',                          'Reader',                              'translated'),\n\t\t('Dragon Order of Flame',           'Dragon Order of Flame',               'translated'),\n\t\t('The Overlord of Blood and Iron',  'The Overlord of Blood and Iron',      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['title'].startswith('The Hero Volume'):\n\t\treturn buildReleaseMessageWithType(item, 'The Hero', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Metatron Volume'):\n\t\treturn buildReleaseMessageWithType(item, 'Metatron', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Dragon Order of Flame Vol'):\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Order of Flame', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-08-12T08:23:01.421236"
 ],
 "Hi-Five": [
  "\ndef extractPwilliamrossWordpressCom(item):\n\t'''\n\tParser for 'pwilliamross.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:54.067757"
 ],
 "Hikki no Mori Translations": [
  "def extractHikkinoMoriTranslations(item):\n\t\"\"\"\n\t# 'Hikki no Mori Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('chapter') or item['title'].lower().startswith('hyaku ma no shu'):\n\t\treturn buildReleaseMessageWithType(item, 'Hyaku ma no Shu', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t('Falling In Love With The Villainess',       'Falling In Love With The Villainess',                      'translated'), \n\t\t('FILWTV',       'Falling In Love With The Villainess',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-05-05T08:56:16.783912"
 ],
 "Hikkineet on the Job": [
  "def extractHikkitrenBlogspotCom(item):\n\t'''\n\tParser for 'hikkitren.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Stranger\\'s handbook ',  'Stranger\\'s Handbook',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-03-26T06:25:49.657829"
 ],
 "Hikoki Translations": [
  "def extractHikokitranslationsWordpressCom(item):\n\t'''\n\tParser for 'hikokitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Isekai Mahou wa Okureteru! (LN)',  'Isekai Mahou wa Okureteru! (LN)',      'translated'),\n\t\t('Isekai Mahou wa Okureteru!',       'Isekai Mahou wa Okureteru!',           'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-07-23T08:03:10.833024"
 ],
 "Hiliriv's Fantasy": [
  "def extractHilirivsfantasyWordpressCom(item):\n\t'''\n\tParser for 'hilirivsfantasy.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tchp_prefixes = [\n\t\t\t('Rimokon: Chapter',  'Parameter Remote Controller',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-10-28T06:57:54.281036"
 ],
 "HillOH's Translation": [
  "def extractHilloh16WordpressCom(item):\n\t'''\n\tParser for 'hilloh16.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif item['tags'] == ['Uncategorized']:\n\t\tchp_prefixes = [\n\t\t\t\t('The Ugly Empress',  'The Ugly Empress',               'translated'),\n\t\t\t]\n\t\n\t\tfor prefix, series, tl_type in chp_prefixes:\n\t\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\n\treturn False",
  "2019-01-26T14:50:48.492873"
 ],
 "Hima Translations": [
  "\ndef extractHimatranslationsWordpressCom(item):\n\t'''\n\tParser for 'himatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-04T03:31:47.371902"
 ],
 "Himegami no Miko Translated": [
  "def extractHimegamiNoMikoTranslated(item):\n\t\"\"\"\n\tParser for 'Himegami no Miko Translated'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "HimikoChou Translates BL": [
  "def extractHimikochouWordpressCom(item):\n\t'''\n\tParser for 'himikochou.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\ttagmap = [\n\t\t('Affection: Call of the King',       'Affection: Call of the King',                      'translated'),\n\t\t('DLLB',                              'Demon-Lord\u2019s Little Bride',                        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\tchp_prefixes = [\n\t\t\t('SNITIP-',  'Secret Nights in the Inner Palace-Supreme Emperor and his beloved two flowered princess-',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-04-16T22:57:05.804856"
 ],
 "Hinawary": [
  "def extractHinawaryWordpressCom(item):\n\t'''\n\tParser for 'hinawary.wordpress.com'\n\t'''\n\tif 'doodles and writing drafts' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif item['tags'] == ['Pork Belly']:\n\t\treturn buildReleaseMessageWithType(item, 'Pork Belly', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\tif item['tags'] == ['Chapters']:\n\t\treturn buildReleaseMessageWithType(item, 'The Story of a Small Fox Who Has a Star', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\n\ttagmap = [\n\t\t('the story of a small fox who has a star',       'The Story of a Small Fox Who Has a Star',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-23T06:05:17.135182"
 ],
 "Hindi to english translated novels": [
  "\ndef extractHin2EngnovelsWordpressCom(item):\n\t'''\n\tParser for 'hin2engnovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:40.829018"
 ],
 "Hiohbye Translations": [
  "def extractHiohbyeTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Corpse King Confuses the World, All Seven Husbands Are Devils' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Corpse King Confuses the World, All Seven Husbands Are Devils', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\ttagmap = [\n\t\t('The Corpse King Confuses the World, All Seven Husbands Are Devils',       'The Corpse King Confuses the World, All Seven Husbands Are Devils',                      'translated'),\n\t\t('Blood-Sucking Empress',                                                   'Blood-Sucking Empress',                                                                  'translated'),\n\t\t('Seventh Imperial \"Brother\"',                                              'Seventh Imperial \"Brother\"',                                                             'translated'),\n\t\t('Chang\\'an Intoxicated',                                                   'Chang\\'an Intoxicated',                                                                  'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-06-13T04:33:08.800680"
 ],
 "Hiraeth Translations": [
  "def extractHiraethtranslationsHomeBlog(item):\n\t'''\n\tParser for 'hiraethtranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Blood Contract',       'Blood Contract',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-27T10:55:53.576697"
 ],
 "Hirika's MTL": [
  "def extractHirikamtlBlogspotCom(item):\n\t'''\n\tParser for 'hirikamtl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('OTOGE',       'I Don\u2019t Want to Die in an Otome Game',                      'translated'),\n\t\t('MWP',         'My Wolf Prince',                      'translated'),\n\t\t('Kurousa',     'The Black Healing Holy Beast ~Is What It Is Exaggeratedly Called but It Is Just a Black Rabbit~',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T00:22:49.982975"
 ],
 "Hirika's MTs": [
  "def extractHirikasMTs(item):\n\t\"\"\"\n\t\"Hirika's MTs\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = {\n\t\t'IDWTDIAOG'                                  : 'I Don\\'t Want To Die In An Otome Game',\n\t\t'SBS'                                        : 'Sleeping Beauty\\'s Sweets',\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\t\t\t\n\treturn False",
  "2017-03-26T09:40:25.838422"
 ],
 "Hitogai Translations": [
  "\ndef extractHitogaiCom(item):\n\t'''\n\tParser for 'hitogai.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:31.808862"
 ],
 "Ho Springs": [
  "\ndef extractHospringsCom(item):\n\t'''\n\tParser for 'hosprings.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:29.245665"
 ],
 "Hokage Translations": [
  "def extractHokageTrans(item):\n\t\"\"\"\n\t# Hokage Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif any([('Aim the Deepest Part of the Different World Labyrinth'.lower() in tag.lower()) for tag in item['tags']]):\n\t\tif re.match('\\\\d+\\\\.', item['title']):\n\t\t\tpostfix = item['title'].split('.', 1)[-1]\n\t\treturn buildReleaseMessageWithType(item, 'Aim the Deepest Part of the Different World Labyrinth', vol, chp, frag=frag, postfix=postfix)\n\tif any([('Divine Protection of Many Gods'.lower() in tag.lower()) for tag in item['tags'] + [item['title']]]):\n\t\treturn buildReleaseMessageWithType(item, 'Divine Protection of Many Gods', vol, chp, frag=frag, postfix=postfix)\n\tif any([('Because Janitor-san is Not a Hero'.lower() in tag.lower()) for tag in item['tags'] + [item['title']]]):\n\t\treturn buildReleaseMessageWithType(item, 'Because Janitor-san is Not a Hero', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Hold 'X' and Click": [
  "def extractHoldX(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Shoya Kara Hajimeru Ai Aru Seikatsu',                      'Shoya Kara Hajimeru Ai Aru Seikatsu',                      'translated'),\n\t\t('Bishoujo wo Jouzu ni Nikubenki ni Suru Houhou',            'Bishoujo wo Jouzu ni Nikubenki ni Suru Houhou',            'translated'),\n\t\t('Riaru de Reberu Age Shitara Hobo Ch\u012btona Jinsei ni Natta', 'Riaru de Reberu Age Shitara Hobo Ch\u012btona Jinsei ni Natta', 'translated'),\n\t\t('Erogacha',                                                 'Erogacha',                                                 'translated'),\n\t\t('Ore no Sekai no Kouryakubon',                              'Ore no Sekai no Kouryakubon',                              'translated'),\n\t\t('Takarakuji de 40 oku Atatta Ndakedo i Sekai ni Ij\u016b Suru',  'Takarakuji de 40 oku Atatta Ndakedo i Sekai ni Ij\u016b Suru',  'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Bishoujo wo Jouzu ni Nikubenki ni Suru Houhou',            'Bishoujo wo Jouzu ni Nikubenki ni Suru Houhou',            'translated'),\n\t\t('Ore no Sekai no Kouryakubon',                              'Ore no Sekai no Kouryakubon',                              'translated'),\n\t\t('Erogacha',                                                 'Erogacha',                                                 'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\treturn False",
  "2018-01-28T05:20:54.192492"
 ],
 "Holden Atadero": [
  "\ndef extractCrimsonzayerBlogspotCom(item):\n\t'''\n\tParser for 'crimsonzayer.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:50:36.436744"
 ],
 "Holly(Woods)": [
  "\ndef extractHollywoodserialWordpressCom(item):\n\t'''\n\tParser for 'hollywoodserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:21.376015"
 ],
 "Home": [
  "\ndef extractGnunovelsCom(item):\n\t'''\n\tParser for 'gnunovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:27.871303"
 ],
 "Home of the Dragon": [
  "def extractEnlightendragonsCom(item):\n\t'''\n\tParser for 'enlightendragons.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Drezo Regalia', 'Drezo Regalia',             'oel'),\n\t\t('Black Moon',    'Black Moon',                'oel'),\n\t\t('Mind Linkers',  'Mind Linkers',              'oel'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Ophidian Aspect Chapter ',           'Ophidian Aspect',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-03-29T04:33:32.852946"
 ],
 "Hon'yaku": [
  "def extractHonyaku(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('pharmacist',  'Cheat Pharmacist\u2019s Slow Life ~Making a Drug Store in Another World~',                                                                                                  'translated'),\n\t\t('kujonin',     'Kujonin',                                                                                                                                                              'translated'),\n\t\t('OVRMMO',      'Toaru Ossan no VRMMO Katsudouki (WN)',                                                                                                                                 'translated'),\n\t\t('VendM',       'Jidou Hanbaiki ni Umarekawatta ore wa Meikyuu o Samayou',                                                                                                              'translated'),\n\t\t('5th Son',     'The Cheeky Fifth Son of a Noble',                                                                                                                                      'oel'),\n\t\t('Cursed',      'Kousei Ishikawa is Cursed!',                                                                                                                                           'oel'),\n\t\t('Dragon',      'Dragon-chan Doesn\u2019t Want to be Hunted',                                                                                                                                'oel'),\n\t\t('Wfb',         'Wizard with the flower blades',                                                                                                                                        'oel'),\n\t\t('OriginStory', 'OriginStory the VRMMO: The advent of AxeBear',                                                                                                                         'oel'),\n\t\t('Fluvia',      'Fluvia Dellarose was Supposed to be an Otome Game\u2019s Mini-Boss Villain, but Her Strong Maternal Instincts Prevailed! \u2013 As Expected of a Former Single-Mom.',            'oel'),\n\t\t('baiyu',       'Bookstore with White Jade Wings',                                                                                                                                      'oel'),\n\t\t('electricity', 'Electric City\u2019s Center for Lost Children',                                                                                                                             'oel'),\n\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\turlfrag = [\n\t\t('/baiyuyi-',      'Bookstore with White Jade Wings',                                                                                                                                 'oel'),\n\t\t('/cursed-',       'Kousei Ishikawa is Cursed!',                                                                                                                                      'oel'),\n\t\t('/wfb-chapter-',  'Wizard with the flower blades',                                                                                                                                   'oel'),\n\t\t('/senses-',       'Nai\u2019s Five Senses',                                                                                                                                               'oel'),\n\t\t('/naissenses-',   'Nai\u2019s Five Senses',                                                                                                                                               'oel'),\n\t\t('/assassin',      'The Former Assassin will Assassinate the Demon Generals because her Brother is the NPC Army\u2019s Vice-Commander and the Heroes aren\u2019t Leveling up Fast Enough',      'oel'),\n\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-03-09T05:00:29.689217"
 ],
 "Honor & Truth": [
  "\ndef extractHonorAndTruthBlogspotCom(item):\n\t'''\n\tParser for 'honor-and-truth.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-22T23:59:32.747862"
 ],
 "Hontra": [
  "def extractWwwHontraCom(item):\n\t'''\n\tParser for 'www.hontra.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ex-Hero-Book',       'The Laid-back Life in Another World of the Ex-Hero Candidate Who Turned out to be a Cheat from Level 2',                      'translated'),\n\t\t('PRC',                'PRC',                      'translated'),\n\t\t('Loiterous',          'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-27T03:45:32.302596"
 ],
 "Hoopla Translations": [
  "def extractHooplaTranslations(item):\n\t'''\n\tParser for 'Hoopla Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\t\n\n\ttagmap = {\n\n\t\t\"Mushoku Tensei Redundancy Chapters\"                     :  \"Mushoku Tensei Redundancy\",\n\t\t\"Mushoku Tensei Redundancy Chapters TL\"                  :  \"Mushoku Tensei Redundancy\",\n\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\n\n\n\treturn False",
  "2017-03-25T08:43:06.784248"
 ],
 "Horny Translations": [
  "def extractHornytranslationsWordpressCom(item):\n\t'''\n\tParser for 'hornytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Junior High School Sex Slave Runa',                                                     'Junior High School Sex Slave Runa',                                                    'translated'),\n\t\t('Women\\'s Dormitory Manager',                                                            'Women\\'s Dormitory Manager',                                                           'translated'),\n\t\t('Valhalla - The Penis Mansion',                                                          'Valhalla - The Penis Mansion',                                                         'translated'),\n\t\t('The Day My Sister Became an Exclusive Meat Toilet',                                     'The Day My Sister Became an Exclusive Meat Toilet',                                    'translated'),\n\t\t('I Have The Only Ero Knowledge In The World, So I Decided To Cum Inside Pretty Girls',   'I Have The Only Ero Knowledge In The World, So I Decided To Cum Inside Pretty Girls',  'translated'),\n\t\t('The Record of My Sex Life in a Different World',                                        'The Record of My Sex Life in a Different World',                                       'translated'),\n\t\t('My Elder Sister Fell in Love with Me and Transformed into a Yandere',                   'My Elder Sister Fell in Love with Me and Transformed into a Yandere',                  'translated'),\n\t\t('Chronicles of a Creative Different World Reincarnation',                                'Chronicles of a Creative Different World Reincarnation',                               'translated'),\n\t\t('The Duo Who Hunt Women',                                                                'The Duo Who Hunt Women',                                                               'translated'),\n\t\t('Fate Comes with Time',                                                                  'Fate Comes with Time',                                                                 'translated'),\n\t\t('World Class Prostitution ring',                                                         'World Class Prostitution ring',                                                        'translated'),\n\t\t('Serena \u2013 The Futanari Princess',                                                        'Serena \u2013 The Futanari Princess',                                                       'translated'),\n\t\t('Princess Insult',                                                                       'Princess Insult',                                                                      'translated'),\n\t\t('Marriage Insult',                                                                       'Marriage Insult',                                                                      'translated'),\n\t\t('Hypnotized Harem',                                                                      'Hypnotized Harem',                                                                     'translated'),\n\t\t('International Sex Slave Law',                                                           'International Sex Slave Law',                                                          'translated'),\n\t\t('Books to Dominate Married Women',                                                       'Books to Dominate Married Women',                                                      'translated'),\n\t\t('Beautiful Females in the Underground Prison',                                           'Beautiful Females in the Underground Prison',                                          'translated'),\n\t\t('A World Where All Women Are Managed By Men',                                            'A World Where All Women Are Managed By Men',                                           'translated'),\n\t\t('The Training Record of a Married Woman',                                                'The Training Record of a Married Woman',                                               'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-15T20:07:04.312065"
 ],
 "Horobi no Michi -side route-": [
  "def extractHorobinomichiWordpressCom(item):\n\t'''\n\tParser for 'horobinomichi.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('weisselillie',       'Weisselillie ~senka ni sasagu ai no hana, soredemo atashi wa sekai ga hoshii~',    'translated'),\n\t\t('maid in isekai',     'Maid in Isekai \u226aFantasia\u226b',                                                       'translated'),\n\t\t('autodoll',           'Autodoll wa Kuchita Sekai de Yume wo Miru',                                        'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T06:40:19.632430"
 ],
 "Hot Chocolate Scans": [
  "def extractHotchocolatescansCom(item):\n\t'''\n\tParser for 'hotchocolatescans.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tbad_tags = [\n\t\t\t'Yahari Ore no Seishun Rabukome wa Machigatte Iru. - Mougenroku',\n\t\t\t'D-frag',\n\t\t\t'Beastars',\n\t\t\t'The Legend of Zelda: Twilight Princess',\n\t\t\t'Watashi no Shounen',\n\t\t\t'Konjiki no Moji Tsukai',\n\t\t]\n\t\n\tif any([tag in item['tags'] for tag in bad_tags]):\n\t\treturn None\n\t\t\n\t\n\tif \"hotchocolatescans.com/fs/download/\" in item['contents']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T02:59:01.445970"
 ],
 "Hot Cocoa Translations": [
  "def extractHotCocoa(item):\n\t\"\"\"\n\t# Hot Cocoa Translations\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'She Professed Herself The Pupil Of The Wise Man'.lower() in item['title'].lower() or 'She Professed Herself The Pupil Of The Wise Man'.lower() in [tmp.lower() for\n\t    tmp in item['tags']]:\n\t\treturn buildReleaseMessageWithType(item, 'Kenja no Deshi wo Nanoru Kenja', vol, chp, frag=frag)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Hotdog Translations": [
  "def extractHotdogtranslationsWordpressCom(item):\n\t'''\n\tParser for 'hotdogtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Netoge no Yome',       'Netoge no Yome wa Onnanoko ja Nai to Omotta?',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T06:29:50.298222"
 ],
 "Hotfoot: a Superhero Serial": [
  "\ndef extractWhyknotzoidbergWordpressCom(item):\n\t'''\n\tParser for 'whyknotzoidberg.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:13.815301"
 ],
 "House of Rain": [
  "def extractHouseofrainHomeBlog(item):\n\t'''\n\tParser for 'houseofrain.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == ['Uncategorized']:\n\t\t\tchp_prefixes = [\n\t\t\t('Broke Mercenary Chapter ',  'The Strange Adventure of a Broke Mercenary',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\n\treturn False",
  "2019-05-18T08:23:08.423548"
 ],
 "Howa Ho Hoe": [
  "\ndef extractHowahohoeWordpressCom(item):\n\t'''\n\tParser for 'howahohoe.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:53:37.478239"
 ],
 "Huakuryi": [
  "def extractHuakuryiWordpressCom(item):\n\t'''\n\tParser for 'huakuryi.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\tif 'Lyrics' in item['tags']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('Saikyou no Kishidan',                             'Saikyou no Kishidan',                                            'translated'),\n\t\t('Isekai ni Tobasareta Ossan wa Doko e Iku?',       'Isekai ni Tobasareta Ossan wa Doko e Iku?',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-30T04:31:40.202708"
 ],
 "Hugs & Love": [
  "def extractHugsAndLove(item):\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif not postfix and ':' in item['title']:\n\t\tpostfix = item['title'].split(':', 1)[-1]\n\tif 'Felicia Second Life' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Felicia Second Life', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'the rock' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Rock', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif item['title'].startswith('Armageddon'):\n\t\treturn buildReleaseMessageWithType(item, 'Armageddon', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Huntress Translations": [
  "def extractWwwHuntresstranslationsXyz(item):\n\t'''\n\tParser for 'www.huntresstranslations.xyz'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Male Lead You\\'re Overpowered',       'Quick Transmigration: Male Lead, You\\'re Overpowered?',                      'translated'),\n\t\t('MLYO',                                'Quick Transmigration: Male Lead, You\\'re Overpowered?',                      'translated'),\n\t\t('PRC',                                 'PRC',                      'translated'),\n\t\t('Loiterous',                           'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:51:21.229731"
 ],
 "Huw Langridge": [
  "\ndef extractHuwlangridgeBlogspotCom(item):\n\t'''\n\tParser for 'huwlangridge.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:36.907157"
 ],
 "Hyaenas Translations": [
  "def extractHyaenasblogWordpressCom(item):\n\t'''\n\tParser for 'hyaenasblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('She was both called God, as well as Satan',       'She was both called God, as well as Satan',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif item['title'].startswith(\"Chapter \") and item['tags'] == ['Uncategorized']:\n\t\t\treturn buildReleaseMessageWithType(item, 'She was both called God, as well as Satan', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\n\treturn False",
  "2018-12-30T04:35:32.817430"
 ],
 "Hyorinmaru": [
  "def extractHyorinmaruBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().strip().startswith('martial world \u2013 ') or 'Martial World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial World', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Hyorinmaru Blog": [
  "def extractHyorinmaruBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().strip().startswith('martial world \u2013 ') or 'Martial World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial World', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "I Am Doppelganger": [
  "def extractIamdoppelgangerblogWordpressCom(item):\n\t'''\n\tParser for 'iamdoppelgangerblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['title'].startswith('Chapter '):\n\t\treturn buildReleaseMessageWithType(item, \"I Am Doppelganger\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-07-18T05:24:12.678587"
 ],
 "I Ballistic Bunnies": [
  "def extractIBallisticBunnies(item):\n\t\"\"\"\n\tI Ballistic Bunnies\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "I Have Sinned": [
  "def extractScelusscelerisWordpressCom(item):\n\t'''\n\tParser for 'scelussceleris.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Tensei Shite Inaka de Slowlife wo Okuritai',       'Tensei Shite Inaka de Slowlife wo Okuritai',                      'translated'),\n\t\t('tensei shite inaka',                               'Tensei Shite Inaka de Slowlife wo Okuritai',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-20T06:21:49.944920"
 ],
 "I Speak MTL": [
  "def extractISpeakMtl(item):\n\t\"\"\"\n\tParser for 'I Speak MTL'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'IIH Chapter' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"I'm In Hollywood \", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "I Translate For Fun": [
  "def extractIt4FWordpressCom(item):\n\t'''\n\tParser for 'it4f.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\ttagset = set(item['tags'])\n\t\n\tif tagset == set([\"Uncategorized\", \"Adventure\", \"Fiction\", \"Fantasy\"]) and item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, 'Devil\u2019s Son-In-Law', vol, chp, frag=frag, postfix=postfix)\n\t\n\n\treturn False",
  "2017-10-26T03:30:02.069243"
 ],
 "I am Procrastinator": [
  "\ndef extractIamprocrastinatorWordpressCom(item):\n\t'''\n\tParser for 'iamprocrastinator.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:29.283566"
 ],
 "I am a Great Scientist": [
  "\ndef extractItranslatechWordpressCom(item):\n\t'''\n\tParser for 'itranslatech.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-31T06:04:42.613706"
 ],
 "I only want Shinji.": [
  "def extractIOnlyWantShinji(item):\n\t\"\"\"\n\tParser for 'I only want Shinji.'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "I swear I'm not lost... I'm just... exploring...": [
  "def extractISwearIMNotLostIMJustExploring(item):\n\t\"\"\"\n\tParser for 'I swear I'm not lost... I'm just... exploring...'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "I've reincarnated, but I'm a Girl! Wait, am I not even Human?": [
  "def extractIVeReincarnatedButIMAGirlWaitAmINotEvenHuman(item):\n\t\"\"\"\n\tParser for 'I've reincarnated, but I'm a Girl! Wait, am I not even Human?'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "IAmABanana Freshie Translation": [
  "def extractIAmABananaFreshieTranslation(item):\n\t\"\"\"\n\t'IAmABanana Freshie Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Prince You Are So Cheap' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Prince You Are So Cheap', vol, chp, frag=frag, postfix=postfix)\n\tif 'GMMU' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Good Morning, Miss Undercover', vol, chp, frag=frag, postfix=postfix)\n\tif '\u5148\u64a9\u4e3a\u656c Let me tease you' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Let Me Tease You', vol, chp, frag=frag, postfix=postfix)\n\tif 'yin emperor yang empress' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Yin Emperor or The Yang Empress', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif item['title'].startswith('(ON)The Yin Emperor or The Yang Empress'):\n\t\treturn buildReleaseMessageWithType(item, 'The Yin Emperor or The Yang Empress', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif item['title'].startswith('\u96e8\u9732\u5747\u6cbe Sharing Rain and Dew \u2013'):\n\t\treturn buildReleaseMessageWithType(item, 'Sharing Rain and Dew', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-06-15T05:00:44.314317"
 ],
 "IAmABanana Freshie Translation V2": [
  "def extractIamabananaFreshieTranslationV2(item):\n\t\"\"\"\n\tParser for 'IAmABanana Freshie Translation V2'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "IMemo Translations": [
  "def extractImemotranslationsCom(item):\n\t'''\n\tParser for 'imemotranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hone to Issho',       'Hone to Issho no Isekai Seikatsu',                      'translated'),\n\t\t('PRC',                 'PRC',                                                   'translated'),\n\t\t('Loiterous',           'Loiterous',                                             'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T05:20:57.289815"
 ],
 "Ian's Corner": [
  "def extractIansCorner(item):\n\t\"\"\"\n\t\"Ian's Corner\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Icarus": [
  "def extractIcarus(item):\n\t\"\"\"\n\tParser for 'Icarus'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Icarus Bride Scanlation": [
  "def extractIcarusBrideScanlation(item):\n\t\"\"\"\n\tParser for 'Icarus Bride Scanlation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ice Cream Cake TL": [
  "def extractIcecreamcaketlWordpressCom(item):\n\t'''\n\tParser for 'icecreamcaketl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('JikuuMahou',       'Jikuu Mahou de Isekai to Chikyuu wo Ittarikitari',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-08-12T07:41:26.287393"
 ],
 "IceCream1524": [
  "def extractIcecream1524WordpressCom(item):\n\t'''\n\tParser for 'icecream1524.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TRWSB',       'The Rebirth Waste Strikes Back',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T07:00:26.576200"
 ],
 "Ichinichi BL": [
  "def extractIchinichiBl(item):\n\t\"\"\"\n\tParser for 'Ichinichi BL'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ichinonsense": [
  "def extractIchinonsenseBlogspotCom(item):\n\t'''\n\tParser for 'ichinonsense.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Scum of the Cultivation World',       'Scum of the Cultivation World',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-23T07:44:58.316333"
 ],
 "Idle Bear-kun": [
  "def extractIdlebearkunWordpressCom(item):\n\t'''\n\tParser for 'idlebearkun.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Villain heal: The villainess\u2019s plan to heal a broken heart',       'Villain heal: The villainess\\'s plan to heal a broken heart',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-29T06:14:27.573296"
 ],
 "Idle Shelf": [
  "def extractIdleshelfVideoBlog(item):\n\t'''\n\tParser for 'idleshelf.video.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Devil King From the Otherworldly Dimension Chapter ',  'Devil King From the Otherworldly Dimension',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T08:02:05.664658"
 ],
 "Idle Translations": [
  "def extractIdletranslationsWordpressCom(item):\n\t'''\n\tParser for 'idletranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Kaifuku Jutsushi no Yarinaoshi',       'Kaifuku Jutsushi no Yarinaoshi ~ Sokushi Mahou to Skill Copy no Choetsu Heal',      'translated'), \n\t\t('Nagai Koto',                           'Nagai Koto',                                                                        'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-20T07:47:21.749336"
 ],
 "Idle bear-kun": [
  "def extractIdlebearkunCom(item):\n\t'''\n\tParser for 'idlebearkun.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Villain heal: The villainess\u2019s plan to heal a broken heart',       'Villain heal: The villainess\\'s plan to heal a broken heart',                      'translated'),\n\t\t('Second life: I will be the best in this second life!',             'Second life: I will be the best in this second life!',                            'translated'),\n\t\t('O.V.E.R.L.O.R.D One day...I am a villainess',                      'O.V.E.R.L.O.R.D One day...I am a villainess',                                     'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-26T11:17:45.485947"
 ],
 "Idola": [
  "def extractIdolaDreamwidthOrg(item):\n\t'''\n\tParser for 'idola.dreamwidth.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('the legend of the legendary heroes',       'densetsu no yuusha no densetsu',                      'translated'),\n\t\t('densetsu no yuusha no densetsu',           'densetsu no yuusha no densetsu',                      'translated'),\n\t\t('the legend of the fallen black hero',       'the legend of the fallen black hero',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T04:32:59.072893"
 ],
 "Idyllic Translations": [
  "def extractIdyllicTranslations(item):\n\t\"\"\"\n\tIdyllic Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Dragon Long Long' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Long Long', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ignition-One": [
  "def extractIgnitionOneOrg(item):\n\t'''\n\tParser for 'ignition-one.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Demon King',       'The Demon King Always Thinks I\u2019m Secretly In Love With Him',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:07:47.616007"
 ],
 "Illunia": [
  "def extractIlluniaWordpressCom(item):\n\t'''\n\tParser for 'illunia.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('blindness',                                                                 'Blindness',                                                                                'translated'),\n\t\t('Goddess, Help Me!',                                                         'Goddess, Help Me!',                                                                        'translated'),\n\t\t('The Sweet Side of Mister Wolf',                                             'The Sweet Side of Mister Wolf',                                                            'translated'),\n\t\t('Continuation of the Dream in Another World',                                'Continuation of the Dream in Another World',                                               'translated'),\n\t\t('Prince Takatsuki\\'s Mind is Coloured Pink',                                 'Prince Takatsuki\\'s Mind is Coloured Pink',                                                'translated'),\n\t\t('Troubled Villainous Daughter, My Fianc\u00e9 Won\u2019t Stop Approaching Me!?',       'Troubled Villainous Daughter, My Fianc\u00e9 Won\u2019t Stop Approaching Me!?',                      'translated'),\n\t\t('In Regards to My Second Trip and My 7 Husbands',                            'In Regards to My Second Trip and My 7 Husbands',                                           'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-27T10:55:27.126678"
 ],
 "Iluska & Maelani Translations": [
  "def extractIluskamaelanitranslationsWordpressCom(item):\n\t'''\n\tParser for 'iluskamaelanitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('RSMLP',       '(Quick Transmigration) Rescuing Supporting Male Leads Plan',                      'translated'),\n\t\t('TDM',         'The Downs Of Marriage',                                                           'translated'),\n\t\t('TGCMM',       '(Transmigrated) The Girl Who Cured the Crazy BOSS is Majestic and Mighty',        'translated'),\n\t\t('BBWDE',       'Bao Bao Won\u2019t Die Easily ',                                                       'translated'),\n\t\t('XDTH',        'Xiebing Defies The Heavens',                                                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-31T03:52:40.696312"
 ],
 "Imagination Translations": [
  "def extractMissAwesome0948TumblrCom(item):\n\t'''\n\tParser for 'miss-awesome0948.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Have A Trial Marriage With Husband Demanding Extra Effort',       'Have A Trial Marriage With Husband Demanding Extra Effort',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T07:46:31.663298"
 ],
 "ImmortalTranslation": [
  "\ndef extractImmortaltranslationsblogWordpressCom(item):\n\t'''\n\tParser for 'immortaltranslationsblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-12-21T21:16:12.162444"
 ],
 "Imoutolicious Light Novel Translations": [
  "def extractImoutolicious(item):\n\t\"\"\"\n\t# Imoutolicious\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'sekaimo' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sekai Ichi no Imouto-sama', vol, chp, frag=frag, postfix=postfix)\n\tif 'dawnbringer' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dawnbringer: The Story of the Machine God', vol, chp, frag=frag, postfix=postfix)\n\tif 'clotaku club' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sumdeokbu!', vol, chp, frag=frag, postfix=postfix)\n\tif 'four lovers' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Shurabara!', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Imperator": [
  "def extractImperator(item):\n\t\"\"\"\n\tParser for 'Imperator'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "In My Daydreams": [
  "def extractInMyDaydreams(item):\n\t\"\"\"\n\tParser for 'In My Daydreams'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Comment on '):\n\t\treturn None\n\t\t\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-05-18T02:49:16.144741"
 ],
 "In Need Translator": [
  "\ndef extractInneedtranslationBlogspotCom(item):\n\t'''\n\tParser for 'inneedtranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:56:07.762238"
 ],
 "In a Cloud Space": [
  "def extractInacloudspaceWordpressCom(item):\n\t'''\n\tParser for 'inacloudspace.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Drunken Exquisiteness',       'Drunken Exquisiteness',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:03:33.184577"
 ],
 "In the Inkpot": [
  "\ndef extractIntheinkpotfictionWordpressCom(item):\n\t'''\n\tParser for 'intheinkpotfiction.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:46.559494"
 ],
 "In the Valley of the Sun": [
  "\ndef extractMedleymistyWordpressCom(item):\n\t'''\n\tParser for 'medleymisty.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:21.764963"
 ],
 "InNeed Translation": [
  "def extractInneedtranslationWordpressCom(item):\n\t'''\n\tParser for 'inneedtranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Itai no wa Iya',       'Itai no wa Iya nanode B\u014dgyo-Ryoku ni Kyokufuri Shitai to Omoimasu',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tchp_prefixes = [\n\t\t\t('Itai no wa Iya nanode B\u014dgyo-Ryoku ni Kyokufuri Shitai to Omoimasu.',       'Itai no wa Iya nanode B\u014dgyo-Ryoku ni Kyokufuri Shitai to Omoimasu',                'translated'),\n\t\t\t('Slime Tensei. Taikensha ga Youjo Elf ni Dakishimeraretemasu',              'Slime Tensei. Taikensha ga Youjo Elf ni Dakishimeraretemasu',                      'translated'),\n\t\t\t('Itai no Wa chapter',                                                       'Itai no wa Iya nanode B\u014dgyo-Ryoku ni Kyokufuri Shitai to Omoimasu',                'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-12-26T02:43:46.428163"
 ],
 "Inaccurate Translations": [
  "def extractInaccurateTranslations(item):\n\t\"\"\"\n\t'Inaccurate Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Inadequate Translations": [
  "def extractInadequatetranslationsWordpressCom(item):\n\t'''\n\tParser for 'inadequatetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Quick Transmigration Second Female Lead\u2019s Counter Attack',       'Quick Transmigration Second Female Lead\u2019s Counter Attack',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('QT Second Female Lead\u2019s Counter Attack: Ch ',       'Quick Transmigration Second Female Lead\u2019s Counter Attack',                      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-06-14T04:07:15.459825"
 ],
 "Incarneous": [
  "def extractIncarneous(item):\n\t\"\"\"\n\tIncarneous\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('RFSH',                                      'Raising a Fox Spirit in My Home',                      'translated'),\n\t\t('Raising a Fox Spirit in My Home',           'Raising a Fox Spirit in My Home',                      'translated'), \n\t\t('History\\'s Strongest Senior Brother',       'History\\'s Strongest Senior Brother',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('RFSH Chapter',                                  'Raising a Fox Spirit in My Home',                      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif item['title'].lower().startswith(titlecomponent.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-06-05T05:31:24.280267"
 ],
 "Incarose Jealousy MTL": [
  "def extractIncaroseJealousyMTL(item):\r\n\t\"\"\"\r\n\t'Incarose Jealousy MTL'\r\n\t\"\"\"\r\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\r\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\r\n\t\treturn None\r\n\t\t\r\n\tchp_prefixes = [\r\n\t\t\t('konyaku haki? yorosh\u012b. naraba, fukush\u016bda! chapter ',  'Konyaku haki? Yorosh\u012b. Naraba, fukush\u016bda!',   'translated'),\r\n\t\t\t('akuyaku reij\u014d ttenani o sureba yoi nda kke? chapter', 'Akuyaku Reij\u014d ttenani o Sureba Yoi nda kke?', 'translated'),\r\n\t\t\t('mochiron, ishary\u014dseiky\u016b itashimasu! chapter ',        'Mochiron, Ishary\u014dseiky\u016b Itashimasu!',         'translated'),\r\n\t\t\t('dare ga tame chapter ',                               'Dare ga Tame',                                'translated'),\r\n\t\t]\r\n\r\n\tfor prefix, series, tl_type in chp_prefixes:\r\n\t\tif item['title'].lower().startswith(prefix.lower()):\r\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\r\n\r\n\r\n\t\t\r\n\treturn False",
  "2017-12-02T13:45:54.589648"
 ],
 "Inchoate Oeuvre": [
  "def extractInchoateOeuvre(item):\n\t\"\"\"\n\tParser for 'Inchoate Oeuvre'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Indonesian Story Translatio": [
  "def extractIndonesianStoryTranslatio(item):\n\t\"\"\"\n\tParser for 'Indonesian Story Translatio'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Indulgent Translations": [
  "def extractIndulgenttranslationsblogTumblrCom(item):\n\t'''\n\tParser for 'indulgenttranslationsblog.tumblr.com'\n\tParser for 'indulgenttranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TMWGD Chapters',       'The Marshals Want To Get Divorced',                      'translated'),\n\t\t('tmwgd',                'The Marshals Want To Get Divorced',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T11:24:11.732386"
 ],
 "Infinite Novel Translations": [
  "def extractInfiniteNovelTranslations(item):\n\t\"\"\"\n\t# Infinite Novel Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ascendance of a Bookworm',                                   'Ascendance of a Bookworm',                              'translated'), \n\t\t('Yomigaeri no Maou',                                          'Yomigaeri no Maou',                                     'translated'), \n\t\t('Kakei Senki wo Kakageyo!',                                   'Kakei Senki wo Kakageyo!',                              'translated'), \n\t\t('Kuro no Shoukan Samurai',                                    'Kuro no Shoukan Samurai',                               'translated'), \n\t\t('Nidoume no Jinsei wo Isekai de',                             'Nidoume no Jinsei wo Isekai de',                        'translated'), \n\t\t('Hachi-nan',                                                  'Hachinan tte, Sore wa Nai Deshou!',                     'translated'), \n\t\t('Summoned Slaughterer',                                       'Yobidasareta Satsuriku-sha',                            'translated'), \n\t\t('maou no utsuwa',                                             'Maou no Utsuwa',                                        'translated'), \n\t\t('Maou no Ki',                                                 'Maou no Ki',                                            'translated'), \n\t\t('Imperial wars and my stratagems',                            'Imperial Wars and my Stratagems',                       'translated'), \n\t\t('Kuro no Shoukanshi',                                         'Kuro no Shoukanshi',                                    'translated'), \n\t\t('I work as Healer in Another World\\'s Labyrinth City',        'I work as Healer in Another World\\'s Labyrinth City',   'translated'), \n\t\t('The Spearmaster and The Black Cat',                          'The Spearmaster and The Black Cat',                     'translated'), \n\t\t('Hakai no Miko',                                              'Hakai no Miko',                                         'translated'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-01-27T10:56:23.366031"
 ],
 "Infinite Translations": [
  "def extractInfiniteTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Infinitely Yours": [
  "def extract8YoursWordpressCom(item):\n\t'''\n\tParser for '8yours.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"23:11\" in item['tags'] or \"11/23\":\n\t\treturn buildReleaseMessageWithType(item, \"23:11\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-12-26T02:32:49.048922"
 ],
 "Infinity Translations": [
  "def extractInfinityTranslations(item):\n\t\"\"\"\n\t'Infinity Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'ETC' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Emperor of The Cosmos', vol, chp, frag=frag, postfix=postfix)\n\tif 'SAS' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Strongest Abandoned Son', vol, chp, frag=frag, postfix=postfix)\n\tif 'Disb' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Death is The Beginning', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ink Rain Translations": [
  "def extractInkraintlWordpressCom(item):\n\t'''\n\tParser for 'inkraintl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('You Shine in the Moonlit Night +Fragments',       'You Shine in the Moonlit Night +Fragments',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T04:33:41.210379"
 ],
 "Inner City": [
  "\ndef extractInnercitynovelBlogspotCom(item):\n\t'''\n\tParser for 'innercitynovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:34.858316"
 ],
 "Inovachinese": [
  "def extractInovelchinesetranslationsWordpressCom(item):\n\t'''\n\tParser for 'inovelchinesetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Escape from marriage for 100 days: Sweet wife steals a treasure.',       'Escape from marriage for 100 days: Sweet wife steals a treasure.',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T05:13:27.356477"
 ],
 "Insane Translations": [
  "def extractInsaneTranslations(item):\n\t\"\"\"\n\tParser for 'Insane Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('AnBM',       'Akugyaku No Black Maria', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\n\ttitlemap = [\n\t\t('ABM',                                       'Akugyaku no Black Maria',                                                'translated'),\n\t\t('Akugyaku no Black Maria',                   'Akugyaku no Black Maria',                                                'translated'),\n\t\t('MLW',                                       'While killing slimes for 300 years, I became the MAX level unknowingly', 'translated'),\n\t\t('MAX level witch',                           'While killing slimes for 300 years, I became the MAX level unknowingly', 'translated'),\n\t\t('MAX lvl witch',                             'While killing slimes for 300 years, I became the MAX level unknowingly', 'translated'),\n\t\t('The Life of Demon Empress Siamara Chapter', 'The Life of Demon Empress Siamara Chapter',                              'oel'),\n\t\t('The Beast',                                 'The Beast',                                                              'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap: \n\t\tif item['title'].lower().startswith(titlecomponent.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\t\n\t# if item['title'].startswith(\"\"):\n\t# \treturn buildReleaseMessageWithType(item, 'Akugyaku no Black Maria', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\n\t\t\n\treturn False",
  "2017-08-01T04:32:34.542077"
 ],
 "Insignia Pierce": [
  "def extractKnW(item):\n\t\"\"\"\n\t# Groups involved in KnW:\n\t# \tBlazing Translations\n\t# \tCapsUsingShift Tl\n\t# \tInsignia Pierce\n\t# \tKiriko Translations\n\t# \tKonjiki no Wordmaster\n\t# \tLoliquent\n\t# \tBlazing Translations\n\t# \tPummels Translations\n\t# \tXCrossJ\n\t# \tProbably another dozen randos per week.\n\t# Really. Fuck you people. Tag your shit, and start a group blog.\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\ttags = item['tags']\n\ttitle = item['title']\n\tsrc = item['srcname']\n\tpostfix = ''\n\tif src == 'XCrossJ' and 'Cross Gun' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Cross Gun', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Character Analysis' in item['title']:\n\t\treturn False\n\tif 'Chapter' in title and src == 'Blazing Translations':\n\t\tif 'By:' in title:\n\t\t\treturn False\n\t\tif 'Comment' in title:\n\t\t\treturn False\n\t\tif ':' in title:\n\t\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\telif '-' in title:\n\t\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\telse:\n\t\t\tpostfix = ''\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\tif ('Chapters' in tags and 'Konjiki no Wordmaster' in tags or 'Konjiki no Wordmaster Web Novel Chapters' in tags or 'Konjiki' in tags or src == 'Loliquent' and \n\t    'Konjiki no Wordmaster' in title):\n\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\telif 'Konjiki no Wordmaster Chapters' in tags or 'Konjiki no Moji Tsukai' in tags or src == 'Kiriko Translations' and ('KnW' in tags or 'KnW Chapter' in title\n\t    ) or src == 'CapsUsingShift Tl' and 'Konjiki no Wordmaster' in title or src == 'Pummels Translations' and 'Konjiki no Word Master Chapter' in title or src == 'XCrossJ' and 'Konjiki no Moji Tsukai' in title or src == 'Insignia Pierce' and 'Konjiki no Word Master Chapter' in title:\n\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "IntenseDesSugar": [
  "def extractIntenseDesSugar(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Congratulation Empress' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Congratulation Empress', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Interim MTL": [
  "def extractInterimmtlBlogspotCom(item):\n\t'''\n\tParser for 'interimmtl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Man Man Qing Luo',       'Man Man Qing Luo',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:06:11.160101"
 ],
 "IsaacTranslations": [
  "def extractIsaactranslationsWordpressCom(item):\n\t'''\n\tParser for 'isaactranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('MotoKimama',       'The Oppressed Savior Abandons The Other World to Live As He Pleases in His Own World',                      'translated'),\n\t\t('The best assassin, incarnated into a different world\\'s aristocrat',       'The best assassin, incarnated into a different world\\'s aristocrat',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-27T06:19:10.158035"
 ],
 "Isecai Novels": [
  "def extractWwwIsecainovelsCom(item):\n\t'''\n\tParser for 'www.isecainovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Upstart Pastry Chef',                       'Upstart Pastry Chef ~Territory Management of a Genius P\u00e2tissier~',                      'translated'),\n\t\t('Sono Mono Nochi ni',                        'That Person. Later on\u2026',                                                                'translated'),\n\t\t('Starship Officer Becomes Adventurer',       'The Starship Officer Becomes An Adventurer',                                            'translated'),\n\t\t('The Wolf Lord\\'s Lady',                     'The Wolf Lord\\'s Lady',                                                                 'translated'),\n\t\t('Black Tea Specialist',                      'I am The Black Tea Specialist Cheat of The Chivalric Order!',                           'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-18T05:36:17.305135"
 ],
 "Isekai + NTR": [
  "def extractIsekaintrWordpressCom(item):\n\t'''\n\tParser for 'isekaintr.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Saint Doll',                                                                              'Seikishin -Saint Doll-',                                                              'translated'),\n\t\t('When I was summoned to different world with RPG style, [Loves NTR] skill appeared',       'When I was summoned to different world with RPG style, [Likes NTR] skill appeared',   'translated'),\n\t\t('When I was summoned to different world with RPG style, [Likes NTR] skill appeared',       'When I was summoned to different world with RPG style, [Likes NTR] skill appeared',   'translated'),\n\t\t('When I was summoned to another world with RPG style, [Likes NTR] skill appeared',         'When I was summoned to different world with RPG style, [Likes NTR] skill appeared',   'translated'),\n\t\t('Loiterous',                                                                               'Loiterous',                                                                           'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-02-07T07:29:32.840506"
 ],
 "Isekai BL": [
  "def extractIsekaiblWordpressCom(item):\n\t'''\n\tParser for 'isekaibl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Akuyaku Reijo no Otouto',     'Akuyaku Reijo no Otouto',         'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T06:40:59.376697"
 ],
 "Isekai Fiction": [
  "def extractIsekaiFiction(item):\n\t\"\"\"\n\t'Isekai Fiction'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Upstart Pastry Chef' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Upstart Pastry Chef ~Territory Management of a Genius P\u00e2tissier~', vol, chp, frag=frag, postfix=postfix)\n\tif 'pastry' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Upstart Pastry Chef ~Territory Management of a Genius P\u00e2tissier~', vol, chp, frag=frag, postfix=postfix)\n\tif 'herscherik' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Herscherik: Tensei Ouji to Urei no Daikoku', vol, chp, frag=frag, postfix=postfix)\n\tif 'okonomiyaki' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Different World\u2019s Okonomiyaki Chain Store ~Auntie from Osaka, Reborn as Beautiful Swordswoman, on A Mission to Spread Okonomiyaki!~', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Wolf Lord\\'s Lady' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Wolf Lord\\'s Lady', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t('Starship Officer Becomes Adventurer',       'The Starship Officer Becomes An Adventurer',                      'translated'),\n\t\t('Sono Mono Nochi ni',                        'That Person. Later on\u2026',                                          'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\treturn False",
  "2018-06-28T04:12:26.193643"
 ],
 "Isekai Mahou Translations!": [
  "def extractIsekaiMahou(item):\n\t\"\"\"\n\t# Isekai Mahou Translations!\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Isekai Mahou Chapter' in item['title'] and 'Release' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Mahou wa Okureteru!', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Isekai Novel Club!": [
  "\ndef extractIsekainovelclubWordpressCom(item):\n\t'''\n\tParser for 'isekainovelclub.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:40:41.534005"
 ],
 "Isekai Shousetsu": [
  "def extractIsekaishousetsuWordpressCom(item):\n\t'''\n\tParser for 'isekaishousetsu.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Otherworld Nation Founding Chronicles',       'Otherworld Nation Founding Chronicles',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-15T04:31:37.934132"
 ],
 "Isekai Soul-Cyborg Translations": [
  "def extractIsekaiTranslation(item):\n\t\"\"\"\n\t# Isekai Soul-Cyborg Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\t\t\n\tif 'Isekai Maou to Shoukan Shoujo Dorei Majutsu' in item['tags'] and (chp or vol) and not 'manga' in item['title'].lower():\n\t\tif chp == 11 and frag == 10:\n\t\t\treturn None\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Maou to Shoukan Shoujo no Dorei Majutsu', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-05-05T09:09:20.182369"
 ],
 "Isekai Summon Me!": [
  "def extractIsekaisummonMe(item):\n\t'''\n\tParser for 'isekaisummon.me'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Railway Hero',       'The Legend of the Railway Hero',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T04:35:19.863468"
 ],
 "Isohungry Translations": [
  "def extractIsohungrytlsCom(item):\n\t'''\n\tParser for 'isohungrytls.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Wangye\\'s-Maid-Is-The-Sect-Leader',                                           'Wangye\\'s Maid is the Sect Leader',                                           'translated'), \n\t\t('RFSH',                                                                        'Raising a Fox Spirit in My Home',                                             'translated'), \n\t\t('Descent of the God of Magic',                                                 'Descent of the God of Magic',                                                 'translated'), \n\t\t('Wild Malicious Consort',                                                      'Wild Malicious Consort: Good For Nothing Ninth Miss',                         'translated'), \n\t\t('Quick Transmigration Cannon Fodder\\'s Record of Counterattacks',              'Quick Transmigration Cannon Fodder\\'s Record of Counterattacks',              'translated'), \n\t\t('Wangye, Wangfei is a Cat',                                                    'Wangye, Wangfei is a Cat',                                                    'translated'), \n\t\t('Back to the Apocalypse',                                                      'Back to the Apocalypse',                                                      'translated'), \n\t\t('Life After Marrying my Sworn Enemy',                                          'Life After Marrying my Sworn Enemy',                                          'translated'), \n\t\t('Run Over',                                                                    'Run Over',                                                                    'translated'), \n\t\t('Sword Labyrinth Of The Sacred Sword',                                         'Sword Labyrinth Of The Sacred Sword',                                         'translated'), \n\t\t('Raising a Fox into a Consort',                                                'Raising a Fox into a Consort',                                                'translated'), \n\t\t('Phoenix Rising Over The World',                                               'Phoenix Rising Over The World',                                               'translated'), \n\t\t('Expelled From Paradise',                                                      'Expelled From Paradise',                                                      'translated'), \n\t\t('Black Bellied President Dotes on Wife',                                       'Black Bellied President Dotes on Wife',                                       'translated'), \n\t\t('World of Chaos: Alluring Military Consort',                                   'World of Chaos: Alluring Military Consort',                                   'translated'), \n\t\t('Demon God Pesters- The Ninth Lady of the Doctor',                             'The Demon God Pesters: The Ninth Lady of the Doctor',                         'translated'), \n\t\t('Bewitching Prince Spoils His Wife: Genius Doctor Unscrupulous Consort',       'Bewitching Prince Spoils His Wife: Genius Doctor Unscrupulous Consort',       'translated'),  \n\t\t('Transmigration Routine',                                                      'The Transmigration Routine of Always Being Captured by the ML',               'translated'), \n\t\t('World of Chaos',                                                              'World of Chaos: Alluring Military Consort',                                   'translated'), \n\t\t('QT Cannon Fodder\\'s Record of Counterattacks',                                'Quick Transmigration Cannon Fodder\\'s Record of Counterattacks',              'translated'), \n\t\t('Rebirth in a Perfect Era',                                                    'Rebirth in a Perfect Era',                                                    'translated'), \n\t\t('Need to Propose to Seven Men What to Do',                                     'Need to Propose to Seven Men What to Do',                                     'translated'), \n\t\t('Way of Transmigration',                                                       'Way of Transmigration',                                                       'translated'), \n\t\t('The Cold Regent Keeps a Fox as a Consort',                                    'The Cold Regent Keeps a Fox as a Consort',                                    'translated'), \n\t\t('The Captivating Crown Prince',                                                'The Captivating Crown Prince',                                                'translated'), \n\t\t('Thunder Martial',                                                             'Thunder Martial',                                                             'translated'), \n\t\t('Return of the Goddess',                                                       'Return of the Goddess',                                                       'translated'), \n\t\t('Film Emperor\\'s Beloved Wife',                                                'Film Emperor\\'s Beloved Wife',                                                'translated'), \n\t\t('Every Vicious Woman Needs a Loyal Man',                                       'Every Vicious Woman Needs a Loyal Man',                                       'translated'), \n\t\t('Sinister Ex-Girlfriend',                                                      'Sinister Ex-Girlfriend',                                                      'translated'), \n\t\t('Killed the White Lotus',                                                      'Killed the White Lotus',                                                      'translated'), \n\t\t('The Lover\\'s Prattle',                                                        'The Lover\\'s Prattle',                                                        'translated'), \n\t\t('How to die as heavy as mount tai',                                            'How to die as heavy as mount tai',                                            'translated'), \n\t\t('You Look Like You\\'re Made of Money',                                         'You Look Like You\\'re Made of Money',                                         'translated'), \n\t\t('Subduing a Gentleman\\'s Heart',                                               'Hundred Flowers Slaughter: Confusing a Gentleman\\'s Heart',                   'translated'), \n\t\t('There\\'s A Beauty',                                                           'There\\'s A Beauty',                                                           'translated'), \n\t\t('Midnight Cinderella',                                                         'Midnight Cinderella',                                                         'translated'), \n\t\t('Wealthy Woof',                                                                'Daily Life of a Wealthy Woof',                                                'translated'), \n\t\t('Young Master Quan',                                                           'Young Master Quan',                                                           'translated'), \n\t\t('Wife is Outrageous',                                                          'Wife is Outrageous',                                                          'translated'), \n\t\t('Goddess Medical Doctor',                                                      'Goddess Medical Doctor',                                                      'translated'), \n\t\t('The Rebirth of Han Yuxi',                                                     'The Rebirth of Han Yuxi',                                                     'translated'), \n\t\t('Just the Two of Us in this Vast World',                                       'Just the Two of Us in this Vast World',                                       'translated'), \n\t\t('Rescuing the Blackened Male Lead',                                            'Rescuing the Blackened Male Lead',                                            'translated'), \n\t\t('Potatoes are the Only Thing Needed in This World!',                           'Potatoes are the Only Thing Needed in This World!',                           'translated'), \n\t\t('The Fierce Illegitimate Miss',                                                'The Fierce Illegitimate Miss',                                                'translated'), \n\t\t('Wangye\\'s Maid is the Sect Leader',                                           'Wangye\\'s Maid is the Sect Leader',                                           'translated'), \n\t\t('Legendary Dragon God',                                                        'Legendary Dragon God',                                                        'oel'), \n\t]\n\t\n\t\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\t\n\tif item['tags'] == ['Uncategorized']:\n\t\turlfrag = [    \n\t\t\t('isohungrytls.com/consort-overturning-world',                         'Consort Overturning the World',                                               'translated'), \n\t\t\t('isohungrytls.com/expelled-paradise-',                                'Expelled From Paradise',                                                      'translated'), \n\t\t\t('isohungrytls.com/phoenix-rising-world-chapter-',                     'Phoenix Rising Over the World',                                               'translated'), \n\t\t\t('isohungrytls.com/wangye-wangfei-cat-chapter-',                       'Wangye, Wangfei is a Cat',                                                    'translated'), \n\t\t\t('isohungrytls.com/accompanying-phoenix-chapter-'    ,                 'Accompanying the Phoenix',                                                    'translated'), \n\t\t\t('isohungrytls.com/wangyes-maid-sect-leader-chapter-',                 'Wangye\\'s Maid is the Sect Leader',                                           'translated'), \n\t\t\t('isohungrytls.com/wife-outragoeus-chapter-',                          'Wife is Outrageous',                                                          'translated'), \n\t\t\t('isohungrytls.com/wife-outrageous-chapter-',                          'Wife is Outrageous',                                                          'translated'),\n\t\t\t('isohungrytls.com/trac-chapter',                                      'The Transmigration Routine of Always Being Captured by the ML',               'translated'), \n\t\t\t('isohungrytls.com/bewitching-prince-chapter-',                        'Bewitching Prince Spoils His Wife: Genius Doctor Unscrupulous Consort',       'translated'), \n\t\t\t('isohungrytls.com/captivating-crown-prince-',                         'The Captivating Crown Prince',                                                'translated'), \n\t\t\t('isohungrytls.com/raising-fox-consort-',                              'Raising a Fox into a Consort',                                                'translated'), \n\t\t\t('isohungrytls.com/wild-malicious-consort-chapter',                    'Wild Malicious Consort: Good For Nothing Ninth Miss',                         'translated'), \n\t\t\t('/quick-transmigration-rescuing-the-blackened-male-lead-chapter',     'Quick Transmigration: Rescuing the Blackened Male Lead',                      'translated'), \n\t\t]\n\t\n\t\tfor key, name, tl_type in urlfrag:\n\t\t\tif key in item['linkUrl'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\t\ttitlemap = [\n\t\t\t('BBPDOW Chapter',                                                              'Black Bellied President Dotes on Wife',                                       'translated'), \n\t\t\t('Reborn as a mom Chapter',                                                     'Reborn as a Mom',                                                             'oel'),\n\t\t\t('Wife is Outrageous Chapter ',                                                 'Wife is Outrageous',                                                          'translated'),\n\t\t\t('How to die as heavy as mount tai',                                            'How to die as heavy as mount tai',                                            'translated'), \n\t\t\t('Black Bellied President Chapter ',                                            'Black Bellied President Dotes on Wife',                                       'translated'), \n\t\t]\n\t\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2019-06-18T05:47:25.019387"
 ],
 "Isolarium": [
  "def extractIsolarium(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Istian's Workshop": [
  "def extractIstiansWorkshop(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "It Is Just a Dream": [
  "\ndef extractItsjustadreamwebWordpressCom(item):\n\t'''\n\tParser for 'itsjustadreamweb.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:38.619971"
 ],
 "It's All Good Now": [
  "def extractItsallgoodnowHomeBlog(item):\n\t'''\n\tParser for 'itsallgoodnow.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Stray Children of the Circling Planet',       'Stray Children of the Circling Planet',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T07:05:18.198046"
 ],
 "It's All Relative": [
  "\ndef extractIarstoryBlogspotCom(item):\n\t'''\n\tParser for 'iarstory.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:55.142144"
 ],
 "It's So Fluffy Translations": [
  "def extractSofluffytranslationsCom(item):\n\t'''\n\tParser for 'sofluffytranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Italian First Love Diary',       'An Italian first love diary',                      'translated'), \n\t\t('Good Morning Miss Ghost',        'Good Morning Miss Ghost',                          'translated'), \n\t\t('Good Morning Miss Ghost',          'Good Morning Miss Ghost',                         'translated'),\n\t\t('Evil Husband, Don\\'t Tease',       'Evil Husband, Don\\'t Tease',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-17T07:20:05.067810"
 ],
 "Iterations within a Thought-Eclipse": [
  "def extractIterations(item):\n\t\"\"\"\n\t# Iterations within a Thought-Eclipse\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'SaeKano' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Saenai Heroine no Sodatekata', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Izra709": [
  "\ndef extractIzra709WordpressCom(item):\n\t'''\n\tParser for 'izra709.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-24T06:48:08.955203"
 ],
 "I\u2019m in Hollywood": [
  "def extractIminhollywoodBlogspotCom(item):\n\t'''\n\tParser for 'iminhollywood.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I\u2019m in Hollywood ToC',       'I\u2019m in Hollywood',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-05-30T22:41:17.235513"
 ],
 "JTranslation": [
  "\ndef extractJtranslation516320481WordpressCom(item):\n\t'''\n\tParser for 'jtranslation516320481.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-06T03:11:05.316752"
 ],
 "Jade": [
  "\ndef extractRexjadeWordpressCom(item):\n\t'''\n\tParser for 'rexjade.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:44.556725"
 ],
 "Jade Dynasty Translations": [
  "def extractJadetranslationsWordpressCom(item):\n\t'''\n\tParser for 'jadetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Banished to Another World',                    'Banished to Another World',                                   'translated'),\n\t\t('The Life After MArrying My Sworn Enemy',       'The Life After Marrying My Sworn Enemy',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-04T02:52:08.431048"
 ],
 "Jade Slip": [
  "\ndef extractJadeslipWordpressCom(item):\n\t'''\n\tParser for 'jadeslip.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:32.794662"
 ],
 "Jade Water Paradise": [
  "def extractJadewaterparadiseWordpressCom(item):\n\t'''\n\tParser for 'jadewaterparadise.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Our Glamorous Time',              'Our Glamorous Time',                             'translated'),\n\t\t('Dragon Phoenix and Flower',       'Dragon, Phoenix and Flower',                     'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-11T06:44:12.841119"
 ],
 "Jagaimo": [
  "def extractJagaimo(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Januke": [
  "\ndef extractJanuketlBlogspotCom(item):\n\t'''\n\tParser for 'januketl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-20T06:49:16.936141"
 ],
 "Januke Translations": [
  "def extractJanukeTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('internet '):\n\t\treturn buildReleaseMessageWithType(item, 'Internet cheat', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Januva Translation": [
  "\ndef extractJanuvatlTumblrCom(item):\n\t'''\n\tParser for 'januvatl.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-07T09:05:30.051846"
 ],
 "Japan Ero Novels Tn": [
  "def extractJeronovelBlogspotCom(item):\n\t'''\n\tParser for 'jeronovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Books to Dominate Married Women',       'Books to Dominate Married Women',                      'translated'),\n\t\t('Only Ero knowledge',                    'I Have The Only Ero Knowledge In The World',           'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-26T07:14:57.360622"
 ],
 "Japanese Light Novels: Prologues": [
  "def extractJapaneseLightNovelsPrologues(item):\n\t\"\"\"\n\tParser for 'Japanese Light Novels: Prologues'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Japanese Novel": [
  "def extractJapaneseNovel(item):\n\t\"\"\"\n\tParser for 'Japanese Novel'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Japanese Novel Translation": [
  "def extractJapaneseNovelTranslation(item):\n\t\"\"\"\n\tJapanese Novel Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Japtem": [
  "def extractJaptem(item):\n\t\"\"\"\n\t# Japtem\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif '[Chinese] Shadow Rogue' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Shadow Rogue', vol, chp, frag=frag, postfix=postfix)\n\tif '[Chinese] Unique Legend' in item['tags'] or 'Unique Legend' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Unique Legend', vol, chp, frag=frag, postfix=postfix)\n\tif \"[Japanese] Magi's Grandson\" in item['tags'] or \"[JP] Magi's Grandson\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Magi's Grandson\", vol, chp, frag=frag, postfix=postfix)\n\tif '[Japanese / Hosted] Arifureta' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Arifureta', vol, chp, frag=frag, postfix=postfix)\n\tif '[Korean] 21st Century Archmage' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, '21st Century Archmage', vol, chp, frag=frag, postfix=postfix)\n\tif '[Chinese] Kill No More' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kill No More', vol, chp, frag=frag, postfix=postfix)\n\tif \"[JP] Duke's Daughter\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Good Sense of a Duke's Daughter\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Jar Jar Translations": [
  "def extractJarjartranslationsblogWordpressCom(item):\n\t'''\n\tParser for 'jarjartranslationsblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('RPE',       'Rebirth in a perfect era',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T07:43:20.305489"
 ],
 "Jawz Publications": [
  "def extractJawzPublications(item):\n\t\"\"\"\n\t'Jawz Publications'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Zectas' in item['tags'] and vol and chp:\n\t\treturn buildReleaseMessageWithType(item, 'Zectas', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'LMS' in item['tags'] and vol and chp:\n\t\treturn buildReleaseMessageWithType(item, 'Legendary Moonlight Sculptor', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2018-06-17T07:42:25.625368"
 ],
 "Jayson Agonistes": [
  "\ndef extractJaysonagonistesWordpressCom(item):\n\t'''\n\tParser for 'jaysonagonistes.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T05:42:02.451960"
 ],
 "Jeepney Passenger Translations": [
  "def extractJeepneyPassengerTranslations(item):\n\t'''\n\tParser for 'Jeepney Passenger Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"Wizard's Tale\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Wizard's Tale\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-03-27T03:13:27.675893"
 ],
 "Jen Press Translation": [
  "def extractJenPressTranslation(item):\n\t\"\"\"\n\tJen Press Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "JeruTz's Blog": [
  "def extractJeruTzsBlog(item):\n\t\"\"\"\n\tJeruTz's Blog\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Vandread' in item['tags'] and 'Extra Stage' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"VANDREAD the Extra Stage\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\treturn False",
  "2017-09-09T09:15:47.800114"
 ],
 "Jessichi Notebook": [
  "def extractJessichiNotebook(item):\n\t'''\n\tParser for 'Jessichi Notebook'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif 'PS Vita' in item['tags']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('outaishihi ni nante naritakunai',       'Outaishihi ni Nante Naritakunai!!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-01T01:06:03.610729"
 ],
 "JiaMin": [
  "def extractJiamintranslationCom(item):\n\t'''\n\tParser for 'jiamintranslation.com'\n\t'''\n\tif 'Calligraphy' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('HAWRR',       'Quick Transmigration: Heroine Arrives, Woman Rapidly Retreats!',        'translated'),\n\t\t('VNG',         'The Inner Palace Tale of a Villainess Noble Girl',                      'translated'),\n\t\t('TTTW',        'Traveler of the Ten Thousand Worlds',                                   'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-12T02:53:36.844106"
 ],
 "Jiku Translations": [
  "def extractJikutransCom(item):\n\t'''\n\tParser for 'jikutrans.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('KoiNante',       'Kimi ni Koi wo Suru Nante, Arienai Hazu Datta',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:41:46.824076"
 ],
 "Jingle Translations": [
  "def extractJingletranslationsWordpressCom(item):\n\t'''\n\tParser for 'jingletranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Breaking Off the Engagement\u2026 Bring it on!',       'Breaking Off the Engagement\u2026 Bring it on!',                      'translated'),\n\t\t('I Favor the Villainess',                          'I Favor the Villainess',                                         'translated'),\n\t\t('City of Slumber',                                 'City of Slumber',                                                'translated'),\n\t\t('Villainess\u2019s Sweet Everyday',                     'Villainess\\'s Sweet Everyday',                                   'translated'),\n\t\t('Outaishihi ni Nante Naritakunai!!',               'Outaishihi ni Nante Naritakunai!!',                              'translated'),\n\t\t('First Love \u00d7 First Love',                         'First Love \u00d7 First Love',                                        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-10T03:02:58.551005"
 ],
 "JinxCharllet Translations": [
  "\ndef extractJinxcharlletWordpressCom(item):\n\t'''\n\tParser for 'jinxcharllet.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:39:04.146990"
 ],
 "Jlei2000 translations": [
  "def extractLeitranslationsWordpressCom(item):\n\t'''\n\tParser for 'leitranslations.wordpress.com'\n\t'''\n\t\n\t# Removed\n\t\n\treturn None",
  "2017-12-08T05:11:57.563682"
 ],
 "Joeglen's Translation Space": [
  "def extractJoeglensTranslationSpace(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Parallel World Pharmacy' in item['tags']:\n\t\tchapter = re.search('(?:chapter|chap)\\\\W*(\\\\d+)', item['title'], flags=re.IGNORECASE)\n\t\tepisode = re.search('(?:episode|ep)\\\\W*(\\\\d+)', item['title'], flags=re.IGNORECASE)\n\t\tif chapter and episode:\n\t\t\tchp = chapter.group(1)\n\t\t\tfrag = episode.group(1)\n\t\t\treturn buildReleaseMessageWithType(item, 'Parallel World Pharmacy', vol, chp, frag=frag, postfix=postfix)\n\tif 'Slave Career Planner' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Successful Business of a Slave Career Planner', vol, chp, frag=frag, postfix=postfix)\n\tif 'Rokudenashi' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Akashic Record of a Bastard Magic Instructor', vol, chp, frag=frag, postfix=postfix)\n\tif 'Otherworld Nation Founding' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Otherworld Nation Founding', vol, chp, frag=frag, postfix=postfix)\n\tif \"Nobu's Otherworld Chronicles\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Mr. Nobu's Otherworld Chronicles\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "John Smith's Translations": [
  "\ndef extractJstranslationBlogspotCom(item):\n\t'''\n\tParser for 'jstranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-28T07:09:15.654656"
 ],
 "Joie de Vivre": [
  "def extractJoiedeVivre(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "JoleCole's Station": [
  "def extractJolecoleSStation(item):\n\t\"\"\"\n\tParser for 'JoleCole's Station'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Jolt": [
  "\ndef extractJoltwebserialWordpressCom(item):\n\t'''\n\tParser for 'joltwebserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:40.865380"
 ],
 "Jostena M.": [
  "def extractJostenamWordpressCom(item):\n\t'''\n\tParser for 'jostenam.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('MCEA',       'My Cherry Will Explode in the Apocalypse',                       'translated'),\n\t\t('TEWRCFC',    'The End of The World\u2019s Reborn Cannon Fodder Counter-attacks',    'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-25T07:18:37.394872"
 ],
 "Journal of the Living": [
  "\ndef extractJournalofthelivingWordpressCom(item):\n\t'''\n\tParser for 'journaloftheliving.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T05:41:56.259733"
 ],
 "Journey to the Unknown": [
  "def extractAshialafineWordpressCom(item):\n\t'''\n\tParser for 'ashialafine.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Daughter of the Albert House Wishes for Ruin',       'The Daughter of the Albert House Wishes for Ruin',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T07:55:59.498550"
 ],
 "Journey to the sky": [
  "def extractThejourneytotheskyWordpressCom(item):\n\t'''\n\tParser for 'thejourneytothesky.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Doro Doro', 'Doro Doro Obake Ouji-sama', 'translated')\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] != ['Uncategorized']:\n\t\treturn False\n\n\ttitlemap = [\n\t\t('[IRM2TM7H]',                      'In Regards to My 2nd Trip and My 7 Husbands',                         'translated'), \n\t\t('Doro Doro Obake Ouji-sama',       'Doro Doro Obake Ouji-sama',                                           'translated'), \n\t\t('Watashi wa Teki ni Narimasen! ',  'Watashi wa Teki ni Narimasen! ',                                      'translated'), \n\t\t('[Arasaa]',                        'I am the Newly Born Woman of Around Thirty',                          'translated'), \n\t\t('The Duke\u2019s daughter ch',          'The Duke\\'s Daughter Is the Knight Captain\\'s (62) Young Wife',       'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-05-04T05:45:13.203789"
 ],
 "Joyce Sully": [
  "\ndef extractJoycesullyWordpressCom(item):\n\t'''\n\tParser for 'joycesully.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:23.977718"
 ],
 "JuJu Translation": [
  "def extractJuJuTranslation(item):\n\t\"\"\"\n\tJuJu Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Jump": [
  "\ndef extractJumpbookblogWordpressCom(item):\n\t'''\n\tParser for 'jumpbookblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:38.699204"
 ],
 "Jun Cafe": [
  "def extractNop(dummy_item):\n\t\"\"\"\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Jun Juntianxia": [
  "def extractJunJuntianxia(item):\n\t\"\"\"\n\t# 'Jun Juntianxia'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Junction Point": [
  "\ndef extractKapteynstarWordpressCom(item):\n\t'''\n\tParser for 'kapteynstar.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:42.463531"
 ],
 "Juncture: A Serial Novel: Welcome": [
  "\ndef extractJunctureserialBlogspotCom(item):\n\t'''\n\tParser for 'junctureserial.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:16.802833"
 ],
 "Junk Burst Translations": [
  "def extractJunkBurstTranslations(item):\n\t\"\"\"\n\t'Junk Burst Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('LMAG',              '10 Years after saying \u201cLeave this to me and go\u201d, I Became a Legend.',              'translated'), \n\t\t('Cut & Paste',       'Living in this World with Cut & Paste',                                            'translated'), \n\t\t('Slime',             'Slime Tensei. Taikensha ga Youjo Elf ni Dakishimeraretemasu',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-26T02:36:30.371015"
 ],
 "Just BL Things": [
  "def extractJustBlThings(item):\n\t\"\"\"\n\tParser for 'Just BL Things'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Just Reads": [
  "def extractWwwJustreadsNet(item):\n\t'''\n\tParser for 'www.justreads.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('[ATP] ',                      'Accompanying the Phoenix',      'translated'),\n\t\t('[Q] ',                        'Qingge [Rebirth]',      'translated'),\n\t\t('[AOOO] ',                     'The Otherworldly Adventures of a Super Naive Girl',      'translated'),\n\t\t('[OASNG] ',                    'The Otherworldly Adventures of a Super Naive Girl',      'translated'),\n\t\t('[RJWSHH] ',                    'Rebirth: the Journey of a Wife Spoiling Her Husband',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-31T03:32:57.019409"
 ],
 "Just Some Trash Translations": [
  "def extractPlayfulkyddWordpressCom(item):\n\t'''\n\tParser for 'playfulkydd.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('UBI ',  'Urban Banished Immortal',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:41:12.855036"
 ],
 "Just.Me.Translating": [
  "\ndef extractJustmetranslatingBlogspotCom(item):\n\t'''\n\tParser for 'justmetranslating.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-02-16T11:35:19.420414"
 ],
 "Juurion is me": [
  "\ndef extractJuurionismeWordpressCom(item):\n\t'''\n\tParser for 'juurionisme.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:34.123270"
 ],
 "Jynki's TLs": [
  "def extractJynkisTLs(item):\n\t\"\"\"\n\tJynki's TLs\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "K Fan Novels": [
  "def extractWwwKfannovelsCom(item):\n\t'''\n\tParser for 'www.kfannovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Limit Breaker',                                'Limit Breaker',                                               'translated'),\n\t\t('All Stat Slayer',                              'All Stat Slayer',                                             'translated'),\n\t\t('Dragon\\'s Legacy',                             'Dragon\\'s Legacy',                                            'translated'),\n\t\t('Accumulate Experience by Reading Books',       'Accumulate Experience by Reading Books',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T06:47:18.308318"
 ],
 "K-Novel Translations": [
  "def extractKnoveltransCom(item):\n\t'''\n\tParser for 'knoveltrans.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Mightiest Manager', 'The Mightiest Manager',                'translated'), \n\t\t('The Skill Maker',       'The Skill Maker',                      'translated'), \n\t\t('Dungeon Maker',         'Dungeon Maker',                        'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-02-17T08:52:03.329850"
 ],
 "K-Translations": [
  "def extractKtranslations980580331WordpressCom(item):\n\t'''\n\tParser for 'ktranslations980580331.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Dragon\u2019s Legacy \u2013 ',                         'Dragon\\'s Legacy',                                     'translated'),\n\t\t\t('Accumulate Experience by Reading Books \u2013 ',  'Accumulate Experience by Reading Books',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-06-13T05:03:56.529803"
 ],
 "KKTranslates": [
  "def extractKktranslatesHomeBlog(item):\n\t'''\n\tParser for 'kktranslates.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Go to Hell. White Lotus',       'Go to Hell. White Lotus',                      'translated'),\n\t\t('My Wife is Straight',       'My Wife is Straight',                      'translated'),\n\t\t('My Enemy is Actually Secretly in Love with Me',       'My Enemy is Actually Secretly in Love with Me',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T22:32:52.738469"
 ],
 "KN Translation": [
  "def extractKNTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "KONDEE Translations": [
  "def extractKONDEETranslations(item):\n\t\"\"\"\n\t#'KONDEE Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('Sakyubasu ni Tensei Shitanode Miruku o Shiborimasu',       'Sakyubasu ni Tensei Shitanode Miruku o Shiborimasu',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\ttitlemap = [\n\t\t('Rune Troopers',                                                'Rune Troopers',                                                   'translated'),\n\t\t('SUCCUBUS NI TENSEI SHITANODE MIRUKU WO SHIBORIMASU ',          'Sakyubasu ni tensei shitanode miruku o shiborimasu',              'translated'),\n\t\t('SAKYUBASU NI TENSEI SHITANODE MIRUKU O SHIBORIMASU ',          'Sakyubasu ni tensei shitanode miruku o shiborimasu',              'translated'),\n\t\t('Omae wo Otaku ni Shiteyaru kara, Ore wo Riajuu ni Shitekure!', 'Omae o Otaku ni Shiteyaru kara, Ore o Riajuu ni Shitekure!',      'translated'),\n\t\t('Omae o otaku ni shiteyaru kara, ore o riajuu ni shitekure!',   'Omae o Otaku ni Shiteyaru kara, Ore o Riajuu ni Shitekure!',      'translated'),\n\t\t('Omae wo Otaku ni Shiteyarukara Ore wo Riajuu ni Shitekure',    'Omae o Otaku ni Shiteyaru kara, Ore o Riajuu ni Shitekure!',      'translated'),\n\t\t('Omae o otaku ni shiteyaru kara ore o riajuu ni shitekure',     'Omae o Otaku ni Shiteyaru kara, Ore o Riajuu ni Shitekure!',      'translated'),\n\t\t('Chuuko Demo Koi ga Shitai',                                    'Chuuko demo Koi ga Shitai!',                                      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-01-13T10:57:48.301624"
 ],
 "Kaede 726": [
  "def extractKaede726BlogspotCom(item):\n\t'''\n\tParser for 'kaede726.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Epitome of Eighteen Histories',       'Durarara!! Epitome of Eighteen Histories',           'translated'),\n\t\t('Hakata Tonkotsu Ramens',              'Hakata Tonkotsu Ramens',                             'translated'),\n\t\t('Loiterous',                           'Loiterous',                                          'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Durarara!! x Hakata Tonkotsu Ramens: Chapter ',  'Durarara!! x Hakata Tonkotsu Ramens',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T04:30:15.674823"
 ],
 "Kaede's Translations": [
  "def extractKaede721WordpressCom(item):\n\t'''\n\tParser for 'kaede721.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hakata Tonkotsu Ramens',                  'Hakata Tonkotsu Ramens',                      'translated'),\n\t\t('htr',                                     'Hakata Tonkotsu Ramens',                      'translated'),\n\t\t('durarara x hakata tonkotsu ramens',       'Durarara!! x Hakata Tonkotsu Ramens',         'translated'),\n\t\t('Durarara x HTR Crossover',                'Durarara!! x Hakata Tonkotsu Ramens',         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-22T05:11:41.468268"
 ],
 "Kaede-san 721": [
  "def extractKaedesan721TumblrCom(item):\n\t'''\n\tParser for 'kaedesan721.tumblr.com'\n\t'''\n\t\n\tbad_tags = [\n\t\t\t\t'FanArt', \n\t\t\t\t\"htr asks\", \n\t\t\t\t'Spanish translations', \n\t\t\t\t'htr anime','my thoughts', \n\t\t\t\t'Cats', \n\t\t\t\t'answered', \n\t\t\t\t'ask meme',\n\t\t\t\t'relay convos',\n\t\t\t\t'translation related post',\n\t\t\t\t'nightmare fuel',\n\t\t\t\t'htr manga',\n\t\t\t\t'memes',\n\t\t\t\t'htrweek',\n\t\t\t\t'Video Games',\n\t\t\t\t'Animation',\n\t\t\t\t'replies',\n\t\t\t\t'jazz',\n\t\t\t\t'Music',\n\t\t]\n\t\n\tif any([bad in item['tags'] for bad in bad_tags]):\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\tif \"my translations\" in item['tags']:\n\t\ttagmap = [\n\t\t\t('Hakata Tonkotsu Ramens',       'Hakata Tonkotsu Ramens',                      'translated'),\n\t\t\t('hakata tonktosu ramens',       'Hakata Tonkotsu Ramens',                      'translated'),\n\t\t\t('PRC',       'PRC',                      'translated'),\n\t\t\t('Loiterous', 'Loiterous',                'oel'),\n\t\t]\n\t\n\t\tfor tagname, name, tl_type in tagmap:\n\t\t\tif tagname in item['tags']:\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-10T03:32:54.542684"
 ],
 "Kaelpie": [
  "def extractKaelpieWordpressCom(item):\n\t'''\n\tParser for 'kaelpie.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Magi\\'s Grandson',       'Magi\\'s Grandson',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-07-17T04:09:06.540116"
 ],
 "Kaezar Translations": [
  "def extractKaezar(item):\n\t\"\"\"\n\t# Kaezar Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Mushoku Tensei' in item['tags'] and (chp or vol):\n\t\tif 'Redundancy Chapters' in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, 'Mushoku Tensei Redundancy', vol, chp, frag=frag, postfix=postfix)\n\t\telse:\n\t\t\treturn buildReleaseMessageWithType(item, 'Mushoku Tensei', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kagura no Konbu": [
  "def extractKaguranokonbuWordpressCom(item):\n\t'''\n\tParser for 'kaguranokonbu.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Outaishihi ni Nante Naritakunai!!',       'Outaishihi ni Nante Naritakunai!!',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T08:44:34.100711"
 ],
 "Kaguro Jp": [
  "def extractKaguroJp(item):\n\t\"\"\"\n\tKaguro Jp\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kahoim Translations": [
  "def extractKahoim(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Soshite Shoujo wa Akujo no Karada o Te ni Ireru' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Soshite Shoujo wa Akujo no Karada o Te ni Ireru', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kai Translations": [
  "def extractKaistranslationsWordpressCom(item):\n\t'''\n\tParser for 'kaistranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Daily Life of a Wealthy Woof',       'Daily Life of a Wealthy Woof',                      'translated'),\n\t\t('dlww',                               'Daily Life of a Wealthy Woof',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T08:45:10.250287"
 ],
 "Kai's Translations": [
  "def extractKaisTranslations(item):\n\t\"\"\"\n\tKai's Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "KaiToranslation": [
  "def extractKaitoranslationBlogspotCom(item):\n\t'''\n\tParser for 'kaitoranslation.blogspot.com'\n\t'''\n\t\n\tif not item['title'].lower().startswith('[eng]'):\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Keizoku wa Maryoku Nari',       'Keizoku wa Maryoku Nari',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T05:15:14.698095"
 ],
 "Kainan Translations": [
  "def extractKainantranslationsWordpressCom(item):\n\t'''\n\tParser for 'kainantranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Redemption of The Blue Rose Princess',       'Redemption of The Blue Rose Princess',                      'translated'),\n\t\t('I\\'ll Live My Second Life!',                 'I\\'ll Live My Second Life!',                                'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-26T05:23:20.966588"
 ],
 "Kaiserin Novel": [
  "\ndef extractKaiserinnovelWordpressCom(item):\n\t'''\n\tParser for 'kaiserinnovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:38.284666"
 ],
 "Kaito Zero": [
  "def extractKaitozeroWordpressCom(item):\n\t'''\n\tParser for 'kaitozero.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tprint(item)\n\tif item['title'].startswith(\"Nukoduke!\"):\n\t\treturn None\n\tif item['title'].lower().startswith(\"road to bath\"):\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Sokuhi Shigan! (Novel)',       'Sokuhi Shigan!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-06-17T07:52:58.312708"
 ],
 "Kaivus Translations": [
  "def extractKaivustranslationsWordpressCom(item):\n\t'''\n\tParser for 'kaivustranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('online game lewd fate',       'online game lewd fate',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T04:36:48.494817"
 ],
 "Kakaoo Story": [
  "def extractKakaooStory(item):\n\t\"\"\"\n\t'Kakaoo Story'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('King of Hell\u2019s Genius Pampered Wife Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'King of Hell\u2019s Genius Pampered Wife', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kakkokari": [
  "def extractKakkokari(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Ancient One' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ancient One', vol, chp, frag=frag, postfix=postfix)\n\tif 'Honey Rabbit!' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Honey Rabbit!', vol, chp, frag=frag, postfix=postfix)\n\tif 'Koushirou Kujou the Detective Butler' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Koushirou Kujou the Detective Butler', vol, chp, frag=frag, postfix=postfix)\n\tif 'Both are Foxes' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Both are Foxes', vol, chp, frag=frag, postfix=postfix)\n\tif 'Stunning Edge' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Stunning Edge', vol, chp, frag=frag, postfix=postfix)\n\tif 'KKDB' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Koushirou Kujou the Detective Butler', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-04-09T05:26:49.246485"
 ],
 "Kakkokari (\u4eee)": [
  "def extractKakkokari\u4eee(item):\n\t\"\"\"\n\tParser for 'Kakkokari (\u4eee)'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Stunning Edge' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Stunning Edge', vol, chp, frag=frag, postfix=postfix)\n\tif 'Honey Rabbit!' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Honey Rabbit!', vol, chp, frag=frag, postfix=postfix)\n\tif 'Both are Foxes' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Both are Foxes', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ancient One' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ancient One', vol, chp, frag=frag, postfix=postfix)\n\tif 'Koushirou Kujou the Detective Butler' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Koushirou Kujou the Detective Butler', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-03-11T05:28:20.883895"
 ],
 "Kakunin Blog": [
  "def extractKakuninblogWordpressCom(item):\n\t'''\n\tParser for 'kakuninblog.wordpress.com'\n\t'''\n\t\n\tif \"M\u1edf \u0110\u1ea7u\" in item['title']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-05T03:57:33.005804"
 ],
 "Kakuriyo no Yadomeshi; Marrying into an Ayakashi Inn": [
  "def extractKakuriyoTranslationsTumblrCom(item):\n\t'''\n\tParser for 'kakuriyo-translations.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('kakuriyo bed and breakfast for spirits',       'Kakuriyo: Bed and Breakfast for Spirits',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-27T10:58:50.328584"
 ],
 "Kami Translation": [
  "def extractKamiTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\tif 'Anime' in item['tags']:\n\t\treturn None\n\tif '4-KOMA' in item['tags']:\n\t\treturn None\n\tif 'Non Non Biyori' in item['tags']:\n\t\treturn None\n\tif 'Servant X Service' in item['tags']:\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Game Sensou', 'Boku to Kanojo no Game Sensou',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-05-09T03:05:51.750292"
 ],
 "Kami no honyakusha": [
  "def extractKaminohonyakushaHomeBlog(item):\n\t'''\n\tParser for 'kaminohonyakusha.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('lv 99999 chapter ',  'Ore wa LV99999, Shikashi, Ore no Tokei ga 1',               'translated'),\n\t\t\t('Lv99999 chapter ',   'Ore wa LV99999, Shikashi, Ore no Tokei ga 1',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-01-05T08:12:45.039834"
 ],
 "Kandy Fangs": [
  "\ndef extractWwwKandyfangsCom(item):\n\t'''\n\tParser for 'www.kandyfangs.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-18T13:53:10.167072"
 ],
 "Kanna": [
  "\ndef extractKannablogsWordpressCom(item):\n\t'''\n\tParser for 'kannablogs.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:39.419655"
 ],
 "Kanyome Translations": [
  "\ndef extractKanyomeWordpressCom(item):\n\t'''\n\tParser for 'kanyome.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-31T06:05:37.276421"
 ],
 "Kaparin translations": [
  "\ndef extractKaparinTranslations(item):\n\t'''\n\tParser for 'Kaparin translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:56.106197"
 ],
 "Karasu": [
  "def extractJisukchoCom(item):\n\t'''\n\tParser for 'jisukcho.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T07:08:19.582435"
 ],
 "Karasu Novels": [
  "\ndef extractWwwKarasunovelsCom(item):\n\t'''\n\tParser for 'www.karasunovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-09-05T05:00:02.093148"
 ],
 "Kari Translations": [
  "def extractKaritranslationsWordpressCom(item):\n\t'''\n\tParser for 'karitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('High Spec Village',                 'Ore no Ongaeshi: High Spec Murazukuri',                                                                     'translated'),\n\t\t('Mistaken for the Demon King',       'The world\u2019s only Demon User \u2013 I was mistaken for the Demon King after changing jobs.',                      'translated'),\n\t\t('My wish was...',                    'My Wish was\u2026',                                                                                              'translated'),\n\t\t('The villainous girl is fine alone', 'The Villainous Noble Daughter is Perfectly Fine Alone!',                                                    'translated'),\n\t\t('Tou no Madoushi',                   'Tou no Madoushi',                                                                                           'translated'),\n\t\t('Moto Sekai Ichi',                   'Moto Sekai Ichi',                                  'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T04:08:21.702425"
 ],
 "Karma Translations": [
  "def extractKarmatranslationsWordpressCom(item):\n\t'''\n\tParser for 'karmatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Across a Millennium to Love You',       'Across a Millennium to Love You',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Across a Millennium to Love You Chapter',  'Across a Millennium to Love You',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T06:45:55.764630"
 ],
 "Karnika's Translation": [
  "def extractKarnikatranslationWordpressCom(item):\n\t'''\n\tParser for 'karnikatranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Return of the Goddess',       'Return of the Goddess',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-24T04:25:32.590735"
 ],
 "Kase Villand's Writing Corner": [
  "\ndef extractDymaxianWordpressCom(item):\n\t'''\n\tParser for 'dymaxian.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:24.998231"
 ],
 "Kawaii Daikon": [
  "def extractKawaiiDaikon(item):\n\t\"\"\"\n\t# 'Kawaii Daikon'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "KayTranslations": [
  "def extractKaytranslationcomHomeBlog(item):\n\t'''\n\tParser for 'kaytranslationcom.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TPOCTTWFP',       'The Price Of Confessing To The Wrong Female Protagonist',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-26T11:18:46.787801"
 ],
 "Kazama Translation": [
  "def extractKazamaTranslation(item):\n\t\"\"\"\n\t'Kazama Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kedelu": [
  "def extractKedelu(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kei Project": [
  "\ndef extractKeiProject(item):\n\t'''\n\tParser for 'Kei Project'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:56.972824"
 ],
 "Kelly Jamieson's Blog": [
  "\ndef extractBuildingCastlesBlogspotCom(item):\n\t'''\n\tParser for 'building-castles.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:03.627319"
 ],
 "Kencephalon Translations": [
  "def extractKencephalonTranslations(item):\n\t\"\"\"\n\tKencephalon Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kenji Kent Translation": [
  "def extractHirowtranslationWordpressCom(item):\n\t'''\n\tParser for 'hirowtranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('It\\'s hard to raise a wife',       'It\\'s hard to raise a wife',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T06:37:56.528291"
 ],
 "Kenkyo Reika": [
  "def extractKenkyoReika(item):\n\t\"\"\"\n\t'Kenkyo Reika'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Botsuraku Youtei Nanode, Kajishokunin wo Mezasu',  'Botsuraku Youtei Nanode, Kajishokunin wo Mezasu', 'translated'),\n\t\t('My Death Flags Show No Sign of Ending',            'My Death Flags Show No Sign of Ending', 'translated'),\n\t\t('Hone no aru Yatsu',                                'Hone no aru Yatsu', 'translated'),\n\t\t('LV999 Villager',                                   'LV999 Villager', 'translated'),\n\t\t('amaku',                                            'Amaku Yasashii Sekai de Ikiru ni wa', 'translated'),\n\t\t('Kenkyo',                                           'Kenkyo, Kenjitsu o Motto ni Ikite Orimasu!', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-04-07T04:28:55.066738"
 ],
 "Kerambit's Incisions": [
  "def extractKerambit(item):\n\t\"\"\"\n\t# Kerambit's Incisions\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Yobidasa' in item['tags'] and (vol or chp):\n\t\tif not postfix and ':' in item['title']:\n\t\t\tpostfix = item['title'].split(':')[-1]\n\t\treturn buildReleaseMessageWithType(item, 'Yobidasareta Satsuriku-sha', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Keyo Translations": [
  "def extractKeyoTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kez Translations": [
  "def extractKeztranslationsWordpressCom(item):\n\t'''\n\tParser for 'keztranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('FOD',     'Quickly Wear the Face of the Devil',      'translated'), \n\t\t('ABO',      'ABO Cadets',                              'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('ABO Vol',      'ABO Cadets',                              'translated'), \n\t\t('FOD Chapter',  'Quickly Wear the Face of the Devil',      'translated'), \n\t\t('FOD Chap',     'Quickly Wear the Face of the Devil',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-11-04T23:24:55.946572"
 ],
 "Kidney Translations": [
  "def extractKidneyTranslations(item):\n\t\"\"\"\n\t'Kidney Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kieshi's Little Steps": [
  "def extractKieshitlWordpressCom(item):\n\t'''\n\tParser for 'kieshitl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I am a Big Villain',       'I am a Big Villain',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-12T11:11:41.618576"
 ],
 "Kikai MTL": [
  "\ndef extractKikaiMtl(item):\n\t'''\n\tParser for 'Kikai MTL'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:55.510660"
 ],
 "Killer Ninja  Scrap  Book": [
  "def extractKillerNinjaScrapBook(item):\n\t'''\n\tParser for 'Killer Ninja  Scrap  Book'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('A Mistaken Marriage Match: Pirate\u2019s Daughter Volume',     'A Mistaken Marriage Match: Pirates Daughter',                        'translated'),\n\t\t('\tA Mistaken Marriage Match: Pirate\u2019s Daughter ',         'A Mistaken Marriage Match: Pirates Daughter',                        'translated'),\n\t\t('A Mistaken Marriage Match 4',                             'A Mistaken Marriage Match: Pirates Daughter',                        'translated'),\n\t\t('A Mistaken Marriage Match 4 Pirate\u2019s Daughter',           'A Mistaken Marriage Match: Pirates Daughter',                        'translated'),\n\t\t('A Mistaken Marriage Match 4: The Pirate\u2019s Daughter',      'A Mistaken Marriage Match: Pirates Daughter',                        'translated'),\n\t\t('Mysteries in the Imperial Harem:',                        'A Mistaken Marriage Match: Mysteries in the Imperial Harem',         'translated'),\n\t\t('A Mistaken Marriage Match2:',                             'A Mistaken Marriage Match: A Generation of Military Counselor',      'translated'),\n\t\t('Pursuit of Murderer in Liao Yue',                         'A Mistaken Marriage Match: Pursuit of Murderer in Liao Yue',         'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\turlfrag = [\n\t\t('/a-mistaken-marriage-4-pirates-daughter', 'A Mistaken Marriage Match: Pirates Daughter',                       'translated'),\n\t\t('/a-mistaken-marriage-match-4-',           'A Mistaken Marriage Match: Pirates Daughter',                       'translated'),\n\t\t('/a-mistaken-marriage-match-2-',           'A Mistaken Marriage Match: A Generation of Military Counselor',     'translated'),\n\t\t('/a-mistaken-marriage-match2-',            'A Mistaken Marriage Match: A Generation of Military Counselor',     'translated'),\n\t\t('/a-mistaken-marriage-match2generation',   'A Mistaken Marriage Match: A Generation of Military Counselor',     'translated'),\n\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-05-04T05:45:46.567128"
 ],
 "Killer Serials": [
  "\ndef extractCoopskillerserialsBlogspotCom(item):\n\t'''\n\tParser for 'coopskillerserials.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-18T05:29:10.340755"
 ],
 "Killerpants Translations": [
  "\ndef extractKillerpantBlogspotCom(item):\n\t'''\n\tParser for 'killerpant.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:36:59.229904"
 ],
 "Kimamani Translate": [
  "def extractKimamanitranslateTumblrCom(item):\n\t'''\n\tParser for 'kimamanitranslate.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif 'ask' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('An Observation Record of my Fianc\u00e9e - A Self-Proclaimed Villainess',                              'An Observation Record of my Fianc\u00e9e - A Self-Proclaimed Villainess',                                             'translated'), \n\t\t('I Reincarnated into an Otome Game as a Villainess With Only Destruction Flags\u2026',                  'I Reincarnated Into an Otome Game as a Villainess with Only Destruction Flags...',                               'translated'), \n\t\t('I Reincarnated Into an Otome Game as a Villainess with Only Destruction Flags...',                'I Reincarnated Into an Otome Game as a Villainess with Only Destruction Flags...',                               'translated'), \n\t\t('The Heavily Armoured Noble Girl Monette: How To Break a Curse You Don\\'t Remember Casting',       'The Heavily Armoured Noble Girl Monette: How To Break a Curse You Don\\'t Remember Casting',                      'translated'), \n\t\t('Someone Please Explain This Situation',                                                           'Someone Please Explain This Situation! The Antics of Duke Physalis',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T07:15:52.870987"
 ],
 "King Jaahn's Subjects": [
  "def extractKingJaahn(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn buildReleaseMessageWithType(item, 'Divine Progress', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kiri Leaves": [
  "def extractKiri(item):\n\t\"\"\"\n\t# Kiri Leaves:\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Tensei Oujo' in item['tags'] and (vol or chp):\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Oujo wa Kyou mo Hata o Tatakioru', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kirihara Maya": [
  "def extractKiriharaMaya(item):\n\t\"\"\"\n\tKirihara Maya\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kiriko Translations": [
  "def extractKirikoTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'KnW' in item['tags'] or 'KnW Chapter' in item['title']:\n\t\tpostfix = item['title'].split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\n\ttagmap = [\n\t\t('Shinwa Densetsu',                                                          'Shinwa Densetsu no Eiyuu no Isekaitan',                                  'translated'),\n\t\t('Common Sense of a Warrior House',                                          'Common Sense of a Warrior House',                                        'translated'),\n\t\t('AkaHoshi',                                                                 'The Different World with the Red Star Chapters',                         'translated'),\n\t\t('The Magnificent Battle Records of a Former Noble Lady',                    'The Magnificent Battle Records of a Former Noble Lady',                  'translated'),\n\t\t('After the Ending the Magical Girl Earnestly Hides Her True Identity',      'After the Ending the Magical Girl Earnestly Hides Her True Identity',    'translated'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\treturn False",
  "2017-12-28T04:09:01.081055"
 ],
 "Kisato's Hobbies!": [
  "def extractKisatoSHobbies(item):\n\t\"\"\"\n\tParser for 'Kisato's Hobbies!'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kisato's MLTs": [
  "def extractKisatosMLTs(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kistuao Translation(?)": [
  "\ndef extractKitsuaoWordpressCom(item):\n\t'''\n\tParser for 'kitsuao.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-19T10:12:57.573909"
 ],
 "KitaKami Ooi": [
  "def extractKitaKamiOoi(item):\n\t\"\"\"\n\t'KitaKami Ooi'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Escaping the Nuclear Fallout Shelter that has Turned Into a Dungeon Alone?', 'Escaping the Nuclear Fallout Shelter that has Turned Into a Dungeon Alone?', 'translated'),\n\t\t('Otome Game Rokkushuume, Automode ga Kiremashita',                            'Otome Game Rokkushuume, Automode ga Kiremashita',                            'translated'),\n\t\t('Akuyaku Reijou wa Ringoku no Oitaishi ni Dekiai Sareru',                     'Akuyaku Reijou wa Ringoku no Oitaishi ni Dekiai Sareru',                     'translated'),\n\t\t('Akuyaku Reijou wa Ringoku no Outaishi ni Dekiai Sareru',                     'Akuyaku Reijou wa Ringoku no Oitaishi ni Dekiai Sareru',                     'translated'),\n\t\t('Skill Up with Login Bonus',                                                  'Skill Up with Login Bonus',                                                  'translated'),\n\t\t('Watashi wa Teki ni Narimasen!',                                              'Watashi wa Teki ni Narimasen!',                                              'translated'),\n\t\t('I Chose to Fake My Death',                                                   'I Chose to Fake My Death',                                                   'translated'),\n\t\t('Chuunibyou Demo Koi ga Shitai!',                                             'Chuunibyou Demo Koi ga Shitai!',                                             'translated'),\n\t\t('Gomen ne Onii-sama',                                                         'Gomen ne Onii-sama',                                                         'translated'),\n\t\t('My Girlfriend Lulu',                                                         'My Girlfriend Lulu',                                                         'translated'),\n\t\t('I Decided to Not Compete and Quietly Create Dolls Instead',                  'I Decided to Not Compete and Quietly Create Dolls Instead',                  'translated'),\n\t\t('B.A.D.',                                                                     'B.A.D.',                                                                     'translated'),\n\t\t('Beyond Another Darkness',                                                    'B.A.D.',                                                                     'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-11-04T03:38:51.490920"
 ],
 "Kitchen & Novel": [
  "def extractKitchennovelCom(item):\n\t'''\n\tParser for 'kitchennovel.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Strange World Alchemist Chef',                  'Strange World Alchemist Chef',                                 'translated'),\n\t\t('Imperial Chef Rookie',                          'Imperial Chef Rookie',                                         'translated'),\n\t\t('Daddy Fantasy World',                           'Daddy Fantasy World',                                          'translated'),\n\t\t('Here Comes the Lady Chef',                      'Here Comes the Lady Chef',                                     'translated'),\n\t\t('Different World Okonomiyaki Chain Store',       'Different World Okonomiyaki Chain Store',                      'translated'),\n\t\t('Strange World Little Cooking Saint',            'Strange World Little Cooking Saint',                           'translated'),\n\t\t('Fine Food Broadcastor',                         'Fine Food Broadcaster',                                        'translated'),\n\t\t('Kitchen Xiuzhen',                               'Kitchen Xiuzhen',                                              'translated'),\n\t\t('Reborn - Super Chef',                           'Reborn - Super Chef',                                          'translated'),\n\t\t('The Taming of the Black Bellied Scholar',       'The Taming of the Black Bellied Scholar',                      'translated'),\n\t\t('The Feast',                                     'The Feast',                                                    'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-24T08:51:42.762655"
 ],
 "Kitsune Haven": [
  "\ndef extractErokitsune707TumblrCom(item):\n\t'''\n\tParser for 'erokitsune707.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:53:29.105606"
 ],
 "Kitsune-Sama no Shinto": [
  "\ndef extractKitsuneSamaNoShinto(item):\n\t'''\n\tParser for 'Kitsune-Sama no Shinto'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:54.283615"
 ],
 "Kiyoitsukikage": [
  "def extractKiyoitsukikage(item):\n\t\"\"\"\n\tParser for 'Kiyoitsukikage'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'request' in item['tags']:\n\t\treturn None\n\tif 'Answers' in item['tags']:\n\t\treturn None\n\t\t\n\t\t\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-10-21T02:38:18.332263"
 ],
 "Kliping": [
  "def extractHoneyColectionBlogspotCom(item):\n\t'''\n\tParser for 'honey-colection.blogspot.com'\n\t'''\n\n\treturn None",
  "2018-04-25T06:03:24.377029"
 ],
 "Knave": [
  "\ndef extractInteractivedecisiontheoryWordpressCom(item):\n\t'''\n\tParser for 'interactivedecisiontheory.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:47.726032"
 ],
 "Knee Slapping TL": [
  "def extractKneeslappingtlWordpressCom(item):\n\t'''\n\tParser for 'kneeslappingtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tchp_prefixes = [\n\t\t\t('You\u2019ve Got The Wrong House, Villain ',       'You\\'ve Got The Wrong House, Villain',                      'translated'),\n\t\t\t('Manowa',  'Manowa Mamono Taosu Nouryoku Ubau Watashi Tsuyokunaru',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\n\treturn False",
  "2019-05-28T22:48:35.546289"
 ],
 "Knight Fantastic Night Translations": [
  "def extractKnightFantasticNightTranslations(item):\n\t\"\"\"\n\tKnight Fantastic Night Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'RAW' in item['title']:\n\t\treturn False\n\tif 'Knight Fantastic Night' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Knight Fantastic Night', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Bride of The Serpent Prince' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Bride of The Serpent Prince', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Knokkro Translations": [
  "def extractKnokkroTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Eternal Life' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Eternal Life', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Koalas Playground": [
  "def extractKoalasplaygroundCom(item):\n\t'''\n\tParser for 'koalasplayground.com'\n\t'''\n\t\n\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-05-27T05:31:17.988676"
 ],
 "KobatoChanDaiSukiScan": [
  "def extractKobatoChanDaiSukiScan(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Lookism' in item['tags']:\n\t\treturn None\n\tif  'webtoon' in item['tags']:\n\t\treturn None\n\tif '*Announcements*' in item['tags']:\n\t\treturn None\n\tif '*STAFF ONLY*' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t(\"Can't Stop Craving Potions Again and Again\",     \"Can't Stop Craving Potions Again and Again\",                        'translated'),\n\t\t(\"Can't Stop Craving Potions\",                     \"Can't Stop Craving Potions\",                                        'translated'),\n\t\t(\"Royal Roader on My Own\",                         \"Royal Roader on My Own\",                                            'translated'),\n\t\t('A Bird That Drinks Tears',                       'A Bird That Drinks Tears',                                          'translated'),\n\t\t('All Things Wrong',                               'Doing All Things Wrong And Somehow Becoming The Best In The Game',  'translated'),\n\t\t('Cheat Skill: Sleep Learning',                    'Cheat Skill: Sleep Learning',                                       'translated'),\n\t\t('Coder Lee YongHo',                               'Coder Lee YongHo',                                                  'translated'),\n\t\t('FFF-Class Trashero',                             'FFF-Class Trashero',                                                'translated'),\n\t\t('Dragon Poor',                                    'Dragon Poor',                                                       'translated'),\n\t\t('Everyone Else is a Returnee',                    'Everyone Else is a Returnee',                                       'translated'),\n\t\t('God of Cooking',                                 'God of Cooking',                                                    'translated'),\n\t\t('God of Crime',                                   'God of Crime',                                                      'translated'),\n\t\t('God of Music',                                   'God of Music',                                                      'translated'),\n\t\t('God of Thunder',                                 'God of Thunder',                                                    'translated'),\n\t\t('God-level Bodyguard in the City',                'God-level Bodyguard in the City',                                   'translated'),\n\t\t('Green Skin',                                     'Green Skin',                                                        'translated'),\n\t\t('I am the monarch',                               'I am the Monarch',                                                  'translated'),\n\t\t('Kenkyo kenjitsu o motto ni ikite orimasu!',      'Kenkyo, Kenjitsu o Motto ni Ikite Orimasu!',                        'translated'),\n\t\t('Life of the Damned',                             'Life of the Damned',                                                'translated'),\n\t\t('Forest of Funerals',                             'Forest of Funerals',                                                'translated'),\n\t\t('Link the Orc',                                   'Link the Orc',                                                      'translated'),\n\t\t('maou no hajimekata',                             'Maou no Hajimekata',                                                'translated'),\n\t\t('Miracle Drawing!',                               'Miracle Drawing!',                                                  'translated'),\n\t\t('Omni Genius',                                    'Omni Genius',                                                       'translated'),\n\t\t('Omocha no Kyousou-sama',                         'Omocha no Kyousou-sama',                                            'translated'),\n\t\t('One Man Army',                                   'One Man Army',                                                      'translated'),\n\t\t('Reincarnator',                                   'Reincarnator',                                                      'translated'),\n\t\t('Rise Strongest Warrior',                         'Rise Strongest Warrior',                                            'translated'),\n\t\t('Solo Clear',                                     'Solo Clear',                                                        'translated'),\n\t\t('Survival World RPG',                             'Survival World RPG',                                                'translated'),\n\t\t('Ten Thousand Heaven Controlling Sword',          'Ten Thousand Heaven Controlling Sword',                             'translated'),\n\t\t('The Bird That Drinks Tears',                     'The Bird That Drinks Tears',                                        'translated'),\n\t\t('The Sorcerer Laughs in the Mirror',              'The Sorcerer Laughs in the Mirror',                                 'translated'),\n\t\t('The Stone of Days',                              'The Stone of Days',                                                 'translated'),\n\t\t('The Strongest System',                           'The Strongest System',                                              'translated'),\n\t\t('Wagahai no Kare wa Baka de aru',                 'Wagahai no Kare wa Baka de aru',                                    'translated'),\n\t\t('When The Star Flutters',                         'When The Star Flutters',                                            'translated'),\n\t\t('Magician of Insa-Dong',                          'Magician of Insa-Dong',                                             'translated'),\n\t\t\n\t\t(\"Hero\",                                           \"Hero\",                                                              'oel'),\n\t\t(\"Immortal Ascension Tower\",                       \"Immortal Ascension Tower\",                                          'oel'),\n\t\t(\"The Overlord's Elite is now a Human?!\",          \"The Overlord's Elite is now a Human?!\",                             'oel'),\n\t\t(\"Titan's Throne\",                                 \"Titan's Throne\",                                                    'oel'),\n\t\t('Conquest',                                       'Conquest',                                                          'oel'),\n\t\t('The Empyrean Nethervoid',                        'The Empyrean Nethervoid',                                           'oel'),\n\t]\n\n\tfor tag, sname, tl_type in tagmap:\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('fujimaru wrote a new post, FFF-Class Trashero - Chapter',                  'FFF-Class Trashero',                                                  'translated'),\n\t\t('kobatochandaisuki wrote a new post, I Am the Monarch - Chapter',           'I Am the Monarch',                                                    'translated'),\n\t\t('Engebu wrote a new post, I Am the Monarch - Chapter',                      'I Am the Monarch',                                                    'translated'),\n\t\t('Calvis wrote a new post, Dragon Poor - Chapter',                           'Dragon Poor',                                                         'translated'),\n\t\t('Calvis wrote a new post, Green Skin - Chapter',                            'Green Skin',                                                          'translated'),\n\t\t('Calvis wrote a new post, Rise, Strongest Warrior - Chapter',               'Rise, Strongest Warrior',                                             'translated'),\n\t\t('Calvis wrote a new post, The Stone of Days - ',                            'The Stone of Days',                                                   'translated'),\n\t\t('Calvis wrote a new post, The Stone of Days - Chapter',                     'The Stone of Days',                                                   'translated'),\n\t\t('csvtranslator wrote a new post, I Am the Monarch - Chapter',               'I Am the Monarch',                                                    'translated'),\n\t\t('Koukouseidesu wrote a new post, Everyone Else is a Returnee - Chapter',    'Everyone Else is a Returnee',                                         'translated'),\n\t\t('kuhaku wrote a new post, Solo Clear - Chapter ',                           'Solo Clear',                                                          'translated'),\n\t\t('miraclerifle wrote a new post, God of Cooking - Chapter',                  'God of Cooking',                                                      'translated'),\n\t\t('miraclerifle wrote a new post, Royal Roader on My Own - Chapter',          'Royal Roader on My Own',                                              'translated'),\n\t\t('pyrenose wrote a new post, Rise, Strongest Warrior - Chapter',             'Rise, Strongest Warrior',                                             'translated'),\n\t\t('Saquacon wrote a new post, All Things Wrong - Chapter',                    'Doing All Things Wrong And Somehow Becoming The Best In The Game',    'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\t\t\n\treturn False",
  "2019-01-26T15:11:35.925895"
 ],
 "Kokuma Translations": [
  "def extractKokumaTranslations(item):\n\t\"\"\"\n\t'Kokuma Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith('Arena Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Arena', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Komirru Translations": [
  "def extractKomirrutranslationsWordpressCom(item):\n\t'''\n\tParser for 'komirrutranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I am the Newly Born Woman of Around Thirty',       'I am the Newly Born Woman of Around Thirty',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-26T05:22:36.327500"
 ],
 "Konglong": [
  "def extractKonglongblogWordpressCom(item):\n\t'''\n\tParser for 'konglongblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('genius demon empress',       'Genius Demon Empress',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-13T05:50:50.840244"
 ],
 "Konjiki no Wordmaster": [
  "def extractKnW(item):\n\t\"\"\"\n\t# Groups involved in KnW:\n\t# \tBlazing Translations\n\t# \tCapsUsingShift Tl\n\t# \tInsignia Pierce\n\t# \tKiriko Translations\n\t# \tKonjiki no Wordmaster\n\t# \tLoliquent\n\t# \tBlazing Translations\n\t# \tPummels Translations\n\t# \tXCrossJ\n\t# \tProbably another dozen randos per week.\n\t# Really. Fuck you people. Tag your shit, and start a group blog.\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\ttags = item['tags']\n\ttitle = item['title']\n\tsrc = item['srcname']\n\tpostfix = ''\n\tif src == 'XCrossJ' and 'Cross Gun' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Cross Gun', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Character Analysis' in item['title']:\n\t\treturn False\n\tif 'Chapter' in title and src == 'Blazing Translations':\n\t\tif 'By:' in title:\n\t\t\treturn False\n\t\tif 'Comment' in title:\n\t\t\treturn False\n\t\tif ':' in title:\n\t\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\telif '-' in title:\n\t\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\telse:\n\t\t\tpostfix = ''\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\tif ('Chapters' in tags and 'Konjiki no Wordmaster' in tags or 'Konjiki no Wordmaster Web Novel Chapters' in tags or 'Konjiki' in tags or src == 'Loliquent' and \n\t    'Konjiki no Wordmaster' in title):\n\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\telif 'Konjiki no Wordmaster Chapters' in tags or 'Konjiki no Moji Tsukai' in tags or src == 'Kiriko Translations' and ('KnW' in tags or 'KnW Chapter' in title\n\t    ) or src == 'CapsUsingShift Tl' and 'Konjiki no Wordmaster' in title or src == 'Pummels Translations' and 'Konjiki no Word Master Chapter' in title or src == 'XCrossJ' and 'Konjiki no Moji Tsukai' in title or src == 'Insignia Pierce' and 'Konjiki no Word Master Chapter' in title:\n\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Konko's Translations": [
  "def extractKonkoSTranslations(item):\n\t\"\"\"\n\tParser for 'Konko's Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('I Bought a Girl',                           'I Bought a Girl',                                  'translated'), \n\t\t('Elf',                                       'Kuishinbo Elf',                                    'translated'), \n\t\t('The strongest 10 years old magician',       'Juu Sai no Saikyou Madoushi',                      'translated'), \n\t\t('Cheat na Kaineko',                          'Cheat na Kaineko no Okage de Rakuraku Level Up',   'translated'), \n\t\t('Pervert Healer',                            'I Work As A Healer In Another World\\'s Labyrinth City',   'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-05-14T02:31:25.485979"
 ],
 "Konobuta": [
  "def extractKonobuta(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'status' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sir, I can\u2019t actually read my Status', vol, chp, frag=frag, postfix=postfix)\n\tif 'uchimusume' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'For my daughter, I might even be able to defeat the demon king', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\tif 'Ryouriban' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'The Cook of the Mercenary Corp', vol, chp, frag=frag, postfix=postfix)\n\tif 'UchiMusume' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'For my daughter, I might even be able to defeat the demon king', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2018-02-23T07:46:26.090846"
 ],
 "Koong Koong Translations": [
  "def extractKoongKoongTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kore Yori Hachidori": [
  "def extractKoreYoriHachidori(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Seiun wo kakeru'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Seiun wo Kakeru', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ochitekita'.lower() in item['title'].lower() or 'Ochitekita Naga to Majo no Kuni' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ochitekita Naga to Majo no Kuni', vol, chp, frag=frag, postfix=postfix)\n\tif 'Humans are the Strongest Race' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Humans are the Strongest Race ~Starting a Slow Life with an Elf Wife in a Different World~', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Korea Novels": [
  "def extractKoreanovelsCom(item):\n\t'''\n\tParser for 'koreanovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['title'].startswith(\"Link \") and item['tags'] == ['RSS']:\n\t\treturn buildReleaseMessageWithType(item, 'Level 1 Skeleton', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\tif item['title'].startswith(\"MoS Link \") and item['tags'] == ['RSS']:\n\t\treturn buildReleaseMessageWithType(item, 'Master of Strength', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-27T08:11:45.811588"
 ],
 "Korean Novel Translations": [
  "def extractKoreanNovelTrans(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag):\n\t\treturn False\n\tif 'Novel: Kill the Lights' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kill the Lights', vol, chp, frag=frag, postfix=postfix)\n\tif 'Novel: Black Butterfly' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Black Butterfly', vol, chp, frag=frag, postfix=postfix)\n\tif 'NL Novel: Our House Pet' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Our House Pet', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Korean Novels for my": [
  "def extractNovelsformyBlogspotCom(item):\n\t'''\n\tParser for 'novelsformy.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Daughter of the emperor',       'Daughter of the emperor',                      'translated'),\n\t\t('Queen with a scalpel',          'Queen with a scalpel',                         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:26:22.171882"
 ],
 "Korean Town": [
  "def extractKoreantownWordpressCom(item):\n\t'''\n\tParser for 'koreantown.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Revenge Consulting',       'Revenge Consulting',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-05-14T02:33:52.719777"
 ],
 "Korean Translations": [
  "\ndef extractKrtranslationsWordpressCom(item):\n\t'''\n\tParser for 'krtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-29T20:11:16.140032"
 ],
 "Koryos Writes": [
  "\ndef extractWwwKoryoswritesCom(item):\n\t'''\n\tParser for 'www.koryoswrites.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:28.421816"
 ],
 "Krytyk's Translations": [
  "def extractKrytyksTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Only Sense Online',          'Only Sense Online',    'translated'),\n\t\t('AntiMagic Academy',          'AntiMagic Academy',    'translated'),\n\t\t('Daybreak on Hyperion',       'Daybreak on Hyperion', 'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-01-04T05:49:43.457406"
 ],
 "Kuda Lakorn": [
  "def extractKudaLakorn(item):\n\t\"\"\"\n\tParser for 'Kuda Lakorn'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kudarajin": [
  "def extractKudarajin(item):\n\t\"\"\"\n\tKudarajin\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'I Appear to have been Reincarnated as a Love Interest in an Otome Game' in item['tags'] or item['title'].startswith(\n\t    'I Appear to have been Reincarnated as a Love Interest in an Otome Game: '):\n\t\treturn buildReleaseMessageWithType(item, 'I Appear to have been Reincarnated as a Love Interest in an Otome Game', vol, chp, frag=frag, postfix=postfix)\n\tif 'Hokuou Kizoku to Moukinzuma no Yukiguni Karigurashi' in item['tags'] or item['title'].startswith('Hokuou Kizoku to Moukinzuma no Yukiguni Karigurashi:'):\n\t\treturn buildReleaseMessageWithType(item, 'Hokuou Kizoku to Moukinzuma no Yukiguni Karigurashi', vol, chp, frag=frag, postfix=postfix)\n\tif 'Miniature Garden Chemister' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Miniature Garden Chemister', vol, chp, frag=frag, postfix=postfix)\n\tif 'Tensei Shite Inaka de Slowlife wo\\xa0Okuritai' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shite Inaka de Slowlife wo\\xa0Okuritai', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kudzu, a Novel": [
  "\ndef extractBrniWordpressCom(item):\n\t'''\n\tParser for 'brni.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:37.167135"
 ],
 "Kuhaku Light Novels Translations": [
  "def extractKuhakulightnoveltranslationsCom(item):\n\t'''\n\tParser for 'kuhakulightnoveltranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['tags'] != ['Uncategorized']:\n\t\treturn False\n\t\t\n\tchp_prefixes = [\n\t\t\t('This Time, I Became The Fiance Of A Duke\u2019s Daughter. But She Is Rumored To Have Bad Personality And Ten Years Older ',  'This Time, I Became The Fiance Of A Duke\u2019s Daughter. But She Is Rumored To Have Bad Personality And Ten Years Older',               'translated'),\n\t\t\t\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\n\n\treturn False",
  "2018-07-05T04:00:05.293922"
 ],
 "Kuma Otou": [
  "def extractKumaOtou(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"I Kinda Came to Another World but where's the way home\" in item['tags'] and 'translation' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Kichattakedo Kaerimichi doko?', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kuro Kurori's Lounge": [
  "def extractKurokuroriWordpressCom(item):\n\t'''\n\tParser for 'kurokurori.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Villainess with Weapons',       'The Villainess Will Crush Her Destruction End Through Modern Firepower',                                                'translated'),\n\t\t('Saving 80000 Gold',             'Saving 80,000 Gold in Another World for Retirement ',                                                                   'translated'),\n\t\t('Saving 80,000 Gold',            'Saving 80,000 Gold in Another World for Retirement ',                                                                   'translated'),\n\t\t('Survive Using Potion',          'Potion-danomi de Ikinobimasu!',                                                                                         'translated'),\n\t\t('Former Assassin',               'Killing with Bikini Armor ~Former assassin sees a dream of huge breasts over the steam boundary~',                      'translated'),\n\t\t('Demon King',                    'Do you think someone like you can defeat the demon king?',                                                              'translated'),\n\t\t('Fathercon Daughters',           'The Middle-aged Man who just Returned from Another World Melts his Fathercon Daughters with his Paternal Skill ',       'translated'),\n\t\t('Genocide Online',               'Genocide Online ~Playtime Diary of an Evil Young Girl~',                                                                'translated'),\n\t\t('Disciple Yandere',              'I Was Made The Disciple of a Yandere, but\u2026',                                                                            'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-03T00:54:27.769874"
 ],
 "Kuro Translation": [
  "def extractKuroTranslation(item):\n\t\"\"\"\n\t'Kuro Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Second Summon', 'Isekai Shoukan wa Nidome Desu',                   'translated'),\n\t\t('rebirth',       'ReBirth From The Upper World To The Lower World', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-03-27T02:43:54.755664"
 ],
 "Kuro Translations": [
  "def extractKuroTranslations(item):\n\t\"\"\"\n\t# 'Kuro Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kuromaku's blog": [
  "def extractKrmakuWordpressCom(item):\n\t'''\n\tParser for 'krmaku.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Monrabu',       'Monku no Tsukeyou ga nai Rabukome',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T06:43:28.324069"
 ],
 "Kuromin": [
  "def extractKuromin(item):\n\t\"\"\"\n\tKuromin\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Potatoes are the only thing that\u2019s needed in this world! Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Potatoes are the only thing that\u2019s needed in this world!', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kuroneko Translations": [
  "def extractKuronekotranslationHomeBlog(item):\n\t'''\n\tParser for 'kuronekotranslation.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('a comfortable different world life',       'a comfortable different world life',                      'translated'),\n\t\t('Villian Days',                             'Villian Days',                                            'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-27T05:26:53.556454"
 ],
 "Kurono Translations": [
  "def extractWwwKuronotranslationsCom(item):\n\t'''\n\tParser for 'www.kuronotranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"Level Up Just By Eating\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Level Up Just By Eating\", vol, chp, frag=frag, postfix=postfix)\n\tif \"Kou 1 Desu ga Isekai de Joushu Hajimemashita\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Kou 1 Desu ga Isekai de Joushu Hajimemashita\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-07-02T09:46:03.237754"
 ],
 "Kuronochan": [
  "def extractKuronochandesuyoWordpressCom(item):\n\t'''\n\tParser for 'kuronochandesuyo.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"Since I reincarnated\u30fb\u30fb\u30fb\u30fb\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Since I reincarnated\u30fb\u30fb\u30fb\u30fb\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-05-27T07:41:07.112986"
 ],
 "Kuros TL": [
  "def extractKurosTL(item):\n\t\"\"\"\n\tKuros TL\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kurotsuki Novel": [
  "def extractKurotsukiNovel(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "KuruKuru Translation": [
  "def extractKurukurutlWordpressCom(item):\n\t'''\n\tParser for 'kurukurutl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I reincarnated, but I think the Prince (fianc\u00e9) has given up',       'I reincarnated, but I think the Prince (fianc\u00e9) has given up',                      'translated'),\n\t\t('Kedama wo hirotte 10 nen tattara',                                   'Kedama wo hirotte 10 nen tattara',                                                  'translated'),\n\t\t('Kedama hirotte 10 nen tattara',                                      'Kedama wo hirotte 10 nen tattara',                                                  'translated'),\n\t\t('Mahoutsukai no Konyakusha',                                          'Mahoutsukai no Konyakusha',                                                         'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\tif 'Kedama wo hirotte 10 nen tattara' in item['tags'] and chp == 10:\n\t\t\t\treturn None\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Mahoutsukai no Konyakusha',                                          'Mahoutsukai no Konyakusha',                                                         'translated'),\n\t\t('I reincarnated, but I think the Prince (fianc\u00e9) has given up',       'I reincarnated, but I think the Prince (fianc\u00e9) has given up',                      'translated'),\n\t\t('Kedama hirotte 10 nen tattara',                                      'Kedama hirotte 10 nen tattara',                                                     'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T04:33:38.418758"
 ],
 "Kusare": [
  "\ndef extractKusareWordpressCom(item):\n\t'''\n\tParser for 'kusare.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:30.292976"
 ],
 "Kuso Machine Translation": [
  "def extractKusoMachineTranslation(item):\n\t\"\"\"\n\tKuso Machine Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kuukai": [
  "def extractKuukaiWeeblyCom(item):\n\t'''\n\tParser for 'kuukai.weebly.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Zannen Oujo',       'Zannen Kei na Ojou-sama no Nichijou',                      'translated'), \n\t\t('Shiro Buta',        'Tensei Saki ga Shoujo Manga no Shiro Buta Reijou datta',   'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-15T04:40:57.944650"
 ],
 "KyOption's Library": [
  "def extractKyOptionsLibrary(item):\n\t\"\"\"\n\t# 'kyoptionslibrary.blogspot.com'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Death March' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Death March kara Hajimaru Isekai Kyusoukyoku (LN)', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kyakka": [
  "def extractKyakka(item):\n\t\"\"\"\n\t# Kyakka\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Yahari Ore no Seishun Love Come wa Machigatteiru' in item['tags'] and 'Translation' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Yahari Ore no Seishun Rabukome wa Machigatte Iru.', vol, chp, frag=frag, postfix=postfix)\n\tif 'Yahari Ore no Seishun Love Come wa Machigatteiru' in item['tags'] and 'Light Novel' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Yahari Ore no Seishun Rabukome wa Machigatte Iru.', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Kyakka Translations": [
  "def extractKyakkaTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Yahari Ore no Seishun Love Come wa Machigatteiru',       'Yahari Ore no Seishun Love Come wa Machigatteiru',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-09-03T08:06:21.285172"
 ],
 "Kylerweb": [
  "\ndef extractKylerwebWordpressCom(item):\n\t'''\n\tParser for 'kylerweb.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:20.252427"
 ],
 "Kyrus Talain": [
  "\ndef extractKyrustalainBlogspotCom(item):\n\t'''\n\tParser for 'kyrustalain.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:34.719006"
 ],
 "L. Lee Lowe": [
  "\ndef extractLleeloweCom(item):\n\t'''\n\tParser for 'lleelowe.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:26.012840"
 ],
 "L2M": [
  "def extractL2M(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "L3D": [
  "def extractL3D(item):\n\t\"\"\"\n\tL3D\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "LESYT": [
  "def extractLESYT(item):\n\t\"\"\"\n\tLESYT\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t \n\t\n\tsnames = [\n\t\t\n\t\t\t'Chronicles of Primordial Wars',\n\t\t\t'The Silly Alchemist',\n\t\t\t'Swallowing the Heavens',\n\t\t\t'Thunder Martial',\n\t\t\t'The Ocean Flame Palace Host',\n\t\t\t'I am a Bastard',\n\t\t\t'The Samsara Cycle',\n\t\t\t'The Thrilling Sword',\n\t\t\t'Fanatic Martial God',\n\t\t\t'The City\\'s Invincible Soldier King',\n\t\t\t'The Supreme Sword',\n\t\t\t'Heavenly Martial Throne',\n\t\t\t'I Sell Tantric Amulets in Thailand',\n\t\t]\n\t\n\ttlut = {tmp.lower(): tmp for tmp in snames}\n\t\n\t    \n\ttlut['demon god'] = \"Demon God\"\n\t\n\tltags = [tmp.lower() for tmp in item['tags']]\n\tfor key, value in tlut.items():\n\t\tif key in ltags:\n\t\t\ttl_type = 'translated'\n\t\t\t\n\t\t\treturn buildReleaseMessageWithType(item, value, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\treturn False",
  "2017-04-03T02:15:04.790617"
 ],
 "LGS translation": [
  "def extractLetsgostargazingWordpressCom(item):\n\t'''\n\tParser for 'letsgostargazing.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('MNLWYPBP chapter ',       'My new life, won\u2019t you please become peaceful!',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-04T03:21:33.930812"
 ],
 "LMS Machine Translations": [
  "def extractLMSMachineTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "LMS Novel": [
  "\ndef extractLmstranslationBlogspotCom(item):\n\t'''\n\tParser for 'lmstranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:55:52.218121"
 ],
 "LMS novel": [
  "def extractLmsnovelWordpressCom(item):\n\t'''\n\tParser for 'lmsnovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('LMS',       'The Legendary Moonlight Sculptor',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-27T08:09:05.695885"
 ],
 "LN and WN Warrior Translation": [
  "def extractLnnwnwarriorBlogspotCom(item):\n\t'''\n\tParser for 'lnnwnwarrior.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('LBADDWSB Chapter ',  'Let\\'s be an Adventurer! ~Defeating Dungeons with a Skill Board~',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-01-05T08:24:31.930799"
 ],
 "LNEG Translations": [
  "\ndef extractLnegtlClub(item):\n\t'''\n\tParser for 'lnegtl.club'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:37:03.668426"
 ],
 "LNFree": [
  "def extractLnfreeWordpressCom(item):\n\t'''\n\tParser for 'lnfree.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Imouto sae ireba ii',       'Imouto sae ireba ii',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-03T06:17:04.557089"
 ],
 "LNTranslation": [
  "def extractLntranslation(item):\n\t\"\"\"\n\tParser for 'LNTranslation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "LN~Desu~": [
  "\ndef extractLndesuWordpressCom(item):\n\t'''\n\tParser for 'lndesu.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:22.748979"
 ],
 "LPTranslation": [
  "def extractLptransPassionstampCom(item):\n\t'''\n\tParser for 'lptrans.passionstamp.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Legend of the Continental Heroes',       'Legend of the Continental Heroes',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-27T04:28:35.459054"
 ],
 "Lada's BL MTL": [
  "def extractLadasblmtlBlogspotCom(item):\n\t'''\n\tParser for 'ladasblmtl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('a guide to',       'A Guide to',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T02:59:52.189567"
 ],
 "Lagoon Translations": [
  "def extractLagoontranslationsWordpressCom(item):\n\t'''\n\tParser for 'lagoontranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('S Rank Girl',                            'My Daughter who Left for the Capital to Become an Adventurer Reached S Rank',                      'translated'),\n\t\t('My Body Is Completely Invincible',       'It Seems like My Body Is Completely Invincible',                                                   'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-06T02:31:14.254074"
 ],
 "Lainconnue": [
  "def extractLainconnueEbisutranslationsCom(item):\n\t'''\n\tParser for 'lainconnue.ebisutranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Unlimited Anime Works',        'Unlimited Anime Works',                       'translated'),\n\t\t('Holistic Fantasy',             'Holistic Fantasy',                            'translated'),\n\t\t('Shoujo Grand Summoning',       'Shoujo Grand Summoning',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-01-13T07:27:51.219054"
 ],
 "Laki's Laboratory": [
  "def extractLakisLaboratory(item):\n\t\"\"\"\n\tLaki's Laboratory\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lalalyly's Translations": [
  "def extractLalalylyWordpressCom(item):\n\t'''\n\tParser for 'lalalyly.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('[CEO] Chapter',  'CEO Above, Me Below',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-05T08:58:08.776065"
 ],
 "Lamby TL": [
  "def extractLambytlWordpressCom(item):\n\t'''\n\tParser for 'lambytl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('King of Classical Music',       'King of Classical Music',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-22T05:20:46.307472"
 ],
 "Land Tales": [
  "\ndef extractWwwLandtalesCom(item):\n\t'''\n\tParser for 'www.landtales.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-28T07:13:37.598258"
 ],
 "Land of Light Novels": [
  "def extractLandofLightNovels(item):\n\t\"\"\"\n\tLand of Light Novels\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('C3'):\n\t\treturn buildReleaseMessageWithType(item, 'Cube x Cursed x Curious', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Chrome Shelled Regios'):\n\t\treturn buildReleaseMessageWithType(item, 'Chrome Shelled Regios', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Utsuro no Hako to Zero no Maria'):\n\t\treturn buildReleaseMessageWithType(item, 'Utsuro no Hako to Zero no Maria', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Seirei Tsukai no Blade Dance'):\n\t\treturn buildReleaseMessageWithType(item, 'Seirei Tsukai no Blade Dance', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Baka to test'):\n\t\treturn buildReleaseMessageWithType(item, 'Baka to Test', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Tokyo Ravens'):\n\t\treturn buildReleaseMessageWithType(item, 'Tokyo Ravens', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('The Zashiki Warashi of Intellectual Village'):\n\t\treturn buildReleaseMessageWithType(item, 'The Zashiki Warashi of Intellectual Village', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Overlord'):\n\t\treturn buildReleaseMessageWithType(item, 'Overlord', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Mahouka Koukou no Rettousei'):\n\t\treturn buildReleaseMessageWithType(item, 'Mahouka Koukou no Rettousei', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('To aru New Testament'):\n\t\treturn buildReleaseMessageWithType(item, 'To Aru Majutsu no Index: New Testament', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Land of Swimming Anime": [
  "def extractJaneypeixesTumblrCom(item):\n\t'''\n\tParser for 'janeypeixes.tumblr.com'\n\t'''\n\n\treturn None",
  "2017-08-16T05:07:58.113618"
 ],
 "Lang Ya Scribe": [
  "def extractLangyascribeWordpressCom(item):\n\t'''\n\tParser for 'langyascribe.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\tchp_prefixes = [\n\t\t\t('Chapter ',  'Lang Ya Bang',               'translated'),\n\t\t]\n\t\n\t\n\tif item['tags'] == ['Translated Chapters']:\n\t\tfor prefix, series, tl_type in chp_prefixes:\n\t\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-09-15T04:42:37.346999"
 ],
 "LanguidTranslations": [
  "def extractLanguidtranslationsBlogspotCom(item):\n\t'''\n\tParser for 'languidtranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['tags'] != []:\n\t\treturn False\n\t\t\n\tchp_prefixes = [\n\t\t\t('Unrepentant ',  'Unrepentant',               'translated'),\n\t\t\t('Deposed Empress General ',  'Deposed Empress General',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-01-05T07:13:57.807575"
 ],
 "LannyLand": [
  "def extractLannyland(item):\n\t\"\"\"\n\tParser for 'LannyLand'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Larvyde": [
  "def extractLarvyde(item):\n\t\"\"\"\n\t# Larvyde Translation\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Preview' in item['tags']:\n\t\treturn None\n\tif not postfix and '\u2013' in item['title']:\n\t\tpostfix = item['title'].split('\u2013')[-1]\n\tif 'Ore no Osananajimi wa Joshikousei de Yuusha' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ore no Osananajimi wa Joshikousei de Yuusha', vol, chp, frag=frag, postfix=postfix)\n\tif 'Oukoku e Tsuzuku Michi' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Oukoku e Tsuzuku Michi', vol, chp, frag=frag, postfix=postfix)\n\tif 'Takarakuji de 40-oku Atattandakedo' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Takarakuji de 40 Oku Atattandakedo Isekai ni Ijuu Suru', vol, chp, frag=frag, postfix=postfix)\n\tif 'Jaaku Chika Teikoku' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Jaaku to Shite Akuratsu Naru Chika Teikoku Monogatari', vol, chp, frag=frag, postfix=postfix)\n\tif 'Saenai Heroine no Sodatekata' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Saenai Heroine no Sodatekata', vol, chp, frag=frag, postfix=postfix)\n\tif 'Genjitsushugisha no Oukokukaizouki' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Genjitsushugisha no Oukokukaizouki', vol, chp, frag=frag, postfix=postfix)\n\tif 'Hitokui Dungeon e Youkoso' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Hitokui Dungeon e Youkoso', vol, chp, frag=frag, postfix=postfix)\n\tif 'Chikyuu Tenseisha no Koroshikata' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Chikyuu Tenseisha no Koroshikata', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lascivious Imouto": [
  "def extractLasciviousImouto(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'].replace('-', '.'))\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Beast of the 17th District' in item['tags'] or 'the beast of the 17th district' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'The Beast of the 17th District', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Le Festin de Vampire' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Le Festin de Vampire', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Last F\u00eanix": [
  "def extractLastfenixWordpressCom(item):\n\t'''\n\tParser for 'lastfenix.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Muyoku no Seijo',       'Muyoku no Seijo wa Okane ni Tokimeku',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:03:55.925250"
 ],
 "Lastvoice Translator": [
  "def extractLastvoiceTranslator(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Laughing Ghoul Translations": [
  "def extractLaughingGhoulTranslations(item):\n\t\"\"\"\n\t'Laughing Ghoul Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Laute, Laute!": [
  "def extractLauteLaute(item):\n\t\"\"\"\n\tParser for 'Laute, Laute!'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lawless Addiction": [
  "def extractSaehan01Com(item):\n\t'''\n\tParser for 'saehan01.com'\n\t'''\n\n\n\tbadwords = [\n\t\t\t'Spanish translation',\n\t\t]\n\tif any([bad in item['tags'] for bad in badwords]):\n\t\treturn None\n\n\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t(\"Li Yu\",                                     \"In Love with an Idiot\",                    'translated'),\n\t\t(\"Shameless\",                                 \"Shameless Gangster\",                       'translated'),\n\t\t(\"Intoxication\",                              \"Intoxication\",                             'translated'),\n\t\t(\"Lawless\",                                   \"Lawless Gangster\",                         'translated'),\n\t\t(\"saye\",                                      \"SAYE\",                                     'translated'),\n\t\t(\"Lawless Gangster\",                          \"Lawless Gangster\",                         'translated'),\n\t\t(\"Advance Bravely\",                           \"Advance Bravely\",                          'translated'),\n\t\t(\"addicted\",                                  \"Are you Addicted?\",                        'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif \"Lawless\" in item['tags'] and \"Gangster\" in item['tags'] :\n\t\treturn buildReleaseMessageWithType(item, \"Lawless Gangster\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2019-04-29T05:08:54.671600"
 ],
 "Layla One World Warrior": [
  "\ndef extractLaylaowwWordpressCom(item):\n\t'''\n\tParser for 'laylaoww.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:35.065785"
 ],
 "Layzisheep": [
  "def extractLayzisheep(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lazy Cat Novels": [
  "def extractLazycatnovelsWordpressCom(item):\n\t'''\n\tParser for 'lazycatnovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Mighty Female Official',                               'Mighty Female Official',                                              'translated'),\n\t\t('Xiaobei\\'s Life as a Proud and Respected Woman',       'Xiaobei\\'s Life as a Proud and Respected Woman',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-28T06:30:56.554788"
 ],
 "Lazy G Translations": [
  "def extractLazyGTranslations(item):\n\t\"\"\"\n\t'Lazy G Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ten God',       'Ten God',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-16T05:15:36.506060"
 ],
 "Lazy Girl Translations": [
  "def extractLazygirltranslationsCom(item):\n\t'''\n\tParser for 'lazygirltranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('The End Of The World\u2019s Poisonous Mom And Monster Baby',       'The End Of The World\u2019s Poisonous Mom And Monster Baby',                      'translated'),\n\t\t('Father, Mother Escaped Again',                                'Father, Mother Escaped Again',                                               'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\n\tchp_prefixes = [\n\t\t\t('PMMB Chapter ',  'The End Of The World\u2019s Poisonous Mom And Monster Baby',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T09:09:44.960985"
 ],
 "Lazy NEET Translations": [
  "def extractNEET(item):\n\t\"\"\"\n\t# Lazy NEET Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'NEET dakedo Hello Work ni Ittara Isekai ni Tsuretekareta' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'NEET dakedo Hello Work ni Ittara Isekai ni Tsuretekareta', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lazy Nanaseru Translation": [
  "def extractLazyNanaseruTranslation(item):\n\t\"\"\"\n\tParser for 'Lazy Nanaseru Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lazy-Faery Garden": [
  "def extractLazyfaerygardenWordpressCom(item):\n\t'''\n\tParser for 'lazyfaerygarden.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('S:FAAM',       'Sonata: Fleeing to Avoid an Arrange Marriage',                                                'translated'),\n\t\t('adp',         'Addicted Pampering You: The Mysterious Pampered Wife of The Military Ye',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-07T06:39:48.977566"
 ],
 "Lazypioneer Translation": [
  "def extractLazypioneerWordpressCom(item):\n\t'''\n\tParser for 'lazypioneer.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Legend of the Continental Heroes',       'Legend of the Continental Heroes',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-12T07:31:59.884742"
 ],
 "Lcatherina": [
  "def extractLcatherinaWordpressCom(item):\n\t'''\n\tParser for 'lcatherina.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('BFGAH',                                                                    'Beastly F\u0113i that Go Against the Heaven: Coerced by the Hu\u00e1ng Sh\u016b',                      'translated'),\n\t\t('Beastly F\u0113i that Goes Against the Heaven: Coerced by the Hu\u00e1ng Sh\u016b',       'Beastly F\u0113i that Go Against the Heaven: Coerced by the Hu\u00e1ng Sh\u016b',                      'translated'),\n\t\t('Pampered Fei Brimming with Cuteness',                                      'Pampered Fei Brimming with Cuteness',                                                   'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-03T04:53:20.814588"
 ],
 "LeWd Translation": [
  "def extractLewdtranslationBlogspotCom(item):\n\t'''\n\tParser for 'lewdtranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Everyone can do it! The Instant Love Switch',       'Everyone can do it! The Instant Love Switch',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:48:14.777278"
 ],
 "League of Heroes": [
  "\ndef extractJplhstoryBlogspotCom(item):\n\t'''\n\tParser for 'jplhstory.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:15.661502"
 ],
 "League of Legends of battle system": [
  "\ndef extractThewizardworldWordpressCom(item):\n\t'''\n\tParser for 'thewizardworld.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:52.889515"
 ],
 "Learning\u2026 please hold\u2026": [
  "\ndef extractLearning2TlWordpressCom(item):\n\t'''\n\tParser for 'learning2tl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:48:01.551087"
 ],
 "Leecher Vamparis Translations": [
  "def extractLeecherVamparisTranslations(item):\n\t\"\"\"\n\tLeecher Vamparis Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Legacy": [
  "\ndef extractLegacyofguardianBlogspotCom(item):\n\t'''\n\tParser for 'legacyofguardian.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:08.913553"
 ],
 "Legend of Fuyao": [
  "def extractTrackestWordpressCom(item):\n\t'''\n\tParser for 'trackest.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Legend of Fu Yao Chapter Update',       'Legend of Fu Yao',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-27T06:35:39.776054"
 ],
 "Legend of Galactic Heroes Translation Project": [
  "def extractLegendofGalacticHeroes(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Part 1 - Dawn' in item['tags']:\n\t\tif not vol:\n\t\t\tvol = 1\n\t\treturn buildReleaseMessageWithType(item, 'Legend of Galactic Heroes', vol, chp, frag=frag, postfix=postfix)\n\tif 'Part 2 - Ambition' in item['tags']:\n\t\tif not vol:\n\t\t\tvol = 2\n\t\treturn buildReleaseMessageWithType(item, 'Legend of Galactic Heroes', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Legend of the Evil God": [
  "def extractLegendoftheEvilGod(item):\n\t\"\"\"\n\tLegend of the Evil God\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Legendary Gomo": [
  "def extractLegendarygomoBlogspotCom(item):\n\t'''\n\tParser for 'legendarygomo.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Land of Gods',                   'The Land of Gods',                                  'oel'),\n\t\t('Explosive Flame Artist Ruche',       'Explosive Flame Artist Ruche',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-15T04:25:27.313591"
 ],
 "Legions Realm": [
  "def extractLegionsRealm(item):\n\t\"\"\"\n\tLegions Realm\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Legit Translations": [
  "def extractLegittranslationsWordpressCom(item):\n\t'''\n\tParser for 'legittranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\t\n\ttitlemap = [\n\t\t('TDS V',                         'The Dungeon Seeker',      'translated'),\n\t\t('The Dungeon Seeker \u2013 Chapter',  'The Dungeon Seeker',      'translated'),\n\t\t('The Dungeon Seeker \u2013 Volume ',  'The Dungeon Seeker',      'translated'),\n\t]\n\n\tif item['tags'] == ['Okategoriserade']:   # I'm pretty sure this means \"Uncategorized\"\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-04-29T03:36:48.088125"
 ],
 "LeoTranslations": [
  "def extractLeoTranslationsCom(item):\n\t'''\n\tParser for 'leo-translations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Cub Raising Association',       'Cub Raising Association',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:09:03.259953"
 ],
 "Letters To My Mother": [
  "\ndef extractLetterstomymotherNovelBlogspotCom(item):\n\t'''\n\tParser for 'letterstomymother-novel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:34.017440"
 ],
 "Levity Tales": [
  "def extractLevityTales(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Overthrowing Fate'):\n\t\treturn buildReleaseMessageWithType(item, 'Overthrowing Fate', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Ancient Godly Monarch'):\n\t\treturn buildReleaseMessageWithType(item, 'Ancient Godly Monarch', vol, chp, frag=frag, postfix=postfix)\n\tif 'Chaotic Lightning Cultivation' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Chaotic Lightning Cultivation', vol, chp, frag=frag, postfix=postfix)\n\tif 'Overthrowing Fate' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Overthrowing Fate', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "LiS Tranlations": [
  "def extractLostinspacetlWordpressCom(item):\n\t'''\n\tParser for 'lostinspacetl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TSO',       'Tensei shita Ore',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-20T07:31:01.980472"
 ],
 "Lianyin": [
  "def extractJadeRabbitNet(item):\n\t'''\n\tParser for 'jade-rabbit.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('His Royal Highness, Wants A Divorce',       'His Royal Highness, Wants A Divorce',                      'translated'),\n\t\t('Nan Chan',                                  'Nan Chan',                                                 'translated'),\n\t\t('Fox Demon Cultivation Manual',              'Fox Demon Cultivation Manual',                             'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-14T05:31:51.722968"
 ],
 "LiarMask": [
  "def extractLiarmask21WordpressCom(item):\n\t'''\n\tParser for 'liarmask21.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('How to be a DEMON KING for dummies',       'How to be a DEMON KING for dummies',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-08-12T07:44:52.570381"
 ],
 "LibelluleNoix": [
  "\ndef extractLibellulenoixMozelloCom(item):\n\t'''\n\tParser for 'libellulenoix.mozello.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-25T17:44:02.022562"
 ],
 "LiberSpark": [
  "\ndef extractWwwLibersparkCom(item):\n\t'''\n\tParser for 'www.liberspark.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-09-24T15:40:07.935872"
 ],
 "Lickymee Translations": [
  "def extractLickymeeTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Medusa' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Regarding the Story of My Wife, Medusa', vol, chp, frag=frag, postfix=postfix)\n\tif 'OreOjou' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ore ga Ojousama Gakkou ni \"Shomin Sample\" Toshite Rachirareta Ken', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Life in Hyperion": [
  "\ndef extractLifeinhyperionBlogspotCom(item):\n\t'''\n\tParser for 'lifeinhyperion.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:24.439007"
 ],
 "Life in the Tri-Galaxies": [
  "\ndef extractIntertwinedLivesUniversalNexusCom(item):\n\t'''\n\tParser for 'intertwined-lives.universal-nexus.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T05:42:01.400769"
 ],
 "Life on the Fringes": [
  "\ndef extractLifeonthefringesWordpressCom(item):\n\t'''\n\tParser for 'lifeonthefringes.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:38.233588"
 ],
 "Light Asp Novel": [
  "def extractLightaspnovelCom(item):\n\t'''\n\tParser for 'lightaspnovel.com'\n\t\n\tSpanish TL group?\n\t'''\n\n\treturn None",
  "2017-05-27T05:32:57.199267"
 ],
 "Light Novel Bastion": [
  "def extractLightNovelBastion(item):\n\t\"\"\"\n\tParser for 'Light Novel Bastion'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttitlemap = [\n\t\t('Isaac',                                 'Isaac',                                                 'translated'),\n\t\t('Isekai Tensei Soudouki',                'Isekai Tensei Soudouki',                                'translated'),\n\t\t('The Youngest Son of Sunyang',           'The Youngest Son of Sunyang',                           'translated'),\n\t\t('Hunter of the Ruined World',            'Hunter of the Ruined World',                            'translated'),\n\t\t('The Tutorial Is Too Hard',              'The Tutorial Is Too Hard',                              'translated'),\n\t\t('The World After the Fall',              'The World After the Fall',                              'translated'),\n\t\t('KnM ',                                  'Kuro no Maou',                                          'translated'),\n\t\t('Kuro no Maou',                          'Kuro no Maou',                                          'translated'),\n\t\t('Nidome no Yuusha V',                    'Nidome no Yuusha',                                      'translated'),\n\t\t('White Wolves',                          'White Wolves',                                          'translated'),\n\t\t('Dungeon Maker ',                        'Dungeon Maker',                                         'translated'),\n\t\t('Max LeveL Newbie',                      'Max LeveL Newbie',                                      'translated'),\n\t\t('The Lazy Swordmaster',                  'The Lazy Swordmaster',                                  'translated'),\n\t\t('The Lazy  Swordmaster',                 'The Lazy Swordmaster',                                  'translated'),\n\t\t('You shine in the moonlit night',        'You Shine in the Moonlit Night',                        'translated'),\n\t\t('Death Mage',                            'The Death Mage that doesn\\'t want a fourth time',       'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-23T12:02:37.801498"
 ],
 "Light Novel Cafe": [
  "def extractLightNovelCafe(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Evolution Theory of the Hunter' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Evolution Theory of the Hunter', vol, chp, frag=frag, postfix=postfix)\n\tif \"God's Song\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"God's Song\", vol, chp, frag=frag, postfix=postfix)\n\tif 'Life Mission' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Life Mission', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Light Novel Reader": [
  "def extractWwwLnovelreaderCom(item):\n\t'''\n\tParser for 'www.lnovelreader.com'\n\t'''\n\tif 'TNZKMA' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Four Ikemen',       'Yonin no Ikemen ni Kyuuai sarete Ore wa Namidamedesu',                      'translated'),\n\t\t('otome game',        'YoninDare Ga Otome Geemu Dato Itta! ',                                      'translated'),\n\t\t('VD',                'Akuyaku Reijou No Yume Watari',                                             'translated'),\n\t\t# ('TNZKMA',                'Akuyaku Reijou No Yume Watari',                                             'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-13T05:12:22.188451"
 ],
 "Light Novel Translations": [
  "\ndef extractLightnoveltranslations793805610WordpressCom(item):\n\t'''\n\tParser for 'lightnoveltranslations793805610.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-14T03:20:13.859123"
 ],
 "Light Novel translations": [
  "def extractLightNoveltranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Light Novels": [
  "def extractLightNovels(item):\n\t\"\"\"\n\tLight Novels\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Light Novels Online": [
  "def extractWwwLightnovelsonlineNet(item):\n\t'''\n\tParser for 'www.lightnovelsonline.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Defeated Dragon',                                                                       'The Defeated Dragon',                                                                                      'translated'),\n\t\t('Mechanical God Emperor',                                                                    'Mechanical God Emperor',                                                                                   'translated'),\n\t\t('The Record of My Sex Life in a Different World',                                            'The Record of My Sex Life in a Different World',                                                           'translated'),\n\t\t('Serena- The Futanari Princess',                                                             'Serena - The Futanari Princess',                                                                           'translated'),\n\t\t('Junior High School Sex Slave Runa',                                                         'Junior High School Sex Slave Runa',                                                                        'translated'),\n\t\t('A World Where All Women Are Managed By Men',                                                'A World Where All Women Are Managed By Men',                                                               'translated'),\n\t\t('Api di Bukit Menoreh',                                                                      'Fire in the Menoreh Mountain',                                                                             'translated'),\n\t\t('Hypnotized Harem',                                                                          'Hypnotized Harem',                                                                                         'translated'),\n\t\t('Prisoner\\'s love: The Devil\\'s mark',                                                       'Prisoner\\'s love: The Devil\\'s mark',                                                                      'translated'),\n\t\t('Beautiful Females in the Underground Prison',                                               'Beautiful Females in the Underground Prison',                                                              'translated'),\n\t\t('I Have The Only Ero Knowledge In The World, So I Decided To Cum Inside Pretty Girls',       'I Have The Only Ero Knowledge In The World, So I Decided To Cum Inside Pretty Girls',                      'translated'),\n\t\t('World Class Prostitution ring',                                                             'World Class Prostitution ring',                                                                            'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-24T03:33:17.042986"
 ],
 "Light Novels Translations !": [
  "def extractLightNovelsTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\t\t\n\ttagmap = [\n\t\t('I Just About Became a Living Cheat when Raising My Level in the Real Life',  'I Just About Became a Living Cheat when Raising My Level in the Real World',               'translated'),\n\t\t('I Became a Living Cheat',                                                    'I Just About Became a Living Cheat when Raising My Level in the Real World',               'translated'),\n\t\t('HimeKishi Ga Classmate!',                                                    'Himekishi ga Classmate! ~ Isekai Cheat de Dorei ka Harem~',                                'translated'),\n\t\t('Re:Master Magic',                                                            'The Mage Will Master Magic Efficiently In His Second Life',                                'translated'),\n\t\t('The Man Who Would Be King',                                                  'The Man Who Would Be King',                                                                'translated'),\n\t\t('Man Eating Dungeon',                                                         'Hitokui Dungeon e Youkoso',                                                                'translated'),\n\t\t('maou no hajimekata',                                                         'Maou no Hajimekata',                                                                       'translated'),\n\t\t('Pure Love x Insult Complex',                                                 'Pure Love x Insult Complex',                                                               'translated'),\n\t\t('Charging Magic with a Smile',                                                'Charging Magic with a Smile',                                                              'translated'),\n\t\t('Yuusha ni Horobosareru',                                                     'Yusha ni Horobosareru Dake no Kantan na Oshigoto Desu',                                    'translated'),\n\t\t('The 5000 Year Old Herbivorous Dragon',                                       'The 5000 Year Old Herbivorous Dragon',                                                     'translated'),\n\t\t('My Sister the Heroine, and I the Villainess',                                'My Sister the Heroine, and I the Villainess',                                              'translated'),\n\t\t('Different World Gender Change',                                              'It Seems That I\\'ve Slipped Into a Different World. Also, My Gender Has Changed.',         'translated'),\n\t\t('The Sweets Prince\\'s Search',                                                'The Sweets Prince\\'s Search',                                                              'translated'),\n\t\t('I Got a Cheat, So I Want to Live as I Like',                                 'I Got a Cheat, So I Want to Live as I Like',                                               'translated'),\n\t\t('The Summoner is Going',                                                      'The Summoner is Going',                                                                    'translated'),\n\t\t('Dragon-san Wants a Friend',                                                  'Dragon-san Wants a Friend',                                                                'translated'),\n\t\t('Fianc\u00e9e of the Wizard',                                                      'Fianc\u00e9e of the Wizard',                                                                    'translated'),\n\t\t('Fairy Tale Chronicles',                                                      'Fairy Tale Chronicles',                                                                    'translated'),\n\t\t('Heavenly Castle',                                                            'Heavenly Castle',                                                                          'translated'),\n\t\t('Shiinamachi-senpai\\'s Safe Day',                                             'Shiinamachi-senpai\\'s Safe Day',                                                           'translated'),\n\t\t('Nidome no Yuusha',                                                           'Nidome no Yuusha',                                                                         'translated'),\n\t\t('Elf Tensei',                                                                 'From Elf Reincarnation to Cheat Kingdom Founding Chronicle',                               'translated'),\n\t\t('The Strongest Wizard',                                                       'The Strongest Wizard Becomes a Countryside Guardsman After Taking an Arrow to the Knee',   'translated'),\n\t\t('Tsunpri: Aishite Ohimesama',                                                 'Tsunpri: Aishite Ohimesama',                                                               'translated'),\n\t\t('Road to Kingdom',                                                            'Road to Kingdom',                                                                          'translated'),\n\t\t('The Hidden Dungeon Only I can Enter',                                        'The Hidden Dungeon Only I can Enter',                                                      'translated'),\n\t\t('House Magic',                                                                'My House is a Magic Power Spot~ Just by Living there I Become the Strongest in the World', 'translated'),\n\t\t('Dragon Knight to Carrier',                                                   'From The Strongest Job of Dragon Knight, To The Beginner Job Carrier, Somehow, The Heroes are Depending on Me', 'translated'),\n\t\t('Ruler',                                                                      'Ruler',                                                                                    'oel'),\n\t\t('The Pagemasters',                                                            'The Pagemasters',                                                                          'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\n\treturn False",
  "2019-06-07T05:32:08.414965"
 ],
 "Light Novels World": [
  "def extractLightNovelsWorld(item):\n\t\"\"\"\n\tLight Novels World\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\t\n\t# This comes first, because it occationally includes non-numbered chapters.\n\tif 'Tsuki ga Michibiku Isekai Douchuu (POV)' in item['tags']:\n\t\tif not postfix and '-' in item['title']:\n\t\t\tpostfix = item['title'].split(\"-\")[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Tsuki ga Michibiku Isekai Douchuur', vol, chp, frag=frag, postfix=postfix)\n\t\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'Announcements' in item['tags']:\n\t\treturn None\n\t\t\n\tif 'Amaku Yasashii Sekai de Ikiru ni wa' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Amaku Yasashii Sekai de Ikiru ni wa', vol, chp, frag=frag, postfix=postfix)\n\tif 'Omae Mitai na Hiroin ga Ite Tamaruka!' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Omae Mitai na Hiroin ga Ite Tamaruka!', vol, chp, frag=frag, postfix=postfix)\n\tif 'the nine godheads' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Nine Godheads', vol, chp, frag=frag, postfix=postfix)\n\tif 'World Seed' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'World Seed', vol, chp, frag=frag, postfix=postfix)\n\tif 'Asura' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Asura', vol, chp, frag=frag, postfix=postfix)\n\tif 'Infinity Armament' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Infinity Armament', vol, chp, frag=frag, postfix=postfix)\n\tif 'Peerless Demonic Lord' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Peerless Demonic Lord', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Throne Under the Starry Sky' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Throne Under the Starry Sky', vol, chp, frag=frag, postfix=postfix)\n\tif 'Twin Sword' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Twin Sword', vol, chp, frag=frag, postfix=postfix)\n\tif 'Sayonara Ryuusei Konnichiwa Jinsei' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sayonara Ryuusei Konnichiwa Jinsei', vol, chp, frag=frag, postfix=postfix)\n\tif 'Online Game: Evil Dragon Against The Heaven' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Online Game: Evil Dragon Against The Heaven', vol, chp, frag=frag, postfix=postfix)\n\tif 'Hakushaku Reijo ha Chito Tensei Mono' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Hakushaku Reijo ha Chito Tensei Mono', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ore to Kawazu-san no Isekai Houriki' in item['tags'] or 'Ore to Kawazu-san no Isekai Hourouki' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ore to Kawazu-san no Isekai Houriki', vol, chp, frag=frag, postfix=postfix)\n\tif 'Dragon Blood Warrior' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Blood Warrior', vol, chp, frag=frag, postfix=postfix)\n\tif 'Evil-like Duke Household' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Evil-like Duke Household', vol, chp, frag=frag, postfix=postfix)\n\tif 'Great Dao Commander' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Great Dao Commander', vol, chp, frag=frag, postfix=postfix)\n\tif 'It\u2019s Impossible that My Evil Overlord is So Cute' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'It\u2019s Impossible that My Evil Overlord is So Cute', vol, chp, frag=frag, postfix=postfix)\n\tif 'I\u2019m OP, but I Began an Inn' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I\u2019m OP, but I Began an Inn', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Lame Daoist Priest' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Lame Daoist Priest', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Last Apostle' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Last Apostle', vol, chp, frag=frag, postfix=postfix)\n\tif 'Isekai Teni Jobumasuta e no Michi' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Teni Jobumasuta e no Michi', vol, chp, frag=frag, postfix=postfix)\n\tif 'Against the Fate' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Against the Fate', vol, chp, frag=frag, postfix=postfix)\n\tif 'Hone no aru Yatsu' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Hone no aru Yatsu', vol, chp, frag=frag, postfix=postfix)\n\tif 'LV999 Villager' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'LV999 Villager', vol, chp, frag=frag, postfix=postfix)\n\tif \"Immortal's Farmland\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Immortal's Farmland\", vol, chp, frag=frag, postfix=postfix)\n\tif 'Returning from the Immortal World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Returning from the Immortal World', vol, chp, frag=frag, postfix=postfix)\n\tif 'Starchild Escapes Arranged Marriage' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Starchild Escapes Arranged Marriage', vol, chp, frag=frag, postfix=postfix)\n\tif '9 Coffins of the Immortals' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, '9 Coffins of the Immortals', vol, chp, frag=frag, postfix=postfix)\n\tif 'Fantastic Creatures\u2019 Travelogue' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Fantastic Creatures\u2019 Travelogue', vol, chp, frag=frag, postfix=postfix)\n\tif \"Hell's Cinema\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Hell's Cinema\", vol, chp, frag=frag, postfix=postfix)\n\tif 'The Great Conqueror' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Great Conqueror', vol, chp, frag=frag, postfix=postfix)\n\tif 'Almighty Student' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Almighty Student', vol, chp, frag=frag, postfix=postfix)\n\tif 'Godly Student' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Godly Student', vol, chp, frag=frag, postfix=postfix)\n\tif 'Legend of the Cultivation God' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Legend of the Cultivation God', vol, chp, frag=frag, postfix=postfix)\n\tif 'Supreme Arrow God' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Supreme Arrow God', vol, chp, frag=frag, postfix=postfix)\n\tif 'Blade Online' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Blade Online', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Crimson Dragon' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Crimson Dragon', vol, chp, frag=frag, postfix=postfix)\n\tif 'Sky Prince' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sky Prince', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Aenthar' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Aenthar', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'How to Survive a Summoning 101' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'How to Survive a Summoning 101', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False",
  "2017-04-08T01:19:17.934185"
 ],
 "Light Novels with Misa-chan~": [
  "def extractLightNovelswithMisachan(item):\n\t\"\"\"\n\t'Light Novels with Misa-chan~'\n\t\"\"\"\n\tif item['title'].startswith(\"Protected:\"):\n\t\treturn None\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\tif item['title'].startswith('Ojamajo Doremi Book'):\n\t\treturn buildReleaseMessageWithType(item, 'Ojamajo Doremi 16', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Ore ga heroine Book'):\n\t\treturn buildReleaseMessageWithType(item, 'Ore ga heroine wo tasuke sugite sekai ga little apocalypse!?', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t('99th vampire princess',       '99th vampire princess ~The last vampire~',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-05-22T06:12:38.725573"
 ],
 "Light Onion": [
  "def extractDarkfontztranslationsCom(item):\n\t'''\n\tParser for 'darkfontztranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Battle Emperor',       'Battle Emperor',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-15T05:54:20.230963"
 ],
 "LightASPNovel": [
  "def extractLightaspnovelCom(item):\n\t'''\n\tParser for 'lightaspnovel.com'\n\t'''\n\t\n\treturn None",
  "2017-12-18T03:37:27.987607"
 ],
 "LightNovelsOnline": [
  "\ndef extractLightnovelsonlineNet(item):\n\t'''\n\tParser for 'lightnovelsonline.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-24T03:02:17.527934"
 ],
 "Lightbringers and Lamplighters": [
  "\ndef extractWwwLightbringersandlamplightersCom(item):\n\t'''\n\tParser for 'www.lightbringersandlamplighters.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:32.144835"
 ],
 "Lightning Fast Bullshit": [
  "def extractLightningfastbullshitCom(item):\n\t'''\n\tParser for 'lightningfastbullshit.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('BTFTLIAW',                   'Bringing the Farm to Live in Another World',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\tchp_prefixes = [\n\t\t('BTFTLIAW \u2013 Chapter ',                   'Bringing the Farm to Live in Another World',                      'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-27T07:33:01.695764"
 ],
 "Lights 'n Progress": [
  "\ndef extractLightsNProgressBlogspotCom(item):\n\t'''\n\tParser for 'lights-n-progress.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-29T22:56:45.772692"
 ],
 "Lil' Bliss Novels": [
  "def extractLilBlissNovels(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif ':' in item['title'] and 'Side Story' in item['title'] and not postfix:\n\t\tpostfix = item['title'].split(':')[-1]\n\tif 'Wei Wei Yi Xiao Hen Qing Cheng' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Wei Wei Yi Xiao Hen Qing Cheng', vol, chp, frag=frag, postfix=postfix)\n\tif 'Memory Lost' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Memory Lost', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lily Ros 3": [
  "def extractLilyRos3(item):\n\t\"\"\"\n\tParser for 'Lily Ros 3'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Limostn": [
  "def extractLimostnWordpressCom(item):\n\t'''\n\tParser for 'limostn.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"The Outcast\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"The Outcast\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-06-16T06:06:26.247849"
 ],
 "Linearcrown": [
  "def extractLinearcrownWordpressCom(item):\n\t'''\n\tParser for 'linearcrown.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Carta Visa',       'Carta Visa',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-20T07:51:57.017947"
 ],
 "Ling Translates Sometimes": [
  "def extractLingTranslatesSometimes(item):\n\t\"\"\"\n\t# 'Ling Translates Sometimes'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ling-Translations": [
  "def extractLingtranslationsWordpressCom(item):\n\t'''\n\tParser for 'lingtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('HPST',       'Harry Potter and the Secret Treasures',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-08T07:03:21.727515"
 ],
 "Lingson's Translations": [
  "def extractLingson(item):\n\t\"\"\"\n\t# Lingson's Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Legendary Thief' in item['tags'] and (vol or chp or postfix):\n\t\treturn buildReleaseMessageWithType(item, 'Virtual World - The Legendary Thief', vol, chp, frag=frag, postfix=postfix)\n\tif 'ALBT Chapter Release' in item['tags'] and (vol or chp or postfix):\n\t\treturn buildReleaseMessageWithType(item, 'Assassin Landlord Beauty Tenants', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lingtian Translation": [
  "\ndef extractLingtiantranslationWordpressCom(item):\n\t'''\n\tParser for 'lingtiantranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:43.293016"
 ],
 "Linked Translations": [
  "def extractLinkedTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('A Record of a Mortal\u2019s Journey to Immortality:'):\n\t\tif not postfix and ':' in item['title']:\n\t\t\tpostfix = item['title'].split(':')[-1]\n\t\treturn buildReleaseMessageWithType(item, 'A Record of a Mortal\u2019s Journey to Immortality', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lion Mask's Really Professional Translations": [
  "def extractLionMasksReallyProfessionalTranslations(item):\n\t\"\"\"\n\tLion Mask's Really Professional Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'slime-translation' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shitara Slime Datta Ken', vol, chp, frag=frag, postfix=postfix)\n\t\n\tif item['title'].lower().startswith('shaman chapter '):\n\t\treturn buildReleaseMessageWithType(item, 'The Shaman can\\'t become a Hero', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\n\treturn False",
  "2017-05-08T04:04:26.734381"
 ],
 "Lisha's Blog": [
  "def extractSulishaBlog(item):\n\t'''\n\tParser for 'sulisha.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Alluring Poisonous Consort',       'Alluring Poisonous Consort',                      'translated'),\n\t\t('What\\'s Your Gender Princess?',    'What\\'s Your Gender Princess?',                   'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-25T06:24:15.836138"
 ],
 "Listening Stories": [
  "def extractListeningstoriesWordpressCom(item):\n\t'''\n\tParser for 'listeningstories.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Okoborehime to Entaku no Kishi',       'Okoborehime to Entaku no Kishi',                      'translated'),\n\t\t('okoborehime',                          'Okoborehime to Entaku no Kishi',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-20T06:19:35.802185"
 ],
 "LitLiber": [
  "def extractLitliberCom(item):\n\t'''\n\tParser for 'litliber.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Carnival Lights',         'Carnival Lights',                  'oel'),\n\t\t('Life Reconstructed',      'Life Reconstructed',               'oel'),\n\t\t('North of Happenstance',   'North of Happenstance',            'oel'),\n\t\t('Inside Edge',             'The Inside Edge',                  'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-05T08:10:02.412381"
 ],
 "Litelee Translated": [
  "def extractLiteleetranslatedWordpressCom(item):\n\t'''\n\tParser for 'liteleetranslated.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('My Girlfriend Is A Zombie',       'My Girlfriend Is A Zombie',                      'translated'), \n\t\t('Things From Another World',       'Things From Another World',                      'translated'), \n\t\t('The Sex Contract',       'The Sex Contract, A Naive Short-Tempered Girl',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-05-14T22:44:37.115652"
 ],
 "Literary Crow": [
  "\ndef extractLiterarycrowWordpressCom(item):\n\t'''\n\tParser for 'literarycrow.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:24.016533"
 ],
 "Little Bamboo Spirit": [
  "def extractLittlebambooHomeBlog(item):\n\t'''\n\tParser for 'littlebamboo.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('FW',       'Fortunate Wife',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-07T00:42:19.737545"
 ],
 "Little Novel Translation": [
  "def extractLittleNovelTranslation(item):\n\t\"\"\"\n\t# 'Little Novel Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'GTI Release' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Godly Thief Incarnation', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Little Novice Translation": [
  "\ndef extractLittlenovicetranslationWordpressCom(item):\n\t'''\n\tParser for 'littlenovicetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:22.923425"
 ],
 "Little Shisoka translation": [
  "\ndef extractShisokablogWordpressCom(item):\n\t'''\n\tParser for 'shisokablog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:37:25.835008"
 ],
 "Little Translations": [
  "def extractLittleTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "LittleShanks Translations": [
  "def extractLittleShanksTranslations(item):\n\t\"\"\"\n\t# 'LittleShanks Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Rebirth Thief' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Rebirth of the Thief Who Roamed The World', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Liz Translation": [
  "def extractSulishaBlogspotCom(item):\n\t'''\n\tParser for 'sulisha.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('WYGP',      'What\\'s Your Gender Princess?',                      'translated'),\n\t\t('APC',       'Alluring Poisonous Consort',                         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-04T03:25:19.978859"
 ],
 "Lizard Translations": [
  "def extractLizardTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Strongest Violent Soldier' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Strongest Violent Soldier', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Llian": [
  "def extractLlian(item):\n\t\"\"\"\n\tParser for 'Llian'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ln Addiction": [
  "def extractLnAddiction(item):\n\t\"\"\"\n\t# Ln Addiction\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif ('Hissou Dungeon Unei Houhou' in item['tags'] or 'Hisshou Dungeon Unei Houhou' in item['tags']) and (chp or frag):\n\t\treturn buildReleaseMessageWithType(item, 'Hisshou Dungeon Unei Houhou', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Loathsome Translations": [
  "def extractLoathsomeTranslations(item):\n\t\"\"\"\n\tLoathsome Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Logatse Translations": [
  "def extractLogatseTranslations(item):\n\t\"\"\"\n\t'Logatse Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lohithbb TLs": [
  "def extractLohithbbTLs(item):\n\t\"\"\"\n\t# 'Lohithbb TLs'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Loiterous": [
  "def extractLoiterous(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Loiterous' in item['tags'] and 'chapter' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Loiterous', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Loli Quality MTL": [
  "def extractLolimtlWordpressCom(item):\n\t'''\n\tParser for 'lolimtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('BTCG',       'The Black Technology Chat Group of the Ten Thousand Realms',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-10T04:34:05.786403"
 ],
 "Loli Translations": [
  "def extractLoliTranslations(item):\n\t\"\"\"\n\tParser for 'Loli Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Loliquent": [
  "def extractKnW(item):\n\t\"\"\"\n\t# Groups involved in KnW:\n\t# \tBlazing Translations\n\t# \tCapsUsingShift Tl\n\t# \tInsignia Pierce\n\t# \tKiriko Translations\n\t# \tKonjiki no Wordmaster\n\t# \tLoliquent\n\t# \tBlazing Translations\n\t# \tPummels Translations\n\t# \tXCrossJ\n\t# \tProbably another dozen randos per week.\n\t# Really. Fuck you people. Tag your shit, and start a group blog.\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\ttags = item['tags']\n\ttitle = item['title']\n\tsrc = item['srcname']\n\tpostfix = ''\n\tif src == 'XCrossJ' and 'Cross Gun' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Cross Gun', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Character Analysis' in item['title']:\n\t\treturn False\n\tif 'Chapter' in title and src == 'Blazing Translations':\n\t\tif 'By:' in title:\n\t\t\treturn False\n\t\tif 'Comment' in title:\n\t\t\treturn False\n\t\tif ':' in title:\n\t\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\telif '-' in title:\n\t\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\telse:\n\t\t\tpostfix = ''\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\tif ('Chapters' in tags and 'Konjiki no Wordmaster' in tags or 'Konjiki no Wordmaster Web Novel Chapters' in tags or 'Konjiki' in tags or src == 'Loliquent' and \n\t    'Konjiki no Wordmaster' in title):\n\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\telif 'Konjiki no Wordmaster Chapters' in tags or 'Konjiki no Moji Tsukai' in tags or src == 'Kiriko Translations' and ('KnW' in tags or 'KnW Chapter' in title\n\t    ) or src == 'CapsUsingShift Tl' and 'Konjiki no Wordmaster' in title or src == 'Pummels Translations' and 'Konjiki no Word Master Chapter' in title or src == 'XCrossJ' and 'Konjiki no Moji Tsukai' in title or src == 'Insignia Pierce' and 'Konjiki no Word Master Chapter' in title:\n\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lonahora": [
  "def extractLonahora(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"Earth's Core\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Earth's Core\", vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False",
  "2017-04-09T04:34:38.106345"
 ],
 "LorCromwell": [
  "def extractLorCromwell(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lord of the Mysteries": [
  "def extractNovel618603696WordpressCom(item):\n\t'''\n\tParser for 'novel618603696.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Lord of the Mysteries',       'Lord of the Mysteries',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-04T02:55:20.057866"
 ],
 "LordofScrubs": [
  "def extractLordofScrubs(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lost Brain Diary": [
  "\ndef extractLbDiaryBlogspotCom(item):\n\t'''\n\tParser for 'lb-diary.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:36:34.054501"
 ],
 "Lost in Dreams": [
  "def extractShadowDreamwidthOrg(item):\n\t'''\n\tParser for 'shadow.dreamwidth.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('hakushaku',       'Hakushaku',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:45:38.575799"
 ],
 "Lost in Translation": [
  "def extractLostInTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Third Prince Elmer' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Third Prince Elmer', vol, chp, frag=frag, postfix=postfix)\n\tif 'Otoko Aruji' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Otoko Aruji', vol, chp, frag=frag, postfix=postfix)\n\tif \"Sword Saint's Disciple\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Sword Saint's Disciple\", vol, chp, frag=frag, postfix=postfix)\n\tif 'Doll Dungeon' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Doll Dungeon', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lost-Talez": [
  "def extractLostTalezLivejournalCom(item):\n\t'''\n\tParser for 'lost-talez.livejournal.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('tang dynasty female forensic doctor',       'The Tang Dynasty\\'s Female Forensic Doctor',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-08-12T07:45:52.010650"
 ],
 "Lotus Translation": [
  "def extractLotustlCom(item):\n\t'''\n\tParser for 'lotustl.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Immortality',       'Immortal',                      'translated'),\n\t\t('Immortal',          'Immortal',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-05T07:54:37.813228"
 ],
 "Lotus Translations": [
  "def extractLotustranslationsWordpressCom(item):\n\t'''\n\tParser for 'lotustranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\tif item['tags'] == ['Announcements']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('Xianggong, Please Divorce Me!',               'Xianggong, Please Divorce Me!',                                'translated'),\n\t\t('100% Sweet Love',                             '100% sweet love: The delinquent XXX wife is a bit sweet',      'translated'),\n\t\t('Black Bellied President Dotes on Wife',       'Black Bellied President Dotes on Wife',                        'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-16T10:33:37.924010"
 ],
 "Love Based Madness": [
  "\ndef extractLbmtranslationsWordpressCom(item):\n\t'''\n\tParser for 'lbmtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:40:44.546262"
 ],
 "Love for love": [
  "\ndef extractLoveforlove2029WordpressCom(item):\n\t'''\n\tParser for 'loveforlove2029.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:49.666038"
 ],
 "Love me if you dare": [
  "def extractLoveMeIfYouDare(item):\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Love my Drama Blog": [
  "\ndef extractLovemydramablogWordpressCom(item):\n\t'''\n\tParser for 'lovemydramablog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:53:17.563487"
 ],
 "Lovely x Day": [
  "def extractLovelyxDay(item):\n\t\"\"\"\n\t'Lovely x Day'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WSU' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Because I'm a Weapon Shop Uncle\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lt.Beefy's MTL": [
  "def extractLtBeefySMtl(item):\n\t\"\"\"\n\tParser for 'Lt.Beefy's MTL'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Luen Translations": [
  "def extractLuenTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Journey to Seek Past Reincarnations' in item['tags'] or item['title'].startswith('JTSPR'):\n\t\treturn buildReleaseMessageWithType(item, 'Journey to Seek Past Reincarnations', vol, chp, frag=frag, postfix=postfix)\n\tif 'Little Phoenix Is Not An Immortal' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Little Phoenix Is Not An Immortal', vol, chp, frag=frag, postfix=postfix)\n\tif 'Hard to Escape' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Hard to Escape', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lumiere Translations": [
  "def extractLumieretranslationsWordpressCom(item):\n\t'''\n\tParser for 'lumieretranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tchp_prefixes = [\n\t\t\t('I Am Being Chased by a Perfectionist Man \u2013 Chapter ',  'I Am Being Chased by a Perfectionist Man',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-05-28T22:52:17.141964"
 ],
 "Luminaeris": [
  "def extractLuminaeris(item):\n\t\"\"\"\n\t'Luminaeris'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Luminstia": [
  "def extractLuminstia(item):\n\t\"\"\"\n\tLuminstia\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('KnHG',       'Kuro no Hiera Glaphicos', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Kuro no Hiera Glaphicos ',  'Kuro no Hiera Glaphicos',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\treturn False",
  "2018-01-21T06:04:54.966256"
 ],
 "Lunaris": [
  "def extractLunaris(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'World of Hidden Phoenix' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'World of Hidden Phoenix', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lunate": [
  "def extractLunate(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif 'chapter' in item['title'].lower() and (vol or chp):\n\t\treturn buildReleaseMessageWithType(item, 'World Customize Creator', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Luukia": [
  "def extractLuukiaTumblrCom(item):\n\t'''\n\tParser for 'luukia.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('alsar',                   'Alsar',                                      'translated'),\n\t\t('Devil\\'s Origin',         'The Devil\\'s Origin',                        'translated'),\n\t\t('PRC',         'PRC',                        'translated'),\n\t\t('Loiterous',   'Loiterous',                  'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Alsar',       'Alsar',                      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-20T06:09:31.705037"
 ],
 "Luxiufer": [
  "def extractLuxiufer(item):\n\t\"\"\"\n\tParser for 'Luxiufer'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "LygarTranslations": [
  "def extractLygarTranslations(item):\n\t\"\"\"\n\t# Lygar Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif ('elf tensei' in item['tags'] or 'elf tensei' in item['title'].lower()) and not 'news' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Elf Tensei Kara no Cheat Kenkoku-ki', vol, chp, frag=frag, postfix=postfix)\n\tif 'Himekishi ga Classmate' in item['tags'] and not 'poll' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Himekishi ga Classmate! ~ Isekai Cheat de Dorei ka Harem~', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lylis Translations": [
  "def extractLylisTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Unicorn Legion:' in item['title']:\n\t\tpostfix = item['title'].split(':', 1)[-1]\n\t\treturn buildReleaseMessageWithType(item, 'The Unicorn Legion', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lyly's Novel Translations": [
  "def extractWnovelWordpressCom(item):\n\t'''\n\tParser for 'wnovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Succubus Life',       'Succubus-san\\'s Life in a Another World',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-07T09:17:13.388302"
 ],
 "Lynfamily": [
  "def extractLynfamily(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lypheon Machine Translation": [
  "def extractLypheonMachineTranslation(item):\n\t\"\"\"\n\t# 'Lypheon Machine Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Lyran 1M Translation": [
  "def extractLyran1Mtranslation(item):\n\t'''\n\tParser for 'lyran1Mtranslation'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Villainess Brother Reincarnation',       'Villainess Brother Reincarnation', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-04-07T04:07:32.841417"
 ],
 "Lyzo-Translations": [
  "def extractLyzoEu(item):\n\t'''\n\tParser for 'lyzo.eu'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Yuusha no furi',       'Yuusha no furi mo raku janai-- Riyuu? Ore ga kami dakara--',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:15:17.806585"
 ],
 "MGRP Translations": [
  "def extractMgrpTranslations(item):\n\t\"\"\"\n\tParser for 'MGRP Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "MJ Online Archives": [
  "def extractMjonlinearchivesWujigegeCom(item):\n\t'''\n\tParser for 'mjonlinearchives.wujigege.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('mls',       'A Monk\\'s Lovesickness',                      'translated'),\n\t\t('HSP',       'The Hero Suddenly Proposed to me, but\u2026',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T08:10:57.016671"
 ],
 "MN Translations": [
  "def extractWwwMntranslationsXyz(item):\n\t'''\n\tParser for 'www.mntranslations.xyz'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('CT',        'Cataclysmic Transformation',                      'translated'),\n\t\t('ToTWoMG',   'Tens of Thousands Worlds of Martial God',         'translated'),\n\t\t('slr',       'Spirit Luo Ring',                                 'translated'),\n\t\t('MGoMR',     'Martial God of Myriad Realms',                    'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-05T05:05:06.719207"
 ],
 "MT Novels": [
  "def extractMTNovels(item):\n\t\"\"\"\n\tMT Novels\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "MTL BL Translations": [
  "\ndef extractRookiemtlbltranslationsBlogspotCom(item):\n\t'''\n\tParser for 'rookiemtlbltranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-16T11:45:47.767088"
 ],
 "MTL Novels": [
  "def extractMtlnovelsWordpressCom(item):\n\t'''\n\tParser for 'mtlnovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('favored crazy consort',       'Favored crazy concubine: Ghost King too Proud',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-01T21:51:23.908129"
 ],
 "MTLCrap": [
  "def extractMTLCrap(item):\n\t\"\"\"\n\t# 'MTLCrap'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mabo and Gibo": [
  "def extractMaboandgiboWordpressCom(item):\n\t'''\n\tParser for 'maboandgibo.wordpress.com'\n\t'''\n\t\n\tif 'Indonesian' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Shinka no Mi', 'Shinka no Mi',                'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-29T03:40:04.479692"
 ],
 "Machine Sliced Bread": [
  "def extractMachineSlicedBread(item):\n\t\"\"\"\n\n\t\"\"\"\n\t\n\tif item['title'].startswith(\"Protected: \"):\n\t\treturn None\n\tif item['title'].startswith(\"NTR Crush \"):\n\t\treturn None\n\tif item['title'].startswith(\"World of Women \"):\n\t\treturn None\n\tif item['title'].startswith(\"Enslaved Sister Harem\"):\n\t\treturn None\n\tif \"(Locked)\" in item['title']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\t\t\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Inma no Hado TL',                             'Inma no Hado',                                                                                                                  'translated'),\n\t\t('Charm TL',                                    'I made a slave harem using a charm cheat in a different world.',                                                                'translated'),\n\t\t('Loli Manko TL',                               'Kyonkon na Ore ga Rori ma\u25cfko Bishoujo wo Okashite Kopitte, Ohime-sama wo Torimodosu Isekai Tan',                                'translated'),\n\t\t('Cheatman TL',                                 'Joudan Mitaina Chiito Nouryouku de Isekai ni Tensei shi, Sukikatte suru Hanashi',                                               'translated'),\n\t\t('Zombie Emperor TL',                           'The Bloodshot One-Eyed Zombie Emperor',                                                                                         'translated'),\n\t\t('Asuka TL',                                    'Asuka of the Scarlet Sky ~ The Female Hero who Degraded to a Licentious and Wicked Person~',                                    'translated'),\n\t\t('Flight, Invisibility, and Teleportation TL',  'If You Got the Power of Flight, Invisibility, and Teleportation, What Would You Do?',                                           'translated'),\n\t\t('Class TL',                                    'Dragged into the class transfer ~For some reason I was dragged into the transfer with the girl class so I will make a harem!~', 'translated'),\n\t\t('Kininaru TL',                                 'Kininaru Kanojo wo Tokoton Okashi Tsukusu Hanashi',                                                                             'translated'),\n\t\t('Grassland TL',                                'Sougen no Okite ~Shii yatsu ga moteru, ii buzoku ni umarekawatta zo~',                                                          'translated'),\n\t\t('Kemono TL',                                   'Flirting with beast girls! Doing nothing but copulation!',                                                                      'translated'),\n\t\t('Game World TL',                               'After Reincarnating Into This Game World I Seemed to Have Taken Over the Control of Status',                                    'translated'),\n\t\t('Hero TL',                                     'Hero Manufacturing Machine ~A Job to Make Children~',                                                                           'translated'),\n\t\t('Inmajutsu TL',                                'Ore ga Inmajutsu de Dorei Harem wo Tsukuru Hanashi',                                                                            'translated'),\n\t\t('Yandere TL',                                  'My elder sister fell in love with me and transformed into a yandere',                                                           'translated'),\n\t\t('Semen TL',                                    'Curing Incurable Disease With Semen',                                                                                           'translated'),\n\t\t('Step-sisters(?) TL',                          'The life I started with my step-sisters(?)',                                                                                    'translated'),\n\t\t('Ero Gacha',                                   'Ero Gacha',                                                                                                                     'translated'),\n\t\t('Xray TL',                                     'X-ray Is More Than I Thought',                                                                                                  'translated'),\n\t\t('Betrayed Hero TL',                            'Summoned as a Hero, but I got betrayed.',                                                                                       'translated'),\n\t\t('Netori TL',                                   'Because I was excluded out of the class transfer, I decided to steal my classmate\u2019s lover',                                     'translated'),\n\t\t('Pure Love x Insult Complex',                  'Pure Love x Insult Complex',                                                                                                    'translated'),\n\t\t('Beauty Reversal TL',                          'In a World Where Beauty is Reversed, a Harem Only for Me.',                                                                     'translated'),\n\t\t\n\t\t\n\t\t('Elf TL',                             'Elf no Kuni no Kyuutei Madoushi ni Naretanode, Toriaezu Himesama ni Seitekina Itazura wo Shitemimashita',                                'translated'),\n\t\t('Erocom TL',                          'I\u2019m sorry for getting a head start but I decided to live everyday erotically',                                                           'translated'),\n\t\t('Taneuma',                            'Isekai Taneuma',                                                                                                                         'translated'),\n\t\t('Time and Place',                     'The Timefall Saga : Time and Place',                                                                                                     'oel'),\n\t\t('The Lust System',                    'The Lust System',                                                                                                                        'oel'),\n\t\t('Sins of Love',                       'Sins of Love',                                                                                                                           'oel'),\n\t\t('World of Women',                     'World of Women',                                                                                                                         'oel'),\n\t\t('Power of Creation',                  'Power of Creation',                                                                                                                      'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\ttitlemap = [\n\t\t('Elf ',                                                    'Elf no Kuni no Kyuutei Madoushi ni Naretanode, Toriaezu Himesama ni Seitekina Itazura wo Shitemimashita',                     'translated'),\n\t\t('Netori ',                                                 'Because I was excluded out of the class transfer, I decided to steal my classmate\u2019s lover',                                   'translated'),\n\t\t('Half elves fall in love chapter ',                        'Half elves fall in love',                                                                                                     'translated'),\n\t\t('Gacha Chapter ',                                          'Ero Gacha',                                                                                                                   'translated'),\n\t\t('Erocom Chapter ',                                         'I\\'m sorry for getting a head start but I decided to live everyday erotically',                                               'translated'),\n\t\t('PLIC Chapter ',                                           'Pure Love x Insult Complex',                                                                                                  'translated'),\n\t\t('Inma no Hado ch.',                                        'Inma no Hado',                                                                                                                'translated'),\n\t\t('Inma no Hado chapter',                                    'Inma no Hado',                                                                                                                'translated'),\n\t\t('Hero Pandemic chapter',                                   'I became a Hero in Pandemic',                                                                                                 'translated'),\n\t\t('X-ray is more than I thought Chapter ',                   'X-ray Is More Than I Thought',                                                                                                'translated'),\n\t\t('Tales of a Seductress \u2013 Chapter',                         'Tales of a Seductress',                                                                                                       'oel'),\n\t\t('Tales of Seductress \u2013 Chapter',                           'Tales of a Seductress',                                                                                                       'oel'),\n\t\t('The Power of Creation \u2013 Chapter',                         'The Power of Creation',                                                                                                       'oel'),\n\t\t('The Power of Creation Chapter',                           'The Power of Creation',                                                                                                       'oel'),\n\t\t('Dragon Magic Chapter ',                                   'Dragon Magic',                                                                                                                'oel'),\n\t\t('Just a Guy in Space \u2013 ',                                  'Just a Guy in Space',                                                                                                         'oel'),\n\t\t('Just a Guy in Space \u2013 ',                                  'Just a Guy in Space',                                                                                                         'oel'),\n\t\t('Tales of an Enchantress \u2013 Chapter',                       'Tales of an Enchantress',                                                                                                     'oel'),\n\t\t('Min\u2019s Story \u2013 Chapter ',                                  'Min\u2019s Story',                                                                                                                 'oel'),\n\t\t('ISSL Chapter',                                            'International Sex Slave Law',                                                                                                 'oel'),\n\t\t('Lute Dragoon \u2013 Chapter ',                                 'Lute Dragoon',                                                                                                                'oel'),\n\t\t('NTR System \u2013 Chapter ',                                   'NTR System',                                                                                                                  'oel'),\n\t\t('Cheat Parody Chapter ',                                   'Cheat Parody',                                                                                                                'oel'),\n\t\t('The Sex Beast System Chapter ',                           'The Sex Beast System',                                                                                                        'oel'),\n\t\t('TLGPL Chapter ',                                          'The Ladies Gang Puppet Leader',                                                                                               'oel'),\n\t\t('FeralHeart ',                                             'FeralHeart',                                                                                                                  'oel'),\n\t\t('Kama-sutra Chapter ',                                     'Kama-sutra',                                                                                                                  'oel'),\n\t\t('Evil Prophet Chapter ',                                   'The Evil Prophet',                                                                                                            'oel'),\n\t\t('STC Chapter ',                                            'Swayamvar: Tamer Chronicles',                                                                                                 'oel'),\n\t\t('The World of Women \u2013 Chapter ',                           'The World of Women',                                                                                                          'oel'),\n\t\t('Bonded Goddess \u2013 Chapter ',                               'I Went To Another World and Bonded With a Goddess So I Might As Well Have Lots of Sex and Rub it In My Ex-wife\u2019s Face',       'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-06-18T05:46:22.051593"
 ],
 "Madao Translations": [
  "def extractMadaoTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'My Death Flags Show No Sign of Ending' in item['tags']:\n\t\tchp, frag = frag, chp\n\t\treturn buildReleaseMessageWithType(item, 'Ore no Shibou Flag ga Todomaru Tokoro wo Shiranai', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Madder Translates": [
  "def extractMaddertranslatesCom(item):\n\t'''\n\tParser for 'maddertranslates.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Form A Slaves Only Harem Guild',                                  'An S Rank Adventurer Me Along With Those Girls Who Are Slaves, Form A Slaves Only Harem Guild',                      'translated'),\n\t\t('IT IS A DIFFERENT WORLD AND YET I AM CULTIVATING MONSTERS',       'It Is A Different World And Yet I Am Cultivating Monsters',                                                          'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('The Bloodshot One-Eyed Zombie Emperor ',                                                         'The Bloodshot One-Eyed Zombie Emperor',                                                              'translated'),\n\t\t('An S Rank Adventurer Me Along With Those Girls Who Are Slaves, Form A Slaves Only Harem Guild',  'An S Rank Adventurer Me Along With Those Girls Who Are Slaves, Form A Slaves Only Harem Guild',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-09-04T05:42:50.422153"
 ],
 "MadoSpicy TL": [
  "def extractMadoSpicy(item):\n\t\"\"\"\n\t# MadoSpicy TL\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Kyuuketsu Hime' in item['title']:\n\t\tpostfix = ''\n\t\tif 'interlude' in postfix.lower():\n\t\t\tpostfix = 'Interlude {num}'.format(num=chp)\n\t\t\tchp = None\n\t\tif 'prologue' in postfix.lower():\n\t\t\tpostfix = 'Prologue {num}'.format(num=chp)\n\t\t\tchp = None\n\t\treturn buildReleaseMessageWithType(item, 'Kyuuketsu Hime wa Barairo no Yume o Miru', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mage Life": [
  "def extractMageLife(item):\n\t\"\"\"\n\tMage Life\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Maggie Derrick": [
  "def extractMaggiederrickCom(item):\n\t'''\n\tParser for 'maggiederrick.com'\n\t'''\n\t\n\tif 'Personal Stuff' in item['tags']:\n\t\treturn None\n\t\n\tif 'writer Q&A' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t\t('The Wind and the Horizon', 'The Wind and the Horizon',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T02:40:35.931343"
 ],
 "Magician's Merger": [
  "\ndef extractMagiciansmergerBlogspotCom(item):\n\t'''\n\tParser for 'magiciansmerger.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:25.051084"
 ],
 "Magictrans": [
  "def extractMagictrans(item):\n\t\"\"\"\n\tMagictrans\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Release that Witch' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Release that Witch', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "MagnAvalon": [
  "def extractMagnavalonCom(item):\n\t'''\n\tParser for 'magnavalon.com'\n\t'''\n\t\n\tif 'news' in item['tags']:\n\t\treturn None\n\tif 'Pop Culture' in item['tags']:\n\t\treturn None\n\tif 'Anime' in item['tags']:\n\t\treturn None\n\t\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-04T05:46:33.209499"
 ],
 "Magus Translations": [
  "def extractMagustranslationsWordpressCom(item):\n\t'''\n\tParser for 'magustranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, 'Light Spirit Epic', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\n\t\n\treturn False",
  "2018-04-23T04:24:45.536707"
 ],
 "Mahou Koukoku": [
  "def extractMahouKoukoku(item):\n\t\"\"\"\n\t# MahouKoukoku\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Shiro no Koukoku Monogatari ' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Shiro no Koukoku Monogatari', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mahoutsuki Translation": [
  "def extractMahoutsuki(item):\n\t\"\"\"\n\t# Mahoutsuki Translation\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Uncategorized' in item['tags'] and chp and ('Chapter' in item['title'] or 'prologue' in item['title']):\n\t\treturn buildReleaseMessageWithType(item, 'Le Festin de Vampire', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mail-Order Bride (Novel)": [
  "\ndef extractMailorderbridenovelBlogspotCom(item):\n\t'''\n\tParser for 'mailorderbridenovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:30.264186"
 ],
 "Maki Translates": [
  "def extractMakiTranslates(item):\n\t\"\"\"\n\tParser for 'Maki Translates'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Makina Translations": [
  "def extractMakinaTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"I aim to be an adventurer with the jobclass of 'Jobless'\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I Aim to Be an Adventurer with the Jobclass of \"Jobless\"', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mamuni's Translations": [
  "def extractMulotranslationsWordpressCom(item):\n\t'''\n\tParser for 'mulotranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Aiming For Harem Queen in Different World',                                          'Aiming For Harem Queen in Different World',                                                         'translated'),\n\t\t('TS Reincarnated as the sub heroine',                                                 'TS Reincarnated as the Sub Heroine.',                                                               'translated'),\n\t\t('I was just an only child boy, Now I became one of a four quadruplet sisters.',       'I was just an only child boy, Now I became one of a four quadruplet sisters.',                      'translated'),\n\t\t('When I became a Girl, an Unexpected Love Quarrel Occurred!',                         'When I became a Girl, an Unexpected Love Quarrel Occurred!',                                        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T11:03:47.667911"
 ],
 "Mana Tank Magus": [
  "def extractManaTankMagus(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Mana Tank Magus' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Mana Tank Magus', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Manga0205 Translations": [
  "def extractManga0205Translations(item):\n\t\"\"\"\n\t# Manga0205 Translations\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Sendai Yuusha wa Inkyou Shitai'.lower() in item['title'].lower():\n\t\tpostfix = ''\n\t\tif 'Side Story'.lower() in item['title'].lower():\n\t\t\tpostfix = 'Side Story {num}'.format(num=chp)\n\t\t\tchp = None\n\t\treturn buildReleaseMessageWithType(item, 'Sendai Yuusha wa Inkyou Shitai', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mango Cat": [
  "def extractMangoxcatCom(item):\n\t'''\n\tParser for 'mangoxcat.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('To Marry You',       'To Marry You',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-25T06:06:18.951827"
 ],
 "Manlyflower Translations": [
  "def extractManlyflowerTranslations(item):\n\t\"\"\"\n\tParser for 'Manlyflower Translations'\n\t\"\"\"\n\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('SOLARIS the Abyssal',       'SOLARIS the Abyssal',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\treturn False",
  "2018-07-22T09:08:48.916660"
 ],
 "Mantles": [
  "\ndef extractMantlesnovelWordpressCom(item):\n\t'''\n\tParser for 'mantlesnovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:40.833220"
 ],
 "Mantou MTL": [
  "def extractMantoutranslationsWordpressCom(item):\n\t'''\n\tParser for 'mantoutranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('President Daddy Super Awesome',       'President Daddy Super Awesome',                      'translated'),\n\t\t('PDSA',                                'President Daddy Super Awesome',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-20T07:10:43.565827"
 ],
 "Manyakol Family Translations": [
  "\ndef extractManyakoltransWordpressCom(item):\n\t'''\n\tParser for 'manyakoltrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-04T00:47:49.131160"
 ],
 "MaoTL": [
  "def extractMaotlWordpressCom(item):\n\t'''\n\tParser for 'maotl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Instant Messiah',       'Instant Messiah',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-16T04:34:44.286100"
 ],
 "MaoTl": [
  "def extractWwwMaotlnCom(item):\n\t'''\n\tParser for 'www.maotln.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Instant Messiah \u2013 ',          'Instant Messiah',                 'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2019-03-03T04:12:07.112699"
 ],
 "Maou na Anoko to murabito a": [
  "def extractMaounaAnokotomurabitoa(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Maple's Zone": [
  "\ndef extractMapleszoneWordpressCom(item):\n\t'''\n\tParser for 'mapleszone.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:49:53.567318"
 ],
 "Martial Dao": [
  "def extractMartialDao(item):\n\t\"\"\"\n\tMartial Dao\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Awakening Chap'):\n\t\treturn buildReleaseMessageWithType(item, 'Awakening', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Shadow Rogue'):\n\t\treturn buildReleaseMessageWithType(item, 'Shadow Rogue', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('The Almight Martial Arts System Chap') or item['title'].startswith('The Almighty Martial Arts System Chap'):\n\t\treturn buildReleaseMessageWithType(item, 'The Almighty Martial Arts System', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Martial God Translator": [
  "def extractMartialGodTranslator(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Matcha Shortcake": [
  "def extractMatchashortcakeWordpressCom(item):\n\t'''\n\tParser for 'matchashortcake.wordpress.com'\n\t'''\n\n\treturn None",
  "2017-12-18T03:37:57.893693"
 ],
 "Matchalations": [
  "def extractMatchalationsWordpressCom(item):\n\t'''\n\tParser for 'matchalations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('There Will Always Be Protagonists With Delusions of Starting a Harem',       'There Will Always Be Protagonists With Delusions of Starting a Harem',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:04:38.539740"
 ],
 "Mathranslation": [
  "\ndef extractMathranslationBlogspotCom(item):\n\t'''\n\tParser for 'mathranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-20T06:49:01.526440"
 ],
 "Matthew Wood": [
  "\ndef extractSunstoppedshiningWordpressCom(item):\n\t'''\n\tParser for 'sunstoppedshining.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:33.454349"
 ],
 "MayO Translations": [
  "def extractMayotranslationsWordpressCom(item):\n\t'''\n\tParser for 'mayotranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t\t('EWP',  'Evil Wang Pampers His Ghost Doctor Fei',               'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n \n\tchp_prefixes = [\n\t\t\t('EWP Chapter ',  'Evil Wang Pampers His Ghost Doctor Fei',               'translated'),\n\t\t\t('Manowa',  'Manowa Mamono Taosu Nouryoku Ubau Watashi Tsuyokunaru',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-11-23T07:22:09.491099"
 ],
 "Mayakyaa": [
  "def extractMayakyaaTumblrCom(item):\n\t'''\n\tParser for 'mayakyaa.tumblr.com'\n\t'''\n\n\treturn None",
  "2017-08-12T08:07:40.342511"
 ],
 "Mayo Lettuce Tomato (MTL)": [
  "def extractMayomtlHomeBlog(item):\n\t'''\n\tParser for 'mayomtl.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('My Lover Was Stolen, And I Was Kicked Out Of The Hero\u2019s Party, But I Awakened To The EX Skill \u201cFixed Damage\u201d And Became Invincible. Now, Let\u2019s Begin Some Revenge',       \n\t\t\t'My Lover Was Stolen, And I Was Kicked Out Of The Hero\u2019s Party, But I Awakened To The EX Skill \u201cFixed Damage\u201d And Became Invincible. Now, Let\u2019s Begin Some Revenge',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-29T05:07:01.734154"
 ],
 "Mayonaize Shrimp Translation": [
  "def extractMayonaizeshrimpWordpressCom(item):\n\t'''\n\tParser for 'mayonaizeshrimp.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Love Switch',                                                        'Love Switch',                                                                       'translated'), \n\t\t('You Think It\u2019s Fine to Just Summon Me to Another World? Huh?',       'You Think It\u2019s Fine to Just Summon Me to Another World? Huh?',                      'translated'), \n\t\t('Impregnable \u226aDreadnought\u226b',                                         'Impregnable \u226aDreadnought\u226b',                                                        'translated'), \n\t\t('No Fatigue',                                                         'No Fatigue: 24-jikan Tatakaeru Otoko no Tenseitan',                                 'translated'), \n\t\t('Isekai GM',                                                          'The GM Has Logged Into A Different World',                                          'translated'), \n\t\t('Master\\'s Smile',                                                    'Master\\'s Smile',                                                                   'translated'), \n\t\t('heibon',                                                             'E? Heibon Desu yo??',                                                               'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('YTIF ',             'You Think It\\'s Fine to Just Summon Me to Another World? Huh?',      'translated'),\n\t\t('ToK ',              'Tower of Karma',                                                     'translated'),\n\t\t('Isekai GM ',        'The GM Has Logged Into A Different World',                           'translated'), \n\t\t('LHA chapter ',      'The Little Hero of Alcatar',                                         'oel'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-09T05:07:52.040477"
 ],
 "Me N mi?": [
  "def extractM3NmiWordpressCom(item):\n\t'''\n\tParser for 'm3nmi.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Amorous Slave Girl',       'Amorous Slave Girl',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:20:50.503286"
 ],
 "MeYou Translation": [
  "def extractMeyoutranslationWordpressCom(item):\n\t'''\n\tParser for 'meyoutranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('A Warm Wedding and A New Bride of Young Master Lu',       'A Warm Wedding and A New Bride of Young Master Lu',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:28:23.046606"
 ],
 "Meandering Otaku": [
  "\ndef extractMeanderingotakuWordpressCom(item):\n\t'''\n\tParser for 'meanderingotaku.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-24T01:02:52.009900"
 ],
 "Mecha Mushroom Translations": [
  "def extractMechaMushroom(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'YaoNie Bing Wang (WSK)' in item['title'] or 'Yao Nie Bing Wang (WSK)' in item['title'] or 'YNBW (WSK)' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Yao Nie Bing Wang', vol, chp, frag=frag, postfix=postfix)\n\tif 'Jiang Ye Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Jiang Ye Chapter', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mechanic Translations": [
  "def extractMechanictranslationsWordpressCom(item):\n\t'''\n\tParser for 'mechanictranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('4.6 Billion Year Symphony of Evolution',       '4.6 Billion Year Symphony of Evolution',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-25T06:06:44.174578"
 ],
 "Medium Well Translations": [
  "def extractMediumWellTranslations(item):\n\t\"\"\"\n\tParser for 'Medium Well Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Isekai C-Mart Hanjouki',                  'Isekai C-Mart Hanjouki',                'translated'),\n\t\t('from mightiest hero to demon king',       'From Mightiest Hero to Demon King',     'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-12-24T20:19:05.221597"
 ],
 "Mega Otaku": [
  "def extractMegaotakublogWordpressCom(item):\n\t'''\n\tParser for 'megaotakublog.wordpress.com'\n\t\n\tTLs into spanish.\n\t'''\n\n\treturn None",
  "2017-05-27T07:44:35.292696"
 ],
 "Megane's MTL": [
  "def extractMeganemtlXyz(item):\n\t'''\n\tParser for 'meganemtl.xyz'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Stir Up Whole World',       'Stir Up Whole World',                      'translated'),\n\t\t('SUWW',                      'Stir Up Whole World',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-15T05:45:03.985895"
 ],
 "Megapulp": [
  "\ndef extractMegapulpWordpressCom(item):\n\t'''\n\tParser for 'megapulp.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:37.350126"
 ],
 "Meh Translations": [
  "def extractMehtranslationsTumblrCom(item):\n\t'''\n\tParser for 'mehtranslations.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Space Rebirth',            'Space and Rebirth: The Favored Genius Doctor and Businesswoman',                      'translated'),\n\t\t('the favored genius',       'Space and Rebirth: The Favored Genius Doctor and Businesswoman',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-18T05:23:10.394418"
 ],
 "MeiLin Miranda": [
  "\ndef extractWwwMeilinmirandaCom(item):\n\t'''\n\tParser for 'www.meilinmiranda.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-10T11:35:13.120883"
 ],
 "Meiheim Lounge": [
  "\ndef extractMeiheimWordpressCom(item):\n\t'''\n\tParser for 'meiheim.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-30T01:59:36.573067"
 ],
 "Meira Eve Translation": [
  "\ndef extractMeiraevetranslationWordpressCom(item):\n\t'''\n\tParser for 'meiraevetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:29.039549"
 ],
 "Memorize Translations": [
  "def extractMemorizetranslationsWordpressCom(item):\n\t'''\n\tParser for 'memorizetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('MEMORIZE',       'M E M O R I Z E',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-12T09:03:17.122366"
 ],
 "Memory Translations": [
  "\ndef extractMemorytranslationsWordpressCom(item):\n\t'''\n\tParser for 'memorytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-04T03:31:38.982067"
 ],
 "Menari Translations": [
  "def extractMenaritranslationsWordpressCom(item):\n\t'''\n\tParser for 'menaritranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('MEMORIZE',  'M E M O R I Z E',          'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Memorize Chapter ',  'M E M O R I Z E',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-03T05:18:46.032078"
 ],
 "Meng Po's Soup Shop": [
  "def extractMengpossoupshopWordpressCom(item):\n\t'''\n\tParser for 'mengpossoupshop.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('\u300a\u9ec4\u6cc9\u5ba2\u6808\u300bYellow Springs Inn (Zhang Xiao Qi)',       'Yellow Springs Inn (Zhang Xiao Qi)',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-29T04:34:47.606250"
 ],
 "Mentally Crippled Translations": [
  "def extractMentallycrippledtranslationsBlogspotCom(item):\n\t'''\n\tParser for 'mentallycrippledtranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Summoner of Miracles',       'Summoner of Miracles',                      'translated'),\n\t\t('One Punch of Justice',       'One Punch of Justice',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-07T00:52:04.815414"
 ],
 "Messenger in a Bottle": [
  "\ndef extractMessengerinabottleCom(item):\n\t'''\n\tParser for 'messengerinabottle.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:27.058400"
 ],
 "Messier-45": [
  "\ndef extractMessier45TumblrCom(item):\n\t'''\n\tParser for 'messier-45.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-07T09:05:43.815424"
 ],
 "Meteor Ranger T.": [
  "def extractMeteorRangerT(item):\n\t\"\"\"\n\tParser for 'Meteor Ranger T.'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Meteoremperor-san": [
  "def extractMeteoremperorSan(item):\n\t\"\"\"\n\tParser for 'Meteoremperor-san'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Michilun Translations": [
  "def extractMichilunWordpressCom(item):\n\t'''\n\tParser for 'michilun.wordpress.com'\n\t'''\n\tbad = [\n\t\t'Recommendations and Reviews',\n\t\t]\n\t\n\tif any([tmp in item['tags'] for tmp in bad]):\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Side Projects - Scheme of the Official Descendant',                  'Scheme of the Official Descendant',                      'translated'),\n\t\t('Song in the Peach Blossoms',                                         'Song in the Peach Blossoms',                             'translated'),\n\t\t('Onrain (Online - The Novel)',                                        'Onrain (Online - The Novel)',                            'translated'),\n\t\t('At the End of the Wish',                                             'At the End of the Wish',                                 'translated'),\n\t\t('Bringing Calamity to the Nation',                                    'Bringing Calamity to the Nation',                        'translated'),\n\t\t('Side Projects - The Flame\\'s Daughter',                              'The Flame\\'s Daughter',                                  'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-21T23:47:31.006238"
 ],
 "Midnight Translation Blog": [
  "def extractMidnightTranslationBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mikagura Scanlations Club": [
  "def extractMikaguraScanlationsClub(item):\n\t\"\"\"\n\tParser for 'Mikagura Scanlations Club'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mike777ac": [
  "def extractMike777ac(item):\n\t\"\"\"\n\t# Mike777ac\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not postfix and ':' in item['title']:\n\t\tpostfix = item['title'].split(':')[-1]\n\tif ('Hardcore OPness' in item['tags'] or 'HCOP' in item['tags']) and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Hardcore OP-ness', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Milgram": [
  "\ndef extractMandragonsWordpressCom(item):\n\t'''\n\tParser for 'mandragons.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:37.458201"
 ],
 "Milky Panda Translation": [
  "\ndef extractMilkypandablogWordpressCom(item):\n\t'''\n\tParser for 'milkypandablog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:42.298176"
 ],
 "Mineral Water Translation": [
  "def extractMineralWaterTranslation(item):\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mionline": [
  "\ndef extractMionline657939096WordpressCom(item):\n\t'''\n\tParser for 'mionline657939096.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:41.762188"
 ],
 "Mira Translates": [
  "\ndef extractMiratranslatesWordpressCom(item):\n\t'''\n\tParser for 'miratranslates.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-12T08:16:40.774015"
 ],
 "Mira's Cocktail": [
  "def extractWwwMiraslationNet(item):\n\t'''\n\tParser for 'www.miraslation.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('BoukenshaLicense',       'Boukensha License o Hakudatsu Sareta Ossan Dakedo, Manamusume ga Dekita no de Nonbiri Jinsei o Oka Suru',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T22:55:38.759110"
 ],
 "Miracle Executors!": [
  "def extractMiracutorWordpressCom(item):\n\t'''\n\tParser for 'miracutor.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Gi(a)rlish Number',       'Gi(a)rlish Number',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-25T06:08:14.908972"
 ],
 "Miri Translations": [
  "def extractMiritranslationsWordpressCom(item):\n\t'''\n\tParser for 'miritranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Picked Up In Winter',       'Picked Up In Winter',                      'translated'),\n\t\t('Fortune Killer',            'Fortune Killer',                           'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-27T06:36:12.756918"
 ],
 "Mirrored Translations": [
  "def extractMirrortranslationsblogWordpressCom(item):\n\t'''\n\tParser for 'mirrortranslationsblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif 'inktober' in item['tags']:\n\t\treturn None\n\tif 'Inktober' in item['title']:\n\t\treturn None\n\tif 'art' in item['tags']:\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('White Lotus',              'White Lotus',                                               'translated'), \n\t\t('Heaven\\'s Blessing',       'Heaven\\'s Blessing',                                        'translated'), \n\t\t('ROLYA',                    'Reborn Only to Love You Again',                             'translated'), \n\t\t('DMBHWA',                   'Doctor, My Bottom Half is Wet Again',                       'translated'), \n\t\t('HE',                       'Heaven\u2019s Will',                                             'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Heaven\u2019s Will',               'Heaven\u2019s Will',                   'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-04T05:39:51.977138"
 ],
 "Miru Translations": [
  "def extractMirutranslationsWordpressCom(item):\n\t'''\n\tParser for 'mirutranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('One Useless Rebirth',       'One Useless Rebirth',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-23T08:43:40.638473"
 ],
 "Miss Vijaya": [
  "def extractMsvijayaBlogspotCom(item):\n\t'''\n\tParser for 'msvijaya.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Entertainment Food Service Novel',                   'Entertainment Food Service',                                   'translated'),\n\t\t('He\\'s Not A Non Entertainment Circle Novel',         'He\\'s Not A Non Entertainment Circle',                         'translated'),\n\t\t('His Son Has A Richest Billionaires Dad Novel',       'His Son Has A Richest Billionaires Dad',                       'translated'),\n\t\t('Today The Manager Is Also Very Kind Novel',          'Today The Manager Is Also Very Kind',                          'translated'),\n\t\t('There Is Chef Yu In The Entertainment Circle Novel', 'There Is Chef Yu In The Entertainment Circle',                 'translated'),\n\t\t('Canary [Main Attack] Novel',                         'Canary [Main Attack]',                                         'translated'),\n\t\t('Father and Son Novel',                               'Father and Son',                                               'translated'),\n\t\t('Florist Little Boss Novel',                          'Florist Little Boss',                                          'translated'),\n\t\t('King of Classical Music Novel',                      'King of Classical Music',                                      'translated'),\n\t\t('Lion King\\'s Adopted Son Novel',                     'Lion King\\'s Adopted Son Novel',                               'translated'),\n\t\t('He Is Not A Non Entertainment Circle Novel',         'He Is Not A Non Entertainment Circle Novel',                   'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-30T07:01:02.527760"
 ],
 "Mistakes Were Made": [
  "def extractMwmtranslationsWordpressCom(item):\n\t'''\n\tParser for 'mwmtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Villainess Blooms',                                                                                                                         'The Villainess Blooms',                                                                                                                                        'translated'),\n\t\t('Even Though I\\'m a Former Noble and a Single Mother, My Daughters are too Cute and Working as an Adventurer Isn\\'t Too Much of a Hassle',       'Even Though I\\'m a Former Noble and a Single Mother, My Daughters are too Cute and Working as an Adventurer Isn\\'t Too Much of a Hassle',                      'translated'),\n\t\t('Old Vampire and a Holy Girl',                                                                                                                   'Old Vampire and a Holy Girl',                                                                                                                                  'translated'),\n\t\t('Akuyaku Reijou wa Danna-sama wo Yasesasetai',                                                                                                   'Akuyaku Reijou wa Danna-sama wo Yasesasetai',                                                                                                                  'translated'),\n\t\t('Senpensekai no Madoushi',                                                                                                                       'Senpensekai no Madoushi',                                                                                                                                      'translated'),\n\t\t('Did You Know That a Playboy Can Change His Job to a Sage?',                                                                                     'Did You Know That a Playboy Can Change His Job to a Sage?',                                                                                                    'translated'),\n\t\t('Playboy',                                                                                                                                       'Did You Know That a Playboy Can Change His Job to a Sage?',                                                                                                    'translated'),\n\t\t('The Splendid Daily Life of the Mother Devouring Princess',                                                                                      'The Splendid Daily Life of the Mother Devouring Princess',                                                                                                     'translated'),\n\t\t('Endo and Kobayashi\\'s Live Commentary on the Villainess',                                                                                       'Endo and Kobayashi\\'s Live Commentary on the Villainess',                                                                                                      'translated'),\n\t\t('Since I\u2019ve Reincarnated as the Villainess\u2019 Father, I\u2019ll Shower My Wife and Daughter in Love',       'Since I\u2019ve Reincarnated as the Villainess\\' Father, I\\'ll Shower My Wife and Daughter in Love',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('The Villainess Blooms',                                                                       'The Villainess Blooms',                                                          'translated'),\n\t\t('The Villainess Will Crush Her Destruction End Through Modern Firepower \u2013 ',                   'The Villainess Will Crush Her Destruction End Through Modern Firepower',         'translated'),\n\t\t('Kochugunshikan Boukensha ni Naru',                                                            'Kochugunshikan Boukensha ni Naru',                                               'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T05:15:36.408986"
 ],
 "Mistream Translations": [
  "def extractMistreamWordpressCom(item):\n\t'''\n\tParser for 'mistream.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('IQ',       'I\\'m Scattering IQ to the Protagonist',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-22T04:52:03.838671"
 ],
 "Misty Cloud Translations": [
  "def extractMistyCloudTranslations(item):\n\t\"\"\"\n\tMisty Cloud Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('Genius Doctor : The Black Belly Miss',                   'Genius Doctor: Black Belly Miss',                          'translated'),\n\t\t('Genius Doctor: Black Belly Miss',                        'Genius Doctor: Black Belly Miss',                          'translated'),\n\t\t('Prodigiously Amazing Weaponsmith',                       'Prodigiously Amazing Weaponsmith',                         'translated'),\n\t\t('Insanely Pampered Wife: Divine Doctor Fifth Young Miss', 'Insanely Pampered Wife: Divine Doctor Fifth Young Miss',   'translated'),\n\t\t('Insanely Pampered Wife: Genius Doctor Fifth Young Miss', 'Insanely Pampered Wife: Divine Doctor Fifth Young Miss',   'translated'),\n\t\t('Accompanying the Phoenix',                               'Accompanying the Phoenix',                                 'translated'),\n\t\t('Mesmerizing Ghost Doctor',                               'Mesmerizing Ghost Doctor',                                 'translated'), \n\t\t('Overlord Love Me Tender',                                'Overlord, Love Me Tender',                                 'translated'), \n\t\t('Godly Empress Doctor',                                   'Godly Empress Doctor',                                     'translated'), \n\t\t('The Anarchic Consort',                                   'The Anarchic Consort',                                     'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\n\treturn False",
  "2018-02-17T08:32:29.420295"
 ],
 "Mittens 220": [
  "def extractMittens220(item):\n\t\"\"\"\n\tParser for 'Mittens 220'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('hataraku maou-sama',       'Hataraku Maou-sama!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-12-18T03:57:25.008632"
 ],
 "Miumiu's musings": [
  "def extractMiumiuSMusings(item):\n\t\"\"\"\n\tParser for 'Miumiu's musings'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('NCND',                 'Nuptial Chamber Next Door',        'translated'),\n\t\t('Rolling Love',         'Rolling Love',                     'translated'),\n\t\t('Same bed',             'Same Place Not Same Bed',          'translated'),\n\t\t('Nuptial Chamber',      'Nuptial Chamber Next Door',        'translated'),\n\t\t('Love You',             'Loving You Is Too difficult',      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\n\tif item['tags'] != ['Uncategorized']:\n\t\treturn False\n\t\t\n\t\t\n\tchp_prefixes = [\n\t\t\t('NCND \u2013 ',                            'Nuptial Chamber Next Door',                 'translated'),\n\t\t\t('NCND \u2013 ',                            'Nuptial Chamber Next Door',                 'translated'),\n\t\t\t('Loving You Is Too difficult \u2013 ',     'Loving You Is Too difficult',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-12-23T08:42:31.347660"
 ],
 "Miyorf Tries Translating": [
  "\ndef extractMiyorftranslatesWordpressCom(item):\n\t'''\n\tParser for 'miyorftranslates.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:40:53.113497"
 ],
 "Mnemeaa": [
  "def extractMnemeaa(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mobile Suit Zeta Gundam Novels Translation": [
  "def extractMobileSuitZetaGundamNovelsTranslation(item):\n\t\"\"\"\n\tParser for 'Mobile Suit Zeta Gundam Novels Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Modern Day Novels": [
  "def extractModerndaynovelsMl(item):\n\t'''\n\tParser for 'moderndaynovels.ml'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rebirth of Wild Fire',       'Rebirth of Wild Fire',                      'translated'),\n\t\t('Medical Master',             'Medical Master',                            'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Rebirth of Wild Fire: Chapter ',        'Rebirth of Wild Fire',                                 'translated'),\n\t\t('Rebirth Wild Fire: Chapter',            'Rebirth of Wild Fire',                                 'translated'),\n\t\t('True Cultivators on Campus: Chapter ',  'The Strong, The Few, True Cultivators on Campus',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-15T05:40:13.129671"
 ],
 "Mofumofu Translation": [
  "def extractMofumofuTranslation(item):\n\t\"\"\"\n\tMofumofu Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mojo Translations": [
  "def extractMojoTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Synopsis - Summaries' in item['tags']:\n\t\treturn None\n\t# Apparently manga?\n\tif 'Air Master' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Duke\\'s Daughter and Knight Captain(62)',               'The Duke\\'s Daughter Is the Knight Captain\\'s (62) Young Wife',                'translated'), \n\t\t('Drop!!',                                                'Drop!! ~A Tale of the Fragrance Princess~',                                    'translated'), \n\t\t('Heibon na Watashi wa Tonikaku Hibon',                   'Heibon na Watashi wa Tonikaku Hibon',                                          'translated'), \n\t\t('Around 30',                                             'I am the Newly Born Woman of Around Thirty',                                   'translated'), \n\t\t('The corner is fine. Please don\\'t mind me',             'The corner is fine. Please don\\'t mind me',                                    'translated'), \n\t\t('Isekai de Mofumofu Nadenade Suru Tame ni Ganbattemasu', 'Isekai de Mofumofu Nadenade Suru Tame ni Ganbattemasu',                        'translated'), \n\t\t('Isekai de Mofumofu Nadenade no Tame ni Ganbattemasu',   'Isekai de Mofumofu Nadenade Suru Tame ni Ganbattemasu',                        'translated'), \n\t\t('Yankee wa Isekai de Seirei ni Aisaremasu',              'Yankee wa Isekai de Seirei ni Aisaremasu',                                     'translated'), \n\t\t('Akuyaku Reijou wa Danna-sama wo Yasesasetai',           'Akuyaku Reijou wa Danna-sama wo Yasesasetai',                                  'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-02T10:02:05.514434"
 ],
 "Momo Peach Translation": [
  "def extractMomopeachtranslationBlogspotCom(item):\n\t'''\n\tParser for 'momopeachtranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Billion of Pampering Only For You',                 'Billion of Pampering Only For You',                                'translated'),\n\t\t('Beloved Wife on Top : Master Mo Softly Kiss',       'Beloved Wife on Top : Master Mo Softly Kiss',                      'translated'),\n\t\t('Wealthy Family\\'s Warm Wedding',                    'Wealthy Family\\'s Warm Wedding',                                   'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-16T04:14:11.831174"
 ],
 "MomoPeachTranslation": [
  "\ndef extractMomopeachprojectWordpressCom(item):\n\t'''\n\tParser for 'momopeachproject.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-26T08:38:04.877073"
 ],
 "Monk Translation": [
  "def extractMonkTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Battle Emperor' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Battle Emperor', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Monkoto's Translations": [
  "def extractMonkotosTranslations(item):\n\t\"\"\"\n\t# \"Monkoto's Translations\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Chapter Release' in item['tags'] and 'Ryuugoroshi' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Ryugoroshi no Sugosuhibi', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Monmon": [
  "\ndef extractCreizLivejournalCom(item):\n\t'''\n\tParser for 'creiz.livejournal.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-12-18T01:13:07.595304"
 ],
 "Moon Bunny Cafe": [
  "def extractMoonBunnyCafe(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tbad_titles = [\n\t\t\t'Nekomata ', \n\t\t\t'Nigemichi wa Kochira - ', \n\t\t\t'Curse Note - ', \n\t\t\t'Hi Ni Iru - ', \n\t\t\t'Kaidan Tochuu no Big Noise', \n\t\t\t'preview'\n\t\t]\n\n\tif any([bad_title in item['title'] for bad_title in bad_titles]):\n\t\treturn None\n\t\t\n\tif 'announcements' in item['tags']:\n\t\treturn None\n\tif 'Manhwa' in item['tags']:\n\t\treturn None\n\n\n\ttlut = {\n\t\t\n\t\t\"dragon's bloodline\"                                                             : \"Dragon's Bloodline\",\n\t\t\"shura's wrath\"                                                                  : \"Shura's Wrath\",\n\t\t\"the guild's cheat receptionist\"                                                 : \"The Guild's Cheat Receptionist\",\n\t\t\"what's your gender, princess?\"                                                  : \"What's Your Gender, Princess?\",\n\t\t'a lonesome fragrance waiting to be appreciated'                                 : 'A Lonesome Fragrance Waiting to be Appreciated',\n\t\t'accompanying the phoenix'                                                       : 'Accompanying the Phoenix',\n\t\t'against the gods'                                                               : 'Against The Gods',\n\t\t'and so the girl obtained a wicked girl\u2019s body'                                  : \"And so the Girl Obtained a Wicked Girl's Body\",\n\t\t'apartments for rent'                                                            : 'Apartments for Rent',\n\t\t'b group no shounen'                                                             : 'B Group no Shounen',\n\t\t'because i\u2019m a weapon shop uncle'                                                : \"Because I'm a Weapon Shop Uncle\",\n\t\t'bewitching prince spoils his wife: genius doctor unscrupulous consort'          : 'Bewitching Prince Spoils His Wife: Genius Doctor Unscrupulous Consort',\n\t\t'bewitching prince spoils his wife: genius doctor unscrupulous consort'          : 'Bewitching Prince Spoils His Wife: Genius Doctor Unscrupulous Consort',\n\t\t'black bellied prince\u2019s stunning abandoned consort'                              : 'Black Bellied Prince\u2019s Stunning Abandoned Consort',\n\t\t'Boku wa Isekai de Fuyo Mahou to Shoukan Mahou wo Tenbin ni Kakeru'              : \"Boku wa Isekai de Fuyo Mahou to Shoukan Mahou wo Tenbin ni Kakeru\",\n\t\t'botsuraku youtei nanode, kajishokunin wo mezasu'                                : 'Botsuraku Youtei Nanode, Kajishokunin wo Mezasu',\n\t\t'boundary labyrinth and the foreign magician'                                    : 'Boundary Labyrinth and the Foreign Magician',\n\t\t'bringing a farm to mess around in another world'                                : 'Bringing A Farm To Mess Around In Another World',\n\t\t'bringing a farm'                                                                : 'Bringing A Farm To Mess Around In Another World',\n\t\t'cat k'                                                                          : 'Cat K',\n\t\t'cultivating to become a great celestial'                                        : 'Cultivating to Become a Great Celestial',\n\t\t'doctor of the demon world'                                                      : 'Doctor of the Demon World',\n\t\t'dragon\\'s bloodline'                                                            : 'Dragon\\'s Bloodline',\n\t\t'dual sword liberator'                                                           : 'Dual Sword Liberator',\n\t\t'e mei (beauty)'                                                                 : 'E Mei (Beauty)',\n\t\t'empress running away with the ball!'                                            : 'Empress Running Away with the Ball!',\n\t\t'five way heaven'                                                                : 'Five Way Heaven',\n\t\t'five way heaven'                                                                : 'Five Way Heaven',\n\t\t'genius doctor : black belly miss'                                               : 'Genius Doctor: Black Belly Miss',\n\t\t'Ghostly Masked Prince Xiao: Pampering and Spoiling the Little Adorable Consort' : 'Ghostly Masked Prince Xiao: Pampering and Spoiling the Little Adorable Consort',\n\t\t'god of thunder'                                                                 : 'God of Thunder',\n\t\t'godly hunter'                                                                   : 'Godly Hunter',\n\t\t'heavenly star'                                                                  : 'Heavenly Star',\n\t\t'i became an in-game npc'                                                        : 'I Became an In-game NPC',\n\t\t'i decided to not compete and quietly create dolls instead'                      : 'I Decided to Not Compete and Quietly Create Dolls Instead',\n\t\t'i reincarnated as a noble girl villainess, but why did it turn out this way'    : 'I Reincarnated as a Noble Girl Villainess, but why did it turn out this way',\n\t\t'i reincarnated as a noble girl villainess, but why did it turn out this way?'   : 'I Reincarnated as a Noble Girl Villainess, but why did it turn out this way',\n\t\t'i, am playing the role of the older brother in hearthrob love revolution'       : 'I, am Playing the Role of the Older Brother in Heart-throb Love Revolution.',\n\t\t'insanely pampered wife: divine doctor fifth young miss'                         : 'Insanely Pampered Wife: Divine Doctor Fifth Young Miss',\n\t\t'inside the cave of obscenity'                                                   : 'Inside the Cave of Obscenity',\n\t\t'invincible saint ~salaryman, the path i walk to survive in this other world~'   : 'Invincible Saint ~Salaryman, the path I walk to survive in this other world~',\n\t\t'isekai maou to shoukan shoujo dorei majutsu'                                    : 'Isekai Maou to Shoukan Shoujo no Dorei Majutsu',\n\t\t'island: end of nightmare'                                                       : 'Island: End of Nightmare',\n\t\t'it seems like i got reincarnated into the world of a yandere otome game.'       : 'It seems like I got reincarnated into the world of a Yandere Otome game.',\n\t\t'it seems like i got reincarnated into the world of a yandere otome game.'       : 'It seems like I got reincarnated into the world of a Yandere Otome game.',\n\t\t'i\u2019ll live my second life!'                                                      : 'I\u2019ll Live My Second Life!',\n\t\t'i\u2019m a neet but when i went to hello work i got taken to another world'          : 'I\u2019m a NEET but when I went to Hello Work I got taken to another world',\n\t\t'i\u2019m a neet but when i went to hello work i got taken to another world'          : 'NEET dakedo Hello Work ni Ittara Isekai ni Tsuretekareta',\n\t\t'kamigoroshi no eiyuu to nanatsu no seiyaku'                                     : 'Kamigoroshi no Eiyuu to Nanatsu no Seiyaku',\n\t\t'kumo desu ga, nani ka?'                                                         : 'Kumo Desu ga, Nani ka?',\n\t\t'kuro no maou'                                                                   : 'Kuro no Maou',\n\t\t'lazy dungeon master'                                                            : 'Lazy Dungeon Master',\n\t\t'lazy dungeon master'                                                            : 'Lazy Dungeon Master',\n\t\t'legend'                                                                         : 'Legend',\n\t\t'm e m o r i z e'                                                                : 'M E M O R I Z E',\n\t\t'magic mechanics shuraba'                                                        : 'Magic Mechanics Shuraba',\n\t\t'magic robot aluminare'                                                          : 'Magic Robot Aluminare',\n\t\t'maken no daydreamer'                                                            : 'Maken no Daydreamer',\n\t\t'monogatari no naka no hito'                                                     : 'Monogatari no Naka no Hito',\n\t\t'muimui-tan'                                                                     : 'Muimui-Tan',\n\t\t'muimui-tan'                                                                     : 'Muimui-Tan',\n\t\t'my disciple died yet again'                                                     : 'My Disciple Died Yet Again',\n\t\t'my favorable rating does not rise'                                              : 'My Favorable Rating Does Not Rise',\n\t\t'no fatigue'                                                                     : 'No Fatigue',\n\t\t'omni-magician'                                                                  : 'Omni-Magician',\n\t\t'otherworld nation founding'                                                     : 'Otherworld Nation Founding Chronicles',\n\t\t'parallel world pharmacy'                                                        : 'Parallel World Pharmacy',\n\t\t'Poison the World'                                                               : 'Poisoning the World: The Secret Service Mysterious Doctor is a Young Beastly Wife',\n\t\t'purple river'                                                                   : 'Purple River',\n\t\t'rebirth of the thief who roamed the world'                                      : 'Rebirth of the Thief Who Roamed the World',\n\t\t'running away from the hero!'                                                    : 'Running Away From The Hero!',\n\t\t'sendai yuusha wa inkyou shitai'                                                 : 'Sendai Yuusha wa Inkyou Shitai',\n\t\t'shen mu'                                                                        : 'Shen Mu',\n\t\t'single player only'                                                             : 'single player only',\n\t\t'slave career planner'                                                           : 'Slave Career Planner', \n\t\t'story of a careless demon'                                                      : 'Story of a Careless Demon',\n\t\t'tensei shitara slime datta ken'                                                 : 'Tensei Shitara Slime Datta Ken',\n\t\t'the bears bear a bare kuma'                                                     : 'The Bears Bear a Bare Kuma',\n\t\t'the cry of the phoenix which reached the ninth heaven'                          : 'The Cry of the Phoenix Which Reached the Ninth Heaven',\n\t\t'the demonic king chases his wife: the rebellious good-for-nothing miss'         : 'The Demonic King Chases His Wife: The Rebellious Good-for-nothing Miss', \n\t\t'the saint\u2019s recovery magic is a degraded version of mine'                       : 'The Saint\u2019s Recovery Magic is a Degraded Version of Mine',\n\t\t'the simple life of killing demons'                                              : 'The Simple Life of Killing Demons',\n\t\t'Evil Emperor\\'s Poisonous Consort: Divine Doctor Young Miss'                    : 'Evil Emperor\\'s Poisonous Consort: Divine Doctor Young Miss',\n\t\t'Transmigrated into Another World with an Unparalleled System'                   : 'Transmigrated into Another World with an Unparalleled System',\n\t\t'Heaven\\'s Will Balancing System'                                                : 'Heaven\\'s Will Balancing System',\n\t\t'time'                                                                           : 'Time',\n\t\t'Unprecedented Pill Refiner: Entitled Ninth Young Lady'                          : 'Unprecedented Pill Refiner: Entitled Ninth Young Lady',\n\t\t'wife is outrageous: his evil highness comes knocking'                           : 'Wife is Outrageous: His Evil Highness Comes Knocking',\n\t\t'xiao qi, wait'                                                                  : 'Xiao Qi, Wait',\n\t}\n\n\n\n\tetlut = {\n\t\t'Overseer' : 'Overseer'\n\n\t}\n\t\n\t\n\tltags = [tmp.lower() for tmp in item['tags']]\n\n\tif 'manhwa' in ltags or 'manhua' in ltags or 'manga' in ltags:\n\t\treturn None\n\t\n\t\n\t# Patch lower case names so I don't have to bother lower-casing\n\t# them manually\n\tfor key, value in list(tlut.items()):\n\t\ttlut[key.lower()] = value\n\n\t\t\t\n\tfor key, value in etlut.items():\n\t\tif key in ltags:\n\t\t\treturn buildReleaseMessageWithType(item, value, vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\n\tfor key, value in tlut.items():\n\t\tif key in ltags:\n\t\t\treturn buildReleaseMessageWithType(item, value, vol, chp, frag=frag, postfix=postfix)\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\n\tcleaned_title = item['title'].lower().replace('\u2019', '').replace(\"'\", '') \n\t\t\t\n\tif cleaned_title.startswith(\"enl \"):\n\t\treturn buildReleaseMessageWithType(item, 'Unprecedented Pill Refiner: Entitled Ninth Young Lady', vol, chp, frag=frag, postfix=postfix)\n\tif cleaned_title.startswith(\"legend \"):\n\t\treturn buildReleaseMessageWithType(item, 'Legend', vol, chp, frag=frag, postfix=postfix)\n\tif cleaned_title.startswith(\"overseer \"):\n\t\treturn buildReleaseMessageWithType(item, 'Overseer', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\n\tif 'accompanying the phoenix' in cleaned_title and 'chapter' in cleaned_title:\n\t\treturn buildReleaseMessageWithType(item, 'Accompanying the Phoenix', vol, chp, frag=frag, postfix=postfix)\n\n\ttitlemap = [\n\t\t('because im a weapon shop uncle',                                            \"Because I'm a Weapon Shop Uncle\",                                                    'translated'),\n\t\t('because im a weapons shop uncle',                                           \"Because I'm a Weapon Shop Uncle\",                                                    'translated'),\n\t\t('dkc chapter',                                                               'The Demonic King Chases His Wife: The Rebellious Good-for-nothing Miss',             'translated'),\n\t\t('boku wa isekai de fuyo mahou to shoukan mahou wo tenbin ni kakeru chapter', 'Boku wa Isekai de Fuyo Mahou to Shoukan Mahou wo Tenbin ni Kakeru',                  'translated'),\n\t\t('slave career planner volume',                                               'Slave Career Planner',                                                               'translated'),\n\t\t('parallel world pharmacy',                                                   'Parallel World Pharmacy',                                                            'translated'),\n\t\t('world record',                                                              'World Record',                                                                       'translated'),\n\t\t('empress running away with the ball',                                        'Empress Running Away with the Ball',                                                 'translated'),\n\t\t('the guilds cheat receptionist',                                             \"The Guild's Cheat Receptionist\",                                                     'translated'),\n\t\t('gdbbm',                                                                     \"Genius Doctor : Black Belly Miss\",                                                   'translated'),\n\t\t('bewitching prince spoils his wife',                                         'Bewitching Prince Spoils His Wife',                                                  'translated'),\n\t\t('xqw',                                                                       'Xiao Qi, Wait',                                                                      'translated'),\n\t\t('cbgc',                                                                      'Cultivating to Become a Great Celestial',                                            'translated'), \n\t\t('careless demon',                                                            'Demon Noble Girl ~Story of a Careless Demon~',                                       'translated'),\n\t\t('memorize',                                                                  'M E M O R I Z E',                                                                    'translated'),\n\t\t('godly hunter',                                                              'Godly Hunter',                                                                       'translated'),\n\t\t('accompanying the phoenix',                                                  'Accompanying The Phoenix',                                                           'translated'),\n\t\t('weapon shop uncle',                                                         'Because I\\'m a Weapon Shop Uncle',                                                   'translated'),\n\t\t('invincible saint ',                                                         'Invincible Saint ~Salaryman, the path I walk to survive in this other world~',       'translated'),\n\t\t('bbps consort',                                                              'Black Bellied Prince\u2019s Stunning Abandoned Consort',                                  'translated'),\n\t\t('wife is outrageous',                                                        'Wife is Outrageous: His Evil Highness Comes Knocking',                               'translated'),\n\t\t('muimui-tan',                                                                'Muimui-tan',                                                                         'translated'), \n\t\t('got ',                                                                      'God of Thunder',                                                                     'translated'),\n\t\t('she was both called god',                                                   'She was both called God, as well as Satan',                                          'translated'),\n\t\t('common sense of a dukes daughter ',                                         'Common Sense of a Duke\\'s Daughter',                                                 'translated'),\n\t\t('poisoning the world',                                                       'Poisoning the World: The Secret Service Mysterious Doctor is a Young Beastly Wife',  'translated'),\n\t\t('bewitching prince chapter',                                                 'Bewitching Prince Spoils His Wife: Genius Doctor Unscrupulous Consort',              'translated'),\n\t\t('ddfym \u2013 ',                                                                  'Insanely Pampered Wife: Divine Doctor Fifth Young Miss',                             'translated'),\n\t\t('cry of phoenix',                                                            'The Cry of the Phoenix Which Reached the Ninth Heaven',                              'translated'),\n\t\t('island vol',                                                                'Island: End of Nightmare',                                                           'translated'),\n\t\t('evil emperors poisonous consort: divine doctor young miss chapter',         'Evil Emperor\u2019s Poisonous Consort: Divine Doctor Young Miss',                         'translated'),\n\t\t('single player only chapter',                                                'Single Player Only',                                                                 'translated'),\n\t\t('kuzu inou chapter ',                                                        'Kuzu Inou\u3010Ondo wo Kaeru Mono\u3011 no Ore ga Musou suru made',                          'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent in cleaned_title:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\t\n\t\t\t\n\treturn False",
  "2018-10-15T05:28:13.724747"
 ],
 "Moon Rabbit Translations": [
  "def extractMoonRabbitTranslations(item):\n\t\"\"\"\n\tMoon Rabbit Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Womanizing Mage' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Womanizing Mage', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Moon's Tavern": [
  "def extractAstereadsWordpressCom(item):\n\t'''\n\tParser for 'astereads.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Thanks to a Different World Reincarnation',       'Thanks to a Different World Reincarnation',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-20T06:13:11.280951"
 ],
 "Moonlight Translations": [
  "def extractMoonlightTranslations(item):\n\t\"\"\"\n\tMoonlight Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Discovering my Disciple Wants to Eat Me After Raising Him',       'Discovering my Disciple Wants to Eat Me After Raising Him',                      'translated'), \n\t\t('The Promotion Record of A Crown Princess',       'The Promotion Record of A Crown Princess',                      'translated'), \n\t\t('Reborn as My Love Rival\\'s Wife',                'Reborn as My Love Rival\\'s Wife',                               'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\treturn False",
  "2017-08-01T04:56:11.191136"
 ],
 "Moonrune Works": [
  "def extractMoonruneworksCom(item):\n\t'''\n\tParser for 'moonruneworks.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Genius Prince',       'Genius Prince\u2019s National Revitalization from State Deficit ~ Right, let us sell the country.',                      'translated'),\n\t\t('PRC',                 'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-11T22:05:34.122158"
 ],
 "Morrighan Sucks": [
  "def extractMorrighanSucks(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Unlimited Anime Works' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Unlimited Anime Works', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mosstree Translations": [
  "def extractOldmosstreeWordpressCom(item):\n\t'''\n\tParser for 'oldmosstree.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Love Rival\\'s Brother',       'Love Rival\\'s Brother',                      'translated'),\n\t\t('Thinks I Like Him',           'Everyone Thinks that I Like Him',            'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-23T04:40:07.830082"
 ],
 "MostlyBanana": [
  "def extractMostlyfakehiatusWordpressCom(item):\n\t'''\n\tParser for 'mostlyfakehiatus.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"Baobei Baobei\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Baobei Baobei\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-06-17T07:54:13.131197"
 ],
 "Mountain of Pigeons Translations": [
  "def extractMountainofPigeonsTranslations(item):\n\t\"\"\"\n\tMountain of Pigeons Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\tif 'Anime' in item['tags']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('bahamut',                                    'Undefeated Bahamut Chronicle',                                                          'translated'),\n\t\t('HSN',                                        'Hataraku Maou-sama!',                                                                   'translated'),\n\t\t('Trinity Seven',                              'Trinity Seven',                                                                         'translated'),\n\t\t('log horizon',                                'Log Horizon',                                                                           'translated'),\n\t\t('GaWoRaRe',                                   'Kanojo ga Flag wo Oraretara',                                                           'translated'),\n\t\t('Rokujouma',                                  'Rokujouma no Shinryakusha!?',                                                           'translated'),\n\t\t('World Break',                                'Seiken Tsukai no World Break',                                                          'translated'),\n\t\t('Four Cours After',                           'Four Cours After',                                                                      'translated'),\n\t\t('Upon the Wind and Melody of the Lute',       'Upon the Wind and Melody of the Lute',                                                  'translated'),\n\t\t('MonsterTamer',                               'Monster Tamer\u2019s Fluffy Master-Apprentice Life',                                         'translated'),\n\t\t('Magia',                                      'Revenge Magia of the Magic Breaker',                                                    'translated'),\n\t\t('Low-Life',                                   'Seishun Buta Yarou',                                                                    'translated'),\n\t\t('Hundred',                                    'Hundred',                                                                               'translated'),\n\t\t('ElfWife',                                    'I, a Demon Lord, Took a Slave Elf as my Wife, but how do I Love Her?',                  'translated'),\n\t\t('StarrySky',                                  'I Hold Your Voice Alone, Under The Starry Sky',                                         'translated'),\n\t\t('Maou-ppoi',                                  'Maou-ppoi no!',                                                                         'translated'),\n\t\t('KimiSen',                                    'Kimi to Boku no Saigo no Senjo, Aruiha Sekai ga Hajimaru Seisen',                       'translated'),\n\t\t('IseCaf\u00e9',                                    'Have a Coffee After School, In Another World\\'s Caf\u00e9',                                  'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Using My God Skill \u201cBreathing\u201d to Level Up, I Will Challenge the Dungeon of the Gods',  'Using My God Skill \"Breathing\" to Level Up, I Will Challenge the Dungeon of the Gods',      'translated'),\n\t\t('\tThe Strongest Mage\u2019s Retirement Plan',                                                'Saikyou Mahoushi no Inton Keikaku',                                                         'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-09T05:18:00.756844"
 ],
 "Mousou Haven": [
  "def extractMousouHaven(item):\n\t\"\"\"\n\t# 'Mousou Haven'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mtrizkan": [
  "\ndef extractMtrizkanBlogspotCom(item):\n\t'''\n\tParser for 'mtrizkan.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:36:51.212040"
 ],
 "Much Ado About Bluebottles": [
  "\ndef extractMuchadoaboutbluebottlesBlogspotCom(item):\n\t'''\n\tParser for 'muchadoaboutbluebottles.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:59.989017"
 ],
 "Mud and Iron": [
  "\ndef extractMudandironWordpressCom(item):\n\t'''\n\tParser for 'mudandiron.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:26.878752"
 ],
 "My Brain's Art": [
  "def extractMyBrainsArt(item):\n\t\"\"\"\n\t\"My Brain's Art\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Man Chao Huan', 'Man Chao Huan',                 'translated'),\n\t\t('WYGP',          'What\u2019s Your Gender, Princess?', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-03-30T22:43:35.444445"
 ],
 "My First Time Translating": [
  "def extractMyFirstTimeTranslating(item):\n\t\"\"\"\n\t'My First Time Translating'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "My Purple World": [
  "def extractMyPurpleWorld(item):\n\t\"\"\"\n\t# 'My Purple World'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "My Stupid Journal": [
  "\ndef extractWwwDaisytannenbaumCom(item):\n\t'''\n\tParser for 'www.daisytannenbaum.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-17T17:55:42.566742"
 ],
 "My Swallowtails": [
  "def extractMyswallowtailsWordpressCom(item):\n\t'''\n\tParser for 'myswallowtails.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Rebirth of High Female Entropy',       'Rebirth of High Female Entropy',                                         'translated'),\n\t\t('rebirth',                              'Rebirth of High Female Entropy',                                         'translated'),\n\t\t('Frosty Prince',                        'Frosty Prince Boils Over his Imperial Concubine:Generals Di Daughter',   'translated'),\n\t]\n\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-09-24T10:56:19.305105"
 ],
 "My Translations": [
  "def extractMyTranslations(item):\n\t\"\"\"\n\tParser for 'My Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "My World": [
  "def extractTheotherme123BlogspotCom(item):\n\t'''\n\tParser for 'theotherme123.blogspot.com'\n\t'''\n\n\tif 'Bahasa Indonesia' in item['title']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Heavenly Master Chapter ',  'Heavenly Master',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-01-05T08:17:53.987324"
 ],
 "My burrito will keep me warm": [
  "def extractAijiishibashiTumblrCom(item):\n\t'''\n\tParser for 'aijiishibashi.tumblr.com'\n\t'''\n\t\n\tbad = [\n\t\t\t'ask',\n\t\t]\n\t\n\tif any([tmp in item['tags'] for tmp in bad]):\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T10:46:26.014694"
 ],
 "My solitary refuge": [
  "\ndef extractMochadelighttranslationWordpressCom(item):\n\t'''\n\tParser for 'mochadelighttranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-27T07:40:44.953372"
 ],
 "MyEngTranslation": [
  "def extractMyEngTranslation(item):\n\t\"\"\"\n\tMyEngTranslation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\n\t\n\ttagmap = [\n\t\t('Don\\'t Read this Novel',       'Don\\'t Read this Novel',                      'translated'),\n\t\t('Gantung',                      'Gantung',                                     'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] != ['Uncategorized']:\n\t\treturn False\n\n\t\n\tif 'sasar' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Sasar', vol, chp, frag=frag, postfix=postfix)\n\t\n\t# Only assume a release if the title is entirely numeric\n\ttry:\n\t\tint(item['title'])\n\t\treturn buildReleaseMessageWithType(item, 'Gantung', vol, chp, frag=frag, postfix=postfix)\n\texcept ValueError:\n\t\tpass\n\t\t\n\t\n\treturn False",
  "2019-01-20T09:30:55.481027"
 ],
 "Myoniyoni Translations": [
  "def extractMyoniyoniTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('Prince of the Octagon',          'Prince of the Octagon',          'translated'),\n\t\t('Beautiful Top Star',             'Beautiful Top Star',             'translated'),\n\t\t('Swordmaster Healer',             'Swordmaster Healer',             'translated'),\n\t\t('Valhalla Saga',                  'Valhalla Saga',                  'translated'),\n\t\t('Top Management',                 'Top Management',                 'translated'),\n\t\t('The King of the Battlefield',    'The King of the Battlefield',    'translated'),\n\t\t('Sovereign of Judgement',         'Sovereign of Judgement',         'translated'),\n\t\t('Taming Master',                  'Taming Master',                  'translated'),\n\t\t(\"God's Song\",                     \"God's Song\",                     'translated'),\n\t\t('Life Mission',                   'Life Mission',                   'translated'),\n\t\t('Demon King & Hero',              'Demon King & Hero',              'translated'),\n\t\t('Sovereign of Judgment',          'Sovereign of Judgment',          'translated'),\n\t\t('God of Tennis',                  'God of Tennis',                  'translated'),\n\t\t('Kill the Hero',                  'Kill the Hero',                  'translated'),\n\t\t('Grand Slam',                     'Grand Slam',                     'translated'),\n\t\t('The Overlord of Blood and Iron', 'The Overlord of Blood and Iron', 'translated'),\n\t\t('Spirit Sword',                   'Spirit Sword',                   'translated'),\n\t\t('The Legendary Engie',            'The Legendary Engie',            'translated'),\n\t\t('Suspicious Manager Moon',        'Suspicious Manager Moon',        'translated'),\n\t\t('Absolute on the Mound',          'Absolute on the Mound',          'translated'),\n\t\t('I Became the Hero\\'s Bride',     'I Became the Hero\\'s Bride',     'translated'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-04-14T00:06:49.344529"
 ],
 "Mysterious Ways: A Divine Comedy": [
  "\ndef extractAlicrowCom(item):\n\t'''\n\tParser for 'alicrow.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:20.925437"
 ],
 "Mystery Rabbit Translations": [
  "\ndef extractMysteryRabbitTranslations(item):\n\t'''\n\tParser for 'Mystery Rabbit Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:15:52.416469"
 ],
 "Mystic Tales": [
  "def extractMysticTales(item):\n\t\"\"\"\n\tParser for 'Mystic Tales'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mystique Translations": [
  "def extractMystiqueTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mythical Pagoda": [
  "def extractMythicalPagoda(item):\n\t\"\"\"\n\t# 'Mythical Pagoda'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Mythoroid": [
  "\ndef extractMythoroidBlogspotCom(item):\n\t'''\n\tParser for 'mythoroid.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-20T06:48:49.357649"
 ],
 "Mythoroid Translations": [
  "def extractMythoroidtranslationsBlogspotCom(item):\n\t'''\n\tParser for 'mythoroidtranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Nobunaga Cheat',       'Oda Nobunaga Toyuu Nazo no Shokugyou ga Mahou Kenshi yori Cheat datta node, Oukoku wo Tsukuru Koto ni Shimashita',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-23T07:47:45.871298"
 ],
 "N00b Translations": [
  "def extractN00bTranslations(item):\n\t\"\"\"\n\t# 'N00b Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "NEET Translations": [
  "def extractNeetTranslations(item):\n\t\"\"\"\n\t# NEET Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Marginal Operation' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Marginal Operation', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "NEETO 2!": [
  "def extractIsogashiineetoWordpressCom(item):\n\t'''\n\tParser for 'isogashiineeto.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('NEET Hello Work',       'NEET dakedo Hello Work ni Ittara Isekai ni Tsuretekareta',                      'translated'),\n\t\t('Dark Magician Hero',    'Dark Magician as a Hero',                                                       'translated'),\n\t\t('Hatena\u2606Illusion',      'Hatena\u2606Illusion',                                                               'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-31T04:01:39.668192"
 ],
 "NOT Daily Translations": [
  "def extractNotDailyTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Zombie Emperor' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Bloodshot One-Eyed Zombie Emperor', vol, chp, frag=frag, postfix=postfix)\n\tif \"Stealing Hero's Lovers\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Stealing Hero's Lovers\", vol, chp, frag=frag, postfix=postfix)\n\tif 'Nidome no Yuusha' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Nidome no Yuusha wa Fukushuu no Michi wo Warai Ayumu. ~Maou yo, Sekai no Hanbun wo Yaru Kara Ore to Fukushuu wo Shiyou~', vol, chp,\n\t\t    frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "NTRHolic": [
  "def extractNTRHolic(item):\n\t\"\"\"\n\t# 'NTRHolic'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nadenadeshitai": [
  "def extractNadenadeshitai(item):\n\t\"\"\"\n\tNadenadeshitai\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Command Chapter '):\n\t\treturn buildReleaseMessageWithType(item, 'Command Sousa Skill de, Isekai no Subete wo Kage kara Shihaishitemita', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Naeda Translations": [
  "def extractNaedatranslationsHomeBlog(item):\n\t'''\n\tParser for 'naedatranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TBAFIAHM',       'To Be a Heartthrob in a Horror Movie',                      'translated'),\n\t\t('TBAHIAHM',       'To Be a Heartthrob in a Horror Movie',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-09T05:19:20.480827"
 ],
 "Nah Just Machine translation": [
  "\ndef extractMachinetranslationdotblogWordpressCom(item):\n\t'''\n\tParser for 'machinetranslationdotblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-14T03:20:17.379725"
 ],
 "Naked Singularity Trans": [
  "def extractNakedsingularitytransWordpressCom(item):\n\t'''\n\tParser for 'nakedsingularitytrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Alice Tale',                            'Nekama Shiyou to Omottara, Isekai Tensei Shite Onna ni Natta n da ga!',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-22T04:58:05.637647"
 ],
 "Nakimushi": [
  "def extractNakimushi(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Teasers' in item['tags']:\n\t\treturn None\n\t\t\n\tif 'Renai Kakumei Onii-chan' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I, am Playing the Role of the Older Brother in Heart-throb Love Revolution.', vol, chp, frag=frag, postfix=postfix)\n\tif 'Takamura-kun is Cursed.' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Takamura-kun is Cursed', vol, chp, frag=frag, postfix=postfix)\n\tif 'Escape Galge Protagonist' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'As a Capturable Character I Want to Escape from Galge Protagonist!', vol, chp, frag=frag, postfix=postfix)\n\tif 'Role of (Villain/Heroine)' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I Play the Role of (Villain/Heroine) in a Japanese-style Otome Game', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-04-07T03:54:33.312288"
 ],
 "Nameless Translation": [
  "def extractNop(dummy_item):\n\t\"\"\"\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nanashi Translations": [
  "def extractNanashitranslationsWordpressCom(item):\n\t'''\n\tParser for 'nanashitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Miniature Medical Goddess',       'Miniature Medical Goddess',                      'translated'),\n\t\t('The Wolf Lord\\'s Lady',           'The Wolf Lord\\'s Lady',                          'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:19:42.503420"
 ],
 "Nanjamora": [
  "def extractNanjamora(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Endless Dantian' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Endless Dantian', vol, chp, frag=frag, postfix=postfix)\n\tif 'Infinite Temptation' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Infinite Temptation', vol, chp, frag=frag, postfix=postfix)\n\tif 'wushang jinshia' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Wu Shang Jin Shia', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nanming": [
  "def extractNanmingWordpressCom(item):\n\t'''\n\tParser for 'nanming.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Liu Yao',       'Liu Yao: The Revitalization of Fuyao Sect',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T06:48:44.750862"
 ],
 "NanoDesu Light Novel Translations": [
  "def extractNanoDesuLightNovelTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Ore to Kawazu-san no Isekai Hourouki' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ore to Kawazu-san no Isekai Hourouki', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nanodesu": [
  "def extractNanodesu(item):\n\t\"\"\"\n\tParser for 'Nanodesu'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nanowave Translations": [
  "def extractNanowaveTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\ttitletmp = item['title'].replace(\"'High Speed! 2:\", '')\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(titletmp)\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'high speed! 2 translation' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'High Speed!', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "National NEET": [
  "def extractNationalNEET(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Natsu TL": [
  "def extractNatsuTl(item):\n\t\"\"\"\n\t# Natsu TL\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Jikuu' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Jikuu Mahou de Isekai to Chikyuu wo ittarikitari', vol, chp, frag=frag, postfix=postfix)\n\tif 'Magi Craft Meister' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Magi Craft Meister', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nature's Kingdom ": [
  "\ndef extractSpiritmonserialWordpressCom(item):\n\t'''\n\tParser for 'spiritmonserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:19.244923"
 ],
 "Navi Translation": [
  "\ndef extractNavitranslationWordpressCom(item):\n\t'''\n\tParser for 'navitranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-23T05:57:04.673023"
 ],
 "NeVMiku Translations": [
  "def extractNevmikutranslationsWordpressCom(item):\n\t'''\n\tParser for 'nevmikutranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Tensei Oujo',       'Tensei Oujo wa Kyou mo Hata o Tatakioru',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-22T06:28:17.703542"
 ],
 "Nega Translations": [
  "def extractNegaTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = {\n\t\t'Glutton Berserker'                : 'Glutton Berserker',\n\t\t'Kaette Kita Motoyuusha'           : 'Kaette Kita Motoyuusha',\n\t\t'Takami no Kago'                   : 'Takami no Kago',\n\t\t'Gacha Girl Corps'                 : 'Gacha Girl Corps',\n\t\t'Tanpa kategori'                   : 'Takami no Kago',\n\t\t'The Story of Hero Among Heroes'   : 'The Story of Hero Among Heroes ~The Founding Chronicles of Arestia',\n\t\t'Sono Mono, Nochi Ni'              : 'Sono Mono, Nochi Ni',\n\t\t'Arifureta'                        : 'Arifureta',\n\t\t'One-eyed female General'          : 'One-eyed Female General and the Harem',\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\t\t\t\n\t\t\t\n\ttitlemap = [\n\t\t('Takami no Kago ch',           'Takami no Kago',        'translated'),\n\t\t('Gacha Girl Corps',            'Gacha Girl Corps',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\t\n\t\t\t\n\treturn False",
  "2018-10-16T03:40:50.895231"
 ],
 "Negative Inserts": [
  "def extractNegativeInserts(item):\n\t\"\"\"\n\tParser for 'Negative Inserts'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nekkochi": [
  "\ndef extractNekocchiblogWordpressCom(item):\n\t'''\n\tParser for 'nekocchiblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:22.763001"
 ],
 "Neko Seirei": [
  "def extractWwwNekoseireiCom(item):\n\t'''\n\tParser for 'www.nekoseirei.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Godly Alchemist',       'Godly Alchemist',                      'translated'),\n\t\t('Kein no Zenkou',        'Kein no Zenkou',                       'translated'),\n\t\t('God of Music',          'God of Music',                         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-18T05:57:14.315271"
 ],
 "Neko Spark": [
  "\ndef extractNekosparkWordpressCom(item):\n\t'''\n\tParser for 'nekospark.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-21T16:02:49.349724"
 ],
 "Nekomori": [
  "\ndef extractNekomoriblogWordpressCom(item):\n\t'''\n\tParser for 'nekomoriblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:38.033337"
 ],
 "Nekoyashiki": [
  "def extractNekoyashiki(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'rakudai kishi no eiyuutan' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Rakudai Kishi no Eiyuutan', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ore no Pet was Seijo-sama' in item['tags'] or 'Ore no Pet wa Seijo-sama' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ore no Pet was Seijo-sama', vol, chp, frag=frag, postfix=postfix)\n\tif 'M-chan wars' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'M-chan Wars: Rise and Fall of the Cat Tyrant', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Etranger of the Sky' in item['tags'] or 'Tenkyuu no Etranger' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Spear of Thunder \u2013 Etranger of the Sky', vol, chp, frag=frag, postfix=postfix)\n\tif 'Yamato Nadeshiko' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Yamato Nadeshiko, Koibana no Gotoku', vol, chp, frag=frag, postfix=postfix)\n\tif 'Youhei Monogatari' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Youhei Monogatari ~Junsuinaru Hangyakusha (Rebellion)~', vol, chp, frag=frag, postfix=postfix)\n\tif 'Qualidea Code' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Qualidea Code', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Brander Female Fencer' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Brander Female Fencer', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Elf is a Freeloader' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Elf is a Freeloader', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Neo DIR": [
  "def extractNeoDir(item):\n\t\"\"\"\n\tParser for 'Neo DIR'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Wicked Soldier King' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Wicked Soldier King', vol, chp, frag=frag, postfix=postfix)\n\tif 'Very Pure Very Vague' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Very Pure Very Vague', vol, chp, frag=frag, postfix=postfix)\n\tif 'Very pure very ambiguous' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Very Pure and Ambiguous: The Prequel', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-03-25T10:09:44.307426"
 ],
 "Neo Lux Blog": [
  "\ndef extractNeoluxblogWordpressCom(item):\n\t'''\n\tParser for 'neoluxblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:31.156945"
 ],
 "Neo Translations": [
  "def extractNeoTranslations(item):\n\t\"\"\"\n\t# Neo Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Man Picked up by the Gods'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'The Man Picked up by the Gods', vol, chp, frag=frag, postfix=postfix)\n\tif 'I came back but the world is still a fantasy' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kaettekite mo Fantasy!?', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ashes and Kingdoms' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ashes and Kingdoms', vol, chp, frag=frag, postfix=postfix)\n\tif 'Goblin Kingdom' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Goblin no Oukoku', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nepustation": [
  "def extractNepustation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Cheat Majutsu' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Cheat Majutsu De Unmei Wo Nejifuseru', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Netoru C&P-MTL": [
  "def extractNetorutranslationsWordpressCom(item):\n\t'''\n\tParser for 'netorutranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('pilgrimage',       'Netorare Pilgrimage of the Saint',                                    'translated'),\n\t\t('production',       'Perfect & Virtuous Girlfriend\u2019s NTR Production',                      'translated'),\n\t\t('Alicia',           'NTR Fantasy \u2013 The Empire\u2019s Saint Alicia \u2013',                           'translated'),\n\t\t('Pleasant',         'Omae no neechan no ma\u3007Ko kimochiyo sugi.',                           'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-12T02:49:16.018831"
 ],
 "New Tales of the Hotel St. Crispian": [
  "\ndef extractStcrispianBlogspotCom(item):\n\t'''\n\tParser for 'stcrispian.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:33.322736"
 ],
 "New Valenar": [
  "\ndef extractNewvalenarWordpressCom(item):\n\t'''\n\tParser for 'newvalenar.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:20.095398"
 ],
 "Newbie Translation": [
  "def extractNewbietranslation0WordpressCom(item):\n\t'''\n\tParser for 'newbietranslation0.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('HMSP',       'Hidden Marriage Sweet Pampering: The Conglomerate\u2019s Little Wife',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-02T04:51:38.605783"
 ],
 "Newbie Translators": [
  "def extractNewbietranslatorsWordpressCom(item):\n\t'''\n\tParser for 'newbietranslators.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Monster Factory',       'Monster Factory',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-22T06:17:02.468256"
 ],
 "News from the Earth View": [
  "\ndef extractEarthviewloungeWordpressCom(item):\n\t'''\n\tParser for 'earthviewlounge.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:37.237063"
 ],
 "Nex Serus": [
  "def extractNexSerus(item):\n\t\"\"\"\n\tNex Serus\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Next level for the PLOT": [
  "def extractNextlevelforthePLOT(item):\n\t\"\"\"\n\t'Next level for the PLOT'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp is not None or vol is not None or frag is not None) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'scan-trad' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Ore Ga Heroine',       'Ore ga Heroine wo Tasukesugite Sekai ga Little Mushiroku',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\ttitlemap = [\n\t\t('For my daughter, I might defeat even the archenemy Chapter',  'For my daughter, I might defeat even the archenemy',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-05-05T09:16:08.630645"
 ],
 "Nieracol Translations": [
  "def extractNieracolTranslations(item):\n\t\"\"\"\n\t'Nieracol Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"The Sly Emperor's Wild Beast-Tamer Empress\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"The Sly Emperor's Wild Beast-Tamer Empress\", vol, chp, frag=frag, postfix=postfix)\n\tif 'World of Hidden Phoenixes' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'World of Hidden Phoenixes', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Night-Blooming Cereus": [
  "\ndef extractNightbloomincereusWordpressCom(item):\n\t'''\n\tParser for 'nightbloomincereus.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-23T05:57:08.641506"
 ],
 "NightFall Translations": [
  "def extractNightFallTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nightbreeze Translations": [
  "def extractNightbreeze(item):\n\t\"\"\"\n\t# Nightbreeze Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\treleases = ['Transcending The Nine Heavens', 'Stellar Transformation', 'Stellar Transformations']\n\tfor release in releases:\n\t\tif release in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, release, vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Niiselin": [
  "def extractNiiselin(item):\n\t\"\"\"\n\tParser for 'Niiselin'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "NinHamTL": [
  "def extractNinhamtlWordpressCom(item):\n\t'''\n\tParser for 'ninhamtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('UOWTPY',       'Ultraman \u2013 Only Want To Protect You',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-20T07:32:35.882946"
 ],
 "Nine Dream Domain": [
  "\ndef extractNinedreamWordpressCom(item):\n\t'''\n\tParser for 'ninedream.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:57:02.348262"
 ],
 "NinjaNUF": [
  "def extractNinjaNUF(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ninth Charmolypi Translation": [
  "def extractNinthCharmolypiTranslation(item):\n\t\"\"\"\n\t'Ninth Charmolypi Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "NippleLess": [
  "\ndef extractNipplelessNl(item):\n\t'''\n\tParser for 'nippleless.nl'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-20T06:48:44.106577"
 ],
 "No Man an Island": [
  "\ndef extractNomananislandWordpressCom(item):\n\t'''\n\tParser for 'nomananisland.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:25.663418"
 ],
 "No Name Translation": [
  "\ndef extractNonametranslationTumblrCom(item):\n\t'''\n\tParser for 'nonametranslation.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-07T09:05:18.449591"
 ],
 "No Name Translations": [
  "def extractNoNameTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "No One Loves You More Than Yourself": [
  "def extractNolymtysWordpressCom(item):\n\t'''\n\tParser for 'nolymtys.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Immoral Holidays',       'Immoral Holidays',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-30T05:34:52.717082"
 ],
 "No Way, Josei!": [
  "\ndef extractNowayjoseiWordpressCom(item):\n\t'''\n\tParser for 'nowayjosei.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-27T12:44:23.180188"
 ],
 "Noblesse Oblige Translations": [
  "def extractNotransWordpressCom(item):\n\t'''\n\tParser for 'notrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Knight\\'s & Magic (LN)',                                   'Knight\\'s & Magic (LN)',                                                  'translated'),\n\t\t('Roku de Nashi Majutsu Koushi to Kinki Kyouten (LN)',       'Roku de Nashi Majutsu Koushi to Kinki Kyouten (LN)',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-15T04:46:11.344534"
 ],
 "Nobunaga\u2019s Imouto is My Wife": [
  "def extractLfnovelsCom(item):\n\t'''\n\tParser for 'lfnovels.com'\n\t'''\n\tif not 'English' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Dungeon Hallow',       'Dungeon Hallow',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T08:07:10.952403"
 ],
 "Nocta's Hermit Den": [
  "def extractHermitranslationBlogspotCom(item):\n\t'''\n\tParser for 'hermitranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif item['tags'] == [] and item['title'].startswith(\"Chapter \"):\n\t\t\treturn buildReleaseMessageWithType(item, \"My fianc\u00e9 is in love with my little sister\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\tif len(item['tags']) == 1 and item['tags'][0].lower().startswith(\"chapter \") and item['title'].startswith(\"Chapter \"):\n\t\t\treturn buildReleaseMessageWithType(item, \"My fianc\u00e9 is in love with my little sister\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T02:21:40.173631"
 ],
 "Nohohon Translation": [
  "def extractNohohon(item):\n\t\"\"\"\n\t# 'Nohohon Translation'\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Monster Musume Harem wo Tsukurou!' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Monster Musume Harem o Tsukurou!', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nono's Sanctuary": [
  "def extractNononosanctuaryWordpressCom(item):\n\t'''\n\tParser for 'nononosanctuary.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I Became the Demon Lord and my Territory is an Uninhabited Island',       'I Became the Demon Lord and my Territory is an Uninhabited Island',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:44:54.013276"
 ],
 "Nono's Sanctuary Translations": [
  "def extractNononosanctuaryXyz(item):\n\t'''\n\tParser for 'nononosanctuary.xyz'\n\t'''\n\t\n\tif 'News, Updates, ETC.' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('MaouMuji',                                                                           'I Became the Demon Lord and my Territory was an Uninhabited Island',                                'translated'),\n\t\t('I Became the Demon Lord and my Territory was an Uninhabited Island',                 'I Became the Demon Lord and my Territory was an Uninhabited Island',                                'translated'),\n\t\t('I Became the Demon Lord and my Territory was an Uninhabited Island (Nocturn)',       'I Became the Demon Lord and my Territory was an Uninhabited Island (Nocturn)',                      'translated'),\n\t\t('woof woof story',                                                                    'Woof Woof Story ~ I Told You I am a Rich Person\\'s Dog, Not Fenrir ~',                              'translated'),\n\t\t('Isekai ni Kita Mitai',                                                               'It seems I came to Another World, Now What Should I Do',                                            'translated'),\n\t\t('Isekai Mitai',                                                                       'It seems I came to Another World, Now What Should I Do',                                            'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\t\n\tif 'Nocturn' in item['title'] and not postfix:\n\t\tpostfix = \"Nocturn Version\"\n\t\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-18T05:36:48.316986"
 ],
 "Nontrans": [
  "\ndef extractNontransblogWordpressCom(item):\n\t'''\n\tParser for 'nontransblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-14T04:51:01.869111"
 ],
 "Noob Mtl": [
  "def extractNoobMtl(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nooblate": [
  "def extractNooblate(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Kujibiki Tokushou : Musou Harem Ken' in item['title'] or 'Kujibiku Tokushou : Musou Harem Ken' in item['title'] or 'Kujibiki Tokushou: Musou H\u0101remu ken' in item[\n\t    'title'] or 'Kujibiki Tokushou: Musou Harem Ken' in item['title'] or 'Kujibiji Tokushou : Musou Harem Ken' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Kujibiki Tokushou : Musou Harem Ken', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Noobstranslate": [
  "\ndef extractNoobstranslateBlogspotCom(item):\n\t'''\n\tParser for 'noobstranslate.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:54:10.457478"
 ],
 "Noodletown Translated": [
  "def extractNoodletownTranslated(item):\n\t\"\"\"\n\t# 'Noodletown Translated'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttitlemap = [\n\t\t('[HTK] ',                      'Hail The King',                   'translated'),\n\t\t('[AOTDD] ',                    'Ace of the Dragon Division',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-01-30T06:57:39.274399"
 ],
 "Noor Translations": [
  "def extractNoorcnWordpressCom(item):\n\t'''\n\tParser for 'noorcn.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Ming Dynasty\\'s Prodigal Son',       'The Ming Dynasty\\'s Prodigal Son',                      'translated'),\n\t\t('Terror Awakening',                       'Terror Awakening',                                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T15:12:31.148172"
 ],
 "Normal Panda": [
  "def extractNormalpandaCom(item):\n\t'''\n\tParser for 'normalpanda.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\ttitlemap = [\n\t\t('SFVSG CH.',                'School Flower versatile security guard',      'translated'),\n\t\t('PF Ch.',                   'Perfect Feast',                               'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-05-19T07:29:17.610860"
 ],
 "Northern Heart": [
  "\ndef extractWrittenfireCom(item):\n\t'''\n\tParser for 'writtenfire.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:23.765220"
 ],
 "Norva Blog": [
  "def extractNorvaBlog(item):\n\t\"\"\"\n\t'Norva Blog'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith(\"Episode \"):\n\t\treturn buildReleaseMessageWithType(item, 'Sairin Yuusha no Fukushuu Hanashi', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\treturn False",
  "2017-10-07T10:04:57.830782"
 ],
 "Nostalgia on 9th Avenue": [
  "def extractNostalgiaOn9ThAvenue(item):\n\t\"\"\"\n\tParser for 'Nostalgia on 9th Avenue'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Not About Logic": [
  "\ndef extractNotaboutlogicDreamwidthOrg(item):\n\t'''\n\tParser for 'notaboutlogic.dreamwidth.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:55.626370"
 ],
 "Not So Friendly Translations": [
  "\ndef extractNotsofriendlytranslationsWordpressCom(item):\n\t'''\n\tParser for 'notsofriendlytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-26T06:00:07.110981"
 ],
 "Not So Good Translator": [
  "\ndef extractNotsogoodtranslatorWordpressCom(item):\n\t'''\n\tParser for 'notsogoodtranslator.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-17T08:06:28.393358"
 ],
 "Notorious": [
  "\ndef extractNotoriousOnlineBlogspotCom(item):\n\t'''\n\tParser for 'notorious-online.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:35.575125"
 ],
 "Novel 361": [
  "def extractNovel361(item):\n\t\"\"\"\n\tParser for 'Novel 361'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\turlfrag = [\n\t\t# I can't fucking tell what this series is!\n\t\t# ('/sohrh-chapter',  'Jintetsu',     'translated'),\n\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-04-22T07:52:51.340719"
 ],
 "Novel 44": [
  "def extractNovel44BlogspotCom(item):\n\t'''\n\tParser for 'novel44.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Is my elixir due to brainwashing effect? I wander in a different world',          'I use semen in another world and live by relying on other\\'s power.',              'translated'),\n\t\t('Saikyou Juzoku Tensei',                                                           'Saikyou Juzoku Tensei',                                                            'translated'),\n\t\t('Isekai Majutsushi wa Mahou wo Tonaenai',                                          'Isekai Majutsushi wa Mahou wo Tonaenai',                                           'translated'),\n\t\t('Different world dungeon life',                                                    'Different World Dungeon Life',                                                     'translated'),\n\t\t('As The Spirit-Sama Says',                                                         'As The Spirit-Sama Says',                                                          'translated'),\n\t\t('I use semen in another world and live by relying on other\\'s power.',             'I Use Semen in Another World and Live by Relying on Other\\'s Power',               'translated'),\n\t\t('Flirting With Beast Girls! Doing Nothing but Copulation!',                        'Flirting With Beast Girls! Doing Nothing but Copulation!',                         'translated'),\n\t\t('Level Maker',                                                                     'Level Maker',                                                                      'translated'),\n\t\t('Fantasy world Oiliel',                                                            'Fantasy world Oiliel',                                                             'translated'),\n\t\t('Library of Heaven\u2019s Path',                                                        'Library of Heaven\u2019s Path',                                                         'translated'),\n\t\t('Isekai Cheat',                                                                    'Isekai Cheat',                                                                     'translated'),\n\t\t('Artifact planting space',                                                         'Artifact planting space',                                                          'translated'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\n\treturn False",
  "2018-02-07T07:31:29.483846"
 ],
 "Novel Affairs": [
  "def extractNovelAffairs(item):\n\t\"\"\"\n\tParser for 'Novel Affairs'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novel Convert": [
  "def extractNovelcvCom(item):\n\t'''\n\tParser for 'novelcv.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\t# Seems dead now\n\treturn None\n\n\ttagmap = [\n\t\t# ('Isekai Tensei - Kimi to no Saikai made Nagai koto Nagai koto',                          'Isekai Tensei - Kimi to no Saikai made Nagai koto Nagai koto',                                         'translated'),\n\t\t# ('Era of Disaster',                                                                       'Era of Disaster',                                                                                      'translated'),\n\t\t# ('I&#039;ve Led the Villain Astray, How Do I Fix It?',                                    'I\\'ve Led the Villain Astray, How Do I Fix It?',                                                       'translated'),\n\t\t# ('Succubus-san&#039;s Life in a Another World',                                           'Succubus-san\\'s Life in a Another World',                                                              'translated'),\n\t\t# ('Anonym & Switch, Obtaining Power to Retaliate',                                         'Anonym & Switch, Obtaining Power to Retaliate',                                                        'translated'),\n\t\t# ('Illusion',                                                                              'Illusion',                                                                                             'translated'),\n\t\t# ('Parameter remote controller',                                                           'Parameter remote controller',                                                                          'translated'),\n\t\t# ('Emperor\u2019s Domination',                                                                  'Emperor\\'s Domination',                                                                                'translated'),\n\t\t# ('King of Gods',                                                                          'King of Gods',                                                                                         'translated'),\n\t\t# ('Martial God Asura',                                                                     'Martial God Asura',                                                                                    'translated'),\n\t\t# ('Dragon-Marked War God',                                                                 'Dragon-Marked War God',                                                                                'translated'),\n\t\t# ('Hidden Marriage',                                                                       'Hidden Marriage',                                                                                      'translated'),\n\t\t\n\t\t\n\t\t# (\"Genius Doctor: Black Belly Miss\",                                                \"Genius Doctor: Black Belly Miss\",                                                'translated'),\n\t\t# (\"I HOPE I SHALL ARRIVE SOON\",                                                     \"I hope I shall arrive soon\",                                                     'translated'),\n\t\t# (\"Miracle Doctor, Abandoned Daughter: The Sly Emperor\u2019s Wild Beast-Tamer Empress\", \"Miracle Doctor, Abandoned Daughter: The Sly Emperor\u2019s Wild Beast-Tamer Empress\", 'translated'),\n\t\t# (\"Release that Witch\",                                                             \"Release that Witch\",                                                             'translated'),\n\t\t# (\"Royal Roader on My Own\",                                                         \"Royal Roader on My Own\",                                                         'translated'),\n\t\t# (\"Soaring of Galaxia\",                                                             \"Soaring of Galaxia\",                                                             'translated'),\n\t\t# (\"War Sovereign Soaring The Heavens\",                                              \"War Sovereign Soaring The Heavens\",                                              'translated'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-26T03:20:52.735711"
 ],
 "Novel Dream": [
  "\ndef extractNoveldreamWordpressCom(item):\n\t'''\n\tParser for 'noveldream.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-21T03:39:10.695563"
 ],
 "Novel Express": [
  "def extractNovelexpressWordpressCom(item):\n\t'''\n\tParser for 'novelexpress.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('RGG',       'Rebirth Of The General\\'s Granddaughter',            'translated'),\n\t\t('MBH',       'My Beastly Husband',                                 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T06:49:50.734552"
 ],
 "Novel Lovers": [
  "def extract3DmumnovelloversWordpressCom(item):\n\t'''\n\tParser for '3dmumnovellovers.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Dear Love',       'Dear Love',                      'translated'),\n\t\t('\u8150\u5973 Gaga',       '\u8150\u5973 Gaga',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-02T05:44:30.880285"
 ],
 "Novel Saga": [
  "def extractNovelSaga(item):\n\t\"\"\"\n\t'Novel Saga'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Dragon Martial Emperor' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Martial Emperor', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Six Immortals' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Six Immortals', vol, chp, frag=frag, postfix=postfix)\n\tif 'Genius Sword Immortal' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Genius Sword Immortal', vol, chp, frag=frag, postfix=postfix)\n\tif 'Martial God Space' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial God Space', vol, chp, frag=frag, postfix=postfix)\n\tif 'Otherworldly Evil Monarch' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Otherworldly Evil Monarch', vol, chp, frag=frag, postfix=postfix)\n\tif 'Reborn as a Divine Prodigal' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Reborn as a Divine Prodigal', vol, chp, frag=frag, postfix=postfix)\n\tif \"The Beast's Blood Boils\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"The Beast's Blood Boils\", vol, chp, frag=frag, postfix=postfix)\n\tif 'The Brilliant Era' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Brilliant Era', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ze Tian Ji' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ze Tian Ji', vol, chp, frag=frag, postfix=postfix)\n\tif 'Transcending The Nine Heavens' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Transcending The Nine Heavens', vol, chp, frag=frag, postfix=postfix)\n\tif 'Emperor' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Heavenly Monarch', vol, chp, frag=frag, postfix=postfix)\n\tif 'God of Destruction' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'God of Destruction', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False",
  "2017-03-10T09:33:02.783172"
 ],
 "Novel Sanctuary": [
  "def extractNovelSanctuary(item):\n\t\"\"\"\n\tParser for 'Novel Sanctuary'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novel Scout": [
  "def extractNvscblogWordpressCom(item):\n\t'''\n\tParser for 'nvscblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('[RFIAW]',                     'Real Farm in Another World',      'translated'),\n\t\t('Real Farm in Another World',  'Real Farm in Another World',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-05-04T05:41:09.283028"
 ],
 "Novel Square": [
  "def extractNovelSquare(item):\n\t\"\"\"\n\tParser for 'Novel Square'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novel Trans": [
  "def extractNovelTrans(item):\n\t\"\"\"\n\t# 'Novel Trans'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novel Translated Collection": [
  "\ndef extractWwwNoveltranslatedcollectionCom(item):\n\t'''\n\tParser for 'www.noveltranslatedcollection.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-19T10:10:26.128470"
 ],
 "Novel Universe": [
  "def extractWwwNoveluniverseCom(item):\n\t'''\n\tParser for 'www.noveluniverse.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\n\t\t(\"Banished Disciple\u2019s Counterattack - Chapter\",      \"Banished Disciple\u2019s Counterattack\",        \"translated\"), \n\t\t(\"Cultivation---Stand above the Heaven - Chapter\",   \"Cultivation---Stand above the Heaven\",     \"translated\"), \n\t\t(\"Immortal Asura - Chapter\",                         \"Immortal Asura\",                           \"translated\"), \n\t\t(\"Killing Gods - Chapter\",                           \"Killing Gods\",                             \"translated\"), \n\t\t(\"Magic Love Ring - Chapter\",                        \"Magic Love Ring\",                          \"translated\"), \n\t\t(\"Reincarnation of the Heaven - Chapter\",            \"Reincarnation of the Heaven\",              \"translated\"), \n\t\t(\"Supernatural Clairvoyant - Chapter\",               \"Supernatural Clairvoyant\",                 \"translated\"), \n\t\t(\"Supernatural Monetary System - Chapter\",           \"Supernatural Monetary System\",             \"translated\"), \n\t\t(\"The Secret of the Seal - Chapter\",                 \"The Secret of the Seal\",                   \"translated\"), \n\t\t(\"The Skyrider - Chapter\",                           \"The Skyrider\",                             \"translated\"), \n\t\t(\"The Supreme Dragon Emperor - Chapter\",             \"The Supreme Dragon Emperor\",               \"translated\"), \n\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-03T06:19:27.254000"
 ],
 "NovelCow": [
  "def extractNovelCow(item):\n\t\"\"\"\n\t# 'NovelCow'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novelful": [
  "\ndef extractNovelfulWordpressCom(item):\n\t'''\n\tParser for 'novelful.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:50:36.378193"
 ],
 "Novelisation": [
  "def extractNovelisation(item):\n\t\"\"\"\n\t# 'Novelisation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novellatranslation": [
  "\ndef extractNovellatranslationCom(item):\n\t'''\n\tParser for 'novellatranslation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-08T08:47:28.092286"
 ],
 "Novels Ground": [
  "def extractNovelsGround(item):\n\t\"\"\"\n\t# 'Novels Ground'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Legend of the Cultivation God' in item['tags'] or 'LOTCG' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Legend of the Cultivation God', vol, chp, frag=frag, postfix=postfix)\n\tif 'Miracle Throne' in item['tags'] or 'LOTCG' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Miracle Throne', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novels I Read": [
  "def extractThenovelsireadWordpressCom(item):\n\t'''\n\tParser for 'thenovelsiread.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('ROSP',      'Rebirth of spoiled crown princess',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-15T05:29:18.313361"
 ],
 "Novels Japan": [
  "def extractNovelsJapan(item):\n\t\"\"\"\n\t'Novels Japan'\n\t\"\"\"\n\tif item['title'].endswith(' (Sponsored)'):\n\t\titem['title'] = item['title'][:-1 * len(' (Sponsored)')]\n\tif item['title'].endswith(' and Announcement'):\n\t\titem['title'] = item['title'][:-1 * len(' and Announcement')]\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().endswith('loner dungeon'):\n\t\treturn buildReleaseMessageWithType(item, 'I who is a Loner, Using cheats adapts to the Dungeon', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().endswith('vending machine'):\n\t\treturn buildReleaseMessageWithType(item, 'I was Reborn as a Vending Machine, Wandering in the Dungeon', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().endswith('login bonus'):\n\t\treturn buildReleaseMessageWithType(item, 'Skill Up with Login Bonus', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().endswith('lv2 cheat') or item['title'].lower().endswith(\n\t    'ex-hero candidate\u2019s, who turned out to be a cheat from lv2, laid-back life in another world') or 'Lv2 Cheat' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Ex-Hero Candidate's, Who Turned Out To Be A Cheat From Lv2, Laid-back Life In Another World\", vol, chp, frag=frag, postfix=postfix)\n\tif 'Second Earth' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Second Earth', vol, chp, frag=frag, postfix=postfix)\n\tif 'Strongest Revolution' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Fierce Revolution ~ The Strongest Organism Which Can Kill the Devil and the Hero', vol, chp, frag=frag, postfix=postfix)\n\tif 'Loner Dungeon' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I who is a Loner, Using cheats adapts to the Dungeon', vol, chp, frag=frag, postfix=postfix)\n\tif 'Skill Up' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Skill Up with Login Bonus', vol, chp, frag=frag, postfix=postfix)\n\tif 'Isobe Isobee' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isobe Isobee', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ex-hero' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Ex-Hero Candidate's, Who Turned Out To Be A Cheat From Lv2, Laid-back Life In Another World\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novels Nao": [
  "def extractNovelsNao(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().strip().startswith('king shura, chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'King Shura', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().strip().startswith('devouring the heavens chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Devouring the Heavens', vol, chp, frag=frag, postfix=postfix)\n\tif 'Martial God Space' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial God Space', vol, chp, frag=frag, postfix=postfix)\n\tif 'Martial Peak' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial Peak', vol, chp, frag=frag, postfix=postfix)\n\tif 'Mythical Tyrant' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Mythical Tyrant', vol, chp, frag=frag, postfix=postfix)\n\tif 'Genius Sword Immortal' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Genius Sword Immortal', vol, chp, frag=frag, postfix=postfix)\n\tif 'King Shura' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'King Shura', vol, chp, frag=frag, postfix=postfix)\n\tif 'Juvenile Medical God' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Juvenile Medical God', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Six Immortals' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Six Immortals', vol, chp, frag=frag, postfix=postfix)\n\tif 'Devouring The Heavens' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Devouring The Heavens', vol, chp, frag=frag, postfix=postfix)\n\tif 'Dragon Martial Emperor' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Martial Emperor', vol, chp, frag=frag, postfix=postfix)\n\tif 'Three Marriages' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Three Marriages', vol, chp, frag=frag, postfix=postfix)\n\tif 'I Fell and Thus I Must Rise Again!' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I Fell and Thus I Must Rise Again!', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ascending the Heavens' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ascending the Heavens', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'The Unseeing Eyes' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Unseeing Eyes', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'The Gemstone Chronicles' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Gemstone Chronicles', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Apocalypse Now' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Apocalypse Now', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'God of Destruction' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'God of Destruction', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'The Song of Swords' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Song of Swords', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif \"Dragon's Soul\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Dragon's Soul\", vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novels Reborn": [
  "def extractNovelsReborn(item):\n\t\"\"\"\n\tParser for 'Novels Reborn'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novels Translation": [
  "def extractNovelsTranslation(item):\n\t\"\"\"\n\tNovels Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Womanizing Mage' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Womanizing Mage', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novels Travel": [
  "def extractNovelsTravel(item):\n\t\"\"\"\n\tParser for 'Novels Travel'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novels&Chill": [
  "def extractNovelsChill(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t# Dunno what 'FiLI' and 'TSM' are, but they seem to have been removed.\n\tif 'FiLI' in item['tags']:\n\t\treturn None\n\tif 'TSM' in item['tags']:\n\t\treturn None\n\t\t\n\n\ttagmap = [\n\t\t('Abandoned Empress',                                             'Phoenix Overlooking the World \u2013 Who Dares to Touch My Abandoned Empress',  \"translated\"),\n\t\t('DHM',                                                           'Dungeon+Harem+Master',                                              \"translated\"),\n\t\t('SULB',                                                          'Skill Up with Login Bonus',                                         \"translated\"),\n\t\t('Aoa',                                                           'Ace of Ace',                                                        \"translated\"),\n\t\t('Aoa',                                                           'Ace of Ace',                                                        \"translated\"),\n\t\t('EER',                                                           'Everyone Else is a Returnee',                                       \"translated\"),\n\t\t('Common Sense of a Duke\u2019s Daughter',                             'Common Sense of a Duke\u2019s Daughter',                                 \"translated\"),\n\t\t('Nozomanu Fushi No Boukensha',                                   'Nozomanu Fushi no Boukensha',                                       \"translated\"),\n\t\t('Everyone Else is a Returnee',                                   'Everyone Else is a Returnee',                                       \"translated\"),\n\t\t('TMoS',                                                          'The Master of Strength',                                            \"translated\"),\n\t\t('EoSP',                                                          'Emperor of Solo Play',                                              \"translated\"),\n\t\t('EIF',                                                           'Everlasting Immortal Firmament',                                    \"translated\"),\n\t\t('Atelier Tanaka',                                                'Atelier Tanaka',                                                    \"translated\"),\n\t\t('Emperor of Solo Play',                                          'Emperor of Solo Play',                                              \"translated\"),\n\t\t('ILBP',                                                          'I Leveled up from Being a Parasite, But I May Have Grown Too Much', \"translated\"),\n\t\t('I Leveled From Being a Parasite',                               'I Leveled up from Being a Parasite, But I May Have Grown Too Much', \"translated\"),\n\t\t('R8CM',                                                          'Revolution of the 8th Class Mage',                                  \"translated\"),\n\t\t('Revolution of the 8th Class Mage',                              'Revolution of the 8th Class Mage',                                  \"translated\"),\n\t\t('TWoA',                                                          'The Wizard of Arecenia',                                            \"translated\"),\n\t\t('The Mightiest Manager',                                         'The Mightiest Manager',                                             \"translated\"),\n\t\t('TMM',                                                           'The Mightiest Manager',                                             \"translated\"),\n\t\t('TTM',                                                           'The Mightiest Manager',                                             \"translated\"),\n\t\t('Have A Meal Before You Go',                                     'Have A Meal Before You Go',                                         \"translated\"),\n\t\t('SkuWLB',                                                        'Skill Up with Login Bonus',                                         \"translated\"),\n\t\t('Skill Up with Login Bonus',                                     'Skill Up with Login Bonus',                                         \"translated\"),\n\t\t('Ace of Ace',                                                    'Ace of Ace',                                                        \"translated\"),\n\t\t('Hello Heir',                                                    'Hello, Heir',                                                       \"translated\"),\n\t\t('Eat Then Leave',                                                'Eat Then Leave',                                                    \"translated\"),\n\t\t('The Reckless Trap Magician',                                    'The Reckless Trap Magician',                                        \"translated\"),\n\t\t('Beast Piercing The Heavens',                                    'Beast Piercing The Heavens',                                        \"translated\"),\n\t\t('Half-Tried Deity',                                              'Half-Tried Deity',                                                  \"translated\"),\n\t\t('Beloved Empress',                                               'Beloved Empress',                                                   \"translated\"),\n\t\t('Xian Wang Dotes On Wife',                                       'Xian Wang Dotes On Wife',                                           \"translated\"),\n\t\t('Portal of Wonderland',                                          'Portal of Wonderland',                                              \"translated\"),\n\t\t('Zombie Evolution',                                              'Zombie Evolution',                                                  \"translated\"),\n\t\t('Seirei Gensouki ~Konna Sekai de Deaeta Kimi ni~',               'Seirei Gensouki ~Konna Sekai de Deaeta Kimi ni~',                   \"translated\"),\n\t\t('The Favored Intelligent Concubine',                             'The Favored Intelligent Concubine',                                 \"translated\"),\n\t\t('Ore no Isekai Shimai ga Jichou Shinai!',                        'Ore no Isekai Shimai ga Jichou Shinai!',                            \"translated\"),\n\t\t('The Spear User that Couldn\u2019t Become the Hero \u300aProtagonist\u300b',  'The Spear User that Couldn\u2019t Become the Hero \u300aProtagonist\u300b',      \"translated\"),\n\t\t('Death is The Beginning',                                        'Death is The Beginning',                                            \"translated\"),\n\t\t('Refusing To Serve Me? Then Off With Your Head!',                'Refusing To Serve Me? Then Off With Your Head!',                    \"translated\"),\n\t\t('Your Majesty Please Calm Down',                                 'Your Majesty Please Calm Down',                                     \"translated\"),\n\t\t('The Homebody\\'s Lover',                                         'The Homebody\\'s Lover',                                             \"translated\"),\n\t\t('Fantasial Apocalypse',                                          'Fantasial Apocalypse',                                              \"oel\"),\n\t\t('Chaotic Emperor',                                               'Chaotic Emperor',                                                   \"oel\"),\n\t\t('CE',                                                            'Chaotic Emperor',                                                   \"oel\"),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Emperor of Solo Play Chapter ', 'Emperor of Solo Play',            'translated'),\n\t\t('EIF',                           'Everlasting Immortal Firmament',  'translated'),\n\t\t('TSM',                           'The Skill Maker',                 'translated'),\n\t\t('NFB',                           'Nozomanu Fushi No Boukensha',     'translated'),\n\t\t\n\t\t('Taming of Yandere',             'The Taming of the Yandere',       'translated'),\n\t\t('Taming of the Yandere',         'The Taming of the Yandere',       'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif 'Yandere' in item['title'] and 'Yandere' in titlecomponent:\n\t\t\tprint(titlecomponent.lower(), item['title'].lower(), titlecomponent.lower() in item['title'].lower())\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\treturn False",
  "2017-11-26T23:33:44.589512"
 ],
 "Novels' Landing": [
  "def extractNovelslandingCom(item):\n\t'''\n\tParser for 'novelslanding.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Raising a Fox Spirit in My Home',            'Raising a Fox Spirit in My Home',                           'translated'),\n\t\t('The Village Doctress',                       'The Village Doctress',                                      'translated'),\n\t\t('A Rural life in the 70s',                    'A Rural life in the 70s',                                   'translated'),\n\t\t('Love You from the Depths of the Stars',      'Love You from the Depths of the Stars',                     'translated'),\n\t\t('Life With You',                              'Life With You',                                             'translated'),\n\t\t('Chronicles of the Kingdom of Heaven',        'Chronicles of the Kingdom of Heaven',                       'translated'),\n\t\t('Miracle-working Doctor',                     'Miracle-working Doctor',                                    'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:35:34.277950"
 ],
 "Novelsnow": [
  "def extractNovelsnowCom(item):\n\t'''\n\tParser for 'novelsnow.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('My Sister the Heroine and I the Villainess',       'My Sister the Heroine, and I the Villainess',                      'translated'),\n\t\t('My Sister the Heroine',                            'My Sister the Heroine, and I the Villainess',                      'translated'),\n\t\t('Sage Ruler',                                       'Sage Emperor',                                                     'translated'),   # Typo?\n\t\t('Sage Emperor',                                     'Sage Emperor',                                                     'translated'),\n\t\t('Super soldier',                                    'Super soldier',                                                    'translated'),\n\t\t('MG',                                               'Dragon Emperor, Martial God',                                      'translated'),\n\t\t('martial god',                                      'Dragon Emperor, Martial God',                                      'translated'),\n\t\t('Dragon Emperor',                                   'Dragon Emperor, Martial God',                                      'translated'),\n\t\t('Wang Ye Captures His Wife',                        'Wang Ye Captures His Wife',                                        'translated'),\n\t\t('Blacksmith',                                       'Expecting to Fall into Ruin, I Aim to Become a Blacksmith',        'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-01T05:06:14.302699"
 ],
 "Novelyy": [
  "def extractNovelyyCom(item):\n\t'''\n\tParser for 'novelyy.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\t# I think this is a TL pirate site?\n\n\ttagmap = [\n\t\t('Bringing the Nation&#039;s Husband Home',                                       'Bringing the Nation&#039;s Husband Home',                                         'translated'),\n\t\t('Infinite Competitive Dungeon Society',                                          'Infinite Competitive Dungeon Society',                                            'translated'),\n\t\t('Hachinan tte, Sore wa Nai Deshou!',                                             'Hachinan tte, Sore wa Nai Deshou!',                                               'translated'),\n\t\t('I\u2019m Back in the Other World?',                                                  'I\u2019m Back in the Other World?',                                                    'translated'),\n\t\t('Destroyer of Ice and Fire',                                                     'Destroyer of Ice and Fire',                                                       'translated'),\n\t\t('Martial God Conqueror',                                                         'Martial God Conqueror',                                                           'translated'),\n\t\t('Galactic Dark Net',                                                             'Galactic Dark Net',                                                               'translated'),\n\t\t('Legend of Ling Tian',                                                           'Legend of Ling Tian',                                                             'translated'),\n\t\t('Age of Cosmic Exploration',                                                     'Age of Cosmic Exploration',                                                       'translated'),\n\t\t('A Thought Through Eternity',                                                    'A Thought Through Eternity',                                                      'translated'),\n\t\t('The Magus Era',                                                                 'The Magus Era',                                                                   'translated'),\n\t\t('When A Mage Revolts',                                                           'When A Mage Revolts',                                                             'translated'),\n\t\t('23:11',                                                                         '23:11',                                                                           'translated'),\n\t\t('Omni-Magician',                                                                 'Omni-Magician',                                                                   'translated'),\n\t\t('Reincarnation Of The Strongest Sword God',                                      'Reincarnation Of The Strongest Sword God',                                        'translated'),\n\t\t('Although I am only level 1, but with this unique skill, I am the strongest',    'Although I am only level 1, but with this unique skill, I am the strongest',      'translated'),\n\t\t('Seijo no Kaifuku Mahou ga Dou Mitemo Ore no Rekkaban na Ken ni Tsuite',         'Seijo no Kaifuku Mahou ga Dou Mitemo Ore no Rekkaban na Ken ni Tsuite',           'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn None\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn None",
  "2017-11-12T08:47:00.519540"
 ],
 "NoviceTranslator": [
  "def extractNoviceTranslator(item):\n\t\"\"\"\n\t# 'NoviceTranslator'\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Martial God Space Chapter' in item['title'] or 'Martial God Space' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial God Space', vol, chp, frag=frag, postfix=postfix)\n\tif 'Dragon Martial Emperor Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial God Space', vol, chp, frag=frag, postfix=postfix)\n\tif 'Genius Sword Immortal' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Genius Sword Immortal', vol, chp, frag=frag, postfix=postfix)\n\tif 'God of Destruction' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'God of Destruction', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Novitranslation": [
  "def extractNovitranslation(item):\n\t\"\"\"\n\tNovels Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\n\ttagmap = {\n\t\t'The Evil Prince and his Precious Wife: The Sly Lady'        : 'The Evil Prince and his Precious Wife: The Sly Lady',\n\t\t'Soaring Towards the Heavens'                                : 'Soaring Towards the Heavens',\n\t\t'One Child Two Treasures: The Billionaire Chief\u2019s Good Wife' : 'One Child Two Treasures: The Billionaire Chief\u2019s Good Wife',\n\t\t'OCTT'                                                       : 'One Child Two Treasures: The Billionaire Chief\u2019s Good Wife',\n\t\t'The Demon God Pesters: The Ninth Lady of the Doctor'        : 'The Demon God Pesters: The Ninth Lady of the Doctor',\n\t\t'The Mighty Female Immortal'                                 : 'The Mighty Female Immortal',\n\t\t'The pygmalion is planting seeds'                            : 'The pygmalion is planting seeds',\n\t\t'The Sacred Burial Grounds'                                  : 'The Sacred Burial Grounds',\n\t\t'The Only Starlight'                                         : 'The Only Starlight',\n\t\t'captivated by you'                                          : 'Captivated by You',\n\t\t'My Dead Husband'                                            : 'My Dead Husband',\n\t\t'Evil-Natured Husband, Don\\'t Tease!'                        : 'Evil-Natured Husband, Don\\'t Tease!',\n\t\t'Scapegoat Sister Vs Second Prince'                          : 'Scapegoat Sister Vs Second Prince',\n\t\t'World of Xianxia'                                           : 'World of Xianxia',\n\t\t'I heard you are an alien'                                   : 'I heard you are an Alien',\n\t\t'Good Morning Miss Ghost'                                    : 'Good Morning Miss Ghost',\n\t\t'Princess Medical Doctor'                                    : 'Princess Medical Doctor',\n\t\t'PMD'                                                        : 'Princess Medical Doctor',\n\t\t'Scapegoat Sister'                                           : 'Scapegoat Sister',\n\t\t'the demon'                                                  : 'The Demon',\n\t\t'Gifting You With A City that Will Never Be Isolated'        : 'Gifting You With A City that Will Never Be Isolated',\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\t\t\n\t\t\n\treturn False",
  "2017-05-05T08:26:25.220835"
 ],
 "Novitranslator": [
  "def extractWwwNovitranslatorCom(item):\n\t'''\n\tParser for 'www.novitranslator.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I heard you are an alien',       'I heard you are an alien',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:53:10.502099"
 ],
 "Novus Treasures": [
  "def extractNovustreasuresBlogspotCom(item):\n\t'''\n\tParser for 'novustreasures.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Xuan Wang Above Di Daughter Runs Away',       'Xuan Wang Above Di Daughter Runs Away',                                      'translated'),\n\t\t('The Aloof Prince',                            'The Aloof Prince Pampers his Wild First Rate Consort!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-16T04:30:22.373002"
 ],
 "Nowhere & Nothing": [
  "def extractNowhereNothing(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Undying Cultivator' in item['tags']:\n\t\tif vol != None:\n\t\t\treturn\n\t\tif 'Arc 1: A Monster Inside' in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, 'The Undying Cultivator', 1, chp, frag=frag, postfix=postfix, tl_type='oel')\n\t\tif 'Arc 2: Courting Death' in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, 'The Undying Cultivator', 2, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif item['title'].startswith('While We Slept '):\n\t\tif vol != None:\n\t\t\treturn\n\t\treturn buildReleaseMessageWithType(item, 'Nowhere & Nothing', 1, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nowhere Island University": [
  "\ndef extractNowhereislanduniversityWordpressCom(item):\n\t'''\n\tParser for 'nowhereislanduniversity.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:36.220466"
 ],
 "Nuexin Novels": [
  "def extractNuexinNovelsBlogspotCom(item):\n\t'''\n\tParser for 'nuexin-novels.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Occupation: Body Double',        'Professional Body Double',                      'translated'),\n\t\t('Professional Body Double',       'Professional Body Double',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:27:13.055318"
 ],
 "Num Pao MTL": [
  "def extractNumpaomtlWordpressCom(item):\n\t'''\n\tParser for 'numpaomtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Lovable Package',       'Lovable Package',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-16T03:37:39.399398"
 ],
 "Nunnally's wonderland": [
  "def extractNunnallywonderlandHomeBlog(item):\n\t'''\n\tParser for 'nunnallywonderland.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('If you don\\'t fall in love, you will die',       'If you don\\'t fall in love, you will die',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-01T21:53:24.806860"
 ],
 "Nusantara Cafe": [
  "def extractNusantaraCafe(item):\n\t\"\"\"\n\tParser for 'Nusantara Cafe'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Nutty is Procrastinating": [
  "def extractNutty(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'A Mistaken Marriage Match' in item['tags'] and 'a generation of military counselor' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'A mistaken marriage match: A generation of military counselor', vol, chp, frag=frag, postfix=postfix)\n\tif 'A Mistaken Marriage Match' in item['tags'] and 'a-generation-of-military-counselor-' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'A mistaken marriage match: A generation of military counselor', vol, chp, frag=frag, postfix=postfix)\n\tif 'A Mistaken Marriage Match' in item['tags'] and 'Record of Washed Grievances Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'A mistaken marriage match: Record of washed grievances', vol, chp, frag=frag, postfix=postfix)\n\tif 'A Mistaken Marriage Match' in item['tags'] and 'record-of-washed-grievances' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'A mistaken marriage match: Record of washed grievances', vol, chp, frag=frag, postfix=postfix)\n\tif 'A Mistaken Marriage Match' in item['tags'] and 'the-general-only-fears-the-maidens-escape' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'A mistaken marriage match: The General Only Fears the Maiden\\'s Escape', vol, chp, frag=frag, postfix=postfix)\n\tif 'A Mistaken Marriage Match' in item['tags'] and '/the-general-only-fear-the-maidens-escape-chapter' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'A mistaken marriage match: The General Only Fears the Maiden\\'s Escape', vol, chp, frag=frag, postfix=postfix)\n\tif 'A Mistaken Marriage Match' in item['tags'] and '/destined-marriage-with-fragrance-chapter-' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'A mistaken marriage match: Destined Marriage With Fragrance Chapter', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\tif 'Destined Marriages With Fragrance Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Destined Marriage with Fragrance', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2018-05-02T04:41:45.363626"
 ],
 "Nyuimo Translations": [
  "\ndef extractDemonictofuWordpressCom(item):\n\t'''\n\tParser for 'demonictofu.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:46:28.643350"
 ],
 "O6asan's Web Site": [
  "def extractO6AsanSWebSite(item):\n\t\"\"\"\n\tParser for 'O6asan's Web Site'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn None",
  "2017-05-05T09:11:42.948451"
 ],
 "OH! Blog": [
  "def extractBlogOnehallyuCom(item):\n\t'''\n\tParser for 'blog.onehallyu.com'\n\t'''\n\n\treturn None",
  "2017-11-09T06:25:50.729905"
 ],
 "OK Translation": [
  "def extractOKTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Oyaji Kanojo' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Oyaji Kanojo', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "OOO Translations": [
  "def extractOOOTranslations(item):\n\t\"\"\"\n\t'OOO Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Noble Emblem',        'Noble Emblem',                       'translated'),\n\t\t('God Rank Hero',       'God Rank Hero',                      'translated'),\n\t\t('Dark Night Ranger',   'Dark Night Ranger',                  'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\treturn False",
  "2017-09-10T07:39:29.914488"
 ],
 "ORTA Translations": [
  "\ndef extractOrtatranslationsBlogspotCom(item):\n\t'''\n\tParser for 'ortatranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-08T23:55:05.462385"
 ],
 "OUTLIERS": [
  "\ndef extractOutlierswebserialBlogspotCom(item):\n\t'''\n\tParser for 'outlierswebserial.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:31.192393"
 ],
 "Obsessive Dreamer": [
  "def extractObsessiveDreamer(item):\n\t\"\"\"\n\tParser for 'Obsessive Dreamer'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('devil',     'Devil',                    'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-06-20T05:42:57.330325"
 ],
 "Oceanic Lantern": [
  "def extractOceaniclanternBlogspotCom(item):\n\t'''\n\tParser for 'oceaniclantern.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('tyfaoe',       'Thank You for Abandoning Our Engagement!',                      'translated'),\n\t\t('TSRTOW',       'The Struggle of Returning to The Other World',                  'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-14T03:56:45.104385"
 ],
 "Odd & Ends": [
  "\ndef extractOddnendsCom(item):\n\t'''\n\tParser for 'oddnends.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:19.600909"
 ],
 "Odd Squad Novels": [
  "def extractOddSquadNovels(item):\n\t\"\"\"\n\tOdd Squad Novels\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Odisea Final": [
  "def extractOdiseafinalBlogspotCom(item):\n\t'''\n\tParser for 'odiseafinal.blogspot.com'\n\t'''\n\n\treturn None",
  "2018-01-13T07:25:11.626566"
 ],
 "Ohanashimi": [
  "def extractOhanashimi(item):\n\t\"\"\"\n\t# Ohanashimi\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif ':' in item['title']:\n\t\tpostfix = item['title'].split(':', 1)[-1]\n\tif 'Seijo no Kaifuku Mahou' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Seijo no Kaifuku Mahou ga Dou Mitemo Ore no Rekkaban na Ken ni Tsuite', vol, chp, frag=frag, postfix=postfix)\n\tif 'Tate no Yuusha' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Rise of the Shield Hero', vol, chp, frag=frag, postfix=postfix)\n\tif 'No Fatigue' in item['tags'] or item['title'].lower().startswith('nf: '):\n\t\treturn buildReleaseMessageWithType(item, 'NO FATIGUE ~24 Jikan Tatakaeru Otoko no Tenseitan~', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Okami Yuu Translations": [
  "\ndef extractOkamiyuutranslationsWordpressCom(item):\n\t'''\n\tParser for 'okamiyuutranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-14T05:54:17.809720"
 ],
 "Olivia Helling": [
  "\ndef extractOliviahellingCom(item):\n\t'''\n\tParser for 'oliviahelling.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:32.163853"
 ],
 "Omega Harem": [
  "def extractOmegaHarem(item):\n\t\"\"\"\n\t# Omega Harem Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol):\n\t\treturn False\n\tif 'preview' in item['title']:\n\t\treturn False\n\t\t\n\tif  're-Translations rehost' in item['tags']:\n\t\titem['srcname'] = 'Re:Translations'\n\t\t \n\tif 'eliza chapter' in item['title'].lower() or 'elisa chapter' in item['title'].lower():\n\t\tif '\u2013' in item['title'] and not postfix:\n\t\t\tpostfix = item['title'].split('\u2013')[-1]\n\t\treturn buildReleaseMessageWithType(item, 'I Reincarnated as a Noble Girl Villainess, but why did it turn out this way', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\n\ttagmap = [\n\t\t('Kokugensou',       'Kokugensou wo Item Cheat de Ikinuku (LN)',                      'translated'),\n\t\t('GunOta',       'Gun-Ota ga Mahou Sekai ni Tensei Shitara, Gendai Heiki de Guntai Harem wo Tsukucchaimashita!?',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('NEET chapter ',                              'NEET receives a dating sim game leveling system',                                                              'translated'),\n\t\t('Higawari Teni Chapter',                      'Higawari Teni ~ Ore wa Arayuru Sekai de Musou Suru ~',                                                         'translated'),\n\t\t('Destruction Flag Noble Girl Villainess',     'Destruction Flag Otome',                                                                                       'translated'),\n\t\t('Destruction Flag Otome',                     'Destruction Flag Otome',                                                                                       'translated'),\n\t\t('Demon King Reincarnation',                   'I, the Demon King, have become a noble girl villainess? Hah, what a joke.',                                    'translated'),\n\t\t('Slave Girl \u2013',                               'Demotion Trip ~The Magic Girl Swordsman from the Hero\u2019s Party Stumbled into Another World and Became a Slave', 'translated'),\n\t\t('Flight of the Dragon, Dance of the Phoenix', 'Dragon Flies Phoenix Dances',                                                                                  'translated'),\n\t\t('Dragon Life',                                'Dragon Life',                                                                                                  'translated'),\n\t\t('World Teacher',                              'World Teacher - Isekaishiki Kyouiku Agent',                                                                    'translated'),\n\t\t('jashin sidestory',                           'Evil God Average \u2013 Side Story',                                                                                'translated'),\n\t\t('Jashin Average Side Story',                  'Evil God Average \u2013 Side Story',                                                                                'translated'),\n\t\t('Heibon',                                     'E? Heibon Desu yo??',                                                                                          'translated'),\n\t\t('Villainess Brother Reincarnation',           'Villainess Brother Reincarnation',                                                                             'translated'),\n\t\t('The Black Knight',                           'The Black Knight Who Was Stronger than Even the Hero',                                                         'translated'),\n\t\t('Different world gender change',              'It Seems That I\\'ve Slipped Into a Different World. Also, My Gender Has Changed.',                             'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-07-10T04:10:42.569776"
 ],
 "Omgitsaray Translations": [
  "def extractOmgitsaray(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('9HTM',               '9 Heavenly Thunder Manual',                                  'translated'),\n\t\t('undefeatable',       'Leveling Up And Becoming Undefeatable',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif 'chapter' in item['title'].lower() and (item['tags'] == ['Uncategorized', 'xianxia'] or item['tags'] == ['Uncategorized']):\n\t\treturn buildReleaseMessageWithType(item, '9 Heavenly Thunder Manual', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\treturn False",
  "2017-12-28T04:05:21.274848"
 ],
 "OmniCorporation": [
  "\ndef extractOmnicorporationWordpressCom(item):\n\t'''\n\tParser for 'omnicorporation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:56:23.657744"
 ],
 "One Man Army Translations": [
  "def extractOneManArmy(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'DBWG \u2013 Chapter' in item['title'] or 'Dragon-Blooded War God' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon-Blooded War God', vol, chp, frag=frag, postfix=postfix)\n\tif 'Warlock of the Magus World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Warlock of the Magus World', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "One Of Many": [
  "\ndef extractOneofmanydemonWordpressCom(item):\n\t'''\n\tParser for 'oneofmanydemon.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:56:22.248268"
 ],
 "One Second Spring": [
  "def extractOneSecondSpring(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Princess Who Cannot Marry' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Princess Who Cannot Marry', vol, chp, frag=frag, postfix=postfix)\n\tif 'Heavy Sweetness Ash-like Frost' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Heavy Sweetness Ash-like Frost', vol, chp, frag=frag, postfix=postfix)\n\tif 'Our Second Master' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Our Second Master', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "One-Translate": [
  "def extractOnetranslateWordpressCom(item):\n\t'''\n\tParser for 'onetranslate.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('ABDM',       'Api di Bukit Menoreh',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-08T03:56:14.542489"
 ],
 "Onee-chan just wants to rest": [
  "\ndef extractRestlessOneesanBlogspotCom(item):\n\t'''\n\tParser for 'restless-oneesan.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-16T11:45:15.871335"
 ],
 "Onii-chan's Corner": [
  "def extractOniichancornerWordpressCom(item):\n\t'''\n\tParser for 'oniichancorner.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Isekai Tensei Shodouki',       'Isekai Tensei Shodouki',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-29T06:18:58.105939"
 ],
 "Oniichan wa Shinpaidesu": [
  "\ndef extractOniichanshinpaiWordpressCom(item):\n\t'''\n\tParser for 'oniichanshinpai.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-14T04:51:31.621337"
 ],
 "OnionToOsananajimi": [
  "\ndef extractWillmakeyoucryHomeBlog(item):\n\t'''\n\tParser for 'willmakeyoucry.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-02T23:01:29.318233"
 ],
 "Open The Sky": [
  "def extractOpenTheSky(item):\n\t\"\"\"\n\tParser for 'Open The Sky'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('violet evergarden',       'violet evergarden',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn None",
  "2017-08-01T04:33:57.921040"
 ],
 "Ophelia's Fiction": [
  "\ndef extractOpheliasfictionWordpressCom(item):\n\t'''\n\tParser for 'opheliasfiction.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:43.556871"
 ],
 "Opini Saya": [
  "def extractOpinisaya(item):\n\t\"\"\"\n\t# 'Opinisaya.com'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "OppaTranslations": [
  "def extractOppaTranslations(item):\n\t\"\"\"\n\t'OppaTranslations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Main Character Hides His Strength' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Main Character Hides His Strength', vol, chp, frag=frag, postfix=postfix)\n\tif 'mchhs' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Main Character Hides His Strength', vol, chp, frag=frag, postfix=postfix)\n\tif 'Master Hunter K' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Master Hunter K', vol, chp, frag=frag, postfix=postfix)\n\tif 'Chemistry' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Chemistry', vol, chp, frag=frag, postfix=postfix)\n\tif 'Chemi' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Chemistry', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2018-04-16T07:00:36.981965"
 ],
 "Orange Translations": [
  "def extractOrangeTranslations(item):\n\t\"\"\"\n\t'Orange Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Teaser' in item['tags']:\n\t\treturn None\n\tif '1-Pg Stories' in item['tags']:\n\t\treturn None\n\tif 'Subtitles' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Buy One Get One Free',           '\uffe51 Trillion Wife, Buy One Get One Free',                      'translated'), \n\t\t('Trillion',                       '\uffe51 Trillion Wife, Buy One Get One Free',                      'translated'), \n\t\t('Millennium',                     'The Millennium After Dying Young',                             'translated'), \n\t\t('Great God, I\\'ll Support You!',  'Great God, I will Support You!',                               'translated'), \n\t\t('Great God',                      'Great God, I will Support You!',                               'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-23T04:25:49.952505"
 ],
 "Ore ga Heroine in English": [
  "def extractOregaHeroineinEnglish(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Oriental Translations": [
  "def extractOrientaltranslationsWordpressCom(item):\n\t'''\n\tParser for 'orientaltranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('She Died',       'She Died',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-14T02:34:52.480202"
 ],
 "Origin Novels": [
  "def extractOriginNovels(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif '\u2013' in item['title']:\n\t\tpostfix = item['title'].split('\u2013')[-1]\n\tif 'True Identity' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'True Identity', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Orinjido Scans": [
  "def extractOrinjidoScans(item):\n\t\"\"\"\n\t'Orinjido Scans'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Orizuru Translations": [
  "\ndef extractOrizurusiteWordpressCom(item):\n\t'''\n\tParser for 'orizurusite.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:30.018522"
 ],
 "Orlandri Translation Company": [
  "def extractOrlandritlWordpressCom(item):\n\t'''\n\tParser for 'orlandritl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('sukamoka',               'Sukamoka',                      'translated'),\n\t\t('sukasuka',               'Sukasuka',                      'translated'),\n\t\t('Sukasuka Vol. EX',       'Sukasuka',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:29:03.719272"
 ],
 "Orphic Phantasia": [
  "\ndef extractWwwOrphicphantasiaCom(item):\n\t'''\n\tParser for 'www.orphicphantasia.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:38.888872"
 ],
 "Osiris Translations": [
  "\ndef extractOsiristranslationsBlogspotCom(item):\n\t'''\n\tParser for 'osiristranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-15T15:07:21.614541"
 ],
 "Otaku Bu": [
  "def extractWwwOtakubuCom(item):\n\t'''\n\tParser for 'www.otakubu.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hyaku Ma No Omo',       'Hyaku Ma No Omo',                      'translated'),\n\t\t('Hyaku Ma No Aruji',     'Hyaku Ma No Aruji',                    'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T04:34:09.559380"
 ],
 "Otaku TLS": [
  "def extractOtakutlsBlogspotCom(item):\n\t'''\n\tParser for 'otakutls.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Blade And Sword God Soverigen',       'Blade And Sword God Soverigen',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-13T00:02:42.317100"
 ],
 "Otaku Translation": [
  "def extractOtakutlBlogspotCom(item):\n\t'''\n\tParser for 'otakutl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TRO',                     'The Rise of Otaku',                      'translated'),\n\t\t('the rise of otaku',       'The Rise of Otaku',                      'translated'),\n\t\t('Dark Blood Age',          'Dark Blood Age',                         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-18T05:51:20.985310"
 ],
 "Otome Revolution": [
  "def extractOtomeRevolution(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Otome ShiShi Za": [
  "def extractOtomeshishizaWordpressCom(item):\n\t'''\n\tParser for 'otomeshishiza.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif item['title'].startswith(\"Protected: \"):\n\t\treturn None\n\n\ttagmap = [\n\t\t('Love You 59 Seconds',                                            '[Online Gaming] Love You 59 Seconds',                             'translated'),\n\t\t('The Pregnant Woman Next Door How Are You Doing?',                'The Pregnant Woman Next Door, How Are You Doing?',                'translated'),\n\t\t('Ever Since I Take Home An Adonis Who Has Lost His Business',     'Ever Since I Take Home An Adonis Who Has Lost His Business',      'translated'),\n\t\t('The Love Story of A Passerby',                                   'The Love Story of A Passerby',                                    'translated'),\n\t\t('The Paternity Guard',                                            'The Paternity Guard',                                             'translated'),\n\t\t('Reincarnation of a Superstar',                                   'Reincarnation of a Superstar',                                    'translated'),\n\t\t('Friends With Benefits',                                          'Friends With Benefits',                                           'translated'),\n\t\t('YDXJ10',                                                         'Yandai Xie Jie No. 10',                                           'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-09-14T07:25:11.247360"
 ],
 "OtomeRuri": [
  "def extractOtomeruri(item):\n\t'''\n\tParser for 'OtomeRuri'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The World of the Pirate Consort',             'The World of the Pirate Consort',       'translated'),\n\t\t('Every Vicious Woman Needs a Loyal Man',       'Every Vicious Woman Needs a Loyal Man', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-06T05:04:37.237734"
 ],
 "Otsumi": [
  "def extractOtsumi(item):\n\t\"\"\"\n\t'Otsumi'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "OtterSpace Translation": [
  "def extractOtterspaceTranslation(item):\n\t\"\"\"\n\t# Otterspace Translation\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Elqueeness' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Spirit King Elqueeness', vol, chp, frag=frag)\n\tif '[Dark Mage]' in item['title'] or '[DarkMage]' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Dark Mage', vol, chp, frag=frag)\n\tif 'Dragon Maken War' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Maken War', vol, chp, frag=frag)\n\tif 'Legend of Legend' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Legend of Legend', vol, chp, frag=frag)\n\tif \"Seoul Station's Necromancer\" in item['title'] or \"Seoul Station's Necromancer\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Seoul Station's Necromancer\", vol, chp, frag=frag)\n\tif 'Dark Mage' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dark Mage', vol, chp, frag=frag)\n\tif 'Limitless Dream' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Limitless Dream', vol, chp, frag=frag)\n\tif 'Link the Orc' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Link the Orc', vol, chp, frag=frag)\n\tif 'KON' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'King of the Night', vol, chp, frag=frag)\n\tif 'EoSP' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Emperor of Solo Play', vol, chp, frag=frag)\n\tif 'Elqueeness' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Spirit King Elqueeness', vol, chp, frag=frag)\n\tif '[Dark Mage]' in item['title'] or '[DarkMage]' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Dark Mage', vol, chp, frag=frag)\n\tif 'Dragon Maken War' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Maken War', vol, chp, frag=frag)\n\tif 'Legend of Legend' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Legend of Legend', vol, chp, frag=frag)\n\tif \"Seoul Station's Necromancer\" in item['title'] or \"Seoul Station's Necromancer\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Seoul Station's Necromancer\", vol, chp, frag=frag)\n\tif 'Dark Mage' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dark Mage', vol, chp, frag=frag)\n\tif 'Elqueeness' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Spirit King Elqueeness', vol, chp, frag=frag)\n\tif '[Dark Mage]' in item['title'] or '[DarkMage]' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Dark Mage', vol, chp, frag=frag)\n\tif 'Dragon Maken War' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Maken War', vol, chp, frag=frag)\n\tif 'Legend of Legend' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Legend of Legend', vol, chp, frag=frag)\n\tif \"Seoul Station's Necromancer\" in item['title'] or \"Seoul Station's Necromancer\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Seoul Station's Necromancer\", vol, chp, frag=frag)\n\tif 'Dark Mage' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dark Mage', vol, chp, frag=frag)\n\treturn False",
  "2018-06-17T07:37:13.931766"
 ],
 "Outspan Foster": [
  "def extractOutspanFoster(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Chapter' in item['tags'] and 'ascension' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Ascension Chronicle', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Overlord Volume 10 where?": [
  "def extractOverlordvolume10BlogspotCom(item):\n\t'''\n\tParser for 'overlordvolume10.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif \"manga\" in item['title'].lower():\n\t\treturn None\n\n\tif \"Overlord\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Overlord\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2018-05-21T04:04:35.343777"
 ],
 "Own Translation": [
  "def extractOwntranslationWordpressCom(item):\n\t'''\n\tParser for 'owntranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Kanchigai Tensai',       'Kanchigai Tensai',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T03:00:40.945871"
 ],
 "Oxy Translations": [
  "\ndef extractOxytlWordpressCom(item):\n\t'''\n\tParser for 'oxytl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-09T04:25:38.211978"
 ],
 "OxyMoronic Translations": [
  "def extractOxymoronictranslationsWordpressCom(item):\n\t'''\n\tParser for 'oxymoronictranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Isekai Rakugo Ch',            'Isekai Rakugo',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-07T05:53:16.651074"
 ],
 "Oyasumi Reads": [
  "def extractOyasumiReads(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'ISEKAIJIN NO TEBIKISHO' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekaijin no Tebikisho', vol, chp, frag=frag, postfix=postfix)\n\tif 'OTOTSUKAI WA SHI TO ODORU' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ototsukai wa Shi to Odoru', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-03-10T09:34:14.529842"
 ],
 "Oysters, Pearls And Magic": [
  "\ndef extractJolantruWordpressCom(item):\n\t'''\n\tParser for 'jolantru.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:31.416890"
 ],
 "Oz's Corner": [
  "def extractFishsaysnoWordpressCom(item):\n\t'''\n\tParser for 'fishsaysno.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Reborn Otaku\\'s Code of Practice for the Apocalypse',       'The Reborn Otaku\\'s Code of Practice for the Apocalypse',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('sister of bl', 'I Swear my Brother\u2019s the Protagonist of a BL Manga',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-26T06:00:54.085853"
 ],
 "PBear Trans": [
  "\ndef extractPbeartransWordpressCom(item):\n\t'''\n\tParser for 'pbeartrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:44.149288"
 ],
 "PFC \u2013 Light Novel Translations": [
  "def extractPFCLightNovelTranslations(item):\n\t\"\"\"\n\t'PFC \u2013 Light Novel Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Qualidea Code: Itsuka Sekai wo Sukuu Tame ni',              'Itsuka Sekai wo Sukuu Tame ni -Qualidea Code-',               'translated'),\n\t\t('Qualidea Code: Doudemo ii Sekai Nante',                     'Doudemo ii Sekai Nante -Qualidea Code-',                      'translated'),\n\t\t('Qualidea Code: Doudemo ii Sekai Nante Vol. 2',              'Doudemo ii Sekai Nante -Qualidea Code-',                      'translated'),\n\t]\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-01-13T11:00:37.140109"
 ],
 "Pact Web Serial": [
  "def extractPactWebSerial(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Padam Gurun": [
  "def extractPadamtlWordpressCom(item):\n\t'''\n\tParser for 'padamtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PBD',                      'Peach Blossom Debt',                                                                        'translated'),\n\t\t('Peach Blossom Debt',       'Peach Blossom Debt',                                                                        'translated'),\n\t\t('APDSH',                    'There Will Always Be Protagonists With Delusions of Starting a Harem',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-27T05:28:30.696525"
 ],
 "Paichun Translations": [
  "def extractPaichunTranslations(item):\n\t\"\"\"\n\tPaichun Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\n\ttagmap = [\n\t\t('Ore ga Suki nano wa Imouto dakedo Imouto ja Nai',                                 'Ore ga Suki nano wa Imouto dakedo Imouto ja Nai',                                'translated'),\n\t\t('Kenshi o Mezashite Ny\u016bgaku Shitanoni Mah\u014d Tekisei 9999 Nandesukedo! ?',           'Kenshi o Mezashite Ny\u016bgaku Shitanoni Mah\u014d Tekisei 9999 Nandesukedo! ?',          'translated'),\n\t\t('Lottery Grand Prize: Musou Harem Rights',                                         'Lottery Grand Prize: Musou Harem Rights',                                        'translated'),\n\t\t('Manga wo Yomeru Ore ga Sekai Saikyou ~Yometachi to Sugosu Ki mama na Seikatsu~',  'Manga wo Yomeru Ore ga Sekai Saikyou ~Yometachi to Sugosu Ki mama na Seikatsu~', 'translated'),\n\t\t('Ore Dake Kaereru Kurasu Teni',                                                    'Ore Dake Kaereru Kurasu Teni',                                                   'translated'),\n\t\t('Itai no wa Iya nanode B\u014dgyo-Ryoku ni Kyokufuri Shitai to Omoimasu.',              'Itai no wa Iya nanode B\u014dgyo-Ryoku ni Kyokufuri Shitai to Omoimasu.',             'translated'),\n\t\t('Itai no wa Iya nanode B\u014dgyo-Ryoku ni Kyokufuri Shitai to Omoimasu.',              'Itai no wa Iya nanode B\u014dgyo-Ryoku ni Kyokufuri Shitai to Omoimasu.',             'translated'),\n\t\t('Kujibiki Tokushou: Musou H\u0101remu ken',                                             'Kujibiki Tokushou: Musou H\u0101remu ken',                                            'translated'),\n\t\t('Buta K\u014dshaku ni Tensei Shitakara, Kondo wa Kimi ni Suki to Iitai',                'Buta K\u014dshaku ni Tensei Shitakara, Kondo wa Kimi ni Suki to Iitai',               'translated'),\n\t\t('Hon Issatsu de Kototariru Isekai Rur\u014d Monogatari',                                'Hon Issatsu de Kototariru Isekai Rur\u014d Monogatari',                               'translated'),\n\t\t('Isekai Yakkyoku',                                                                 'Parallel World Pharmacy',                                                        'translated'),\n\t\t('Kyou Kara Ore wa Loli no Himo!',                                                  'Kyou Kara Ore wa Loli no Himo!',                                                 'translated'),\n\t\t('The Simple-Looking Sword Saint is Nevertheless the Strongest',                    'The Simple-Looking Sword Saint is Nevertheless the Strongest',                   'translated'),\n\t\t('The Dungeon Seeker',                                                              'The Dungeon Seeker',                                                             'translated'),\n\t\t('Tales of Leo Attiel',                                                             'Tales of Leo Attiel ~Depiction of the Headless Prince~',                         'translated'),\n\t\t('The Duke\u2019s Daughter is the Knight Captain\u2019s (62) Young Wife',                     'The Duke\u2019s Daughter is the Knight Captain\u2019s (62) Young Wife',                    'translated'),\n\t\t('Tondemo Skill de Isekai Hourou Meshi',                                            'Tondemo Skill de Isekai Hourou Meshi',                                           'translated'),\n\t\t('Level Up Just By Eating',                                                         'Level Up Just By Eating',                                                        'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\treturn False",
  "2018-07-05T05:04:35.546717"
 ],
 "Pajama Days": [
  "def extractPajamaDays(item):\n\t\"\"\"\n\tParser for 'Pajama Days'\n\t\"\"\"\n\treturn None",
  "2017-07-15T22:43:57.547770"
 ],
 "PalmtreeH's Live and Learn": [
  "def extractPalmtreehBlogspotCom(item):\n\t'''\n\tParser for 'palmtreeh.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Don\\'t Turn from Summer \u83ab\u8d1f\u5bd2\u590f',        'Don\\'t Turn from Summer',                      'translated'),\n\t\t('Don\\'t Turn from Summer  \u83ab\u8d1f\u5bd2\u590f',       'Don\\'t Turn from Summer',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-24T11:15:10.415503"
 ],
 "Panda Translations": [
  "def extractPandaTranslations(item):\n\t\"\"\"\n\tParser for 'Panda Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Divine Genius Healer, Abandoned Woman',       'Divine Genius Healer, Abandoned Woman: Demonic Tyrant in Love with a Mad Little Consort',   'translated'), \n\t\t('World Destroying Demonic Emperor',            'World Destroying Demonic Emperor',                                                          'translated'), \n\t\t('Mechanical God Emperor',                      'Mechanical God Emperor',                                                                    'translated'), \n\t\t('The Assassin\\'s Apprentice',                  'The Assassin\\'s Apprentice',                                                                'translated'), \n\t\t('Curse the Gods, Obliterate the Heavens',      'Curse the Gods, Obliterate the Heavens',                                                    'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Divine Godly Healer, Abandoned Woman',         'Divine Genius Healer, Abandoned Woman: Demonic Tyrant in Love with a Mad Little Consort',      'translated'),\n\t\t('Divine Genius Healer, Abandoned Woman',        'Divine Genius Healer, Abandoned Woman: Demonic Tyrant in Love with a Mad Little Consort',      'translated'),\n\t\t('DGHAW',                                        'Divine Genius Healer, Abandoned Woman: Demonic Tyrant in Love with a Mad Little Consort',      'translated'),\n\t\t('World Destroying Demonic Emperor',             'World Destroying Demonic Emperor',                                                             'translated'),\n\t\t('WDDE: ',                                       'World Destroying Demonic Emperor',                                                             'translated'),\n\t\t('TAA: ',                                        'The Assassin\\'s Apprentice',                                                                   'translated'),\n\t\t('The Assassin\u2019s Apprentice',                    'The Assassin\\'s Apprentice',                                                                   'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-07-25T05:20:40.938342"
 ],
 "Pandafuq Translations": [
  "def extractPandafuqTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pandora's Book": [
  "def extractPandorasBook(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pankaj Translations": [
  "\ndef extractPankajtranslationWordpressCom(item):\n\t'''\n\tParser for 'pankajtranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:34.528759"
 ],
 "Paper Petals": [
  "\ndef extractPaperpetalswebWordpressCom(item):\n\t'''\n\tParser for 'paperpetalsweb.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-09T05:58:03.655632"
 ],
 "Paradox Novels": [
  "def extractWwwParadoxnovelsCom(item):\n\t'''\n\tParser for 'www.paradoxnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('M E M O R I Z E ',            'M E M O R I Z E',                 'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T07:12:00.330316"
 ],
 "Paradox Translations": [
  "def extractParadoxTranslations(item):\n\t\"\"\"\n\t'Paradox Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Parallel Novels": [
  "\ndef extractParallelnovelsCom(item):\n\t'''\n\tParser for 'parallelnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:33.132157"
 ],
 "Paraphrase Translation": [
  "def extractParaphraseTranslation(item):\n\t\"\"\"\n\t'Paraphrase Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Passive Translations": [
  "def extractPassivetranslationsCom(item):\n\t'''\n\tParser for 'passivetranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hermione and the Genius Magic Formula',       'Hermione and the Genius Magic Formula',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T04:39:00.736157"
 ],
 "Path of Translation": [
  "def extractPathOfTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Path of Discord Episode'):\n\t\treturn None\n\n\n\tsnames = [\n\t\t\t\"Emperor's Domination\",\n\t\t\t'Martial God Realm',\n\t\t\t'Big Life',\n\t\t\t\"I'm a Villain\",\n\t\t\t'Grasping Evil',\n\t\t\t'The Human Emperor',\n\t\t\t\"Post-80's Cultivation Journal\",\n\t\t]\n\n\ttlut = {tmp.lower(): tmp for tmp in snames}\n\n\n\tltags = [tmp.lower() for tmp in item['tags']]\n\tfor key, value in tlut.items():\n\t\tif key in ltags:\n\t\t\treturn buildReleaseMessageWithType(item, value, vol, chp, frag=frag, postfix=postfix)\n\n\tchp_prefixes = [\n\t\t\t('He\\'s the Legendary Guard, Isn\\'t He?',                True), \n\t\t\t('Black Iron\\'s Glory',                                  True), \n\t\t\t('Spiritual furnace',                                    True), \n\t\t\t('Possessing Nothing',                                   True), \n\t\t\t('Lord of the Star Ocean',                               True), \n\t\t\t('The Ancestor of our Sect Isn\u2019t Acting like an Elder',  True), \n\t\t\t('Dragon-Marked War God',                                False), \n\t\t\t('The Daoist Seal',                                      True), \n\t\t\t('Eternal Life',                                         True), \n\t\t\t('When God Made Me',                                     True), \n\t\t\t('Big Life',                                             True), \n\t\t\t('Deva Wizard',                                          True), \n\t\t\t('Urban Banished Immortal',                              True), \n\t\t\t('The Prodigy Daughter Of The Medicine God',             True), \n\t\t\t('Emperor of Tomorrow',                                  True), \n\t\t\t('ID \u2013 The Greatest Fusion Fantasy',                     True), \n\t\t\t('God Hunter',                                           True), \n\t\t\t('Immortal',                                             True), \n\t\t\t('Martial Emperor Reborn ',                              True), \n\t\t\t('Martial God Conqueror',                                True),\n\t\t\t('My Wife Is a Beautiful CEO',                           True),\n\t\t\t('World Defying Dan God',                                True), \n\t\t\t('Game Market 1983',                                     False), \n\t\t\t('Spirit Vessel',                                        False), \n\t\t\t('Instant Kill',                                         False), \n\t\t\t('My Daoist Life',                                       False), \n\t\t\t('Tales of the Reincarnated Lord',                       False), \n\t\t\t('Cohen of the Rebellion',                               False), \n\t\t\t('Post-\u201980s Cultivation Journal',                        False), \n\t\t\t('Immortal',                                             False), \n\t\t\t('Everlasting Immortal Firmament -',                     False),\n\t\t\t('The Great Game',                                       False), \n\t\t\t('Grasping Evil',                                        False), \n\t\t\t('My Cold and Beautiful Wife',                           False), \n\t\t\t('The Daoist Seal',                                      False), \n\t\t]\n\n\tfor series, require_chp in chp_prefixes:\n\t\tif item['title'].lower().startswith(series.lower()) and (not require_chp or 'chapter' in item['title'].lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix)\n\t\t\t\n\treturn False",
  "2019-04-27T11:38:04.701355"
 ],
 "Patriarch Reliance": [
  "def extractPatriarchReliance(item):\n\t\"\"\"\n\t# 'Patriarch Reliance'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif re.match('Chapters? \\\\d+', item['title']):\n\t\treturn buildReleaseMessageWithType(item, 'God and Devil World', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pavillion": [
  "def extractPavilliononlineWordpressCom(item):\n\t'''\n\tParser for 'pavilliononline.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Why Harem Intrigue When You Can Just Raise a Dog Instead',       'Why Harem Intrigue When You Can Just Raise a Dog Instead',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-13T22:37:26.951736"
 ],
 "Pay To Read Translations": [
  "def extractPtrt812988035WordpressCom(item):\n\t'''\n\tParser for 'ptrt812988035.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Dragon\\'s Legacy',       'Dragon\\'s Legacy',                      'translated'),\n\t\t('Extraordinary, Ordinary, Soap!',       'Extraordinary, Ordinary, Soap!',                      'translated'),\n\t\t('Breaking the Day',       'Breaking the Day',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:44:27.210625"
 ],
 "Paztok": [
  "def extractPaztok(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title']:\n\t\treturn False\n\tif not postfix and ':' in item['title']:\n\t\tpostfix = item['title'].split(':')[-1]\n\tif 'Paztok' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Paztok', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pea Translation": [
  "def extractPeaTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pea's Kingdom": [
  "def extractPeasKingdom(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tltags = [tmp.lower() for tmp in item['tags']]\n\tif 'second chance' in ltags and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Second Chance: a Wonderful New Life', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Peach Blossom Dreams Translation": [
  "def extractPeachblossomdreamsHomeBlog(item):\n\t'''\n\tParser for 'peachblossomdreams.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('aggrievedfishsprite',       'Yu Bu Fu: Aggrieved Fish Sprite',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T04:39:45.991706"
 ],
 "Peach Blossom Grove": [
  "def extractWwwPeachblossomgroveCom(item):\n\t'''\n\tParser for 'www.peachblossomgrove.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"World of Hidden Phoenixes\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"World of Hidden Phoenixes\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-08-01T04:56:25.289645"
 ],
 "Pegasus Farts": [
  "def extractPegasusFarts(item):\n\t\"\"\"\n\t'Pegasus Farts'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pekabo Blog": [
  "def extractPekaboBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pen Journal Happy": [
  "def extractPenjournalhappyWordpressCom(item):\n\t'''\n\tParser for 'penjournalhappy.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Villain Reformation System',              'Pulling Together a Villain Reformation Strategy',                      'translated'),\n\t\t('Villain Reformation Strategy',            'Pulling Together a Villain Reformation Strategy',                      'translated'),\n\t\t('Want to Ascend? Then Fall in Love',       'Want to Ascend? Then Fall in Love',                      'translated'),\n\t\t('Golden Stage',                            'Golden Stage',                                           'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-27T05:29:00.138704"
 ],
 "PenSoulFingers": [
  "\ndef extractPensoulfingersBlogspotCom(item):\n\t'''\n\tParser for 'pensoulfingers.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:26.548992"
 ],
 "Pengu Taichou": [
  "def extractPenguTaichou(item):\n\t\"\"\"\n\tPengu Taichou\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('sword shisho chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'I was a Sword when I Reincarnated!', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Penguin Overlord Translations": [
  "def extractPenguinOverlordTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Penumbrale": [
  "def extractPenumbrale(item):\n\t\"\"\"\n\tParser for 'Penumbrale'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Peony Novel Tl": [
  "def extractPeonynoveltlBlogspotCom(item):\n\t'''\n\tParser for 'peonynoveltl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('one hundred ways to become a god',      'One hundred ways to become God',                       'translated'),\n\t\t('a cat with a red envelope group',       'A cat with a red envelope group',                      'translated'),\n\t\t('holding on to my man',                  'Holding on to my man',                                 'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-07T08:36:08.720137"
 ],
 "Perfect Reflections": [
  "def extractAlbedo404BlogspotCom(item):\n\t'''\n\tParser for 'albedo404.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\tif item['tags'] != []:\n\t\treturn None\n\t\n\t\n\tif re.match(\"Ch \\d+ Tondemo Skill de Isekai Hourou Meshi\", item['title'], re.IGNORECASE):\n\t\t\treturn buildReleaseMessageWithType(item, 'Tondemo Skill de Isekai Hourou Meshi', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\t\n\t\n\tif re.match(\"Ch \\d+ Sakyubasu ni Tensei Shita no de Miruku o Shiborimasu\", item['title'], re.IGNORECASE):\n\t\t\treturn buildReleaseMessageWithType(item, 'Sakyubasu ni Tensei Shita no de Miruku o Shiborimasu', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\t\t\n\n\treturn False",
  "2018-10-15T05:16:55.293456"
 ],
 "Personal Translations": [
  "def extractSkidtranslateWordpressCom(item):\n\t'''\n\tParser for 'skidtranslate.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('World Defying Dan God',       'World Defying Dan God',                      'translated'),\n\t\t('Asura God',                   'Asura God',                                  'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-26T02:41:27.451463"
 ],
 "Petow Blog": [
  "\ndef extractPetowblogWordpressCom(item):\n\t'''\n\tParser for 'petowblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:24.512768"
 ],
 "Pettanko Translations": [
  "def extractPettankoTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Isekai C-mart Hanjouki'):\n\t\treturn buildReleaseMessageWithType(item, 'Isekai C-mart Hanjouki', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Phelin Fantasy": [
  "\ndef extractRomanticmanfantasyWordpressCom(item):\n\t'''\n\tParser for 'romanticmanfantasy.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:47.064790"
 ],
 "Phiare": [
  "def extractPhiarehereWordpressCom(item):\n\t'''\n\tParser for 'phiarehere.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Protagonist Harem Delusion',       'There Will Always Be Protagonists With Delusions of Starting a Harem',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T08:46:59.762373"
 ],
 "Pick Up This Translations": [
  "def extractPickupthisnoveltranslationsCom(item):\n\t'''\n\tParser for 'pickupthisnoveltranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Yotohime',       'Yotogi no Kuni no Gekkouhime',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-05T04:04:18.049753"
 ],
 "Pickup Novels": [
  "\ndef extractPickupnovelsCom(item):\n\t'''\n\tParser for 'pickupnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-20T01:11:03.483635"
 ],
 "Pielord Translations": [
  "def extractPielordTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pigcow Translations": [
  "def extractPigcowTranslationsCom(item):\n\t'''\n\tParser for 'pigcow-translations.com'\n\t'''\n\tbadwords = [\n\t\t\t'Learn Japanese',\n\t\t\t'Learn Japanese Level 1',\n\t\t\t'Interviews',\n\t\t]\n\tif any([bad in item['tags'] for bad in badwords]):\n\t\treturn None\n\n\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Seven Wonders Overtime',       'Seven Wonders Overtime',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T11:17:40.455147"
 ],
 "PiggyBottle Translations": [
  "def extractPiggyBottleTranslations(item):\n\t\"\"\"\n\t#'PiggyBottle Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('beseech the devil'):\n\t\treturn buildReleaseMessageWithType(item, 'Beseech the Devil', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Piglike Teammate Translation": [
  "def extractPigliketeammateWordpressCom(item):\n\t'''\n\tParser for 'pigliketeammate.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I Noticed That I\u2019ve Become A BL Game Protagonist\u2019s Younger Brother',       'I Noticed That I\u2019ve Become A BL Game Protagonist\u2019s Younger Brother',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T04:41:05.950105"
 ],
 "Pika Translations": [
  "def extractPikaTranslations(item):\n\t\"\"\"\n\t# Pika Translations\n\n\t\"\"\"\n\tchp, vol = extractChapterVol(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Close Combat Mage' in item['tags'] or 'CCM Chapter' in item['title'] or 'Close Combat Mage Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Close Combat Mage', vol, chp)\n\tif 'IoR Book' in item['title'] or 'IoR B' in item['title'] or 'Inch of Radiance Book' in item['title'] or 'Inch of Radiance Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Inch of Radiance', vol, chp)\n\tif 'World of Immortals Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'World of Immortals', vol, chp)\n\tif 'Perfect World Chapter' in item['title'] or 'PW Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Perfect World', vol, chp)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pineapple Translations": [
  "def extractPineappletranslationsWordpressCom(item):\n\t'''\n\tParser for 'pineappletranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Suspicious Manager Moon',       'Suspicious Manager Moon',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T07:48:50.099486"
 ],
 "Pink's Translations": [
  "\ndef extractPinkstranslationsWordpressCom(item):\n\t'''\n\tParser for 'pinkstranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:31.558835"
 ],
 "Pinky Onee-sama's Translations": [
  "def extractPinkyoneesamaTumblrCom(item):\n\t'''\n\tParser for 'pinkyoneesama.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Worlds Strongest Rearguard - Chapter',  'World Strongest Rearguard \u2013 Labyrinth Country and Dungeon Seekers',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-17T06:36:21.555416"
 ],
 "Pipaweboo": [
  "def extractPipawebooWordpressCom(item):\n\t'''\n\tParser for 'pipaweboo.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Lady Dancer\\'s Ten Husbands',       'The Lady Dancer\\'s Ten Husbands',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-29T06:19:13.792614"
 ],
 "Piper's Pickups": [
  "def extractPiperpickupsWordpressCom(item):\n\t'''\n\tParser for 'piperpickups.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tchp_prefixes = [\n\t\t\t('MGCH Chapter ',  'Quick Transmigration System: Male God, Come Here',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-04-27T11:42:45.656810"
 ],
 "Pippi Site": [
  "def extractPippiSite(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'FMTL \u2013 Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'First Marriage Then Love', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pizzilations": [
  "def extractPizzilationsCom(item):\n\t'''\n\tParser for 'pizzilations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Liu Yao',                                  'Liu Yao: The Revitalization of Fuyao Sect',               'translated'),\n\t\t('Scum Villain\\'s Self-Saving System',       'Scum Villain\\'s Self-Saving System',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:13:58.260032"
 ],
 "Plain Words": [
  "def extractLonelytreetranslationWordpressCom(item):\r\n\t'''\r\n\tParser for 'lonelytreetranslation.wordpress.com'\r\n\t'''\r\n\r\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\r\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\r\n\t\treturn None\r\n\r\n\ttagmap = [\r\n\t\t('PRC',       'PRC',                      'translated'),\r\n\t\t('Loiterous', 'Loiterous',                'oel'),\r\n\t]\r\n\r\n\tfor tagname, name, tl_type in tagmap:\r\n\t\tif tagname in item['tags']:\r\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\r\n\t\r\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith(\"Chapter \"):\r\n\t\treturn buildReleaseMessageWithType(item, 'Reincarnation: Demon Hunter', vol, chp, frag=frag, postfix=postfix, tl_type='Translated')\r\n\r\n\treturn False",
  "2018-04-17T03:34:08.606359"
 ],
 "PlainlyBored": [
  "def extractPlainlyBored(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Empress with no Virtue'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Empress with no Virtue', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Plant Translation": [
  "def extractPlantTranslation(item):\n\t\"\"\"\n\t'Plant Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('cultutral inavsion in different world',          'cultutral inavsion in different world',    'translated'),\n\t\t('Heavenly Farmer',                                'Heavenly Farmer',                          'translated'),\n\t\t('The Strongest Gene',                             'The Strongest Gene',                       'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\treturn False",
  "2017-09-24T08:04:12.661139"
 ],
 "Pleiades": [
  "def extractPleiades(item):\n\t\"\"\"\n\tParser for 'Pleiades'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Plumlizi": [
  "def extractPlumliziWordpressCom(item):\n\t'''\n\tParser for 'plumlizi.wordpress.com'\n\t'''\n\tif 'Rebirth Indonesia Bahasa' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The School\\'s Omnipotent Useless Garbage',       'The School\\'s Omnipotent Useless Garbage',                         'translated'),\n\t\t('How Is It My Fault That I Look Like a Girl!',    'How Is It My Fault That I Look Like a Girl!',                      'translated'),\n\t\t('Hey, Don\\'t Act Unruly!',                        'Hey, Don\\'t Act Unruly!',                                          'translated'),\n\t\t('The Taming of the Yandere',                      'The Taming of the Yandere',                                        'translated'),\n\t\t('The Road Turns White Tonight',                   'The Road Turns White Tonight',                                     'translated'),\n\t\t('Life After Marriage',                            'Life After Marriage',                                              'translated'),\n\t\t('Pampering My Cute Pet',                          'Pampering My Cute Pet',                                            'translated'),\n\t\t('I Am a Matchmaker on Taobao',                    'I Am a Matchmaker on Taobao',                                      'translated'),\n\t\t('No Protection Tonight',                          'No Protection Tonight',                                            'translated'),\n\t\t('rebirth',                                        'Rebirth: Noble Woman, Poisonous Concubine',                        'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tchp_prefixes = [\n\t\t('Life After Marriage',                                          'Life After Marriage',                         'translated'),\n\t\t('\u4e00\u591c\u5a5a\u540e|Life After Marriage Chapter',                         'Life After Marriage',                         'translated'),\n\t\t('Rebirth: Noble Woman, Poisonous Concubine|\u91cd\u751f\u4e4b\u8d35\u5973\u6bd0\u5983',     'Rebirth: Noble Woman, Poisonous Concubine',   'translated'),\n\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-06-07T05:24:30.988881"
 ],
 "Plumpy Pipsqueak": [
  "def extractPlumpypipsqueakWordpressCom(item):\n\t'''\n\tParser for 'plumpypipsqueak.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('YMPCD',       'Your Majesty Please Calm Down',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:15:34.546485"
 ],
 "Poached Eggs Novels": [
  "def extractPoachedeggsnovelsCom(item):\n\t'''\n\tParser for 'poachedeggsnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('zhanxian',       'Zhanxian',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-22T05:48:12.694332"
 ],
 "Pocky Sweets": [
  "\ndef extractNoblefraudCom(item):\n\t'''\n\tParser for 'noblefraud.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-04T03:31:48.609429"
 ],
 "Pocky's Bookshelf": [
  "\ndef extractPockysbookshelfCom(item):\n\t'''\n\tParser for 'pockysbookshelf.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-27T12:44:32.704968"
 ],
 "Polar Bear Catcher": [
  "def extractPolarBearCatcher(item):\n\t\"\"\"\n\tPolar Bear Catcher\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('A Match Made in Heaven',       'A Match Made in Heaven',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-09-28T05:57:17.734198"
 ],
 "Polar Bearadise": [
  "def extractWwwPolarbearadiseCom(item):\n\t'''\n\tParser for 'www.polarbearadise.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The World Is A Bit Sweet',               'The World Is A Bit Sweet',                      'translated'),\n\t\t('Feng Mang',                              'Feng Mang',                                     'translated'),\n\t\t('Number One Zombie Wife (\u7b2c\u4e00\u5c38\u59bb)',      'Number One Zombie Wife',                        'translated'),\n\t\t('goldenassistant',                        'Golden Assistant',                              'translated'),\n\t\t('Oh, My Dear!',                           'Oh, My Dear!',                                  'translated'),\n\t\t('Blood Contract',                         'Blood Contract',                                        'translated'),\n\t\t('Liu Li Loves Jun',                       'Liu Li Loves Jun',                                      'translated'),\n\t\t('Idiot I Love You!',                      'Idiot I Love You!',                                     'translated'),\n\t\t('Number One Zombie Wife',                 'Number One Zombie Wife',                                'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-07T06:34:28.914150"
 ],
 "Polaris Translations": [
  "def extractPolarisTranslations(item):\n\t\"\"\"\n\tParser for 'Polaris Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Polyphonic Story Translation Group": [
  "def extractPolyphonicStoryTranslationGroup(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Poop Translations": [
  "\ndef extractPoopTranslations(item):\n\t'''\n\tParser for 'Poop Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:57.692386"
 ],
 "Poor Man's Translations": [
  "\ndef extractPoorManSTranslations(item):\n\t'''\n\tParser for 'Poor Man's Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:15:51.621837"
 ],
 "Poor Quality Translations": [
  "def extractPoorQualityTranslations(item):\n\t\"\"\"\n\tPoor Quality Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Poppy Scanlations": [
  "def extractPoppyscanlationsVideoBlog(item):\n\t'''\n\tParser for 'poppyscanlations.video.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('A Seductive Gentleman',       'A Seductive Gentleman',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:30:17.035168"
 ],
 "Popsiclete": [
  "def extractPopsiclete(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Popsiclete's": [
  "def extractPopsicleteS(item):\n\t\"\"\"\n\tParser for 'Popsiclete's'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Positively Addicted": [
  "def extractPositivelyaddictedWordpressCom(item):\n\t'''\n\tParser for 'positivelyaddicted.wordpress.com'\n\t'''\n\t\n\t\n\tbadwords = [\n\t\t\t'Link',\n\t\t]\n\tif any([bad in item['tags'] for bad in badwords]):\n\t\treturn None\n\n\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Bringing a Son to Marry A Giant',          'Bringing a Son to Marry A Giant',                         'translated'),\n\t\t('Tianting Kindergarten',                    'Tianting Kindergarten',                                   'translated'),\n\t\t('Ti Shen (Body Double)',                    'Ti Shen',                                                 'translated'),\n\t\t('PRC',                                      'PRC',                                                     'translated'),\n\t\t('The Flower Under Heaven Blooms with Love', 'The Flower Under Heaven Blooms with Love',                'oel'),\n\t\t('Dragon Child',                             'Tales of Ea: Dragon Child',                               'oel'),\n\t\t('Loiterous',                                'Loiterous',                                               'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:21:37.525944"
 ],
 "Potato Translations": [
  "def extractPotatotranslationCom(item):\n\t'''\n\tParser for 'potatotranslation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Saint Dragon Totem',   'Saint Dragon Totem',                  'translated'), \n\t\t('Super God Gene',       'Super God Gene',                      'translated'), \n\t\t('Master feels stifled', 'Master feels stifled',                'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-11T22:02:00.740915"
 ],
 "Potatoes Have Eyes But Cannot See Mt. Tai": [
  "def extractPotatoesHaveEyesButCannotSeeMtTai(item):\n\t'''\n\tParser for 'Potatoes Have Eyes But Cannot See Mt. Tai'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\n\ttagmap = [\n\t\t('fhmhyfql',       \"Father, Mother Escaped Again!\",                      'translated'),\n\t\t('wall flip',       \"Father, Mother Escaped Again!\",                      'translated'),\n\t\t('ddsnysh',       \"An Oddette\u2019s Otherworld Odyssey\",                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-06-05T05:36:23.986773"
 ],
 "Prairie Song": [
  "\ndef extractPrairiesongserialCom(item):\n\t'''\n\tParser for 'prairiesongserial.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-12-02T00:09:46.601237"
 ],
 "Praise the Metal Bat": [
  "def extractPraisethemetalbatWordpressCom(item):\n\t'''\n\tParser for 'praisethemetalbat.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Running Away From the Hero',       'Running Away From the Hero',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-02T04:52:03.031399"
 ],
 "Premium Red Tea": [
  "def extractPremiumRedTea(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Prestidigitation Of Color": [
  "\ndef extractPrestidigitationofcolorWordpressCom(item):\n\t'''\n\tParser for 'prestidigitationofcolor.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:22.622305"
 ],
 "Pretty Princess Translations": [
  "def extractPrettyPrincessTranslations(item):\n\t'''\n\tParser for 'Pretty Princess Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"Maouyome\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Maou ~ Sou da, Yuusha wo Yome ni shiyou ~\", vol, chp, frag=frag, postfix=postfix)\n\tif \"Muyoku no Seijo\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Muyoku no Seijo\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-03-25T09:18:47.729433"
 ],
 "Priddles Translations": [
  "def extractPriddlesTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Magic is Japanese' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Magic is Japanese', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pride X ReVamp": [
  "def extractPrideXReVamp(item):\n\t\"\"\"\n\t# 'Pride X ReVamp'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Primordial Archive": [
  "\ndef extractPrimordialarchiveWordpressCom(item):\n\t'''\n\tParser for 'primordialarchive.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:37.704037"
 ],
 "Prince Revolution!": [
  "def extractPrinceRevolution(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\n\ttagmap = [\n\t\t('Romance RPG',                  'Romance RPG',                  'translated'),\n\t\t('The Legend of Sun Knight',     'The Legend of Sun Knight',     'translated'),\n\t\t('Dominions End',                'Dominions End',                'translated'),\n\t\t('\u00bd Prince',                     '\u00bd Prince',                     'translated'),\n\t\t('killvsprince',                 'Kill No More VS 1/2 Prince',   'translated'),\n\t\t('Illusions-Lies-Truth',         'Illusions, Lies, Truth',       'translated'),\n\t\t('No Hero',                      'No Hero',                      'translated'),\n\t\t('God',                          'GOD',                          'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-06-04T02:53:45.774669"
 ],
 "Prince of Stride Novel Translation": [
  "def extractPrinceOfStrideNovelTranslation(item):\n\t\"\"\"\n\tParser for 'Prince of Stride Novel Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Private": [
  "\ndef extractSlothfulworksWordpressCom(item):\n\t'''\n\tParser for 'slothfulworks.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:55.083539"
 ],
 "Proclamation": [
  "\ndef extractProclamationnovelBlogspotCom(item):\n\t'''\n\tParser for 'proclamationnovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:14.408591"
 ],
 "ProcrasTranslation": [
  "def extractProcrasTranslation(item):\n\t\"\"\"\n\t#'ProcrasTranslation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Slowlife' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shite Inaka de Slowlife wo Okuritai', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Procrastination Translations": [
  "def extractProcrastinationtranslationWeeblyCom(item):\n\t'''\n\tParser for 'procrastinationtranslation.weebly.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Antelope and Night Wolf - \u5c0f\u7f9a\u7f8a\u4e0e\u591c\u592a\u72fc',                                       'The Antelope and Night Wolf',                      'translated'),\n\t\t('Love Stops Rumours - \u8c23\u8a00\u6b62\u4e8e\u604b\u7231',                                                  'Love Stops Rumours',                               'translated'),\n\t\t('&#35875;&#35328;&#27490;&#20110;&#24651;&#29233; &#65293; Love Stops Rumours',       'Love Stops Rumours',                               'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-12T10:21:35.036768"
 ],
 "Productive Procrastination": [
  "def extractProductiveprocrastinationsiteWordpressCom(item):\n\t'''\n\tParser for 'productiveprocrastinationsite.wordpress.com'\n\t'''\n\n\tif 'Drama' in item['tags']:\n\t\treturn None\n\tif 'dramas' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Bloody Romance',       'Bloody Romance',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-21T06:19:45.945360"
 ],
 "ProfessionalGameThrower's Translation": [
  "def extractProfessionalGameThrowersTranslations(item):\n\t\"\"\"\n\tProfessionalGameThrower's Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Monster Factory' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Monster Factory', vol, chp, frag=frag, postfix=postfix)\n\tif re.match('^Chapters? [\\\\d\\\\- &]+$', item['title'], re.IGNORECASE):\n\t\treturn buildReleaseMessageWithType(item, 'My Ranch', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Profper translation": [
  "def extractEasyDesignBlog(item):\n\t'''\n\tParser for 'easy.design.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('-Yuri War-',       'Yuri War of the Demon King\\'s Daughter \u2013 the Brave Hero Who Incarnates as the Ts Wants to Protect a Peaceful Life Surrounded by Cute Demons and Monster Girls',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:13:24.626948"
 ],
 "Project Accelerator": [
  "def extractProjectAccelerator(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Black Healer' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Black Healer', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Project DXM": [
  "\ndef extractProjectdxmWordpressCom(item):\n\t'''\n\tParser for 'projectdxm.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:23.938189"
 ],
 "Projekt World Witches": [
  "def extractProjektworldwitchesCom(item):\n\t'''\n\tParser for 'projektworldwitches.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Noble Witches',       'Noble Witches: 506th Joint Fighter Wing',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-29T03:40:30.616608"
 ],
 "Prophet's Word": [
  "def extractProphetswordStarmvsCom(item):\n\t'''\n\tParser for 'prophetsword.starmvs.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Lonely Loser',       'Lonely Loser, I\u2019ll Become Blonde Frivolous Gyaru\u2019s Favourite',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-02T06:15:15.124229"
 ],
 "Prosperous Food Translations": [
  "def extractProsperousfoodCom(item):\n\t'''\n\tParser for 'prosperousfood.com'\n\t'''\n\tif 'recipe' in item['tags']:\n\t\treturn None\n\tif 'Movies' in item['tags']:\n\t\treturn None\n\t\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Daddy\\'s Fantasy World Restaurant',       'Daddy\\'s Fantasy World Restaurant',                      'translated'),\n\t\t('Reborn - Super Chef',                     'Reborn - Super Chef',                                    'translated'),\n\t\t('Okonomiyaki Chain Store',                 'Okonomiyaki Chain Store',                                'translated'),\n\t\t('Imperial Chef Rookie',                    'Imperial Chef Rookie',                                   'translated'),\n\t\t('Kitchen Xiuzhen',                         'Kitchen Xiuzhen',                                        'translated'),\n\t\t('Here Comes The Lady Chef!',               'Here Comes The Lady Chef!',                              'translated'), \n\t\t('Strange World Little Cooking Saint',      'Strange World Little Cooking Saint',                     'translated'), \n\t\t('The Fine Food Broadcaster',               'The Fine Food Broadcaster',                              'translated'), \n\t\t('Strange World Alchemist Chef',            'Strange World Alchemist Chef',                           'translated'), \n\t\t('The Lady Chef Anecdote',                  'The Lady Chef Anecdote',                                 'translated'), \n\t\t('The Taming of a Black Bellied Scholar',   'The Taming of a Black Bellied Scholar',                  'translated'), \n\t\t('The Feast',                               'The Feast',                                              'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-20T22:42:08.397443"
 ],
 "Proudnovelist": [
  "\ndef extractNoveltoreadWordpressCom(item):\n\t'''\n\tParser for 'noveltoread.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:32.840178"
 ],
 "Provoking Fire": [
  "\ndef extractProvokingfireWordpressCom(item):\n\t'''\n\tParser for 'provokingfire.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:46.743764"
 ],
 "Proxy Translations": [
  "def extractProxyTranslations(item):\n\t\"\"\"\n\t'Proxy Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Psicern.Translations": [
  "def extractPsicernTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Psychic Tattoo": [
  "\ndef extractPsychictattooBlogspotCom(item):\n\t'''\n\tParser for 'psychictattoo.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:35:25.933930"
 ],
 "Psycho Barcode Translations": [
  "\ndef extractPsychobarcodetranslationsWordpressCom(item):\n\t'''\n\tParser for 'psychobarcodetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-20T23:32:18.571021"
 ],
 "Pucari": [
  "def extractPucariDreamwidthOrg(item):\n\t'''\n\tParser for 'pucari.dreamwidth.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('everywhere in jianghu is wonderful',       'everywhere in jianghu is wonderful',                      'translated'),\n\t\t('di wang gong lue',       'di wang gong lue',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-31T03:40:01.564978"
 ],
 "Pumlated": [
  "def extractPumlated(item):\n\t\"\"\"\n\tPumlated\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower() or 'incomplete' in item['title'].lower():\n\t\treturn None\n\tif \"(Um, Sorry!) I've been Reincarnated!\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"(Um, Sorry!) I've been Reincarnated!\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\ttagmap = [\n\t\t('(Um, Sorry!) I\\'ve been Reincarnated!',       '(Um, Sorry!) I\\'ve been Reincarnated!',                      'translated'),\n\t\t('The Counterfeit Madam Hou',                   'The Counterfeit Madam Hou',                                  'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-06-04T02:51:03.314860"
 ],
 "Pummels Translations": [
  "def extractKnW(item):\n\t\"\"\"\n\t# Groups involved in KnW:\n\t# \tBlazing Translations\n\t# \tCapsUsingShift Tl\n\t# \tInsignia Pierce\n\t# \tKiriko Translations\n\t# \tKonjiki no Wordmaster\n\t# \tLoliquent\n\t# \tBlazing Translations\n\t# \tPummels Translations\n\t# \tXCrossJ\n\t# \tProbably another dozen randos per week.\n\t# Really. Fuck you people. Tag your shit, and start a group blog.\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\ttags = item['tags']\n\ttitle = item['title']\n\tsrc = item['srcname']\n\tpostfix = ''\n\tif src == 'XCrossJ' and 'Cross Gun' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Cross Gun', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Character Analysis' in item['title']:\n\t\treturn False\n\tif 'Chapter' in title and src == 'Blazing Translations':\n\t\tif 'By:' in title:\n\t\t\treturn False\n\t\tif 'Comment' in title:\n\t\t\treturn False\n\t\tif ':' in title:\n\t\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\telif '-' in title:\n\t\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\telse:\n\t\t\tpostfix = ''\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\tif ('Chapters' in tags and 'Konjiki no Wordmaster' in tags or 'Konjiki no Wordmaster Web Novel Chapters' in tags or 'Konjiki' in tags or src == 'Loliquent' and \n\t    'Konjiki no Wordmaster' in title):\n\t\tpostfix = title.split('\u2013', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\telif 'Konjiki no Wordmaster Chapters' in tags or 'Konjiki no Moji Tsukai' in tags or src == 'Kiriko Translations' and ('KnW' in tags or 'KnW Chapter' in title\n\t    ) or src == 'CapsUsingShift Tl' and 'Konjiki no Wordmaster' in title or src == 'Pummels Translations' and 'Konjiki no Word Master Chapter' in title or src == 'XCrossJ' and 'Konjiki no Moji Tsukai' in title or src == 'Insignia Pierce' and 'Konjiki no Word Master Chapter' in title:\n\t\tpostfix = title.split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pumpkin Translations": [
  "def extractPumpkinTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Pyon Translations": [
  "def extractPyontranslationsCom(item):\n\t'''\n\tParser for 'pyontranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\turlfrag = [\n\t\t('/i-never-run-out-of-mana-chapter',  'I Never Run Out of Mana',     'translated'),\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-04-22T08:02:02.291850"
 ],
 "Qazy Fiction": [
  "\ndef extractQazyfictionCom(item):\n\t'''\n\tParser for 'qazyfiction.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:21.493292"
 ],
 "Qiaoyi Meili's Library": [
  "def extractQiaoyimeiliCom(item):\n\t'''\n\tParser for 'qiaoyimeili.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rebirth of Gu Jiao',       'Rebirth of Gu Jiao',                      'translated'),\n\t\t('Wang Ye is a Demon',       'Wang Ye is a Demon',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T05:16:48.826074"
 ],
 "Qidian": [
  "def extractWwwWebnovelCom(item):\n\t'''\n\tParser for 'www.webnovel.com'\n\t'''\n\timport traceback\n\timport WebRequest\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\t# So qidian allowed apparently unverified english-language series to be created.\n\t# Unsurprisingly, a lot of the new stuff is complete garbage\n\tgarbage_series = [\n\t\t\t'/10459149605038505/',\n\t\t\t'/10422423506034705/',\n\t\t\t'/10444772106039905/',\n\t\t]\n\n\tif any([tmp in item['linkUrl'] for tmp in garbage_series]):\n\t\treturn None\n\t\t\n\t\n\t# I think this got in somehow. I don't remember.\n\t# Whoops?\n\tif item['guid'] == 'https://www.webnovel.com/rssbook/7834223205001705/22941777291964503IRAS Chapter 809':\n\t\treturn None\n\t\n\thave = get_feed_article_meta(item['guid'])\n\thaveold = {key : value for key, value in have.items()}\n\t\n\tif 'content' in item and item['content']:\n\t\t\n\t\tif item['content'] and 'value' in item['content'][0] and item['content'][0]['value']:\n\t\t\tmetadata = json.loads(item['content'][0]['value'])\n\t\t\t\n\t\t\tad_free = metadata.get(\"ad_free\", False) \n\t\t\tif ad_free and not have.get(\"ad_free\", False):\n\t\t\t\thave['ad_free'] = ad_free\n\t\t\telse:\n\t\t\t\tprint(\"Item still has ad\")\n\t\t\t\t\n\t\t\t\t\n\t\t\tresolved_url = metadata.get(\"resolved_url\", None) \n\t\t\tif resolved_url and resolved_url != have.get(\"resolved_url\", None):\n\t\t\t\thave['resolved_url'] = resolved_url\n\t\t\telse:\n\t\t\t\tprint(\"Correct URL not resolved properly\")\n\t\t\t\n\t\t\tseries_name = metadata.get(\"series_name\", None)\n\t\t\tif series_name:\n\t\t\t\thave['series_name'] = series_name\n\t\t\tseries_type = metadata.get(\"type\", None)\n\t\t\tif series_type:\n\t\t\t\thave['type'] = series_type\n\t\n\t\n\t\t\t\n\n\tif not 'ad_free' in have:\n\t\tprint(\"Missing ad entry entirely\")\n\t\thave['ad_free'] = False\n\t\t\n\tif not have['ad_free']:\n\t\tprint(\"Not ad-free!\")\n\t\tset_feed_article_meta(item['guid'], have)\n\t\t\n\t\t\n\t\n\tif not 'resolved_url' in have:\n\t\tprint(\"No resolved URL\")\n\t\thave['resolved_url'] = None\n\t\t\n\tif haveold != have:\n\t\tprint(\"Item metadata has changed! Doing commit!\")\n\t\tset_feed_article_meta(item['guid'], have)\n\t\t\n\t\n\tif not have['resolved_url']:\n\t\tprint(\"Resolved URL isn't valid\")\n\t\treturn False\n\t\n\tif \"/rssbook/\" in have['resolved_url']:\n\t\tprint(\"/rssbook/ entry made it through to resolved_url\")\n\t\treturn False\n\t\t\n\titem['linkUrl'] = have['resolved_url']\n\t\n\n\t\n\tif 'type' in have and 'series_name' in have:\n\t\n\t\tprint(\"Resolved metadata:\", have)\n\t\tif have['type'] in ['translated', 'oel']:\n\t\t\tif have['ad_free']:\n\t\t\t\tprint(\"Have remote release update metadata!\")\n\t\t\t\treturn buildReleaseMessageWithType(item, have['series_name'], vol, chp, frag=frag, postfix=postfix, tl_type=have['type'])\n\t\t\telse:\n\t\t\t\treturn buildReleaseDeleteMessageWithType(item, have['series_name'], vol, chp, frag=frag, postfix=postfix, tl_type=have['type'], prefix_match=True)\n\t\telse:\n\t\t\tprint(\"Type and series_name in have, but type is not a known value?\", have)\n\t\t\t\t\n\t\t\t\t\n\n\treturn False",
  "2018-12-04T08:19:13.267321"
 ],
 "Qidian Is Bad": [
  "\ndef extractKysqiWordpressCom(item):\n\t'''\n\tParser for 'kysqi.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:33.214259"
 ],
 "Qihuan Land": [
  "def extractQihuanLand(item):\n\t'''\n\tParser for 'qihuan.land'\n\t'''\n\t\n\tif 'Against the Gods' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Sovereign To Immortality',       'Sovereign To Immortality',                      'translated'),\n\t\t('The Magic Thief',                'The Magic Thief',                               'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-07T06:16:14.157987"
 ],
 "Qiuqiu-chan": [
  "def extractQiuqiuchanWordpressCom(item):\n\t'''\n\tParser for 'qiuqiuchan.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Kill the Lights',       'Kill the Lights',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-30T05:36:05.141869"
 ],
 "QualiTeaTranslations": [
  "def extractQualiTeaTranslations(item):\n\t\"\"\"\n\t# 'QualiTeaTranslations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Harry Potter and the Rise of the Ordinary Person' in item['tags']:\n\t\treturn None\n\tif 'Romance of Dragons and Snakes' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Romance of Dragons and Snakes', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Qualidea of Scum and a Gold Coin": [
  "def extractQualideaofScumandaGoldCoin(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Quality \u2605 Mistranslations": [
  "def extractQualityMistranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Queen of Hearts": [
  "def extractQueenaheartsWordpressCom(item):\n\t'''\n\tParser for 'queenahearts.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('HPROP',       'Harry Potter and the Rise of an Ordinary Person',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T07:49:49.419957"
 ],
 "Quiker Novel": [
  "def extractQuikernovelBlogspotCom(item):\n\t'''\n\tParser for 'quikernovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['tags'] == []:\n\t\ttitlemap = [\n\t\t\t('My boss husband, please let me go!',  'My boss husband, please let me go!',      'translated'),\n\t\t\t('Step In Dangerous Love',              'Step In Dangerous Love',                  'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\t\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-11T21:57:58.064277"
 ],
 "Qxbluish Translations": [
  "def extractQxbluishWordpressCom(item):\n\t'''\n\tParser for 'qxbluish.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Golden Age of Phoenix: TFCVIC',  'Golden Age of Phoenix: Tyrant\u2019s First Class Virtuous Imperial Concubine',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('tyrants',       'Golden Age of Phoenix: Tyrant\\'s First Class Virtuous Imperial Concubine',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-09T05:55:05.553060"
 ],
 "RANCER": [
  "def extractRancer(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Strongest Magical Beast' in item['tags'] and 'Chapter Release' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'The Strongest Magical Beast', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Apocalypse \u042fR' in item['tags'] and 'Chapter Release' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Apocalypse \u042fR', vol, chp, frag=frag, postfix=postfix)\n\tif 'Legend of Xing Feng' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Legend of Xingfeng', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Exceptional Godly Thief-The Good for Nothing Seventh Young Lady' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Good for Nothing Seventh Young Lady', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "RBKTR Translations": [
  "def extractRbktrtranslationsWordpressCom(item):\n\t'''\n\tParser for 'rbktrtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Residence of Monsters',              'Residence of Monsters',                             'translated'),\n\t\t('Jin Xiao Yi Tan',                    'Jin Xiao Yi Tan',                                   'translated'),\n\t\t('I Think My Boyfriend Is Sick',       'I Think My Boyfriend Is Sick',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-09T05:15:25.171355"
 ],
 "RM Translations": [
  "def extractRmtranslationsTumblrCom(item):\n\t'''\n\tParser for 'rmtranslations.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('How To Thank You For Saving Me',       'How To Thank You For Saving Me',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tchp_prefixes = [\n\t\t\t('How To Thank You For Saving Me -Ch',  'How To Thank You For Saving Me',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-22T05:00:18.594231"
 ],
 "RPG Novels": [
  "def extractRpgNovels(item):\n\t\"\"\"\n\tParser for 'RPG Novels'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Maou-sama no machizukuri!',       'Maou-sama no Machizukuri!', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-04-09T04:33:55.452512"
 ],
 "RPGNovels": [
  "def extractRpgnovels(item):\n\t\"\"\"\n\tParser for 'RPGNovels'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t('Maou-sama no machizukuri!',       'Maou-sama no machizukuri!', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-04-07T04:10:42.234864"
 ],
 "RPGlitchy's Online Webnovels": [
  "\ndef extractRpglitchyWordpressCom(item):\n\t'''\n\tParser for 'rpglitchy.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-24T01:02:58.896449"
 ],
 "RV Translations": [
  "def extractRvstranslationsWordpressCom(item):\n\t'''\n\tParser for 'rvstranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('AUC',       'Appreciation of Unconventional Plants',                      'translated'),\n\t\t('HCTCTM',    'How Could This Cat Tease Me?',                               'translated'),\n\t\t('AUP',       'Appreciation of Unconventional Plants',                      'translated'),\n\t\t('LCU',       'The Last Cat in the Universe',                               'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-30T06:52:05.944278"
 ],
 "Radiant Translations": [
  "def extractRadiantTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Announcements' in item['tags'] or 'schedule' in item['tags']:\n\t\treturn None\n\t\t\n\n\ttagmap = [\n\t\t('Truly Precious Shared Universe',               'Truly Precious Shared Universe',                         'translated'),\n\t\t('Great Demon King',                             'Great Demon King',                                       'translated'),\n\t\t('Xyrin Empire',                                 'Xyrin Empire',                                           'translated'),\n\t\t('Amnesiac Queen',                               'Amnesiac Queen',                                         'translated'),\n\t\t('Beautiful Girl Poison Doctor Third Miss',      'Beautiful Girl Poison Doctor Third Miss',                'translated'),\n\t\t('Death Sutra',                                  'Death Sutra',                                            'translated'),\n\t\t('My World Falls into the River of Love',        'My World Falls into the River of Love',                  'translated'),\n\t\t('Ghost Emperor Wild Wife',                      'Ghost Emperor Wild Wife',                                'translated'),\n\t\t('Heavenly Calamity',                            'Heavenly Calamity',                                      'translated'),\n\t\t('Unrepentant',                                  'Unrepentant',                                            'translated'),\n\t\t('Pivot of the Sky',                             'Pivot of the Sky',                                       'translated'),\n\t\t('Lord Xue Ying',                                'Lord Xue Ying',                                          'translated'),\n\t\t('Dragon Emperor Martial God',                   'Dragon Emperor Martial God',                             'translated'),\n\t\t('Battle Frenzy',                                'Battle Frenzy',                                          'translated'),\n\t\t('Ostentatious Zhao Yao',                        'Ostentatious Zhao Yao',                                  'translated'),\n\t\t('The Whirlwind Girl 1: The Beginning of Light', 'The Whirlwind Girl 1: The Beginning of Light',           'translated'),\n\t\t('Magic Chef of Ice and Fire',                   'Magic Chef of Ice and Fire',                             'translated'),\n\t\t('The Legend of the Dragon King',                'The Legend of the Dragon King',                          'translated'),\n\t\t('Zither Emperor',                               'Zither Emperor',                                         'translated'),\n\t\t('Evil Dragon Against the Heaven',               'Evil Dragon Against the Heaven',                         'translated'),\n\t\t('Radiant Era',                                  'Radiant Era',                                            'translated'),\n\t\t('Miracle Throne',                               'Miracle Throne',                                         'translated'),\n\t\t('The Alchemist God',                            'The Alchemist God',                                      'translated'),\n\t\t('Village Girl as Family Head',                  'Village Girl as Family Head',                            'translated'),\n\t\t('Lord Xue Ying',                                'Xue Ying Ling Zhu',                                      'translated'),\n\t\t('Child of Light',                               'Guang Zhi Zi',                                           'translated'),\n\t\t('Guang Zhi Zi',                                 'Guang Zhi Zi',                                           'translated'),\n\t\t('Bing Huo Mo Chu',                              'Bing Huo Mo Chu',                                        'translated'),\n\t\t('Magic Chef of Ice and Fire',                   'Bing Huo Mo Chu',                                        'translated'),\n\t\t('The Legend of the Dragon King',                'Xue Ying Ling Zhu',                                      'translated'),\n\t\t('Beautiful Girl: Poison Doctor Third Miss',     'Beautiful Girl: Poison Doctor Third Miss',               'translated'),\n\t\t('Tempest of the Stellar War',                   'Tempest of the Stellar War',                             'translated'),\n\t\t('Dragon Marked War God',                        'Dragon-Marked War God',                                  'translated'),\n\t\t('I Seem Unsuited for Dating',                   'I Seem Unsuited for Dating',                             'translated'),\n\t\t('Sweet Heart in Honeyed Desire',                'Sweet Heart in Honeyed Desire',                          'translated'),\n\t\t('Enchantress Among Alchemists',                 'Enchantress Amongst Alchemists: Ghost King\u2019s Concubine', 'translated'),\n\t\t('The Whirlwind Girl',                           'The Whirlwind Girl 1: The Beginning of Light',           'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif 'dragon marked war god' in item['title'].lower().replace('-', ' '):\n\t\treturn buildReleaseMessageWithType(item, 'Dragon-Marked War God', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttitlemap = [\n\t\t('dmwg',                                                          'Dragon-Marked War God',                                  'translated'),\n\t\t('beseech the devil',                                             'Beseech the Devil',                                      'translated'),\n\t\t('enchantress amongst alchemist: ghost king\u2019s concubine chapter', 'Enchantress Amongst Alchemists: Ghost King\u2019s Concubine', 'translated'),\n\t\t('Enchantress Amongst Alchemists: Ghost King\u2019s Wife Chapter',     'Enchantress Amongst Alchemists: Ghost King\u2019s Concubine', 'translated'),\n\t\t('enchantress amongst alchemists: ghost king\u2019s concubine',        'Enchantress Amongst Alchemists: Ghost King\u2019s Concubine', 'translated'),\n\t\t('Evil Dragon Against the Heaven Chapter',                        'Evil Dragon Against the Heaven',                         'translated'),\n\t\t('Evil Dragon Against the Heavens Chapter',                       'Evil Dragon Against the Heaven',                         'translated'),\n\t\t('Miracle Throne Chapter',                                        'Miracle Throne',                                         'translated'),\n\t\t('Death Sutra \u2013 Chapter',                                         'Death Sutra',                                            'translated'),\n\t\t('Battle Frenzy \u2013 Chapter',                                       'Battle Frenzy',                                            'translated'),\n\t\t('Zither Emperor \u2013',                                              'Zither Emperor',                                            'translated'),\n\t\t\n\t\t('Lord Xue Ying',                              'Xue Ying Ling Zhu',                                                                     'translated'),\n\t\t('GEWW',                                       'Ghost Emperor Wild Wife: Dandy Eldest Miss',                                            'translated'),\n\t\t('VGAFH',                                      'Village Girl as the Head of the Family: Picked Up a General for Farming',               'translated'),\n\t\t('Radiant Era',                                'Radiant Era',                                                                           'translated'),\n\t\t('Magic Chef of Ice and Fire',                 'Magic Chef of Ice and Fire',                                                            'translated'),\n\t\t('The Legend of the Dragon King',              'The Legend of the Dragon King',                                                         'translated'),\n\t\t('Tempest of the Stellar War',                 'Tempest of the Stellar War',                                                            'translated'),\n\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\n\n\treturn False",
  "2017-09-10T07:27:04.671823"
 ],
 "Raenadel Translations": [
  "def extractRaenadelTranslations(item):\n\t\"\"\"\n\t'Raenadel Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Raging Gail": [
  "\ndef extractRaginggailWordpressCom(item):\n\t'''\n\tParser for 'raginggail.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:43.094195"
 ],
 "Railroad!": [
  "\ndef extractSteampunktrainBlogspotCom(item):\n\t'''\n\tParser for 'steampunktrain.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:22.224422"
 ],
 "Rainbow Translations": [
  "def extractRainbowTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Myriad of Shades' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Myriad of Shades', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Rainbow Turtle Translations": [
  "def extractRainbowTurtleTranslations(item):\n\t\"\"\"\n\tRainbow Turtle Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'LMS' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Legendary Moonlight Sculptor', vol, chp, frag=frag, postfix=postfix)\n\tif 'dungeon hunter' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dungeon Hunter', vol, chp, frag=frag, postfix=postfix)\n\tif 'DKG' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"The Demon King's Game\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t('Omniscient Reader\\'s Viewpoint',             'Omniscient Reader\\'s Viewpoint',                         'translated'),\n\t\t('Game Loading',                               'Game Loading',                                           'translated'),\n\t\t('Earth is Online',                            'Earth is Online',                                        'translated'),\n\t\t('Game Live Broadcast',                        'Game Live Broadcast',                                    'translated'),\n\t\t('Rebirth of a Supermodel',                    'Rebirth of a Supermodel',                                'translated'),\n\t\t('God Level Summoner',                         'God Level Summoner',                                     'translated'),\n\t\t('GLS',                                        'God Level Summoner',                                     'translated'),\n\t\t('DS',                                         'Dimensional Sovereign',                                  'translated'),\n\t\t('STB',                                        'I\\'m Not Shouldering this Blame',                        'translated'),\n\t\t('Dangerous Survival in the Apocalypse',       'Dangerous Survival in the Apocalypse',                   'translated'),\n\t\t('DSA',                                        'Dangerous Survival in the Apocalypse',                   'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-06-07T06:05:21.878194"
 ],
 "Rainfall's Translations": [
  "def extractRaintranslationsWordpressCom(item):\n\t'''\n\tParser for 'raintranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Half Dragon Slave Life',       'Half Dragon Slave Life',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-30T05:37:15.555352"
 ],
 "Raining Black": [
  "\ndef extractRainingblackWordpressCom(item):\n\t'''\n\tParser for 'rainingblack.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn _buildReleaseMessage(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-07T07:52:36.125940"
 ],
 "Rainy Translations": [
  "def extractRainyTranslations(item):\n\t\"\"\"\n\tParser for 'Rainy Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('rain',                   'rain',                                  'translated'),\n\t\t('F',                      'F \u30fc\u30a8\u30d5\u30fc',                            'translated'),\n\t\t('Light and Shadow',       'Light and Shadow',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\tif 'rain' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'rain', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2019-03-26T22:37:41.028404"
 ],
 "Raising Angels & Defection": [
  "def extractRaisingAngelsDefection(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Raising the Dead": [
  "def extractRaisingTheDead(item):\n\t\"\"\"\n\t# extractRaisingTheDead\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'The RTD Story' in item['tags']:\n\t\treturn None\t\n\tif 'RTD Story' in item['tags']:\n\t\treturn None\t\t\n\tif 'origins' in item['tags']:\n\t\treturn None\t\n\tif 'recruitment' in item['tags']:\n\t\treturn None\n\tif 'What Side Didn\\'t Know' in item['tags']:\n\t\treturn None\n\t\t\n\tif 'KmF?!' in item['tags']:\n\t\tmatches = re.search('When I returned home, what I found was fantasy!\\\\? (\\\\d+)\\\\-(\\\\d+)', item['title'], flags=re.IGNORECASE)\n\t\tif matches:\n\t\t\tvol = float(matches.group(1))\n\t\t\tchp = float(matches.group(2))\n\t\t\treturn buildReleaseMessageWithType(item, 'Kaettekite mo Fantasy!?', vol, chp, frag=frag, postfix=postfix)\n\tif 'Takami no Kago' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Takami No Kago', vol, chp, frag=frag)\n\tif item['title'].startswith('slave harem'):\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Meikyuu De Dorei Harem wo', vol, chp, frag=frag)\n\tif 'Shinka' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Shinka no Mi', vol, chp, frag=frag)\n\tif 'Smartphone Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai wa Smartphone to Tomoni', vol, chp, frag=frag)\n\tif 'Tran Sexual Online' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Tran Sexual Online', vol, chp, frag=frag)\n\tif 'Trans Sexual Online' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Tran Sexual Online', vol, chp, frag=frag)\n\tif 'Master Of Monsters' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Master Of Monsters', vol, chp, frag=frag)\n\tif item['title'].startswith('(R18) Frequenting Brothels'):\n\t\treturn buildReleaseMessageWithType(item, 'Game nai ni haitte Dragon o Hanto Shinagara Shokan ni Kayoi Tsumeru Hanashi.', vol, chp, frag=frag)\n\n\n\ttagmap = [\n\n\t\t('OreMegane',                                               'Ore no Megane wa tabun Sekai Seifuku Dekiru to Omou',                                      'translated'),\n\t\t('Alice Tales',                                             'Alice Tale in Phantasmagoria',                                                             'translated'),\n\t\t('Average Abilities',                                       'I Said Make My Abilities Average!',                                                        'translated'),\n\t\t('Slave Harem',                                             'Slave Harem',                                                                              'translated'),\n\t\t('Din No Monshou',                                          'Din No Monshou',                                                                           'translated'),\n\t\t('E? Heibon Desu Yo??',                                     'E? Heibon Desu Yo??',                                                                      'translated'),\n\t\t('Eh? Heibon desu yo??',                                    'E? Heibon Desu Yo??',                                                                      'translated'),\n\t\t('Elf Tensei',                                              'Elf Tensei Kara no Cheat Kenkoku-ki',                                                      'translated'),\n\t\t('Game nai ni haitte Doragon o hanto',                      'Game nai ni haitte Dragon o Hanto Shinagara Shokan ni Kayoi Tsumeru Hanashi.',             'translated'),\n\t\t('Hachinan tte Sore wa nai Deshou!',                        'Hachinan tte Sore wa nai Deshou!',                                                         'translated'),\n\t\t('I Said Make My Abilities Average!',                       'I Said Make My Abilities Average!',                                                        'translated'),\n\t\t('Iisekai no mahou gengo ga doumitemo nihongo dattaken',    'No matter how you look at it, this world\\'s magic language is Japanese.',                  'translated'),\n\t\t('Invincible Magician',                                     'Invincible Magician ~ Akashic Record Overwrite~',                                          'translated'),\n\t\t('RW(I)FP',                                                 'Reincarnated With (In)Finite Power',                                                       'oel'),\n\t\t('My Bodyguard Can\\'t Fight Girls',                         'My Bodyguard Can\\'t Fight Girls',                                                          'oel'),\n\t\t('A Tails Misfortune',                                      'A Tail\\'s Misfortune',                                                                     'oel'),\n\t\t('A Tail\\'s Misfortune',                                    'A Tail\\'s Misfortune',                                                                     'oel'),\n\t\t('The Search for Knowledge',                                'The Search for Knowledge',                                                                 'oel'),\n\t\t('ascension',                                               'Ascension',                                                                                'oel'),\n\t\t('Talentless Beast Knight',                                 'Talentless Beast Knight',                                                                  'oel'),\n\t\t('The Search for Knowledge',                                'The Search for Knowledge',                                                                 'oel'),\n\t\t('Sword Detective Hayate',                                  'Sword Detective Hayate',                                                                   'oel'),\n\t\t('Is Heaven Supposed To Be Like This?!',                    'Is Heaven Supposed to Be Like This?!',                                                     'oel'),\n\t\t('Isekai meikyuu de dorei harem wo',                        'Isekai Meikyuu De Dorei Harem wo',                                                         'translated'),\n\t\t('Katte Kita Motoyuusha',                                   'Katte Kita Motoyuusha',                                                                    'translated'),\n\t\t('Kumo desu ga',                                            'Kumo Desu Ga, Nani Ka?',                                                                   'translated'),\n\t\t('Master of Monster',                                       'Master Of Monsters',                                                                       'translated'),\n\t\t('Master of Monsters',                                      'Master Of Monsters',                                                                       'translated'),\n\t\t('Right Grasper',                                           'Right Grasper ~Stealing Skills in the Other World~',                                       'translated'),\n\t\t('Riot Grasper',                                            'Riot Grasper',                                                                             'translated'),\n\t\t('Science shall Prevail over Magic - Overture',             'Science shall Prevail over Magic - Overture',                                              'translated'),\n\t\t('Science Shall Prevail over Magic',                        'Science shall Prevail over Magic',                                                         'translated'),\n\t\t('Shinka no Mi',                                            'Shinka no Mi',                                                                             'translated'),\n\t\t('Skill Taker',                                             'Skill Taker',                                                                              'translated'),\n\t\t('Slave harem in the labyrinth of the other world',         'Isekai Meikyuu De Dorei Harem wo',                                                         'translated'),\n\t\t('Smartphone',                                              'Isekai wa Smartphone to Tomoni',                                                           'translated'),\n\t\t('I have Unlimited Wives Slots',                            'I have Unlimited Wives Slots',                                                             'translated'),\n\t\t('Kaette Kita no Motoyuusha',                               'Kaette Kita no Motoyuusha',                                                                'translated'),\n\t\t('Takami no Kago',                                          'Takami No Kago',                                                                           'translated'),\n\t\t('Tran Sexual Online',                                      'Tran Sexual Online',                                                                       'translated'),\n\t\t('Undergroud Doctor',                                       'Underground Doctor',                                                                       'translated'),\n\t\t('Underground Doctor',                                      'Underground Doctor',                                                                       'translated'),\n\t\t('Yuusha Ga Onna Da to Dame Desu Ka?',                      'Yuusha Ga Onna Da to Dame Desu Ka?',                                                       'translated'),\n\t\t('OP Waifu',                                                'Being Able to Edit Skills in Another World, I Gained OP Waifus',                           'translated'),\n\t\t('owmb',                                                    'Isekai Monster Breeder',                                                                   'translated'),\n\t\t('Motoyuusha',                                              'Return of Former Hero',                                                                    'translated'),\n\n\n\t\t('I, with house work and cooking, takes away the backbone of the Demon lord! The peerless house-husband starts from kidnapping!',   \n\t\t\t'I, with house work and cooking, takes away the backbone of the Demon lord! The peerless house-husband starts from kidnapping!', 'translated'),\n\t\t(\"Demon Lord's Pet\",                                                                                                                \n\t\t\t'I, with house work and cooking, takes away the backbone of the Demon lord! The peerless house-husband starts from kidnapping!', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-28T02:48:32.681530"
 ],
 "Raismine Translations": [
  "\ndef extractWwwRaisminetranslationsCom(item):\n\t'''\n\tParser for 'www.raisminetranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-20T06:48:25.519524"
 ],
 "Rakudai Kishi no Eiyuutan Translation Blog": [
  "\ndef extractJasonwanderblogWordpressCom(item):\n\t'''\n\tParser for 'jasonwanderblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-27T12:41:17.505539"
 ],
 "Rakudai LN": [
  "\ndef extractRakudailnWordpressCom(item):\n\t'''\n\tParser for 'rakudailn.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:31.947126"
 ],
 "Rancer": [
  "def extractRancer(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Strongest Magical Beast' in item['tags'] and 'Chapter Release' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'The Strongest Magical Beast', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Apocalypse \u042fR' in item['tags'] and 'Chapter Release' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Apocalypse \u042fR', vol, chp, frag=frag, postfix=postfix)\n\tif 'Legend of Xing Feng' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Legend of Xingfeng', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Exceptional Godly Thief-The Good for Nothing Seventh Young Lady' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Good for Nothing Seventh Young Lady', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Random TL": [
  "def extractRamdomtlBlogspotCom(item):\n\t'''\n\tParser for 'ramdomtl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('mayojou',       'The Chronicles of a Lost Man in His Forties Founding a Nation ~Commonsense is Hindering Me From Becoming TUEE~',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-12T07:51:00.536928"
 ],
 "RandomAuthor": [
  "\ndef extractNotarealtranslatorWordpressCom(item):\n\t'''\n\tParser for 'notarealtranslator.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-23T05:57:04.736569"
 ],
 "Ranira Backlog": [
  "\ndef extractRaniraWordpressCom(item):\n\t'''\n\tParser for 'ranira.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:20.339357"
 ],
 "Rano | Justaway Translations": [
  "def extractRanonetworkCom(item):\n\t'''\n\tParser for 'ranonetwork.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Reincarnated as a Dark Elf ~The strongest magician conquers a parallel world~',       'Reincarnated as a Dark Elf ~The strongest magician conquers a parallel world~',                      'translated'),\n\t\t('The Deadbeat Master and Genius Disciple\u2019s Misunderstood Workshop',                    'The Deadbeat Master and Genius Disciple\u2019s Misunderstood Workshop',                                   'translated'),\n\t\t('Shingan no Yuusha',                                                                   'Shingan no Yuusha',                                                                                  'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-01-11T05:19:15.809543"
 ],
 "Ranobeka": [
  "def extractRanobekaWordpressCom(item):\n\t'''\n\tParser for 'ranobeka.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('IAP',       'I was caught up in a Hero Summoning, but that World is at Peace',                    'translated'),\n\t\t('DM',        'Dungeon Master',                                                                     'translated'),\n\t\t('TWBFOM',    'The world became full of monsters, so I guessed I should live how I want to',        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-11T08:45:00.644894"
 ],
 "RareBirb Translates": [
  "def extractRarissimaAvisBlogspotCom(item):\n\t'''\n\tParser for 'rarissima-avis.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Water Recovery System',       'Water Recovery System',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:35:46.099812"
 ],
 "Rasa": [
  "\ndef extractAlbumereWordpressCom(item):\n\t'''\n\tParser for 'albumere.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:31.265848"
 ],
 "Raven Blues Day": [
  "def extractRavenbluesdayWordpressCom(item):\n\t'''\n\tParser for 'ravenbluesday.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Counterattack Plan of A Villain With Ten Thousand Fans',       'The Counterattack Plan of A Villain With Ten Thousand Fans',                      'translated'),\n\t\t('CPVTTF',                                                           'The Counterattack Plan of A Villain With Ten Thousand Fans',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-17T06:44:02.304732"
 ],
 "Raz's Translation Corner": [
  "def extractRazstlcornerWordpressCom(item):\n\t'''\n\tParser for 'razstlcorner.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Bu ni mi',       'Bu ni Mi wo Sasagete Hyaku to Yonen. Elf de Yarinaosu Musha Shugyou (LN)',                      'translated'),\n\t\t('Bu ni Mi',       'Bu ni Mi wo Sasagete Hyaku to Yonen. Elf de Yarinaosu Musha Shugyou (LN)',                      'translated'),\n\t\t('VRMMO',          'VRMMO no Shien Shokunin ~Top player no Shikakenin~',                                            'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-23T12:08:09.392100"
 ],
 "Re:Library": [
  "def extractReLibrary(item):\n\t\"\"\"\n\t'Re:Library'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif item['tags'] == ['~News~']:\n\t\treturn None\n\tif item['tags'] == ['news']:\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('Starting Anew as the New Me',            'Starting Anew as the New Me',                                            'translated'),\n\t\t('Mysterious World Beast God',             'Mysterious World Beast God',                                             'translated'),\n\t\t('Abyss Domination',                       'Abyss Domination',                                                       'translated'),\n\t\t('The Demon King\\'s Daughter',             'The Demon King\\'s Daughter',                                             'translated'),\n\t\t('Very Pure & Ambiguous - The Prequel',    'Very Pure & Ambiguous - The Prequel',                                    'translated'),\n\t\t('Barrier Master Reincarnation',           'Barrier Master Reincarnation',                                           'translated'),\n\t\t('6-Year Old Sage',                        '6-Year Old Sage',                                                        'translated'),\n\t\t('World of Immortals',                     'World of Immortals',                                                     'translated'),\n\t\t('Bu ni mi',                               'Bu ni Mi wo Sasagete Hyaku to Yonen. Elf de Yarinaosu Musha Shugyou',    'translated'),\n\t\t('Magic Language',                         'No matter how you look at it, this world\\'s magic language is Japanese', 'translated'),\n\t\t('High Comprehension Low Strength',        'High Comprehension Low Strength',                                        'translated'),\n\t\t('Otherworld Nation Founding Chronicles',  'Otherworld Nation Founding Chronicles',                                  'translated'),\n\t\t('Arifureta',                              'Arifureta Shokugyou de Sekai Saikyou (WN)',                              'translated'),\n\t\t('Author Reincarnated',                    'The Author Reincarnated?!',                                              'translated'),\n\t\t('The Strongest System',                   'The Strongest System',                                                   'translated'),\n\t\t('Outcast Magician',                       'Outcast Magician and the Power of Heretics',                             'translated'),\n\t\t('Nine Yang Sword Saint',                  'Nine Yang Sword Saint',                                                  'translated'),\n\t\t('God of Chaos',                           'God of Chaos',                                                           'oel'),\n\t\t('Soft Spoken Brutality',                  'Soft Spoken Brutality',                                                  'oel'),\n\t\t('Martial Void King',                      'Martial Void King',                                                      'oel'),\n\t\t('Aurora God',                             'Aurora God',                                                             'oel'),\n\t\t(\"Silva's Diary\",                          \"Silva's Diary\",                                                          'oel'),\n\t\t('Demon Sword Maiden',                     'Demon Sword Maiden',                                                     'translated'),\n\t\t('Stained Red',                            'Stained Red',                                                            'oel'),\n\t\t('Truth & Myth - The Awakening',           'Truth & Myth - The Awakening',                                           'oel'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2019-04-16T23:00:23.552892"
 ],
 "Re:Monster Wiki": [
  "def extractReMonsterWiki(item):\n\t\"\"\"\n\tParser for 'Re:Monster Wiki'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Re:Start": [
  "def extractXcaliburwnCom(item):\n\t'''\n\tParser for 'xcaliburwn.com'\n\tSeems to now be redirecting to http://restart-wn.com/\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-05-27T07:56:04.413935"
 ],
 "Re:Translations": [
  "def extractNop(dummy_item):\n\t\"\"\"\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Read 18": [
  "def extractRead18Com(item):\n\t'''\n\tParser for 'read18.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('City Lady-Killer: The One with the Heavenly Hands',       'City Lady-Killer: The One with the Heavenly Hands',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-27T11:31:30.264784"
 ],
 "Read Me Translations": [
  "def extractReadMeTranslations(item):\n\t\"\"\"\n\t# 'Read Me Translations'\n\t\"\"\"\n\tttmp = item['title'].replace('My CEO Wife Chap.', 'My CEO Wife Chapter')\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(ttmp)\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('My CEO Wife Chap. '):\n\t\treturn buildReleaseMessageWithType(item, 'Wo De Meinu Zongcai Laopo', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Reader's Realm TL": [
  "def extractReadersrealmtlBlogspotCom(item):\n\t'''\n\tParser for 'readersrealmtl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rebirth and Redemption',       'Rebirth and Redemption',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-22T06:17:33.432407"
 ],
 "Reading Attic": [
  "def extractReadingAttic(item):\n\t\"\"\"\n\tReading Attic\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'A Tale of Two Phoenixes \uff08\u51e4\u56da\u51f0\uff09' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'A Tale of Two Phoenixes', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ghost Invasion \uff08\u6709\u9b3c\u6765\u88ad\uff09' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ghost Invasion', vol, chp, frag=frag, postfix=postfix)\n\tif 'Stunning Edge \uff08\u7edd\u8272\u950b\u8292\uff09' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Stunning Edge', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Readshnote": [
  "\ndef extractReadshnoteBlogspotCom(item):\n\t'''\n\tParser for 'readshnote.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:56:04.434388"
 ],
 "Real Dungeon Translation": [
  "def extractRealdungeonWordpressCom(item):\n\t'''\n\tParser for 'realdungeon.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('riaru dungeon',       'Riaru Sekai ni Dungeon ga Dekita',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-11T03:52:25.444666"
 ],
 "Realm of Chaos": [
  "def extractRealmOfChaos(item):\n\t\"\"\"\n\t#'Realm of Chaos'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Myriad of Shades' in item['tags']:\n\t\tnames = [tmp for tmp in item['tags'] if tmp in ['Celest Ambrosia', 'Kiriko', 'Melanie Ambrosia', 'Shana Bonnet', 'Silvia', 'XCrossJ', 'Ghost']]\n\t\tpostfix_out = ', '.join(names)\n\t\tif postfix:\n\t\t\tpostfix_out += ' - ' + postfix\n\t\treturn buildReleaseMessageWithType(item, 'Myriad of Shades', vol, chp, frag=frag, postfix=postfix_out, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Realm of Mirrored Words": [
  "def extractRyuxenjiBlogspotCom(item):\n\t'''\n\tParser for 'ryuxenji.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('My Mr. Mermaid',       'My Mr. Mermaid',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-29T05:15:31.121336"
 ],
 "Reaper": [
  "\ndef extractReaperserialWordpressCom(item):\n\t'''\n\tParser for 'reaperserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:26.703156"
 ],
 "Rebirth Online World": [
  "def extractRebirthOnlineWorld(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t# if item['tags'] == [] and item['title'].lower().startswith(\"chapter\"):\n\t# \treturn None\n\t# if item['tags'] == [] and item['title'].lower().startswith(\"row: chapter \"):\n\t# \treturn None\n\t\t\n\t# Christ, Rebirth Online World is a complete mess.\n\n\ttagmap = [\n\t\t('Jikuu Mahou TL',                'Jikuu Mahou de Isekai to Chikyuu wo Ittarikitari',                                            'translated'),\n\t\t('Isekai Shoukan',                'Isekai Shoukan Makikomu Ijousha',                                                             'translated'),\n\t\t('Magic Bullet',                  'Magic Bullet in Magic Land',                                                                  'translated'),\n\t\t('Monster Musume',                'Monster Musume Harem o Tsukurou!',                                                            'translated'),\n\t\t('Monster Musume',                'Parameter Remote Controller',                                                                 'translated'),\n\t\t('TWVUE',                         'Tales of the Wickedly Vicious Underground Empire',                                            'translated'),\n\t\t('PRC',                           'Parameter Remote Control',                                                                    'translated'),\n\t\t('TOWN',                          'The Ability to make town!? ~Let\u2019s make a Japanese Town in Different world~',                  'translated'),\n\t\t('Ex-hero',                       'Ex-Hero Candidate\u2019s, who turned out to be a cheat from lv2, laid-back life in Another World', 'translated'),\n\t\t('Earth Core',                    \"Earth's Core\",                                                                                'oel'),\n\t\t('goddess grant me a girlfriend', 'Goddess Grant me a Girlfriend',                                                               'oel'),\n\t\t('Loiterous',                     'Loiterous',                                                                                   'oel'),\n\t\t('Parallel World Mafia',          'In A Parallel World With Random Skills, I Reluctantly Become A Mafia Boss?',                  'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\turlfrag = [\n\n\t\t('/400-years-old-virgin-demon-king-chapter-',                         '400 Years Old Virgin Demon King',                                                             'translated'),\n\t\t('/afgitmolfm-',                                                      'AFGITMOLFM',                                                                                  'translated'),\n\t\t('/ataxias-chp-',                                                     'Ataxias - Sekai no douran',                                                                   'oel'),\n\t\t('/birth-of-a-necromancer-',                                          'Birth of a Necromancer',                                                                      'oel'),\n\t\t('/cruel-king-and-the-princess',                                      'Cruel Emperor and the Princess of Prophecy',                                                  'translated'),\n\t\t('/demon-lord-and-his-hero-chapter-',                                 'Demon Lord and His Hero',                                                                     'oel'),\n\t\t('/gods-fragment-doctrine-chapter-',                                  'God\\'s Fragment: Doctrine',                                                                   'oel'),\n\t\t('/harem-of-the-dora-prince-chapter-',                                'Harem of the Dora Prince',                                                                    'oel'),\n\t\t('/hyaku-ma-no-shu-chapter-',                                         'yaku ma no Shu',                                                                              'translated'),\n\t\t('/isekai-shoukan-',                                                  'Isekai shoukan makikomu ijousha',                                                             'translated'),\n\t\t('/jintetsu-chapter-',                                                'Jintetsu',                                                                                    'oel'),\n\t\t('/last-high-human-',                                                 'Last High Human',                                                                             'oel'),\n\t\t('/legend-of-gemini-',                                                'Legend of Gemini',                                                                            'translated'),\n\t\t('/magic-bullet-chp-',                                                'Magic Bullet in Magic Land',                                                                  'translated'),\n\t\t('/minglan-',                                                         'The Legend of the Concubine\u2019s Daughter Minglan',                                              'translated'),\n\t\t('/monster-musume-chapter-',                                          'Monster Musume Harem wo Tsukurou!',                                                           'translated'),\n\t\t('/nidome-no-yuusha-',                                                'Nidome no Yuusha',                                                                            'translated'),\n\t\t('/novel/nidome-no-yuusha/',                                          'Nidome no Yuusha',                                                                            'translated'),\n\t\t('/novel/adventures-in-another-world-onward-good-friends',            'Adventures in Another World, Onward Good Friends!!!',                                         'oel'),\n\t\t('/novel/balada',                                                     'Balada: When death did not exist, nor yet Eternity Part I',                                   'oel'),\n\t\t('/novel/black-butterfly',                                            'Black Butterfly',                                                                             'oel'),\n\t\t('/novel/but-god-forced-me-to-reincarnate',                           'I Don\\'t Even Want to Live, but God Forced me to Reincarnate',                                'oel'),\n\t\t('/novel/demon-lord-and-his-hero',                                    'Demon Lord and His Hero',                                                                     'oel'),\n\t\t('/novel/dwelling-of-wild-thoughts',                                  'Dwelling of Wild Thoughts',                                                                   'oel'),\n\t\t('/novel/fantasy-school-saves-world',                                 'The School that saves the world? I have super powers!?',                                      'oel'),\n\t\t('/novel/lost-lightning-heart',                                       'Lost Lightning Heart',                                                                        'oel'),\n\t\t('/novel/other-world-assassin-life-of-a-man-who-was-a-shut-in',       'Other World Assassin Life of a Man who was a Shut-in',                                        'translated'),\n\t\t('/novel/parthios-and-yuki-fanfiction',                               'Harem of the Dora Prince',                                                                    'oel'),\n\t\t('/novel/rebirth',                                                    'Rebirth',                                                                                     'oel'),\n\t\t('/rebirth-chapter-',                                                 'Rebirth',                                                                                     'oel'),\n\t\t('/novel/the-abyss',                                                  'What would you do in the underworld\\'s Abyss? Do you run, hide or is it time to roll?',       'oel'),\n\t\t('/novel/two-fish-in-a-bottle',                                       'Two Fish in A Bottle',                                                                        'translated'),\n\t\t('/other-world-assassin-life-of-a-man-who-was-a-shut-in-chapter-',    'Other World Assassin Life of a Man who was a Shut-in',                                        'translated'),\n\t\t('/otherworld-life-of-an-assassin-who-was-a-shut-in-',                'Other World Assassin Life of a Man who was a Shut-in',                                        'translated'),\n\t\t('/talisman-emperor-chapter-',                                        'Talisman Emperor',                                                                            'translated'),\n\t\t('/the-world-inside-a-dream-chapter',                                 'The World Inside a Dream',                                                                    'oel'),\n\t\t('/the-world-is-a-bit-sweet-',                                        'The World is a bit Sweet',                                                                    'translated'),\n\t\t('/novel/the-world-is-a-bit-sweet/',                                  'The World is a bit Sweet',                                                                    'translated'),\n\t\t('/to-deprive-a-deprieved-person-',                                   'To Deprive a Deprived Person',                                                                'translated'),\n\t\t('/to-deprive-a-deprived-person-chapter-',                            'To Deprive a Deprived Person',                                                                'translated'),\n\t\t('/town-chapter-',                                                    'The Ability to make town!? ~Let\u2019s make a Japanese Town in Different world~',                  'translated'),\n\t\t('/town-chp-',                                                        'The Ability to make town!? ~Let\\'s make a Japanese Town in Different world~',                 'translated'),\n\t\t('/usw-vol',                                                          'Undead Seeks Warmth',                                                                         'translated'),\n\t\t('/we-live-in-dragons-peak-chapter-',                                 'We Live in Dragon\\'s Peak',                                                                   'translated'),\n\t\t('/wizard\\'s-tale-ch-',                                               'Wizard\\'s Tale',                                                                              'translated'),\n\t\t('/wizard\\'s-tale-chapter-',                                          'Wizard\\'s Tale',                                                                              'translated'),\n\t\t('/wizards-tale-',                                                    'Wizard\\'s Tale',                                                                              'translated'),\n\t\t('/wizards-tale-chapter-',                                            'Wizard\\'s Tale',                                                                              'translated'),\n\t\t('/world-destroying-demonic-emperor-chapter-',                        'World Destroying Demonic Emperor',                                                            'translated'),\n\t\t('/world-destroying-demonic-emperor:-chapter-',                       'World Destroying Demonic Emperor',                                                            'translated'),\n\t\t('/world-devourer-chapter-',                                          'The World Devourer',                                                                          'oel'),\n\t\t('/world-traveler-arc-',                                              'World Traveler',                                                                              'oel'),\n\t\t('/wt-arc-',                                                          'World Traveler',                                                                              'oel'),\n\t\t('rebirth.online/novel/the-tutorial-is-too-hard/',                    'The Tutorial is Too Hard',                                                                    'translated'),\n\t\t('rebirth.online/novel/the-lazy-swordmaster/',                        'The Lazy Swordmaster',                                                                        'translated'),\n\t\t('rebirth.online/novel/400-years-odl-virgin-demon-king/',             '400 Years Old Virgin Demon King',                                                             'translated'),\n\t\t('rebirth.online/novel/400-years-old-virgin-demon-king/',             '400 Years Old Virgin Demon King',                                                             'translated'),\n\t\t('rebirth.online/novel/a-fairy-tale-for-the-nephilim/',               'A Fairy Tale for the Nephilim',                                                               'oel'),\n\t\t('rebirth.online/novel/adventure-in-a-foreign-world' ,                'Adventure In A Foreign World - Legacy of The Chosen One',                                     'translated'),\n\t\t('rebirth.online/novel/afgitmolfm/',                                  'AFGITMOLFM',                                                                                  'translated'),\n\t\t('rebirth.online/novel/ataxias-sekai-no-douran/',                     'Ataxias - Sekai no douran',                                                                   'oel'),\n\t\t('rebirth.online/novel/ataxias-sekai-no-douran/',                     'Ataxias - Sekai no douran',                                                                   'oel'),\n\t\t('rebirth.online/novel/balada/',                                      'Balada: When death did not exist, nor yet Eternity Part I',                                   'oel'),\n\t\t('rebirth.online/novel/birth-of-a-necromancer/',                      'Birth of a Necromancer',                                                                      'oel'),\n\t\t('rebirth.online/novel/destination-of-crybird/',                      'Destination of Crybird',                                                                      'translated'),\n\t\t('rebirth.online/novel/earths-core' ,                                 \"Earth's Core\",                                                                                'oel'),\n\t\t('rebirth.online/novel/ex-hero' ,                                     'Ex-Hero Candidate\u2019s, who turned out to be a cheat from lv2, laid-back life in Another World', 'translated'),\n\t\t('rebirth.online/novel/god-fragment-doctrine/',                       'God\\'s Fragment: Doctrine',                                                                   'oel'),\n\t\t('rebirth.online/novel/how-to-survive-a-summoning-101' ,              'How to Survive a Summoning 101',                                                              'oel'),\n\t\t('rebirth.online/novel/how-to-survive-a-summoning-101/',              'How to Survive a Summoning 101',                                                              'oel'),\n\t\t('rebirth.online/novel/hyaku-ma-no-shu/',                             'Hyaku ma no Shu',                                                                             'translated'),\n\t\t('rebirth.online/novel/i-became-a-hero-in-a-pandemic' ,               'I became a hero in a pandemic',                                                               'translated'),\n\t\t('rebirth.online/novel/immortal-god-emperor/',                        'Immortal God Emperor',                                                                        'translated'),\n\t\t('rebirth.online/novel/inma-no-hado' ,                                'Inma no Hado',                                                                                'translated'),\n\t\t('rebirth.online/novel/isekai-ryouridou/',                            'Isekai Ryouridou',                                                                            'translated'),\n\t\t('rebirth.online/novel/isekai-shoukan-makikomu-ijousha' ,             'Isekai shoukan makikomu ijousha',                                                             'translated'),\n\t\t('rebirth.online/novel/jikuu-mahou' ,                                 'Jikuu Mahou de Isekai to Chikyuu wo Ittarikitari',                                            'translated'),\n\t\t('rebirth.online/novel/jintetsu/',                                    'Jintetsu',                                                                                    'oel'),\n\t\t('rebirth.online/novel/jintetsu/',                                    'Jintetsu',                                                                                    'translated'),\n\t\t('rebirth.online/novel/last-high-human/',                             'Last High Human',                                                                             'oel'),\n\t\t('rebirth.online/novel/legend-of-gemini' ,                            'Legend of Gemini',                                                                            'translated'),\n\t\t('rebirth.online/novel/loiterous' ,                                   'Loiterous',                                                                                   'oel'),\n\t\t('rebirth.online/novel/loli-vampire' ,                                'When I woke up in the morning I became a silver haired loli vampire',                         'translated'),\n\t\t('rebirth.online/novel/love-parameter' ,                              'Love Parameter',                                                                              'translated'),\n\t\t('rebirth.online/novel/magic-bullet-in-magic-land' ,                  'Magic Bullet in Magic Land',                                                                  'translated'),\n\t\t('rebirth.online/novel/magic-bullet-in-magic-land/',                  'Magic Bullet in Magic Land',                                                                  'translated'),\n\t\t('rebirth.online/novel/master-of-dungeon' ,                           'Master of Dungeon',                                                                           'oel'),\n\t\t('rebirth.online/novel/monster-musume' ,                              'Monster Musume',                                                                              'translated'),\n\t\t('rebirth.online/novel/my-annoying-aura' ,                            'My Annoying Aura Follows Me Into Another World',                                              'oel'),\n\t\t('rebirth.online/novel/my-god-like-adventure/',                       'My God-like Adventure in Another World',                                                      'oel'),\n\t\t('rebirth.online/novel/second-saga' ,                                 'Second Saga',                                                                                 'oel'),\n\t\t('rebirth.online/novel/sefiria' ,                                     'Prodigy Sefiria\u2019s Program to Overthrow the Higher Ranks',                                     'translated'),\n\t\t('rebirth.online/novel/tales-of-the-wickedly' ,                       'Tales of the Wickedly Vicious Underground Empire',                                            'oel'),\n\t\t('rebirth.online/novel/the-ability-to-make-town' ,                    'The Ability to make town!? ~Let\u2019s make a Japanese Town in Different world~',                  'oel'),\n\t\t('rebirth.online/novel/the-lazy-dragon/',                             'The Lazy Dragon is Working Hard',                                                             'translated'),\n\t\t('rebirth.online/novel/the-legend-of-concubine-daughter-minglan/',    'The Legend of the Concubine\u2019s Daughter Minglan',                                              'translated'),\n\t\t('rebirth.online/novel/to-deprive-a-deprived-person' ,                'To Deprive a Deprived Person',                                                                'translated'),\n\t\t('rebirth.online/novel/undead-seeks-warmth' ,                         'Undead Seeks Warmth',                                                                         'translated'),\n\t\t('rebirth.online/novel/unmotivated-hero-tale/',                       'Unmotivated Hero\\'s Tale',                                                                    'translated'),\n\t\t('rebirth.online/novel/werewolf/',                                    'Werewolf Reincarnation, Aide of Demon King',                                                  'translated'),\n\t\t('rebirth.online/novel/wizard\\'s-tale',                               'Wizard\\'s Tale',                                                                              'translated'),\n\t\t('rebirth.online/novel/world-destroying-demonic-emperor/',            'World Destroying Demonic Emperor',                                                            'oel'),\n\t\t('rebirth.online/novel/world-devourer/',                              'The World Devourer',                                                                          'oel'),\n\t\t('rebirth.online/novel/world-devourer/',                              'The World Devourer',                                                                          'oel'),            \n\t\t('rebirth.online/novel/world-traveler' ,                              'World Traveler ',                                                                             'oel'),\n\t\t('rebirth.online/novel/yuusha-isagi-no-maou-hanashi' ,                'Yuusha Isagi no Maou Hanashi',                                                                'translated'),\n\t\t('rebirth.online/novel/yuusha-isagi-no-maou-hanashi/',                'Yuusha Isagi no Maou Hanashi',                                                                'translated'),\n\t\t('rebirth.online/novel/the-good-for-nothing-seventh-young-lady/',     'The Good for Nothing Seventh Young Lady',                                                     'translated'),\n\t\t('rebirth.online/novel/the-world-inside-a-dream/',                    'The World Inside a Dream',                                                                    'oel'),\n\t\t('rebirth.online/novel/earths-core' ,                                 \"Earth's Core\",                                                                                'oel'),\n\n\t\t('/konjiki-no-moji-tsukai-chapter-',                                  'Konjiki no Word Master',                                                                      'translated'),\n\t\t('www.rebirth.online/novel/divine-genius-healer-abandoned-woman/',    'Divine Genius Healer, Abandoned Woman: Demonic Tyrant in Love with a Mad Little Consort',     'translated'),\n\n\n\t\t# Short circult some of the one-shot cruft\n\t\t('rebirth.online/novel/madmana-original-works/',          None, None),\n\t\t('rebirth.online/novel/parthios-and-yuki-fanfiction/',    None, None),\n\t\t\n\t\t# Reviews are not goddamn \"novel\"s\n\t\t('rebirth.online/novel/zhaernon-review-corner',           None, None),\n\n\t\t# Appear to now be 404-ed\n\t\t('rebirth.online/novel/my-god-like-adventure/',           None, None),\n\t\t('rebirth.online/novel/rebirth-online/',                  None, None),\n\t\t('rebirth.online/novel/the-cooking-master/',              None, None),\n\t\t('rebirth.online/novel/future-demon/',                    None, None),\n\t\t('rebirth.online/novel/dream-clinic/',                    None, None),\n\t\t('rebirth.online/novel/boring-reincarnation/',            None, None),\n\t\t('/hero-pandemic-chapter-',                               None, None),\n\n\t\t\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\tif name is None:\n\t\t\t\treturn None\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('[Second Saga] Chapter',                                                                               '[Second Saga]',                                                                              'oel'), \n\t\t('Black Jade Tiger - Chapter ',                                                                         'Black Jade Tiger',                                                                           'oel'), \n\t\t('Destination of Crybird',                                                                              'Destination of Crybird',                                                                     'translated'), \n\t\t('Immortal God Emperor',                                                                                'Immortal God Emperor',                                                                       'translated'), \n\t\t('Inma no Hado chapter',                                                                                'Inma no Hado',                                                                               'translated'), \n\t\t('Isekai Ryouridou',                                                                                    'Isekai Ryouridou',                                                                           'translated'), \n\t\t('Lazy Dragon',                                                                                         'Taidana Doragon wa Hatarakimono',                                                            'translated'), \n\t\t('Legged mimic chapter ',                                                                               'Legged Mimic',                                                                               'translated'), \n\t\t('Master of Dungeon',                                                                                   'Master of Dungeon',                                                                          'oel'), \n\t\t('Neta Chara',                                                                                          'Neta Chara',                                                                                 'translated'), \n\t\t('Not a Fairy Tale - Chapter ',                                                                         'Not a Fairy Tale',                                                                           'oel'), \n\t\t('Polymath Redux ',                                                                                     'Polymath Redux',                                                                             'oel'), \n\t\t('ROW:  TGFNSYL',                                                                                       'The Good for Nothing Seventh Young Lady',                                                    'translated'), \n\t\t('ROW: 400 years old demon king chapter',                                                               '400 Years Old Virgin Demon King',                                                            'translated'), \n\t\t('ROW: Abyss',                                                                                          'What would you do in the underworld\\'s Abyss? Do you run, hide or is it time to roll?',      'oel'), \n\t\t('ROW: AFGITMOLFM',                                                                                     'AFGITMOLFM',                                                                                 'translated'), \n\t\t('ROW: Ataxias - Chapter',                                                                              'Ataxias - Sekai no douran',                                                                  'oel'), \n\t\t('ROW: Ataxias - Chp',                                                                                  'Ataxias - Sekai no douran',                                                                  'oel'), \n\t\t('ROW: BJT ',                                                                                           'I Chose To Fake My Death',                                                                   'oel'), \n\t\t('ROW: But God Forced me to Reincarnate',                                                               'I Don\\'t Even Want to Live, but God Forced me to Reincarnate',                               'oel'), \n\t\t('ROW: DGHAW ',                                                                                         'Divine Genius Healer, Abandoned Woman: Demonic Tyrant in Love with a Mad Little Consort',    'translated'), \n\t\t('ROW: DGHAW Chapter',                                                                                  'Divine Genius Healer, Abandoned Woman: Demonic Tyrant in Love with a Mad Little Consort',    'translated'), \n\t\t('ROW: Earth\\'s Core',                                                                                  'Earth\\'s Core',                                                                              'oel'), \n\t\t('ROW: God\\'s Fragment Doctrine',                                                                       'God\\'s Fragment Doctrine',                                                                   'oel'), \n\t\t('ROW: I Chose To Fake My Death ',                                                                      'I Chose To Fake My Death',                                                                   'oel'), \n\t\t('ROW: I Don\\'t Even Want to Live, but God Forced me to Reincarnate',                                   'I Don\\'t Even Want to Live, but God Forced me to Reincarnate',                               'oel'), \n\t\t('ROW: Jikuu Mahou',                                                                                    'Jikuu Mahou de Isekai to Chikyuu wo Ittarikitari',                                           'translated'),\n\t\t('ROW: Jikuu',                                                                                          'Jikuu Mahou de Isekai to Chikyuu wo Ittarikitari',                                           'translated'),\n\t\t('ROW: Konjiki no Moji Tsukai',                                                                         'Konjiki no Moji Tsukai',                                                                     'translated'), \n\t\t('ROW: Legend of Gemini Chapter',                                                                       'Legend of Gemini',                                                                           'translated'), \n\t\t('ROW: LHH',                                                                                            'Last High Human',                                                                            'oel'), \n\t\t('ROW: Magic Bullet chapter',                                                                           'Magic Bullet',                                                                               'translated'), \n\t\t('ROW: Marielle Clarac\\'s Engagement chapter ',                                                         'Marielle Clarac\\'s Engagement',                                                              'oel'), \n\t\t('ROW: MM chapter',                                                                                     'Monster Musume',                                                                             'translated'), \n\t\t('ROW: Not a Fairy Tale - ',                                                                            'Not a Fairy Tale',                                                                           'oel'), \n\t\t('ROW: Project: New School!',                                                                           'Project: New School!',                                                                       'oel'), \n\t\t('ROW: Project:New School!',                                                                            'Project: New School!',                                                                       'oel'), \n\t\t('ROW: TGFNSYL',                                                                                        'The Good for Nothing Seventh Young Lady',                                                    'translated'), \n\t\t('ROW: The Legend Of Minglan',                                                                          'The Legend of the Concubine\u2019s Daughter Minglan',                                             'translated'),\n\t\t('ROW: The World Devourer',                                                                             'The World Devourer',                                                                         'oel'), \n\t\t('ROW: The World Inside a Dream',                                                                       'The World Inside a Dream',                                                                   'oel'), \n\t\t('ROW: TWBB ',                                                                                          'The Wolven Blade and the Bells',                                                             'oel'), \n\t\t('ROW: Undead Seeks Warmth',                                                                            'Undead Seeks Warmth',                                                                        'translated'), \n\t\t('ROW: Unmotivated Hero\\'s Tale',                                                                       'Unmotivated Hero\\'s Tale',                                                                   'translated'), \n\t\t('ROW: WDDE: Chapter',                                                                                  'World Destroying Demonic Emperor',                                                           'translated'), \n\t\t('ROW: What would you do in the underworld\\'s Abyss? Do you run, hide or is it time to roll?',          'What would you do in the underworld\\'s Abyss? Do you run, hide or is it time to roll?',      'oel'), \n\t\t('ROW: Wizard\\'s Tale Chapter',                                                                         'Wizard\\'s Tale',                                                                             'translated'), \n\t\t('ROW: World Devourer',                                                                                 'The World Devourer',                                                                         'oel'), \n\t\t('Sefi chap',                                                                                           'Sefiria',                                                                                    'translated'), \n\t\t('Sefiria chap',                                                                                        'Sefiria',                                                                                    'translated'), \n\t\t('Tensei Shoujo no Rirekisho',                                                                          'Tensei Shoujo no Rirekisho',                                                                 'translated'), \n\t\t('The Falcon Immortal',                                                                                 'The Falcon Immortal',                                                                        'oel'), \n\t\t('The Last Guild',                                                                                      'The Last Guild: Remastered',                                                                 'oel'), \n\t\t('The Wolven Blade and the Bells',                                                                      'The Wolven Blade and the Bells',                                                             'oel'), \n\t\t('TRTS(The Rude Time Stopper)',                                                                         'The Rude Time Stopper',                                                                      'oel'), \n\t\t('Werewolf chapter',                                                                                    'Werewolf chapter',                                                                           'translated'), \n\t\t('Zombie master',                                                                                       'Zombie Master',                                                                              'translated'), \n\t\t('ROW: When TS HS Boys Are Too Adaptable ',                                                             'When TS high school boys are too adaptable',                                                 'translated'), \n\t\t('ROW: Pampered Consort of the Fragrant Orchard Chapter ',                                              'Pampered Consort of the Fragrant Orchard Chapter',                                           'translated'), \n\t]                \n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif 'tdadp' in item['title'].lower() or 'To deprive a deprived person episode'.lower() in item['title'].lower():\n\t\tif vol and chp:\n\t\t\tvol = None\n\t\treturn buildReleaseMessageWithType(item, 'To Deprive a Deprived Person', vol, chp, frag=frag, postfix=postfix)\n\n\tif item['title'].startswith('[SS] '):\n\t\treturn buildReleaseMessageWithType(item, '[Second Saga]', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\n\treturn False",
  "2019-02-23T12:03:16.134923"
 ],
 "Reckless Translations": [
  "def extractRecklesstranslationsWordpressCom(item):\n\t'''\n\tParser for 'recklesstranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Fate Comes with Time',                                         'Fate Comes with Time',                                                        'translated'),\n\t\t('Chronicles of a Creative Different World Reincarnation',       'Chronicles of a Creative Different World Reincarnation',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:48:47.598086"
 ],
 "Red Dragon Translations": [
  "def extractRedDragonTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Kaettekite mo fantasy' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kaettekite mo Fantasy!?', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Red Lantern Archives": [
  "def extractRedLanternArchives(item):\n\t\"\"\"\n\t# 'Red Lantern Archives'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'Synopsis - Summaries' in item['tags']:\n\t\treturn None\n\t\t\n\tif 'Outaishihi ni Nante Naritakunai!!' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Outaishihi ni Nante Naritakunai!!', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t# Geeeez, long enough title much?\n\t\t('\u300eShirayukihime to 7 Nin no Koibito\u300fto iu 18 kin Otomege Heroin ni Tenseishiteshimatta Ore ga Zenryoku de Oujitachi kara Nigeru Hanashi',       \n\t\t\t'\u300eShirayukihime to 7 Nin no Koibito\u300fto iu 18 kin Otomege Heroin ni Tenseishiteshimatta Ore ga Zenryoku de Oujitachi kara Nigeru Hanashi', 'translated'),\n\t\t('Doro Doro Obake Ouji-sama',                                             'Doro Doro Obake Ouji-sama',                                       'translated'),\n\t\t('Isekai Trip no Wakiyaku datta Ken',                                     'Isekai Trip no Wakiyaku datta Ken',                               'translated'),\n\t\t('Outaishihi ni Nante Naritakunai!!',                                     'Outaishihi ni Nante Naritakunai!!',                               'translated'),\n\t\t('Meshitaki Onna ni Yakuza no Ai wa Omosugiru',                           'Meshitaki Onna ni Yakuza no Ai wa Omosugiru',                     'translated'),\n\t\t('Eroge Reincarnation\u3000\u3000\uff5ePlease don\u2019t collect Onee-chan\u2019s CGs\uff5e',       'Eroge Reincarnation\u3000\u3000\uff5ePlease don\u2019t collect Onee-chan\u2019s CGs\uff5e', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\n\t\t\n\treturn False",
  "2017-09-24T11:12:47.723783"
 ],
 "Reddy Creations": [
  "def extractReddyCreations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'rigel' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Rigel', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\telse:\n\t\treturn buildReleaseMessageWithType(item, 'Riddick/ Against the Heavens', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Redemption (The Underverse series)": [
  "\ndef extractTheunderverseWordpressCom(item):\n\t'''\n\tParser for 'theunderverse.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:50.806939"
 ],
 "Redwood Crossing": [
  "\ndef extractWwwRwcrossingCom(item):\n\t'''\n\tParser for 'www.rwcrossing.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-23T00:03:07.232271"
 ],
 "Refresh Translations": [
  "def extractRefreshTranslations(item):\n\t\"\"\"\n\t'Refresh Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Aspiration for Nation and Beauty' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Aspiration for Nation and Beauty', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Refuge of Delayed Souls": [
  "\ndef extractRoydssBlogspotCom(item):\n\t'''\n\tParser for 'roydss.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-18T04:24:46.004099"
 ],
 "Rei TransBlog": [
  "def extractReiTransBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Rei Translation": [
  "def extractRei435984511WordpressCom(item):\n\t'''\n\tParser for 'rei435984511.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\tif item['tags'] != ['Tak Berkategori']:\n\t\treturn False\n\n\n\tchp_prefixes = [\n\t\t\t('The villager Who Grew Up Drinking Elixir Fountain ',  'The villager Who Grew Up Drinking Elixir Fountain',               'translated'),\n\t\t\t('Another World Transfer in Game Character Episode ',   'Another World Transfer in Game Character',                        'translated'),\n\t\t\t('Manowa',  'Manowa Mamono Taosu Nouryoku Ubau Watashi Tsuyokunaru',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-12-23T08:36:56.726264"
 ],
 "Reigokai: Isekai Translations": [
  "def extractIsekaiTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Maou-sama, Retry!',       'Maou-sama, Retry!',                      'translated'),\n\t\t('QualiA',                  'QualiA \u2013 Simply wanting to meet you once more',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\tif 'Tsuki ga Michibiku Isekai Douchuu' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tsuki ga Michibiku Isekai Douchuu', vol, chp, frag=frag, postfix=postfix)\n\tif 'World Reformation' in item['tags'] or item['title'].startswith(\"WR \"):\n\t\treturn buildReleaseMessageWithType(item, 'World Reformation activities of the Dark God \u2014 Loving humans so much, I reincarnated in one \u2014', vol, chp, frag=frag, postfix=postfix)\n\tif 'Double Edge Hero' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Double Edge Hero', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False",
  "2019-03-09T05:13:39.170557"
 ],
 "Reincarnation Translations": [
  "def extractReincarnationTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"Reincarnated as a Dragon's Egg\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Reincarnated as a dragon's egg \uff5eLets aim to be the strongest\uff5e\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Reject Hero": [
  "def extractRejectHero(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Relex Translations": [
  "def extractRelexTranslations(item):\n\t'''\n\tParser for 'Relex Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Journey to the West',              'Journey to the West',           'translated'),\n\t\t('Legend of Galactic Heroes',        'Legend of Galactic Heroes',     'translated'),\n\t\t('Winds Against Progress',           'Winds Against Progress',        'translated'),\n\t\t('All you need is kill',             'All you need is kill',          'translated'),\n\t\t('Empire in Progress',               'Empire in Progress',            'translated'),\n\t\t('Romance of The Three Kingdoms',    'Romance of The Three Kingdoms', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-14T02:39:15.397626"
 ],
 "Relics of Supreme Gods": [
  "\ndef extractSkylordsiteWordpressCom(item):\n\t'''\n\tParser for 'skylordsite.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-31T06:05:04.885533"
 ],
 "Rema": [
  "\ndef extractRemanmythBlogspotCom(item):\n\t'''\n\tParser for 'remanmyth.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:13.105010"
 ],
 "Renegade Sanctuary": [
  "def extractRenegadeSanctuary(item):\n\t\"\"\"\n\tParser for 'Renegade Sanctuary'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Renna's Translations": [
  "def extractRennaSTranslations(item):\n\t\"\"\"\n\tParser for 'Renna's Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'asks' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('The Schoolgirl Detective and Eccentric Author',       'The Schoolgirl Detective and Eccentric Author',                      'translated'),\n\t\t('Picture Book of My First Love',                       'Picture Book of My First Love',                                      'translated'),\n\t\t('a solution for jealousy',                             'a solution for jealousy',                                            'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-10-20T07:21:17.080680"
 ],
 "Reondell": [
  "\ndef extractReondellWordpressCom(item):\n\t'''\n\tParser for 'reondell.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-23T05:57:12.760848"
 ],
 "RequiemTranslations": [
  "def extractRequiemtranslationsWordpressCom(item):\n\t'''\n\tParser for 'requiemtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Shiro Buta Reijou',                  'Tensei Saki ga Shoujo Manga no Shiro Buta Reijou datta',                                                                      'translated'), \n\t\t('Fiance of a Duke\\'s Daughter',       'This Time, I Became the Fiance of a Duke\u2019s Daughter. But She is Rumored to have a Bad Personality, and is Ten Years Older',   'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:00:35.178766"
 ],
 "Require: Cookie": [
  "def extractNop(dummy_item):\n\t\"\"\"\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Revfitz": [
  "def extractRevfitzCom(item):\n\t'''\n\tParser for 'revfitz.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [ \n\t\t('Existential Terror and Breakfast', 'Existential Terror and Breakfast',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-12T06:01:52.721169"
 ],
 "Rhekatan": [
  "\ndef extractRhekatanWordpressCom(item):\n\t'''\n\tParser for 'rhekatan.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-14T03:20:09.951558"
 ],
 "Rhex's Translations": [
  "def extractRhexSTranslations(item):\n\t\"\"\"\n\tParser for 'Rhex's Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Ore no Isekai Shimai ga Jichou Shinai!',     'Ore no Isekai Shimai ga Jichou Shinai!',    'translated'),\n\t\t('The Reckless Trap Magician',                 'The Reckless Trap Magician',                'translated'),\n\t\t('TRTM',                                       'The Reckless Trap Magician',                'translated'),\n\t\t('The Last Surviving Alchemist',               'The Last Surviving Alchemist',              'translated'),\n\t\t('Atelier Tanaka',                             'Atelier Tanaka',                            'translated'),\n\t\t('Yandere Goddess',                            'Yandere Megami No Hakoniwa',                'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-08-12T08:32:15.849460"
 ],
 "Rhinabolla": [
  "def extractRhinabolla(item):\n\t\"\"\"\n\t# Rhinabolla\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Hachi-nan Chapter' in item['title'] and not 'draft' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Hachinan tte, Sore wa nai Deshou!', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Riceballicious": [
  "\ndef extractRiceballiciousInfo(item):\n\t'''\n\tParser for 'riceballicious.info'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:44:33.238556"
 ],
 "Ride with madness": [
  "\ndef extractPsychmumWordpressCom(item):\n\t'''\n\tParser for 'psychmum.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:17.999415"
 ],
 "RidwanTrans": [
  "def extractRidwanTrans(item):\n\t\"\"\"\n\t# 'RidwanTrans'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Isekai Meikyuu no Saishinbu wo Mezasou' in item['title']:\n\t\textract = re.search('Chapter (\\\\d+)\\\\-(\\\\d+)', item['title'], re.IGNORECASE)\n\t\tif extract and not frag:\n\t\t\tchp = int(extract.group(1))\n\t\t\tfrag = int(extract.group(2))\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Meikyuu no Saishinbu wo Mezasou', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Rienne's": [
  "def extractR1EnneBlogspotCom(item):\n\t'''\n\tParser for 'r1enne.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"Inner Demons\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Inner Demons\", vol, chp, frag=frag, postfix=postfix)\n\t\n\tif item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, \"Inner Demons\", vol, chp, frag=frag, postfix=postfix)\n\t\n\treturn False",
  "2017-09-24T11:22:14.830887"
 ],
 "Ries Translations": [
  "def extractRiesTranslations(item):\n\t\"\"\"\n\tRies Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Rin Translation Studio": [
  "\ndef extractRintranstudioWordpressCom(item):\n\t'''\n\tParser for 'rintranstudio.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-21T05:57:28.115731"
 ],
 "Rinkage Translation": [
  "def extractRinkageTranslation(item):\n\t\"\"\"\n\t'Rinkage Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\n\n\t\t('Netooku Otoko no Tanoshii Isekai Boueki',  'Netooku Otoko no Tanoshii Isekai Boueki',                        'translated'),\n\t\t('Atelier Tanaka',                           'Atelier Tanaka',                                                 'translated'),\n\t\t('Din No Monshou',                           'Din No Monshou',                                                 'translated'),\n\t\t('Sonohi Sekai ga Kawatta',                  'Sonohi Sekai ga Kawatta',                                        'translated'),\n\t\t('Yuusha Party (WN)',                        'Yuusha Party no Kawaii Ko ga Ita no de, Kokuhaku Shite (WN)',    'translated'),\n\t\t('Yuusha Party (LN)',                        'Yuusha Party no Kawaii Ko ga Ita no de, Kokuhaku Shite (LN)',    'translated'),\n\t\t('Netooku Otoko (LN)',                       'Netooku Otoko no Tanoshii Isekai Boueki (LN)',                   'translated'),\n\t\t('Netooku Otoko (WN)',                       'Netooku Otoko no Tanoshii Isekai Boueki (WN)',                   'translated'),\n\t\t('Netooku Otoko',                            'Netooku Otoko no Tanoshii Isekai Boueki',                        'translated'),\n\t\t('Yuusha Party',                             'Yuusha Party ni Kawaii Ko ga Ita node, Kokuhaku Shitemita.',     'translated'),\n\t\t('Netooku Otoko',                            'Netooku Otoko no Tanoshii Isekai Boueki',                        'translated'),\n\t\t('Sonohi Sekai ga Kawatta',                  'Sonohi Sekai ga Kawatta',                                        'translated'),\n\t\t('Din No Monshou',                           'Din No Monshou',                                                 'translated'),\n\t\t('My Beautiful Teacher',                     'My Beautiful Teacher',                                           'translated'),\n\t\t('Yuusha Party',                             'Yuusha Party',                                                   'translated'),\n\t\t('Yuusha Party (LN)',                        'Yuusha Party no Kawaii Ko ga Ita no de, Kokuhaku Shite (LN)',    'translated'),\n\t]                \n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-01T04:40:08.850363"
 ],
 "RinrinTrans": [
  "\ndef extractRinrintransWordpressCom(item):\n\t'''\n\tParser for 'rinrintrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-27T07:41:08.163113"
 ],
 "Rinvelt House": [
  "def extractRinveltHouse(item):\n\t\"\"\"\n\tRinvelt House\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Isekai Gakkyuu',       'Chou! Isekai Gakkyuu!!',                      'translated'),\n\t\t('Rokujouma',            'Rokujouma no Shinryakusha!?',                      'translated'), \n\t\t('Saratoga',             'Mobile Fortress Saratoga ~Silvery Sword Princess Became My Servant.',                      'translated'), \n\t\t('Dandelion',            'This is the Lively Dandelion House \uff5eLandlord\u2019s and Tenants\u2019 Rent War\uff5e',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-01T03:38:57.670674"
 ],
 "Rip translations": [
  "def extractRiptranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "RipperXD": [
  "\ndef extractRipperxdBlogspotCom(item):\n\t'''\n\tParser for 'ripperxd.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-11T14:20:16.850513"
 ],
 "Rising Dragons Translation": [
  "def extractRisingDragons(item):\n\t\"\"\"\n\t# Rising Dragons Translation\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'God and Devil World' in item['tags'] and 'Release' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Shenmo Xitong', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ritoru Kohi": [
  "\ndef extractRitoruKohi(item):\n\t'''\n\tParser for 'Ritoru Kohi'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:15:51.950074"
 ],
 "River Bank's blog": [
  "def extractRiverbankHomeBlog(item):\n\t'''\n\tParser for 'riverbank.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('genius basic law',       'Genius Basic Law',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:22:53.883507"
 ],
 "Roasted Tea": [
  "def extractRoastedTea(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Rogue Apple": [
  "def extractRogueApple(item):\n\t\"\"\"\n\tRogue Apple\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Rokudenashi Translations": [
  "def extractRokudenashiTranslations(item):\n\t\"\"\"\n\t'rokudenashi Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Romantic Dreamer's Sanctuary": [
  "def extractRomanticDreamersSanctuary(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('An Interview With a Playboy',       'An Interview With a Playboy',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\treturn False",
  "2017-04-28T20:57:28.110102"
 ],
 "Ronsetsu-bu": [
  "\ndef extractRonsetsubuWordpressCom(item):\n\t'''\n\tParser for 'ronsetsubu.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:45.918570"
 ],
 "Root of Evil": [
  "def extractRootOfEvil(item):\n\t\"\"\"\n\t# 'Root of Evil'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Rose Red Camellia": [
  "\ndef extractRoseRedCamellia(item):\n\t'''\n\tParser for 'Rose Red Camellia'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:57.637206"
 ],
 "Rosetta Archive": [
  "def extractRosettaarchiveWordpressCom(item):\n\t'''\n\tParser for 'rosettaarchive.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"R.A.M.\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"R.A.M.\", vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\n\treturn False",
  "2017-07-18T02:13:25.097140"
 ],
 "Rosie's Translations": [
  "def extractRosietranslatesHomeBlog(item):\n\t'''\n\tParser for 'rosietranslates.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Secret Organization',       'Secret Organization',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-20T06:21:04.881033"
 ],
 "RosyFantasy": [
  "def extractRosyFantasy(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Yu Ren',                                                'Yu Ren',                                          'translated'),\n\t\t('Chu Wang Fei',                                          'Chu Wang Fei',                                    'translated'),\n\t\t('Seven Unfortunate Lifetimes',                           'Seven Unfortunate Lifetimes',                     'translated'),\n\t\t('All Thanks to a Single Moment of Impulse',              'All Thanks to a Single Moment of Impulse',        'translated'),\n\t\t('White Calculation',                                     'White Calculation',                               'translated'),\n\t\t(\"demon wang's gold medal status favorite fei\",           \"Demon Wang's Golden Favorite Fei\",                'translated'),\n\t\t(\"demon's wang golden favorite fei\",                      \"Demon Wang's Golden Favorite Fei\",                'translated'),\n\t\t(\"seeking happiness\",                                     \"Seeking Happiness\",                               'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['title'].startswith('DWGMSFF'):\n\t\treturn buildReleaseMessageWithType(item, \"Demon Wang's Golden Favorite Fei\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2019-02-03T12:30:44.297643"
 ],
 "RosySpell's BL Translations": [
  "\ndef extractRosyspellWordpressCom(item):\n\t'''\n\tParser for 'rosyspell.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-02T23:01:35.712987"
 ],
 "Rothramn": [
  "\ndef extractRothramnWordpressCom(item):\n\t'''\n\tParser for 'rothramn.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:44.677584"
 ],
 "Rotten Girls' Translation": [
  "def extractRottengirlstranslationWordpressCom(item):\n\t'''\n\tParser for 'rottengirlstranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Film Emperor\\'s Adorable Wife From Ancient Times',       'Film Emperor\\'s Adorable Wife From Ancient Times',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T15:00:11.549913"
 ],
 "Rotten Translations": [
  "def extractRottenTranslations(item):\n\t\"\"\"\n\tRotten Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Apocalypse Rebirth',                     'Apocalypse Rebirth: Chief, Don\u2019t Move!',                'translated'),\n\t\t('Secret Service Mysterious Doctor',       'Secret Service Mysterious Doctor',                      'translated'),\n\t\t('Full-time Sponger',                      'Full-time Sponger',                                     'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('SSMD \u2013 C. ',       'Secret Service Mysterious Doctor',                      'translated'),\n\t\t('SSMD c.',          'Secret Service Mysterious Doctor',                      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-05-21T04:09:27.170712"
 ],
 "Roxism HQ": [
  "def extractRoxism(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Bocchi Tenseiki' in item['tags'] and 'chapter' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Bocchi Tenseiki', vol, chp, frag=frag, postfix=postfix)\n\tif 'Seirei Gensouki ~Konna Sekai de Deaeta Kimi ni~' in item['tags'] and 'chapter' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Seirei Gensouki ~Konna Sekai de Deaeta Kimi ni~', vol, chp, frag=frag, postfix=postfix)\n\tif 'DHM' in item['tags'] and 'chapter' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Dungeon+Harem+Master', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\n\ttagmap = [\n\t\t('Behemoth Pet',                                          'Behemoth Pet',                                                      'translated'),\n\t\t('Ankoku Kishi Monogatari',                               'Ankoku Kishi Monogatari',                                           'translated'),\n\t\t('Real Cheat Online',                                     'Real Cheat Online',                                                 'translated'),\n\t\t('Bocchi Tenseiki',                                       'Bocchi Tenseiki',                                                   'translated'),\n\t\t('NFB',                                                   'Nozomanu Fushi no Boukensha',                                       'translated'),\n\t\t('DHM',                                                   'Dungeon+Harem+Master',                                              'translated'),\n\t\t('Eiyuu \u300aShuyaku\u300b ni Narenai Yari Tsukai',              'Eiyuu \u300aShuyaku\u300b ni Narenai Yari Tsukai',                          'translated'),\n\t\t('Seirei Gensouki ~Konna Sekai de Deaeta Kimi ni~',       'Seirei Gensouki ~Konna Sekai de Deaeta Kimi ni~',                   'translated'),\n\t\t('Parasite',                                              'I Leveled up from Being a Parasite, But I May Have Grown Too Much', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-06-06T05:32:32.825504"
 ],
 "Royal Novel": [
  "def extractRoyalNovel(item):\n\t\"\"\"\n\tRoyal Novel\n\t\"\"\"\n\tttmp = item['title']\n\tttmp = re.sub(' BK(\\\\d+)', ' book \\\\1', ttmp, flags=re.IGNORECASE)\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(ttmp)\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Hero Chronicles' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Hero Chronicles', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Philippine Lore' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Philippine Lore', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Re:Otaku Prince life in another world' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Re:Otaku Prince life in another world', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'disgraced consort' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Disgraced Consort', vol, chp, frag=frag, postfix=postfix)\n\tif 'xiao hun palace' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Xiao Hun Palace', vol, chp, frag=frag, postfix=postfix)\n\tif 'favored intelligent concubine' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Favored Intelligent Concubine', vol, chp, frag=frag, postfix=postfix)\n\tif 'Abandoned Empress' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Phoenix Overlooking the World \u2013 Who Dares to Touch My Abandoned Empress', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Royal Road L": [
  "def extractWwwRoyalroadCom(item):\n\t'''\n\tParser for 'www.royalroad.com'\n\t'''\n\treturn None",
  "2018-08-30T05:29:48.760935"
 ],
 "Royal Road Weed": [
  "def extractRoyalRoadWeed(item):\n\t\"\"\"\n\tParser for 'Royal Road Weed'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "RoyalRoadL": [
  "def extractRoyalroadlCom(item):\n\t'''\n\tParser for 'royalroadl.com'\n\t'''\n\treturn None",
  "2017-07-18T02:13:39.655114"
 ],
 "Rozen Fantasy Translations": [
  "def extractRozenFantasyTranslations(item):\n\t\"\"\"\n\t'Rozen Fantasy Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Rrrrhexia": [
  "def extractRrrrhexiatranslationHomeBlog(item):\n\t'''\n\tParser for 'rrrrhexiatranslation.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Flower',                             'Childish Flower',                                                         'translated'),\n\t\t('The villain is too beautiful',       'The villain is too beautiful',                                            'translated'),\n\t\t('Those Years I Operated a Zoo',       'Those Years I Operated a Zoo',                                            'translated'),\n\t\t('I have a Secret',                    'I have a Secret',                                                         'translated'),\n\t\t('zoo',                                'Those Years I Operated a Zoo',                                            'translated'),\n\t\t('Secret',                             'I Have A Secret (Fast Wear)',                                             'translated'),\n\t\t('Brushing Boss',                      'After Brushing the Apocalypse\\'s Boss for 363 Days',                      'translated'),\n\t\t('villain',                            'The Villain Is Too Beautiful',                                            'translated'),\n\t\t('Responsible',                        'I Don\\'t Want You To Be Responsible',                                     'translated'), \n\t\t('PRC',       'PRC',                      'translated'), \n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-02T07:32:42.757928"
 ],
 "Rubicon": [
  "\ndef extractRubiconstationWordpressCom(item):\n\t'''\n\tParser for 'rubiconstation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:44.488384"
 ],
 "Ruby Maybe": [
  "def extractRubylikesfoodWordpressCom(item):\n\t'''\n\tParser for 'rubylikesfood.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('lucia',              'Lucia',                             'translated'),\n\t\t('Volcanic Age',       'Volcanic Age',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-13T05:07:51.996263"
 ],
 "RubyMaybe": [
  "\ndef extractRubymaybetranslationsCom(item):\n\t'''\n\tParser for 'rubymaybetranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-28T13:07:24.260103"
 ],
 "Rui's Translations": [
  "def extractRuisTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'A Mismatched Marriage: Records of Washed Away Injustices' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'A Mismatched Marriage: Records of Washed Away Injustices', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ruisi Translations": [
  "def extractRuisitranslationsHomeBlog(item):\n\t'''\n\tParser for 'ruisitranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I\\'ve Transmigrated Into This Movie Before',       'I\\'ve Transmigrated Into This Movie Before',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-21T23:48:27.802508"
 ],
 "Rumanshi's Lair": [
  "def extractRumanshisLair(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Jobless'):\n\t\treturn buildReleaseMessageWithType(item, 'I Aim to Be an Adventurer with the Jobclass of \"Jobless\"', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Harem Was a Forced Goal' in item['tags'] or 'THWAFG' in item['title']:\n\t\tif 'SS' in item['title'] and not postfix:\n\t\t\tpostfix = 'Side Story'\n\t\treturn buildReleaseMessageWithType(item, 'The Harem Was a Forced Goal', vol, chp, frag=frag, postfix=postfix)\n\tif 'Isekai Cheat' in item['tags'] or 'Isekai Cheat' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Different World Reincarnation ~ Enjoying the new world as a cheat ~', vol, chp, frag=frag, postfix=postfix)\n\tif 'Other Worlds Monster Breeder' in item['tags'] or 'Other World\u2019s Monster Breeder (PokeGod)'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, \"Other World's Monster Breeder\", vol, chp, frag=frag, postfix=postfix)\n\tif 'When I returned home, what I found was fantasy!?'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Kaettekite mo Fantasy!?', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Rumor's Block": [
  "def extractRumorsBlock(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"Rumor's Block\" in item['tags'] and 'chapter' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, \"Rumor's Block\", vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Running Silver": [
  "\ndef extractRunningsilverWordpressCom(item):\n\t'''\n\tParser for 'runningsilver.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:45.131235"
 ],
 "Ruxie's MTL": [
  "\ndef extractRuxifielluBlogspotCom(item):\n\t'''\n\tParser for 'ruxifiellu.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-20T10:10:19.512011"
 ],
 "Ruze Translations": [
  "def extractRuzeTranslations(item):\n\t\"\"\"\n\t# Ruze Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Guang Zhi Zi' in item['title'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Guang Zhi Zi', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Rydenius Translations": [
  "def extractRydeniustranslationsBlogspotCom(item):\n\t'''\n\tParser for 'rydeniustranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\turlfrag = [\n\t\t('/vrmmo-summoner-hajimemashita-chapter-',  'VRMMO Summoner Hajimemashita',     'translated'),\n\t\t('/maria-sama-ga-miteru-volume-',           'Maria-sama ga Miteru',             'translated'),\n\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-13T05:43:21.898714"
 ],
 "Ryouta's Translations": [
  "def extractRyoutastranslationsWordpressCom(item):\n\t'''\n\tParser for 'ryoutastranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('S BF\\'s Daily Life',       'Everyday Life of a Dom Boyfriend',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:24:00.215157"
 ],
 "S/a/suga Translations": [
  "def extractSasugatranslationsHomeBlog(item):\n\t'''\n\tParser for 'sasugatranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Tower of Karma',       'Tower of Karma',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-12T09:06:29.939228"
 ],
 "S3ri": [
  "def extractS3Ri(item):\n\t\"\"\"\n\tParser for 'S3ri'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "SETSUNA86BLOG": [
  "def extractSETSUNA86BLOG(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "SH58'S Translation": [
  "def extractShouahang58WordpressCom(item):\n\t'''\n\tParser for 'shouahang58.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Hey, Don\\'t Act Unruly!',       'Hey, Don\\'t Act Unruly!',                      'translated'),\n\t\t('Don\\'t Act Unruly!',       'Hey, Don\\'t Act Unruly!',                      'translated'),\n\t\t('Happy Days Ties With a Knot',       'Happy Days Ties With a Knot',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-05-14T02:37:05.638474"
 ],
 "SJC Novel translation": [
  "def extractSjcnoveltranslationsWordpressCom(item):\n\t'''\n\tParser for 'sjcnoveltranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('ZKMO',       'Zhuge Kong Ming and the Outsider',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-06-16T06:08:50.012562"
 ],
 "STL Translations": [
  "def extractSTLTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Saber Translations": [
  "def extractSaberTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sabishii Desu!!": [
  "def extractSabishiidesuCom(item):\n\t'''\n\tParser for 'sabishiidesu.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Isekai Sagishi',       'The Other World Con Artist\u2019s Management Techniques',                      'translated'),\n\t\t('Saikyou no Budouka',   'Saikyou no Budouka',                                                      'translated'),\n\t\t('Saikyou no Butouka',   'Saikyou no Budouka',                                                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:00:51.022573"
 ],
 "Sabishii-desu!!": [
  "def extractSabishiidesu(item):\n\t\"\"\"\n\tSabishii desu!\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'tags' in item['tags']:\n\t\treturn None\n\t\t\n\n\ttagmap = [\n\t\t('Sono-sha. Nochi ni. . .',                   'Sono-sha. Nochi ni. . .',                   'translated'),\n\t\t('Sonomono. Nochi ni.....',                   'Sono-sha. Nochi ni. . .',                   'translated'),\n\t\t('Ore Dake Shoki Jobu Ga Ma\u014ddatta Ndaga',     'Ore Dake Shoki Jobu Ga Ma\u014ddatta Ndaga',     'translated'),\n\t\t('VRMMO Summoner Hajimemashita',              'VRMMO Summoner Hajimemashita',              'translated'),\n\t\t(\"My Room Has Become A Dungeon's Rest Area\",  \"My Room Has Become A Dungeon's Rest Area\",  'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\treturn False",
  "2017-05-05T08:35:16.112004"
 ],
 "Sad Hoovy's Inhuman Translations": [
  "\ndef extractSadhoovysinhumantranslationsWordpressCom(item):\n\t'''\n\tParser for 'sadhoovysinhumantranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-12-18T00:58:45.165066"
 ],
 "Saehrimnir Translations": [
  "\ndef extractSaehrimnirWordpressCom(item):\n\t'''\n\tParser for 'saehrimnir.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-04T00:46:10.090475"
 ],
 "Saga of Soul": [
  "def extractWwwSagaofsoulCom(item):\n\t'''\n\tParser for 'www.sagaofsoul.com'\n\t'''\n\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-30T05:26:39.310436"
 ],
 "Saiaku Translations": [
  "def extractSaiakuTranslationsBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('She Professed Herself The Pupil Of The Wiseman'):\n\t\treturn buildReleaseMessageWithType(item, 'Kenja no Deshi wo Nanoru Kenja', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Saigo Translation": [
  "def extractSaigoTranslation(item):\n\t\"\"\"\n\tParser for 'Saigo Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Saint Sky": [
  "def extractOhdamndoneBlogspotCom(item):\n\t'''\n\tParser for 'ohdamndone.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('LOTGS',       'Legend of the Great Saint',                      'translated'),\n\t\t('TIT',         'Tales of the Inter-dimensional Trickster',       'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-19T05:20:46.080800"
 ],
 "Sairen no Hebi Translations": [
  "def extractSairennohebitranslationsWordpressCom(item):\n\t'''\n\tParser for 'sairennohebitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Kanna no Kanna',       'Kanna no Kanna',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-09-12T04:26:33.968472"
 ],
 "Sakhyulations": [
  "def extractSakhyulationsWordpressCom(item):\n\t'''\n\tParser for 'sakhyulations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Villain\\'s White Lotus Halo',                          'The Villain\\'s White Lotus Halo',                                         'translated'),\n\t\t('Heaven Official\\'s Blessing',                              'Heaven Official\\'s Blessing',                                             'translated'),\n\t\t('My Former Significant Others Were All Alphas [abo]',       'My Former Significant Others Were All Alphas [abo]',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('I\u2019ve Led the Villain Astray, How Do I Fix It?',      'I\u2019ve Led the Villain Astray, How Do I Fix It?',      'translated'), \n\t\t('The Promotion Record of a Crown Princess Chapter ',  'The Promotion Record of a Crown Princess',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-30T07:02:48.450439"
 ],
 "Saku": [
  "def extractSakutranslationsBlogspotCom(item):\n\t'''\n\tParser for 'sakutranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hidden Dungeon',       'The Hidden Dungeon Only I Can Enter',   'translated'), \n\t\t('Skill Collector',      'The Skill Collector',                   'translated'), \n\t\t('Instant Death',        'Instant Death',                         'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Instant Death ',     'Instant Death',                            'translated'),\n\t\t('Hidden Dungeon ',  'The Hidden Dungeon Only I Can Enter',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif item['title'].lower().startswith(titlecomponent.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-06-05T05:23:57.159131"
 ],
 "Sakura Honyaku": [
  "def extractSakurahonyakuBlogspotCom(item):\n\t'''\n\tParser for 'sakurahonyaku.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif item['tags'] != []:\n\t\treturn None\n\t\n\ttitlemap = [\n\t\t('Hyouketsu Kyoukai no Eden Volume ',  'Hyouketsu Kyoukai no Eden',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-04T06:48:39.575803"
 ],
 "Sakura Novels": [
  "def extractWwwSakuranovelsCom(item):\n\t'''\n\tParser for 'www.sakuranovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I\\'m Back in the Other World?',       'I\\'m Back in the Other World?',                      'translated'),\n\t\t('Reincarnated Into Werewolf',          'Reincarnated Into Werewolf',                         'translated'),\n\t\t('Flash Marriage',                      'Flash Marriage',                                     'translated'),\n\t\t('Unexpected Marriage',                 'Unexpected Marriage',                                'translated'),\n\t\t('Magicraft Meister',                   'Magicraft Meister',                                  'translated'),\n\t\t('Spice of Life',                       'Spice of Life',                                      'translated'),\n\t\t('Awakening',                           'Awakening',                                          'translated'),\n\t\t('Law of the Devil',                    'Law of the Devil',                                   'translated'),\n\t\t('Help Gooogle Sensei',                 'Help Gooogle Sensei',                                'translated'),\n\t\t('Botsuraku',                           'Botsuraku Youtei Nanode, Kajishokunin wo Mezasu',    'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-23T08:55:58.490306"
 ],
 "Sakura Translations": [
  "def extractSakuratranslationsXiaoxiaonovelsCom(item):\n\t'''\n\tParser for 'sakuratranslations.xiaoxiaonovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I\\'m Back in the Other World?',       'I\\'m Back in the Other World?',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-03T06:14:28.632365"
 ],
 "Sakura no Kuni Kirschbl\u00fcte": [
  "\ndef extractKirschbluteWordpressCom(item):\n\t'''\n\tParser for 'kirschblute.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:22.963903"
 ],
 "Sakuraid Reader": [
  "def extractSakuraidreaderWordpressCom(item):\n\t'''\n\tParser for 'sakuraidreader.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('ring ring',                             'ring ring',                                            'translated'), \n\t\t('Graceling: The Girl With Time',         'Graceling: The Girl With Time',                        'oel'), \n\t\t('Imagine Online: The Game',              'Imagine Online: The Game',                             'oel'), \n\t\t('Suzaku: The Phoenix God of Fire',       'Suzaku: The Phoenix God of Fire',                      'oel'), \n\t\t('1 Soul, 2 lives',                       '1 Soul, 2 lives',                                      'oel'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-10T23:49:34.826907"
 ],
 "Sakurane": [
  "def extractSakurane(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"Reincarnated as a Dragon's Egg\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Reincarnated as a dragon's egg \uff5eLets aim to be the strongest\uff5e\", vol, chp, frag=frag, postfix=postfix)\n\tif 'novel:fate prototype sougin no fragments' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Fate Prototype Sougin no Fragments', vol, chp, frag=frag, postfix=postfix)\n\tif 'novel:shimai maou no testament' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Shimai Maou no Testament', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "SaltyTranslations": [
  "def extractSaltytranslationsWordpressCom(item):\n\t'''\n\tParser for 'saltytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('As Beautiful as Ever, the Bells Sound under the Starry Sky',       'As Beautiful as Ever, the Bells Sound under the Starry Sky',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:34:30.784067"
 ],
 "San Guniang": [
  "\ndef extractSanguniangWordpressCom(item):\n\t'''\n\tParser for 'sanguniang.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:43.155560"
 ],
 "Sandwich Kingdom": [
  "def extractSandwichKingdom(item):\n\t\"\"\"\n\t#'Sandwich Kingdom'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'sougen no okite' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sougen no Okite ~Shii yatsu ga moteru, ii buzoku ni umarekawatta zo~', vol, chp, frag=frag, postfix=postfix)\n\tif 'Q.Maou-sama A.Mamono' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Q. Maou-sama no oshigoto wa? A. Mamono musume e no tanetsuke desu', vol, chp, frag=frag, postfix=postfix)\n\tif 'kininaru kanojo wo tokoton okashi tsukusu hanshi' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kininaru Kanojo wo Totokon Okashi Tsukusu Hanashi', vol, chp, frag=frag, postfix=postfix)\n\tif 'game sekai tenseishitara' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'After Reincarnating Into This Game World I Seemed to Have Taken Over the Control of Status', vol, chp, frag=frag, postfix=postfix)\n\tif 'healing semen' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Curing incurable disease with semen', vol, chp, frag=frag, postfix=postfix)\n\tif 'Kininaru' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ki ni Naru Kanojo wo Tokoton Okashitsukusu Hanashi', vol, chp, frag=frag, postfix=postfix)\n\tif 'Betrayed Hero' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Summoned As a Hero, but I Got Betrayed', vol, chp, frag=frag, postfix=postfix)\n\tif 'yandere' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'My older sister fell in love with me and turned into a yandere, it seems', vol, chp, frag=frag, postfix=postfix)\n\tif 'TGFY' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Girl From Yesterday', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-05-10T03:54:06.736118"
 ],
 "Sangria Scans": [
  "def extractSangriatranslationsWordpressCom(item):\n\t'''\n\tParser for 'sangriatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('novel: may I ask',                'May I Ask For One Final Thing?',      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == ['Uncategorized']:\n\t\ttitlemap = [\n\t\t\t('May I Ask For One Final Thing',   'May I Ask For One Final Thing?',      'translated'),\n\t\t\t('May I Ask For One Final Thing?',  'May I Ask For One Final Thing?',      'translated'),\n\t\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:25:45.428606"
 ],
 "Santri Dream": [
  "def extractSantridreamBlogspotCom(item):\n\t'''\n\tParser for 'santridream.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('DRJ',       'Di Dalam Dunia Raja Iblis',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-07T06:35:28.690568"
 ],
 "Sarah's lil Novels Corner": [
  "def extractSarahslilNovelsCorner(item):\n\t\"\"\"\n\t\"Sarah's lil Novels Corner\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sauri's TL Blog": [
  "def extractSaurisTLBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Savage Bunny MTLs": [
  "\ndef extractSavagebunun3WordpressCom(item):\n\t'''\n\tParser for 'savagebunun3.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:29.265077"
 ],
 "Savage Divinity": [
  "def extractRuffwriterblogWordpressCom(item):\n\t'''\n\tParser for 'ruffwriterblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Savage Divinity \u2013 Chapter',         'Savage Divinity',               'oel'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\n\treturn False",
  "2017-12-26T02:30:08.186886"
 ],
 "Scanlating the Lodoss Novels": [
  "def extractScanlatingTheLodossNovels(item):\n\t\"\"\"\n\tParser for 'Scanlating the Lodoss Novels'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Scarlet Madness": [
  "def extractScarletMadness(item):\n\t\"\"\"\n\tScarlet Madness\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Kanna The Godless; The Summoned Heretic Is A Scenario Breaker',                                                            'Kanna no Kanna Itanshoukansha wa Scenario Breaker',                                                                        'translated'),\n\t\t('When I was going out from my house to stop become a Hiki-NEET after 10 years I was transported to another world',          'When I was going out from my house to stop become a Hiki-NEET after 10 years I was transported to another world',          'translated'),\n\t\t('A Second Time for an Otherworld Summoning',                                                                                'A Second Time for an Otherworld Summoning',                                                                                'translated'),\n\t\t('Blessing From the Goddess and Transfer to Another World! ~No Thanks, I Already Have a Special Power~',                     'Blessing From the Goddess and Transfer to Another World! ~No Thanks, I Already Have a Special Power~',                     'translated'), \n\t\t('Blessing from the goddess and transfer to another world! ~No thanks, I already have special power~',                       'Blessing From the Goddess and Transfer to Another World! ~No Thanks, I Already Have a Special Power~',                     'translated'), \n\t\t('Blessing From the Goddess and Transfer to Another World! ~No Thanks, I Already Have Special Powers~',                      'Blessing From the Goddess and Transfer to Another World! ~No Thanks, I Already Have a Special Power~',                     'translated'), \n\t\t('Corporate Slave Hero says He\\'s Quitting his Job',                                                                         'Corporate Slave Hero says He\\'s Quitting his Job',                                                                         'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t    \n\treturn False",
  "2018-12-13T09:57:26.111874"
 ],
 "Scary Witch": [
  "def extractScarywitchHomeBlog(item):\n\t'''\n\tParser for 'scarywitch.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('djinn',       'Talking To Djinns',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:30:11.844280"
 ],
 "Scatter Drift": [
  "def extractScatterdriftCom(item):\n\t'''\n\tParser for 'scatterdrift.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Legend of the Great Saint',       'Legend of the Great Saint',                      'translated'),\n\t\t('My Wife Is A Princess',           'My Wife Is A Princess',                      'translated'), \n\t\t('Kidnapping All Mankind',          'Kidnapping All Mankind',                      'translated'), \n\t\t('Destroyer of Ice and Fire',       'Destroyer of Ice and Fire',                   'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-06-06T04:29:41.559834"
 ],
 "Schwerer Pz": [
  "\ndef extractSchwererpanzerBlogspotCom(item):\n\t'''\n\tParser for 'schwererpanzer.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:35:32.453160"
 ],
 "Scribble Hub": [
  "def extractWwwScribblehubCom(item):\n\t'''\n\tParser for 'www.scribblehub.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif len(item['tags']) == 2:\n\t\titem_title, item_id = item['tags']\n\t\tif item_id.isdigit():\n\t\t\treturn buildReleaseMessageWithType(item, item_title, vol, chp, frag=frag, postfix=postfix, tl_type=\"oel\")\n\t\titem_id, item_title = item['tags']\n\t\tif item_id.isdigit():\n\t\t\treturn buildReleaseMessageWithType(item, item_title, vol, chp, frag=frag, postfix=postfix, tl_type=\"oel\")\n\t\t\t\n\n\ttagmap = [\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-10T03:24:49.981941"
 ],
 "Scrya Translations": [
  "def extractScryaTranslations(item):\n\t\"\"\"\n\t# Scrya Translations\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif \"So What if It's an RPG World!?\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"So What if It's an RPG World!?\", vol, chp, frag=frag)\n\tif 'My Disciple Died Yet Again' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'My Disciple Died Yet Again', vol, chp, frag=frag)\n\tif '[Disciple] Releases' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'My Disciple Died Yet Again', vol, chp, frag=frag)\n\treturn False",
  "2017-05-22T06:39:17.752722"
 ],
 "Scum Bag Translation": [
  "def extractScumBagTranslation(item):\n\t\"\"\"\n\tScum Bag Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Search Lone Wolf Translations": [
  "def extractLonewolftranslationsHomeBlog(item):\n\t'''\n\tParser for 'lonewolftranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Scattering IQ',       'I\u2019m Scattering IQ to the Protagonist [Quick Transmigration]',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:12:41.559563"
 ],
 "Sebastian Lindblad Novels": [
  "\ndef extractSebastianlindbladnovelsCom(item):\n\t'''\n\tParser for 'sebastianlindbladnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:17.107137"
 ],
 "Second Life Translations": [
  "\ndef extractSecondlifetranslationsWordpressCom(item):\n\t'''\n\tParser for 'secondlifetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-04T03:31:52.982508"
 ],
 "Second String Heroes": [
  "\ndef extractSecondstringheroesBlogspotCom(item):\n\t'''\n\tParser for 'secondstringheroes.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:25.709865"
 ],
 "Second Translation": [
  "def extractSecondtranslationWordpressCom(item):\n\t'''\n\tParser for 'secondtranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == ['Uncategorized'] and (item['title'].startswith(\"Chapter \") or item['title'].startswith(\"Volume \") or item['title'].startswith(\"V2 \")):\n\t\treturn buildReleaseMessageWithType(item, 'The Old Man Who Got a Second Round in Another World', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\t\t\n\n\treturn False",
  "2019-01-26T15:01:11.161829"
 ],
 "Secondo Korean": [
  "def extractSecondoKorean(item):\n\t\"\"\"\n\tParser for 'Secondo Korean'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Secret Identities": [
  "\ndef extractSecretidentitynovelBlogspotCom(item):\n\t'''\n\tParser for 'secretidentitynovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:35.151613"
 ],
 "Secret Land Castle": [
  "def extractSecretlandcastleXyz(item):\n\t'''\n\tParser for 'secretlandcastle.xyz'\n\t'''\n\n\tif 'Protected: ' in item['title']:\n\t\treturn None\n\t\n\tbadwords = [\n\t\t\t'Manga',\n\t\t]\n\tif any([bad in item['tags'] for bad in badwords]):\n\t\treturn None\n\n\n\t\t\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Grand Dukes Little Lady',         'The Grand Dukes Little Lady',                        'translated'),\n\t\t('I Raised an Obsessive Servant',       'I Raised an Obsessive Servant',                      'translated'),\n\t\t('The Lady Wants to Rest',              'The Lady Wants to Rest',                             'translated'),\n\t\t('Villain&#039;s Sister',               'The Villain\u2019s Sister is Suffering Again Today',      'translated'),\n\t\t('Devil Duke',                          'The Devil Duke\\'s Little Bride',                     'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-18T05:50:10.399199"
 ],
 "Segmeton Translation": [
  "def extractSegmetonTranslation(item):\n\t\"\"\"\n\t'Segmeton Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Seirei Tsukai to Shinjuu Tsukai no Shounen',       'Seirei Tsukai to Shinjuu Tsukai no Shounen', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-04-07T04:11:37.796340"
 ],
 "Sei's Paradise": [
  "def extractSeisparadiseWordpressCom(item):\n\t'''\n\tParser for 'seisparadise.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('the husband who is played broken',       'the husband who is played broken',                      'translated'),\n\t\t('family sex slave',                       'family sex slave',                                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-05T08:01:42.739253"
 ],
 "Seigi Trans": [
  "def extractSeigitransWordpressCom(item):\n\t'''\n\tParser for 'seigitrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Ex-Hero Candidate',       'Ex-Hero Candidate\\'s, Who Turned Out To Be A Cheat From Lv2, Laid-back Life In Another World',                      'translated'),\n\t\t('Kujibiki Tokushou',       'Kujibiki Tokushou: Musou H\u0101remu ken',                                                                               'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-18T06:54:05.697900"
 ],
 "Seijaku no Marionette": [
  "def extractSeijakuNoMarionette(item):\n\t'''\n\tParser for 'Seijaku no Marionette'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Koushirou Kujou the Detective Butler',       'Koushirou Kujou the Detective Butler', 'translated'),\n\t\t('The Impostor Luca and a Black Monster',       'The Impostor Luca and a Black Monster', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-04-07T04:47:07.701513"
 ],
 "Seikanji Ichizoku Translations": [
  "def extractSeikanjiIchizokuTranslations(item):\n\t\"\"\"\n\tParser for 'Seikanji Ichizoku Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sekai no Kuroba": [
  "def extractSekainoKuroba(item):\n\t\"\"\"\n\tSekai no Kuroba\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Seki \u2013 CA translations": [
  "def extractReleasethatwitchWordpressCom(item):\n\t'''\n\tParser for 'releasethatwitch.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Release that Witch',       'Release that Witch',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-27T08:03:27.591840"
 ],
 "Self Taught Japanese ": [
  "def extractSelfTaughtJapanese(item):\n\t\"\"\"\n\tSelf Taught Japanese\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'travel' in item['tags']:\n\t\treturn None\n\tif 'Japanese Study: Advanced' in item['tags']:\n\t\treturn None\n\tif 'contests' in item['tags']:\n\t\treturn None\n\tif 'test' in item['tags']:\n\t\treturn None\n\tif 'grammar' in item['tags']:\n\t\treturn None\n\tif 'research' in item['tags']:\n\t\treturn None\n\tif 'Reviews' in item['tags']:\n\t\treturn None\n\tif 'aside' in item['tags']:\n\t\treturn None\n\t\t\n\t\t\n\treturn False",
  "2019-01-05T08:02:16.690550"
 ],
 "Selfish Translation": [
  "def extractSelfishTranslation(item):\n\t\"\"\"\n\t'Selfish Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Selkin Novel": [
  "def extractSelkinNovel(item):\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Send Noobs!": [
  "def extractThisisnotmtlWordpressCom(item):\n\t'''\n\tParser for 'thisisnotmtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('NTRSaint',       'Netorare Pilgrimage of the Saint',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T06:46:00.092779"
 ],
 "SenjiQ creations": [
  "def extractSenjiQcreations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Sandstorm' in item['tags'] and 'Release' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Sandstorm Story', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'The Impact and the Invocation' in item['tags'] and 'Release' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Impact and the Invocation', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Other World Driver' in item['tags'] and 'Release' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Other World Driver', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Survivors of the Wild' in item['tags'] and 'Release' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Survivors of the Wild', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Symbiotic Lover' in item['tags'] and 'Release' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Symbiotic Lover', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\t\t\n\treturn False",
  "2017-10-21T02:35:47.309563"
 ],
 "Senpai Network": [
  "def extractNop(dummy_item):\n\t\"\"\"\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sensei Translates": [
  "def extractSenseitranslatesWordpressCom(item):\n\t'''\n\tParser for 'senseitranslates.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rise Ten Thousand Years',       'Rising: Ten Thousand Years',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tchp_prefixes = [\n\t\t\t('The Country of Juliet',  'The Country of Juliet',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-09-15T07:11:47.751232"
 ],
 "Sensei-Translation": [
  "def extractSenseitranslationBlogspotCom(item):\n\t'''\n\tParser for 'senseitranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('S. B. F. C. Chapter ',  'Salvation Began From Cafe',      'translated'),\n\t\t('S.B.F.C Chapter',       'Salvation Began From Cafe',      'translated'),\n\t\t('S.B.F.C. Chapter',      'Salvation Began From Cafe',      'translated'),\n\t\t('OPJ Chapter ',          'One Punch of Justice',           'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-10T22:40:55.983383"
 ],
 "Seonbi Novels": [
  "def extractSeonbiNovels(item):\n\t\"\"\"\n\tParser for 'Seonbi Novels'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "September Scanlations": [
  "def extractBackstage02PressbooksCom(item):\n\t'''\n\tParser for 'backstage02.pressbooks.com'\n\t'''\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\t\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-26T06:06:41.657658"
 ],
 "Serealities": [
  "\ndef extractSerealitiesCom(item):\n\t'''\n\tParser for 'serealities.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:26.743163"
 ],
 "Serene and Tranquil": [
  "def extractSereneandTranquil(item):\n\t\"\"\"\n\tSerene and Tranquil\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = {\n\n\t\t'Hello Heir'                                                                        : 'Hello, Heir',\n\t\t'Abandoned Empress'                                                                 : 'Who Dares to Touch My Abandoned Empress',\n\t\t'xiao hun palace'                                                                   : 'Xiao Hun Palace',\n\t\t'disgraced consort'                                                                 : 'Disgraced Consort',\n\t\t'Half-Tried Deity'                                                                  : 'Half-Tried Deity',\n\t\t'I Am Not The Wangfei'                                                              : 'I Am Not The Wangfei',\n\t\t'Your Majesty Please Calm Down'                                                     : 'Your Majesty Please Calm Down',\n\t\t'favored intelligent concubine'                                                     : 'Favored Intelligent Concubine',\n\t\t'Beloved Empress'                                                                   : 'Beloved Empress',\n\t\t\"The Homebody's Lover\"                                                              : \"The Homebody's Lover\",\n\t\t'Xian Wang Dotes On Wife'                                                           : 'Xian Wang Dotes On Wife',\n\t\t'Refusing to Serve Me? Then Off With Your Head'                                     : 'Refusing To Serve Me? Then Off With Your Head!',\n\t\t'Refusing To Serve Me? Then Off With Your Head!'                                    : 'Refusing To Serve Me? Then Off With Your Head!',\n\t\t'The Favored Intelligent Concubine'                                                 : 'The Favored Intelligent Concubine',\n\t\t'Phoenix Overlooking the World - Who Dares to Touch My Abandoned Empress'           : 'Phoenix Overlooking the World - Who Dares to Touch My Abandoned Empress',\n\t\t\n\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\t\t\n\t\t\n\treturn False",
  "2017-10-23T02:38:45.142989"
 ],
 "Shadow Conclave": [
  "\ndef extractShadowconclaveWordpressCom(item):\n\t'''\n\tParser for 'shadowconclave.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:17.057757"
 ],
 "Shadow Interest": [
  "\ndef extractShadowinterestWordpressCom(item):\n\t'''\n\tParser for 'shadowinterest.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:53:10.673483"
 ],
 "ShadyTranslations": [
  "def extractShadytranslationsWordpressCom(item):\n\t'''\n\tParser for 'shadytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('EMHS',                 'The Enchantress of Medicine, with the Heaven Defying Child, and the Black Belly Father',      'translated'),\n\t\t('prime assassin',       'Prime Assassin: the Evil King\u2019s Wife',                                                        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('EMHS \u2013 ',                 'The Enchantress of Medicine, with the Heaven Defying Child, and the Black Belly Father',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-09T05:53:45.712131"
 ],
 "ShainaG Translations": [
  "def extractShainagtranslationsWordpressCom(item):\n\t'''\n\tParser for 'shainagtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('The Lady\u2019s Sickly Husband Ch.',      'The Lady\\'s Sickly Husband',              'translated'),\n\t\t('Rebirth of the Tyrant\u2019s Pet Ch.',    'Rebirth of the Tyrant\\'s Pet',            'translated'),\n\t\t('The Frog Prince and the Witch Ch.',  'The Frog Prince and the Witch',           'translated'),\n\t\t('MLVF Ch.',                           'The Male Lead\u2019s Villainess Fianc\u00e9e',      'translated'),\n\t\t('RotFK Ch. ',                         'Return of the Female Knight',             'translated'),\n\t\t('Master of Dungeon',                  'Master of Dungeon',                       'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-30T07:06:06.339661"
 ],
 "Shainag 425": [
  "def extractShainag425LivejournalCom(item):\n\t'''\n\tParser for 'shainag425.livejournal.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif item['tags'] == [] and item['title'].startswith(\"CHAPTER \"):\n\t\treturn buildReleaseMessageWithType(item, \"Rebirth of the Tyrant's Pet: Regent Prince is too fierce\", vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T02:16:16.551553"
 ],
 "Shakugan no Shana Translation": [
  "\ndef extractSnstranslationWordpressCom(item):\n\t'''\n\tParser for 'snstranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:40.651094"
 ],
 "Shalvation Translations": [
  "def extractShalvationTranslations(item):\n\t\"\"\"\n\tShalvation Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Dungeon Defense',                                           'Dungeon Defense',                                           'translated'),\n\t\t('Your and My Asylum',                                        'Your and My Asylum',                                        'translated'),\n\t\t('We Should Have Slept While Only Holding Hands, and Yet?!',  'We Should Have Slept While Only Holding Hands, and Yet?!',  'translated'),\n\t\t('Million Dollar Bill',                                       'Million Dollar Bill',                                       'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\treturn False",
  "2019-06-02T07:28:05.543271"
 ],
 "Shameless Onii-san": [
  "def extractShamelessOniisan(item):\n\t\"\"\"\n\tShameless Onii-san\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Marietta',       'Marietta-hime no Konrei', 'translated'),\n\t\t('Spear Hero',     'Yari no Yuusha no Yarinaoshi', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-03-27T05:29:27.864986"
 ],
 "Sharramycats Translations": [
  "def extractSharramycatsTranslations(item):\n\t\"\"\"\n\t'Sharramycats Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('11 Ways to Forget Your Ex-Boyfriend',       '11 Ways to Forget Your Ex-Boyfriend', 'translated'),\n\t\t('The Monster Inside Of My Bed',              'The Monster Inside Of My Bed',        'translated'),\n\t\t('The Peculiars\\' Tale',                      'The Peculiars\\' Tale',                'translated'),\n\t\t('ARG',                                       'A. R. G.',                            'translated'),\n\t\t('Legend of Gemini',                          'Legend of Gemini',                    'translated'),\n\t\t('Kaliskis',                                  'Kaliskis',                            'translated'),\n\t\t('She Died',                                  'She Died',                            'translated'),\n\t\t('Ice Goddess',                               'Ice Goddess',                         'translated'),\n\t\t('The Friendly Wedding',                      'The Friendly Wedding',                'translated'),\n\t\t('Forlorn Madness',                           'Forlorn Madness',                     'translated'),\n\t\t('Hidden Inside The Academy',                 'Hidden Inside The Academy',           'translated'),\n\t\t('The Se\u00f1orita',                              'The Se\u00f1orita',                        'translated'),\n\t\t('School Of Myths',                           'School of Myths',                     'translated'),\n\t\t('The Guys Inside of My Bed',                 'The Guys Inside of My Bed',           'translated'),\n\t\t('The Guy Inside Of My Bed',                  'The Guys Inside of My Bed',           'translated'),\n\t\t('Titan Academy Of Special Abilities',        'Titan Academy Of Special Abilities',  'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-11-05T03:48:57.837842"
 ],
 "Shazi Sultan": [
  "def extractShazissultanWordpressCom(item):\n\t'''\n\tParser for 'shazissultan.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Bewitching Prince Spoils His Wife',       'Bewitching Prince Spoils His Wife',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:50:38.082945"
 ],
 "SheepTranslator": [
  "def extractSheeptranslator(item):\r\n\t'''\r\n\tParser for 'SheepTranslator'\r\n\t'''\r\n\r\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\r\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\r\n\t\treturn None\r\n\r\n\ttagmap = [\r\n\t\t('Commushou no Ore ga, Koushou Skill ni Zenfurishite Tenseishita Kekka',       'Commushou no Ore ga, Koushou Skill ni Zenfurishite Tenseishita Kekka',                      'translated'),\r\n\t\t('Pretty Girl Wants to Become a Good Girl',       'Pretty Girl Wants to Become a Good Girl',                      'translated'),\r\n\t\t('PRC',       'PRC',                      'translated'),\r\n\t\t('Loiterous', 'Loiterous',                'oel'),\r\n\t]\r\n    \r\n\tfor tagname, name, tl_type in tagmap:\r\n\t\tif tagname in item['tags']:\r\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\r\n\r\n\r\n\ttitlemap = [\r\n\t\t('How to Live in a Different World Chapter',                          'How to Live in a Different World',                                'translated'),\r\n\t\t('That Day The World Changed \u2013 Chapter',                              'That Day The World Changed',                                      'translated'),\r\n\t\t('That Day The World Changed Chapter',                                'That Day The World Changed',                                      'translated'),\r\n\t\t('Aim the Deepest Part of the Different World Labyrinth (WN)',        'Aim the Deepest Part of the Different World Labyrinth (WN)',      'translated'),\r\n\t\t('Arcadia\u2019s Labyrinth Chapter',                                       'Arcadia\\'s Labyrinth',                                            'translated'),\r\n\t]\r\n\r\n\tfor titlecomponent, name, tl_type in titlemap:\r\n\t\tif item['title'].lower().startswith(titlecomponent.lower()):\r\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\r\n\r\n\treturn False",
  "2019-03-26T22:39:53.172914"
 ],
 "Shell2ly C-Novel Site": [
  "def extractShell2lyCNovelSite(item):\n\t\"\"\"\n\t# 'Shell2ly C-Novel Site'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tfragfound = re.search('\\\\((\\\\d+)\\\\)', item['title'])\n\tif not frag and fragfound:\n\t\tfrag = int(fragfound.group(1))\n\tif 'MMSTEM' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Madam, Master Said to Eat Meal', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Shem's Translation": [
  "\ndef extractShem138798316WordpressCom(item):\n\t'''\n\tParser for 'shem138798316.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T09:10:24.313521"
 ],
 "Shen Yuan Lang MTL": [
  "def extractShenYuanLangMTL(item):\n\t\"\"\"\n\tShen Yuan Lang MTL\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "ShenHua Translations": [
  "def extractShenhuatranslationsWordpressCom(item):\n\t'''\n\tParser for 'shenhuatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rebirth of MC',                    'Rebirth of MC',                                                   'translated'), \n\t\t('Qinglian Chronicles',              'Qinglian Chronicles',                                             'translated'), \n\t\t('It\\'s Actually Not Easy...',       'It\\'s Actually Not Easy Wanting to be a Supporting Male Lead',    'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-03-29T04:31:28.300108"
 ],
 "Sherma Translations": [
  "def extractShermaTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Shibb's Den": [
  "def extractShibbsdenCom(item):\n\t'''\n\tParser for 'shibbsden.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('GOOD CHILD',       'Reborn as a Good Child',                      'translated'),\n\t\t('LUCKY CAT',       'I am the Lucky Cat of an MMORPG',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:06:28.442611"
 ],
 "Shibuya Psychic Research": [
  "def extractNop(dummy_item):\n\t\"\"\"\n\n\t\"\"\"\n\treturn None\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Shikkaku Translations": [
  "def extractShikkakuTranslations(item):\n\t\"\"\"\n\t# Shikkaku Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'kuro no maou' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Kuro no Maou', vol, chp, frag=frag, postfix=postfix)\n\tif 'KENS' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kamigoroshi no Eiyuu to Nanatsu no Seiyaku', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Shikkarito": [
  "def extractShikaritoWordpressCom(item):\n\t'''\n\tParser for 'shikarito.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Kusuriya no Hitorigoto',       'Kusuriya no Hitorigoto',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-13T00:03:52.267084"
 ],
 "ShimizuNovel": [
  "\ndef extractShimizunovelWordpressCom(item):\n\t'''\n\tParser for 'shimizunovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:34.070327"
 ],
 "Shin Sekai Yori \u2013 From the New World": [
  "def extractShinSekaiYori(item):\n\t\"\"\"\n\n\t\"\"\"\n\tchStr = ''\n\tfor tag in item['tags']:\n\t\tif 'chapter' in tag.lower():\n\t\t\tchStr = chStr + ' ' + tag\n\tchStr += ' ' + item['title']\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(chStr)\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif frag:\n\t\tfrag = frag / 10\n\treturn buildReleaseMessageWithType(item, 'Shin Sekai yori', vol, chp, frag=frag, postfix=postfix)\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Shin Translations": [
  "def extractShinTranslations(item):\n\t\"\"\"\n\t# Shin Translations\n\n\t\"\"\"\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'THE NEW GATE' in item['tags'] and not 'Status Update' in item['tags']:\n\t\t\n\t\treturn buildReleaseMessageWithType(item, 'The New Gate', vol, chp, frag=frag)\n\t\t\n\treturn False",
  "2017-05-05T08:45:13.064146"
 ],
 "Shine Translation": [
  "def extractShineTranslation(item):\n\t\"\"\"\n\tShine Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Invincible Level up '):\n\t\treturn buildReleaseMessageWithType(item, 'Invincible Level Up', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Shinkai Translations": [
  "def extractShinkaitranslationsWordpressCom(item):\n\t'''\n\tParser for 'shinkaitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Murabito Desu Ga Nani Ka?',       'Murabito Desu Ga Nani Ka?',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-08-12T07:33:38.384524"
 ],
 "Shinku Novels": [
  "def extractWwwShinkunovelsCom(item):\n\t'''\n\tParser for 'www.shinkunovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttag_title_map = [\n\t\t('Hidden Dungeon',                                'The Hidden Dungeon Only I Can Enter',                                              'translated'),\n\t\t('Black Summoner',                                'Black Summoner',                                                                   'translated'),\n\t\t('Levelmaker',                                    'Levelmaker',                                                                       'translated'),\n\t\t('Arms Otome',                                    'Arms Otome',                                                                       'translated'),\n\t\t('Inumimi Dorei',                                 'Inumimi Dorei',                                                                    'translated'),\n\t\t('Underground Dungeon',                           'Underground Dungeon',                                                              'translated'),\n\t\t('Former hero adventurer',                        'Former Hero Adventurer, Disciple Slave Girl',                                      'translated'),\n\t\t('No Fatigue',                                    'No Fatigue',                                                                       'translated'),\n\t\t('Seijo no Kaifuku',                              'Seijo no Kaifuku Mahou ga Dou Mitemo Ore no Rekkaban na Ken ni Tsuite',            'translated'),\n\t\t('Middle Aged Adventurer Kein\u2019s good deed',       'Middle Aged Adventurer Kein\u2019s good deed',                                          'oel'),\n\t\t('Middle Aged Adventurer Kein\\'s good deed',      'Middle Aged Adventurer Kein\u2019s good deed',                                          'oel'),\n\t\t('Curse Sword Master',                            'Cursed Sword Master',                                                              'translated'),\n\t\t('Curse Sword Master Chapter ',                   'Cursed Sword Master',                                                              'translated'),\n\t\t('No Fatigue Chapter',                            'No Fatigue',                                                                       'translated'),\n\t\t('Seijo no Kaifuku Chapter',                      'Seijo no Kaifuku Mahou ga Dou Mitemo Ore no Rekkaban na Ken ni Tsuite',            'translated'),\n\t\t('Seijo no Kaifuku Release',                      'Seijo no Kaifuku Mahou ga Dou Mitemo Ore no Rekkaban na Ken ni Tsuite',            'translated'),\n\t\t('The Strongest Fairy Adventurer',                'Is the strongest in another world a hero? a demon lord? No! it\u2019s a fairy desu!',   'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tag_title_map:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif 'Seijo no Kaifuku Chapter ' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Seijo no Kaifuku Mahou ga Dou Mitemo Ore no Rekkaban na Ken ni Tsuite', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\n\n\tfor titlecomponent, name, tl_type in tag_title_map:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-22T06:11:41.584692"
 ],
 "Shinsori Translations": [
  "def extractShinsori(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif \"shinsori.com/glossary/\" in item['linkUrl'].lower():\n\t\treturn None\n\t\n\tif 'Patrons' in item['title'] or 'Patreon' in item['title']:\n\t\treturn None\n\tif 'Teaser #' in item['title']:\n\t\treturn None\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\n\ttag_map = [\n\t\t('QA',                                                          'GMs, QA Your Worlds First!',                                                               'oel'),\n\t\t('Draconia',                                                    'Draconia',                                                                                 'oel'),\n\t\t('Kindred',                                                     'Kindred',                                                                                  'oel'),\n\t\t('Charmed?',                                                    'Charmed?',                                                                                 'oel'),\n\t\t('Silver Death',                                                'Silver Death',                                                                             'oel'),\n\t\t('Silver Death (Re)',                                           'Silver Death (Re)',                                                                        'oel'),\n\t\t('Snowborn',                                                    'Snowborn',                                                                                 'oel'),\n\t\t\n\t\t('Reincarnated Princess',                                       'Reincarnated Princess',                                                                    'translated'),\n\t\t('Undead Seeks Warmth',                                         'Undead Seeks Warmth',                                                                      'translated'),\n\t\t('Frontiers',                                                   'Frontiers',                                                                                'translated'),\n\t\t('Doll Dungeon',                                                'Doll Dungeon',                                                                             'translated'),\n\t\t('Boku wa Chiisana Maou-sama',                                  'Boku wa Chiisana Maou-sama',                                                               'translated'),\n\t\t('Wagamama Onna ni Tensei Shita yo',                            'Wagamama Onna ni Tensei Shita yo',                                                         'translated'),\n\t\t('Race: Various',                                               'Occupation: Adventurer ; Race: Various',                                                   'translated'),\n\t\t('100 Cheat Skills',                                            '100 Cheat Skills',                                                                         'translated'),\n\t\t('Wagamama Onna',                                               'Wagamama Onna ni Tensei Shita yo',                                                         'translated'),\n\t\t('Tensei Reijou',                                               'Tensei Reijou wa Yancha Suru',                                                             'translated'),\n\t\t('Yuusha ga Onna',                                              'Yuusha Ga Onna Da to Dame Desu Ka?',                                                       'translated'),\n\t\t('Isekai Shoukan ni Makikomareta Obaachan',                     'Isekai Shoukan ni Makikomareta Obaachan',                                                  'translated'),\n\t\t('Raising Slaves',                                              'Raising Slaves in Another World While on a Journey',                                       'translated'),\n\t\t('Vampire',                                                     'Tensei Shitara Kyuuketsuki-san Datta Ken',                                                 'translated'),\n\t\t('Tensei Shitara Kyuuketsuki-san Datta Ken',                    'Tensei Shitara Kyuuketsuki-san Datta Ken',                                                 'translated'),\n\t\t('Princess',                                                    'The Great Nation Remodeling of Reincarnated Princess ~Let\u2019s Build an Unrivalled Country~', 'translated'),\n\t\t('Isekai Yururi Kikou',                                         'Isekai Yururi Kikou',                                                                      'translated'),\n\t\t('Chiisana Maou-sama',                                          'Boku wa Chiisana Maou-sama',                                                               'translated'),\n\t\t('Obaachan',                                                    'Isekai Shoukan ni Makikomareta Obaachan',                                                  'translated'),\n\t\t('Nigotta Hitomi no Lilianne',                                  'Nigotta Hitomi no Lilianne',                                                               'translated'),\n\t\t('Bones',                                                       'Hone no aru Yatsu',                                                                        'translated'),\n\t\t('Onsen',                                                       'Isekai Onsen e Youkoso!',                                                                  'translated'),\n\t\t('Isekai Tensei',                                               'Isekai Tensei Harem',                                                                      'translated'),\n\t\t('Lilianne',                                                    'Nigotta Hitomi no Lilianne',                                                               'translated'),\n\t\t('Hone no aru Yatsu',                                           'Hone no aru Yatsu',                                                                        'translated'),\n\t\t('Isekai Onsen e Youkoso!',                                     'Isekai Onsen e Youkoso!',                                                                  'translated'),\n\t\t('Avoid the Death Route!',                                      'Avoid the Death Route!',                                                                   'translated'),\n\t\t('Isekai Tensei Harem',                                         'Isekai Tensei Harem',                                                                      'translated'),\n\t\t('The Great Nation Remodeling',                                 'Great Nation Remodeling of a Reincarnated Princess',                                       'translated'),\n\t\t('Obaachan (28) is Free',                                       'Obaachan (28) is Free',                                                                    'translated'),\n\t\t('Isekai Risshiden',                                            'Isekai Risshiden',                                                                         'translated'),\n\t\t('Yuusha Ga Onna Da to Dame Desu Ka?',                          'Yuusha Ga Onna Da to Dame Desu Ka?',                                                       'translated'),\n\t\t('Tensei Reijou wa Yancha Suru',                                'Tensei Reijou wa Yancha Suru',                                                             'translated'),\n\t\t('Raising Slaves in Another World',                             'Raising Slaves on the Other World While on a Journey',                                     'translated'),\n\t\t('Swain Hakushaku Reijou',                                      'Swain Hakushaku Reijou no Chiisana Oujisama',                                              'translated'),\n\t\t('Mezametara Chikashitsu!?',                                    'Mezametara Chikashitsu!? ~Tensei Shoujo no Yume no Saki~',                                 'translated'),\n\t\t('Mezametara Chikashitsu!? ~Tensei Shoujo no Yume no Saki~',    'Mezametara Chikashitsu!? ~Tensei Shoujo no Yume no Saki~',                                 'translated'),\n\t\t('Shomin no Aji',                                               'Tensei Reijou wa Shomin no Aji ni Uete Iru',                                               'translated'),\n\t\t('Akuyaku ni Nari Sugita',                                      'Akuyaku ni Nari Sugita',                                                                   'translated'),\n\t\t('demon lord wants to laze',                                    'Demon Lord Wants to Laze',                                                                 'translated'),\n\t\t('Heroine of the Broken Engagement',                            'Heroine of the Broken Engagement',                                                         'translated'),\n\t\t('Child Rearing Hero',                                          'Child Rearing Hero and Children of the Demon King',                                        'translated'),\n\t]\n\n\tfor tag, sname, tl_type in tag_map:\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag, tl_type=tl_type)\n\n\n\ttitle_map = [\n\t\t('Kindred',                                            'Kindred',                                                   'oel'),\n\t\t('Charmed?',                                           'Charmed?',                                                  'oel'),\n\t\t('Silver Death',                                       'Silver Death',                                              'oel'),\n\t\t\n\t\t('Yuusha ga onna da to dame desu ka?',                 'Yuusha ga onna da to dame desu ka?',                        'translated'),\n\t\t('The Bears Bear a Bare Kuma',                         'Kuma Kuma Kuma Bear',                                       'translated'),\n\t\t('Kuma Kuma Kuma Bear',                                'Kuma Kuma Kuma Bear',                                       'translated'),\n\t\t('Doll Dungeon',                                       'Doll Dungeon',                                              'translated'),\n\t\t('Levelmaker \u2013',                                       'Levelmaker -Raising Levels While Living in Another World-', 'translated'),\n\t\t('Isekai Tensei Harem',                                'Isekai Tensei Harem',                                       'translated'),\n\t\t('Undead Seeks Warmth',                                'Undead Seeks Warmth',                                       'translated'),\n\t\t('Raising Slaves in Another World While on a Journey', 'Raising Slaves in Another World While on a Journey',        'translated'),\n\t\t('Occupation: Adventurer ; Race: Various',             'Occupation: Adventurer ; Race: Various',                    'translated'),\n\t\t('My Engagement was Annulled (lol)',                   'My Engagement was Annulled (lol)',                          'translated'),\n\t\t('Akuyaku Reijou ni Nanka Narimasen',                  'Akuyaku Reijou ni Nanka Narimasen. Watashi wa\u300eFutsuu\u300fno Koushaku Reijou desu!',                    'translated'),\n\t]\n\n\tfor title_fragment, sname, tl_type in title_map:\n\t\tif title_fragment in item['title']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-07T00:46:54.458837"
 ],
 "Shinzou Translations": [
  "def extractShinzoutlWordpressCom(item):\n\t'''\n\tParser for 'shinzoutl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"I Bought a Girl\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"I Bought a Girl\", vol, chp, frag=frag, postfix=postfix)\n\n\tif \"Kisei Kanojo Sana\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Kisei Kanojo Sana\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-06-16T06:33:36.456145"
 ],
 "Ship sail": [
  "\ndef extractSailsshipWordpressCom(item):\n\t'''\n\tParser for 'sailsship.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:42.588881"
 ],
 "Shiraei": [
  "\ndef extractShiraeiWordpressCom(item):\n\t'''\n\tParser for 'shiraei.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-21T05:57:27.258860"
 ],
 "Shirein": [
  "\ndef extractShireinWordpressCom(item):\n\t'''\n\tParser for 'shirein.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-04T00:45:40.642785"
 ],
 "Shiro Trans": [
  "def extractShiroritranslationsWordpressCom(item):\n\t'''\n\tParser for 'shiroritranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('okitara 20nen',           'Okitara 20nen nandesukedo! Akuyaku reijo no sono ato no sono ato',                                                                              'translated'),\n\t\t('seijo ni narunode',       'Seijo ni Narunode Nidoume no Jinsei wa Katte ni Sasetemoraimasu ~Outaihi wa, Zensei de Watashi wo Futta Koibito Deshita~',                      'translated'),\n\t\t('nazeboku',                'Naze Boku no Sekai wo Dare mo Oboeteinainoka?',                                                                                                 'translated'),\n\t\t('mattari',                 'Reijou wa Mattari wo Goshomou',                                                                                                                 'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-13T04:22:10.837135"
 ],
 "Shiro Translation": [
  "def extractShiroTranslation(item):\n\t\"\"\"\n\tParser for 'Shiro Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Common Sense of a Duke\\'s Daughter',       'Common Sense of a Duke\\'s Daughter', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-03-27T03:17:40.125731"
 ],
 "ShiroKun's Translation": [
  "def extractShirokunsCom(item):\n\t'''\n\tParser for 'shirokuns.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Living in this World with Cut & Paste',                                            'Living in this World with Cut & Paste',                                                           'translated'), \n\t\t('Although I am only level 1, but with this unique skill, I am the strongest',       'Although I Am Only Level 1, but with This Unique Skill, I Am the Strongest',                      'translated'), \n\t\t('The whole class was transported to a different world except for me',               'My Entire Class Was Summoned to Another World except for Me',                                     'translated'), \n\t\t('Fantasy falls',                                                                    'Fantasy Falls',                                                                                   'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-07T07:32:46.454491"
 ],
 "Shirohane": [
  "def extractShirohane(item):\n\t\"\"\"\n\tParser for 'Shirohane'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Shirokuma Tensei": [
  "\ndef extractShirokumamachinetranslationWordpressCom(item):\n\t'''\n\tParser for 'shirokumamachinetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:55.855320"
 ],
 "Shiroyukineko Translations": [
  "def extractShiroyukineko(item):\n\t\"\"\"\n\t# 'Shiroyukineko Translations'\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Announcements' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('DOP',                                                    'Descent of the Phoenix: 13 Year Old Princess Consort',    'translated'),\n\t\t('Descent of the Phoenix: 13 Year Old Princess Consort',   'Descent of the Phoenix: 13 Year Old Princess Consort',    'translated'),\n\t\t('LLS',                                                    'Long Live Summons!',                                      'translated'),\n\t\t('Long Live Summons!',                                     'Long Live Summons!',                                      'translated'),\n\t\t('Virtual World: Unparalled Under The Sky',                'Virtual World: Unparalleled under the Sky',               'translated'),\n\t\t('VW:UUTS',                                                'Virtual World: Unparalleled under the Sky',               'translated'),\n\t\t('Ze Tian Ji',                                             'Ze Tian Ji',                                              'translated'),\n\t\t('The Strongest Dan God',                                  'The Strongest Dan God',                                   'translated'),\n\t\t('Scriptures of the Great Emperor',                        'Scriptures of the Great Emperor',                         'translated'),\n\t\t('Dragon-Blooded War God',                                 'Dragon-Blooded War God',                                  'translated'),\n\t\t('Godly Model Creator',                                    'Godly Model Creator',                                     'translated'),\n\t\t('Super Brain Telekinesis',                                'Super Brain Telekinesis',                                 'translated'),\n\t\t('Shadow Rogue',                                           'Shadow Rogue',                                            'translated'),\n\t\t('hacker',                                                 'HacKer',                                                  'translated'),\n\t\t('Return of the Net Gaming Monarch',                       'Return of the Net Gaming Monarch',                        'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif 'ZTJ Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Ze Tian Ji', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('DOP Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Descent of the Phoenix: 13 Year Old Princess Consort', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\treturn False",
  "2017-08-12T08:36:11.048367"
 ],
 "Shiru Sekai Translations": [
  "def extractShirusekaiCom(item):\n\t'''\n\tParser for 'shirusekai.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Chiyu Mahou',       'Chiyu Mahou no Machigatta Tsukaikata ~Senjou wo Kakeru Kaifuku Youin~',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-01-11T05:17:34.158099"
 ],
 "Shleepy": [
  "\ndef extractSleepysheep123WordpressCom(item):\n\t'''\n\tParser for 'sleepysheep123.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:45.291764"
 ],
 "Shoko Translates": [
  "def extractShokotranslatesWordpressCom(item):\n\t'''\n\tParser for 'shokotranslates.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('blooming romance',       'Blooming Bomance',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:35:38.253532"
 ],
 "Shokyuu Translations": [
  "def extractShokyuuTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Short Term Translations": [
  "def extractSttranslationsWordpressCom(item):\n\t'''\n\tParser for 'sttranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Prodigal Son',       'Quick Transmigration The Prodigal Son',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T08:14:16.111264"
 ],
 "Shosetsu Ninja": [
  "\ndef extractShosetsuNinja(item):\n\t'''\n\tParser for 'shosetsu.ninja'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:56.588860"
 ],
 "Shouldnt be here blog": [
  "def extractShouldntbehereblog(item):\n\t\"\"\"\n\tShouldnt be here blog\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Shova Translations": [
  "def extractShovaTranslations(item):\n\t\"\"\"\n\tShova Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Shreya's MTL": [
  "\ndef extractShreyacasaWordpressCom(item):\n\t'''\n\tParser for 'shreyacasa.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-30T01:59:41.854142"
 ],
 "Shroud of Gossamer": [
  "\ndef extractShroudofgossamerCom(item):\n\t'''\n\tParser for 'shroudofgossamer.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-17T09:06:17.326191"
 ],
 "Shujinkou Translations": [
  "def extractShujinkouCom(item):\n\t'''\n\tParser for 'shujinkou.com'\n\t'''\n\t\n\tif 'Anime' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Isekai Kaeri no Ossan',       'Isekai Kaeri no Ossan wa, Fusei Sukiru de Fathercon Musume-tachi o Tororori ni',                      'translated'),\n\t\t('Let\\'s be an Adventurer',     'Let\\'s be an Adventurer',                                                                             'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-31T03:54:16.021452"
 ],
 "Shunraiki Translations": [
  "def extractShunraikitranslationsHomeBlog(item):\n\t'''\n\tParser for 'shunraikitranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Positive Energy System',          'Positive Energy System',                         'translated'),\n\t\t('PES',                             'Positive Energy System',                         'translated'),\n\t\t('More Than A Few Blessings',       'More Than A Few Blessings',                      'translated'),\n\t\t('MTaFB',                           'More Than A Few Blessings',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-02T12:24:43.513880"
 ],
 "Shurim's 3am Translations": [
  "def extractShurimtranslationWordpressCom(item):\n\t'''\n\tParser for 'shurimtranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif '(manga)' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t(\"A Wild Last Boss Appeared\",                   \"A Wild Last Boss Appeared\",                 \"translated\"),\n\t\t(\"Tensei Shitara Slime Datta Ken\",              \"Tensei Shitara Slime Datta Ken\",            \"translated\"),\n\t\t(\"Konjiki no Moji Tsukai\",                      \"Konjiki no Moji Tsukai\",                    \"translated\"),\n\t\t(\"Owarimonogatari\",                             \"Owarimonogatari\",                           \"translated\"),\n\t\t(\"Monogatari Series\",                           \"Monogatari Series\",                         \"translated\"),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('A Wild Last Boss Appeared: Chapter',  'A Wild Last Boss Appeared',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\tif item['title'].startswith('Owarimonogatari') and 'Completed' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, \"Owarimonogatari\", vol, chp, frag=frag, postfix=postfix)\n\t\t\n\n\treturn False",
  "2018-07-22T09:04:47.932624"
 ],
 "Shuuchaku Love": [
  "def extractThousandsilentstarsCom(item):\n\t'''\n\tParser for 'thousandsilentstars.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('otouto wo suki ni narimashita',       'Otouto wo Suki ni Narimashita',                      'translated'),\n\t\t('otoko darake no isekai trip',         'Otoko Darake no Isekai Trip ~BL wa Okotowari~',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-04-23T04:32:35.504768"
 ],
 "Shuuen Scanlations": [
  "\ndef extractShuuenScansTumblrCom(item):\n\t'''\n\tParser for 'shuuen-scans.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:15:52.717133"
 ],
 "Shuumatsu Translations": [
  "def extractShuumatsutlWordpressCom(item):\n\t'''\n\tParser for 'shuumatsutl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('S Rank Girl',       'My Daughter who Left for the Capital to Become an Adventurer Reached S Rank',                      'translated'),\n\t\t('SRG',               'My Daughter who Left for the Capital to Become an Adventurer Reached S Rank',                      'translated'),\n\t\t('PRC',               'PRC',                      'translated'),\n\t\t('Loiterous',         'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-17T06:21:59.459254"
 ],
 "Siber Owl": [
  "\ndef extractSiberOwlCom(item):\n\t'''\n\tParser for 'siber-owl.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-25T05:55:23.381646"
 ],
 "SicillTranslates": [
  "def extractSicilltranslates(item):\n\t'''\n\tParser for 'SicillTranslates'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\t\t\n\ttagmap = [\n\t\t('So What if It\\'s an RPG World!?',       'So What if It\\'s an RPG World!?', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-04-06T05:00:08.346432"
 ],
 "Sigma Novel": [
  "def extractWwwSigmanovelCom(item):\n\t'''\n\tParser for 'www.sigmanovel.com'\n\t'''\n\tif 'Teasers' in item['tags']:\n\t\treturn None\n\t\t\n\t\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Martial God Conquerer',          'Martial God Conquerer',                         'translated'),\n\t\t('World Controlling God',          'World Controlling God',                         'translated'),\n\t\t('Above The Skies',                'Above The Skies',                               'translated'),\n\t\t('Sage Emperor',                   'Sage Emperor',                                  'translated'),\n\t\t('The Mysterious Apartment',       'The Mysterious Apartment',                      'translated'),\n\t\t('Rebirth in a Perfect Era',       'Rebirth in a Perfect Era',                      'translated'),\n\t\t('Immortal',                       'Immortal',                                      'translated'),\n\t\t('Great Tyrannical Deity',         'Great Tyrannical Deity',                        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-04T03:28:11.214617"
 ],
 "Sigma's Crib": [
  "def extractSigmascribWordpressCom(item):\n\t'''\n\tParser for 'sigmascrib.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Welcome to the Nightmare Games',       'Welcome to the Nightmare Games',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-02T05:48:21.266052"
 ],
 "Silavin's Translations": [
  "def extractSilavinsTranslations(item):\n\t\"\"\"\n\t\"Silavin's Translations\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Martial Peak' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial Peak', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Silent Fish": [
  "def extractSilentfishHomeBlog(item):\n\t'''\n\tParser for 'silentfish.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('RMS',                              'Reincarnation of Master Su',            'translated'),\n\t\t('Reincarnation of Master Su',       'Reincarnation of Master Su',            'translated'),\n\t\t('IAAA',                             'I Am An Alpha',                         'translated'),\n\t\t('TBN',                              'Tales of the Blood Night',              'translated'),\n\t\t('WUTYO',                            'Waiting Until Thirty-five Years Old',   'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-18T05:48:04.809132"
 ],
 "Silent Lurker": [
  "\ndef extractSilentlurker03WordpressCom(item):\n\t'''\n\tParser for 'silentlurker03.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-23T05:57:03.614216"
 ],
 "Silent Moon Translations": [
  "def extractSilentmoontranslationsWordpressCom(item):\n\t'''\n\tParser for 'silentmoontranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('MGCH',                        'Male God, Come Here',                        'translated'),\n\t\t('Ostentatious Zhao Yao',       'Ostentatious Zhao Yao',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-12T09:07:27.950116"
 ],
 "Silent Tl": [
  "def extractSilentTl(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Legend' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Legend', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Silkpants Entente": [
  "def extractSilkpantsEntente(item):\n\t\"\"\"\n\tSilkpants Entente\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Silva's Library": [
  "def extractSilvasLibrary(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"Silva's Diary - Zero no Tsukaima\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Silva's Diary - Zero no Tsukaima\", vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'God of Destruction' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'God of Destruction', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'God of Chaos' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'God of Chaos', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'My Path of Justice' in item['tags'] or 'MPJ1' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'My Path of Justice', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Truth and Myths' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Truth and Myths', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Soft Spoken Brutality' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Soft Spoken Brutality', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'World of Immortals' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'World of Immortals', vol, chp, frag=frag, postfix=postfix)\n\tif 'Bu ni mi' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Bu ni mi', vol, chp, frag=frag, postfix=postfix)\n\tif 'Rinkan no Madoushi' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Rinkan no Madoushi', vol, chp, frag=frag, postfix=postfix)\n\tif 'Arifureta' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Arifureta Shokugyou de Sekai Saikyou', vol, chp, frag=frag, postfix=postfix)\n\tif 'High Comprehension Low Strength' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'High Comprehension Low Strength', vol, chp, frag=frag, postfix=postfix)\n\tif 'Martial Void King' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial Void King', vol, chp, frag=frag, postfix=postfix)\n\tif 'Very Pure and Ambiguous' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Very Pure and Ambiguous: The Prequel', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t('The Demon King\\'s Daughter',       'The Demon King\\'s Daughter',                      'translated'),\n\t\t('6-Year Old Sage',                  '6-Year Old Sage',                                 'translated'),\n\t\t('Demon Sword Maiden',               'Demon Sword Maiden',                              'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\treturn False",
  "2018-12-30T04:34:12.944964"
 ],
 "Silvene Translations": [
  "def extractSilvenetranslationWordpressCom(item):\n\t'''\n\tParser for 'silvenetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Unique Legend',       'Unique Legend',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T07:02:34.133295"
 ],
 "Silver Butterfly": [
  "def extractSilverButterfly(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Silver Lining Translations": [
  "def extractSilverliningtranslationsWordpressCom(item):\n\t'''\n\tParser for 'silverliningtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif item['title'].startswith(\"Skeleton Knight \"):\n\t\treturn buildReleaseMessageWithType(item, \"Skeleton Knight, in Another World\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-08-16T05:29:17.182076"
 ],
 "Silver's Works": [
  "def extractSilvcyanideWordpressCom(item):\n\t'''\n\tParser for 'silvcyanide.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Jellyfish',       'Jellyfish',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-22T05:09:27.259687"
 ],
 "SilverNeko Scanlations": [
  "def extractSilvernekoscanlationsHomeBlog(item):\n\t'''\n\tParser for 'silvernekoscanlations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Who Dares Slander My Senior Brother Chapter ',  'Who Dares Slander My Senior Brother',               'translated'),\n\t\t\t('SCSG Chapter ',                                 'Strategy to Capture that Scum Gong',                'translated'),\n\t\t\t('ASV Chapter ',                                  'A Smile From The Villain',                          'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-04-14T00:09:04.661775"
 ],
 "Silvered Tongue": [
  "def extractSilveredTongue(item):\n\t'''\n\tParser for 'Silvered Tongue'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\tif 'Sneak-Peek' in item['tags']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hidan no Aria',       'Hidan no Aria', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-04-07T03:55:31.342917"
 ],
 "Silversnow Translations": [
  "def extractSilversnowtranslationsWordpressCom(item):\n\t'''\n\tParser for 'silversnowtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Pampered Poisonous Royal Wife Chapte',  'Pampered Poisonous Royal Wife',      'translated'),\n\t\t('PPRW C',                                'Pampered Poisonous Royal Wife',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',            'Tensei Shoujo no Rirekisho',         'translated'),\n\t\t('Master of Dungeon',                     'Master of Dungeon',                  'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-27T11:13:02.540834"
 ],
 "Simple Harmonic Machine Translation": [
  "def extractSimpleHarmonicMachineTranslation(item):\n\t'''\n\tParser for 'Simple Harmonic Machine Translation'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Isekai Cheat Magician',      'Isekai Cheat Magician',                                               'translated'),\n\t\t('Isekai Nonbiri Nouka',       'Isekai Nonbiri Nouka',                                                'translated'),\n\t\t('Item Cheat',                 'Kokugensou wo Item Cheat de Ikinuku',                                 'translated'),\n\t\t('IFANIAW',                    'After a Different World Transition, I Founded a Nation in a Week',    'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif item['title'].startswith(\"Chapter \") and item['tags'] == ['Uncategorized']:\n\t\treturn buildReleaseMessageWithType(item, \"Kokugensou wo Item Cheat de Ikinuku (WN)\", vol, chp, frag=frag, postfix=postfix)\n\n\ttitlemap = [\n\t\t('After a Different World Transition, I Founded a Nation in a Week \u2013 C',         'After a Different World Transition, I Founded a Nation in a Week',      'translated'),\n\t\t('After a Different World Transition, I Founded a Nation in a Week \u2013 Chapter ',  'After a Different World Transition, I Founded a Nation in a Week',      'translated'),\n\t\t('The Strongest Guild Master Founded a Nation in a Week \u2013 C',                    'After a Different World Transition, I Founded a Nation in a Week',      'translated'),\n\t\t('Isekai Nonbiri Nouka \u2013 Chapter',                                               'Isekai Nonbiri Nouka',                                                  'translated'),\n\t\t('Kokugensou Wo Item Cheat de Ikinuku',                                          'Kokugensou wo Item Cheat de Ikinuku',                                   'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\tif 'A Different World Scenery View From the Tower \u2013 C' in item['title']:\n\t\tmatch = re.search('C(\\\\d+)\\\\-(\\\\d+)', item['title'])\n\t\tif match:\n\t\t\tchp = match.group(1)\n\t\t\tfrag = match.group(2)\n\t\t\treturn buildReleaseMessageWithType(item, 'A Different World Scenery View From the Tower', vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2018-07-02T04:55:20.887637"
 ],
 "Sinister Translations": [
  "def extractSinisterTranslations(item):\n\t\"\"\"\n\tSinister Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Goblin Slayer' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Goblin Slayer', vol, chp, frag=frag, postfix=postfix)\n\tif 'Daily Life of an Immortal Cat in the Human World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Daily Life of an Immortal Cat in the Human World', vol, chp, frag=frag, postfix=postfix)\n\tif 'Death Notice' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Death Notice', vol, chp, frag=frag, postfix=postfix)\n\tif 'Hollywood Secret Garden' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Hollywood Secret Garden', vol, chp, frag=frag, postfix=postfix)\n\tif 'Strange Life of a Cat' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Strange Life of a Cat', vol, chp, frag=frag, postfix=postfix)\n\tif \"The Path of the Cannon Folder's Counterattack\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"The Path of the Cannon Folder's Counterattack\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sinnesspiel": [
  "\ndef extractSinnesspielDreamwidthOrg(item):\n\t'''\n\tParser for 'sinnesspiel.dreamwidth.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:55.898615"
 ],
 "Sinpathy Translations": [
  "\ndef extractSinpathy976389827WordpressCom(item):\n\t'''\n\tParser for 'sinpathy976389827.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:39:09.122265"
 ],
 "Sins of the Fathers": [
  "def extractSinsOfTheFathers(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn buildReleaseMessageWithType(item, 'Sins of the Fathers '.lower(), vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n",
  "2017-03-08T04:59:21.700134"
 ],
 "SirMetathyst Translations": [
  "def extractSirmetathysttranslationsHomeBlog(item):\n\t'''\n\tParser for 'sirmetathysttranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('~ Unparalleled Path ~ Reincarnated as the AI for a space battleship',       '~ Unparalleled Path ~ Reincarnated as the AI for a space battleship',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:36:54.290541"
 ],
 "Site Title": [
  "def extractSiteTitle(item):\n\t\"\"\"\n\tParser for 'Site Title'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Six Translation": [
  "\ndef extractSixtranslationTumblrCom(item):\n\t'''\n\tParser for 'sixtranslation.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-15T04:52:26.903267"
 ],
 "SkimTranslation": [
  "def extractSkimtranslation15BlogspotCom(item):\n\t'''\n\tParser for 'skimtranslation15.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\tif item['tags'] == []:\n\t\ttry:\n\t\t\tnums = item['title'].split(\" \")[0]\n\t\t\tnum = float(nums)\n\t\t\treturn buildReleaseMessageWithType(item, \"I Got One Star, so I Will Do It\", vol, chp, frag=frag, postfix=postfix)\n\t\texcept ValueError:\n\t\t\tpass\n\t\t\t\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T02:46:46.662262"
 ],
 "Skull Squadron": [
  "def extractSkullSquadron(item):\n\t\"\"\"\n\t# 'Skull Squadron'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Skybox": [
  "\ndef extractSkyboxbookWordpressCom(item):\n\t'''\n\tParser for 'skyboxbook.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:51.929481"
 ],
 "Skythewood translations": [
  "def extractSkythewood(item):\n\t\"\"\"\n\t# Skythewood translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Five Days' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Unpopular As I Am, I Have To Meet a Heroine Within Five Days', vol, chp, frag=frag)\n\tif 'Altina the Sword Princess' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Haken no Kouki Altina', vol, chp, frag=frag)\n\tif 'Overlord' in item['tags']:\n\t\tif 'Drama CD' in item['title'] or 'Track' in item['title'] or not 'Volume' in item['title']:\n\t\t\treturn None\n\t\treturn buildReleaseMessageWithType(item, 'Overlord', vol, chp, frag=frag, postfix=postfix)\n\tif 'Gifting the wonderful world' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Gifting the Wonderful World with Blessings!', vol, chp, frag=frag)\n\tif 'Alderamin' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, '\tAlderamin on the Sky', vol, chp, frag=frag)\n\tif \"Knight's & Magic\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Knight's & Magic\", vol, chp, frag=frag)\n\tif 'Gate' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Gate - Thus the JSDF Fought There!', vol, chp, frag=frag)\n\tif 'Genocide Reality' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Genocide Reality', vol, chp, frag=frag)\n\tif 'Youjo Senki' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Youjo Senki', vol, chp, frag=frag)\n\tif 'Gifting' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Gifting the wonderful world with blessings!', vol, chp, frag=frag)\n\tif 'Killing Time of God' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Killing Time of God', vol, chp, frag=frag)\n\tif 'Gamers' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Gamers', vol, chp, frag=frag)\n\tif 'Manu' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Manuscript Screening Boy and Manuscript Submitting Girl', vol, chp, frag=frag)\n\tif 'Isekai Mahou' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Mahou wa Okureteru!', vol, chp, frag=frag)\n\tif 'HWBT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Hero without Blood or Tear', vol, chp, frag=frag)\n\t\t\n\tif item['title'].startswith('A Tale of Two Shadows') or item['title'].startswith('The Legend of Faro: A Tale of Two Shadows Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'A Tale of Two Shadows', vol, chp, frag=frag)\n\tif item['title'].startswith('Overlord'):\n\t\treturn buildReleaseMessageWithType(item, 'Overlord', vol, chp, frag=frag)\n\tif item['title'].startswith('Hyperion 7'):\n\t\treturn buildReleaseMessageWithType(item, 'Hyperion 7', vol, chp, frag=frag)\n\tif item['title'].startswith('I Want A Harem But She Is Very...'):\n\t\treturn buildReleaseMessageWithType(item, 'I Want A Harem But She Is Very\u2026', vol, chp, frag=frag)\n\tif item['title'].startswith('Gate of Twilight'):\n\t\treturn buildReleaseMessageWithType(item, 'Gate of Twilight', vol, chp, frag=frag)\n\tif item['title'].startswith('Cooking with Wild Game Volume '):\n\t\treturn buildReleaseMessageWithType(item, 'Cooking with Wild Game', vol, chp, frag=frag)\n\treturn False",
  "2017-08-16T05:33:09.864589"
 ],
 "Slave Translation": [
  "\ndef extractSlavetranslationWordpressCom(item):\n\t'''\n\tParser for 'slavetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-01T07:24:08.476164"
 ],
 "Slave Translationation": [
  "\ndef extractStnationWordpressCom(item):\n\t'''\n\tParser for 'stnation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:56:18.081510"
 ],
 "Slave Translations": [
  "def extractSlaveTranslations(item):\n\t\"\"\"\n\tParser for 'Slave Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "SlaveRod": [
  "def extractSlaverodCom(item):\n\t'''\n\tParser for 'slaverod.com'\n\t'''\n\t\n\t# Spanish\n\treturn None",
  "2018-01-11T05:20:01.152601"
 ],
 "Sleepchaser's Cot": [
  "def extractSleepchaserWordpressCom(item):\n\t'''\n\tParser for 'sleepchaser.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Violant of the Silver',                   'Violant of the Silver',                                  'translated'),\n\t\t('Nurturing the Hero to Avoid Death',       'Nurturing the Hero to Avoid Death',                      'translated'),\n\t\t('Villain Days',                            'Villain Days',                                           'translated'),\n\t\t('Story of Yanxi Palace',                   'Story of Yanxi Palace',                                  'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\n\treturn False",
  "2019-06-02T07:40:43.597276"
 ],
 "Sleepy Korean Translations": [
  "def extractSleepykoreanWordpressCom(item):\n\t'''\n\tParser for 'sleepykorean.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"lucia\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Lucia\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-06-16T06:34:16.144331"
 ],
 "Sleepy Translations": [
  "def extractSleepyTranslations(item):\n\t\"\"\"\n\t# 'Sleepy Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Slightly Lemony": [
  "\ndef extractSlightlylemonyWordpressCom(item):\n\t'''\n\tParser for 'slightlylemony.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:40:51.769585"
 ],
 "Sligs": [
  "def extractWwwSligsCom(item):\n\t'''\n\tParser for 'www.sligs.com'\n\t'''\n\treturn None",
  "2018-02-25T06:11:17.974505"
 ],
 "Slime Lv1": [
  "def extractSlimeLv1(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Slnfidels": [
  "\ndef extractSlnfidelsWordpressCom(item):\n\t'''\n\tParser for 'slnfidels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-01-09T06:04:55.133838"
 ],
 "Sloth Translation": [
  "def extractSlothTranslation(item):\n\t\"\"\"\n\t'Sloth Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sloth Translations": [
  "def extractSlothTranslations(item):\n\t\"\"\"\n\tSloth Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sloth Translations Blog": [
  "def extractSlothTranslationsBlog(item):\n\t\"\"\"\n\t# 'Sloth Translations Blog'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Re:Master Magic '):\n\t\treturn buildReleaseMessageWithType(item, 'The Mage Will Master Magic Efficiently In His Second Life', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('blacksmith chapter '):\n\t\treturn buildReleaseMessageWithType(item, 'Botsuraku youtei nanode, Kajishokunin wo mezasu', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Slow Day": [
  "def extractEditingonaslowdayBlogspotCom(item):\n\t'''\n\tParser for 'editingonaslowday.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rebirth on the Doors to the Civil Affairs Bureau',       'Rebirth on the Doors to the Civil Affairs Bureau',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-25T07:14:55.998223"
 ],
 "Small Town Ravaging": [
  "\ndef extractSmalltownravagingWeeblyCom(item):\n\t'''\n\tParser for 'smalltownravaging.weebly.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-20T00:31:52.842094"
 ],
 "Small Vest": [
  "def extractSmallvestWordpressCom(item):\n\t'''\n\tParser for 'smallvest.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('BMW',       'Bastard Male Wife',                      'translated'),\n\t\t('Non-critical Elevator',       'Non-critical Elevator',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:34:42.202311"
 ],
 "Snail Paced Translations": [
  "\ndef extractSnailtranslationsWordpressCom(item):\n\t'''\n\tParser for 'snailtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-14T04:51:33.804085"
 ],
 "Snail's Life": [
  "\ndef extractBooksnailTumblrCom(item):\n\t'''\n\tParser for 'booksnail.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-27T08:20:06.215536"
 ],
 "Snail's Pace": [
  "def extractSnailsPace(item):\n\t\"\"\"\n\t\"Snail's Pace\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "SnailTranslation": [
  "def extractSnailtranslationBlogspotCom(item):\n\t'''\n\tParser for 'snailtranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('In the Future My whole body is a treaure',       'In the Future My whole body is a treaure',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-25T06:14:59.491806"
 ],
 "Snake-Boy Loves Sky Prince": [
  "\ndef extractSblspWordpressCom(item):\n\t'''\n\tParser for 'sblsp.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:43.097869"
 ],
 "Snooze MTL": [
  "def extractSnoozetranslationsWordpressCom(item):\n\t'''\n\tParser for 'snoozetranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('BTMPP',       'Befriending the Most Powerful Person',                      'translated'),\n\t\t('Befriending the Most Powerful Person',       'Befriending the Most Powerful Person',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-17T06:46:31.252012"
 ],
 "Snow & Dust": [
  "def extractSnowDust(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Snow Flower Translation": [
  "def extractSnowFlowerTranslation(item):\n\t'''\n\tParser for 'Snow Flower Translation'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Zhi Si Wu Xian',       'Zhi Si Wu Xian', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-04-06T05:01:06.815369"
 ],
 "Snow Translations": [
  "def extractSnowTranslations(item):\n\t\"\"\"\n\t# 'Snow Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "SnowTime Translations": [
  "def extractSnowTimeTranslations(item):\n\t\"\"\"\n\tSnowTime Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'In Different World With Naruto System' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'In Different World With Naruto System', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Snowbell Dot": [
  "def extractSnowbelldotBlogspotCom(item):\n\t'''\n\tParser for 'snowbelldot.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Cold King',                            'Cold King, the Doctor Fei Is Running Away',                      'translated'),\n\t\t('the Doctor Fei Is Running Away',       'Cold King, the Doctor Fei Is Running Away',                      'translated'),\n\t\t('Wife\u2019s Color is Addicting',            'Wife\\'s Color is Addicting',                                     'translated'),\n\t\t('PRC',                                  'PRC',                      'translated'),\n\t\t('Loiterous',                            'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-28T07:04:33.458132"
 ],
 "Snowbelldot": [
  "def extractSnowbelldotWordpressCom(item):\n\t'''\n\tParser for 'snowbelldot.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Cold King, the Doctor Fei Is Running Away',       'Cold King, the Doctor Fei Is Running Away',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-11T05:17:37.612822"
 ],
 "Snowy Codex": [
  "def extractSnowycodexCom(item):\n\t'''\n\tParser for 'snowycodex.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tblocked_manhua = [\n\t\t'The Legendary Master\\'s Wife',\n\t\t'World of Cultivation Manhua',\n\t\t'Xue Yue Hua (Snow, Moon and Flowers)',\n\t\t'Mao Zhi Ming (Cat of Tea)',\n\t\t]\n\tif any([tag in item['tags'] for tag in blocked_manhua]):\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Daily Task of Preventing My Disciple from Turning to the Dark Side',         'The Daily Task of Preventing My Disciple from Turning to the Dark Side',                    'translated'),\n\t\t('Everyday Life of a Dom Boyfriend',                                               'Everyday Life of a Dom Boyfriend',                                                          'translated'),\n\t\t('Wangye, Wangfei is a Cat',                                                       'Wangye, Wangfei is a Cat',                                                                  'translated'),\n\t\t('After Exchanging Shadows',                                                       'After Exchanging Shadows',                                                                  'translated'),\n\t\t('My Husband Is An Undead',                                                        'My Husband Is An Undead',                                                                   'translated'),\n\t\t('Happy Little Mayor',                                                             'Happy Little Mayor',                                                                        'translated'),\n\t\t('Heroic Death System',                                                            'Heroic Death System',                                                                       'translated'),\n\t\t('Death Notice',                                                                   'Death Notice',                                                                              'translated'),\n\t\t('Intense Radical Behavior',                                                       'Intense Radical Behaviors',                                                                 'translated'),\n\t\t('The Ultimate Past',                                                              'The Ultimate Past',                                                                         'translated'),\n\t\t('Thriller Paradise',                                                              'Thriller Paradise',                                                                         'translated'),\n\t\t('Hero? I\u2019ve Long Stopped Being One',                                              'Hero? I\u2019ve Long Stopped Being One',                                                         'translated'),\n\t\t('Reborn As My Love Rival\u2019s Wife',                                                 'Reborn As My Love Rival\u2019s Wife',                                                            'translated'),\n\t\t('Once We Come Across Love',                                                       'Once We Come Across Love',                                                                  'translated'),\n\t\t('Strange Life of a Cat',                                                          'Strange Life of a Cat',                                                                     'translated'),\n\t\t('Hollywood Secret Garden',                                                        'Hollywood Secret Garden',                                                                   'translated'),\n\t\t('The Path of the Cannon Folder\\'s Counterattack',                                 'The Path of the Cannon Folder\\'s Counterattack',                                            'translated'),\n\t\t('The Overflowing Fragrance of the Fish',                                          'The Overflowing Fragrance of the Fish',                                                     'translated'),\n\t\t('Vanguard of the Eternal Night',                                                  'Vanguard of the Eternal Night',                                                             'translated'),\n\t\t('Friends With Benefits',                                                          'Friends With Benefits',                                                                     'translated'),\n\t\t('Daily Life of an Immortal Cat in the Human World',                               'Daily Life of an Immortal Cat in the Human World',                                          'translated'),\n\t\t('Guardian Plot Armor',                                                            'Guardian Plot Armor',                                                                       'oel'),\n\t\t('Please Emperor, This Is All A Ploy From My Sister!',                             'Please Emperor, This Is All A Ploy From My Sister!',                                        'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-04T05:42:48.903634"
 ],
 "Snowy Notes": [
  "def extractSnowynotesHomeBlog(item):\n\t'''\n\tParser for 'snowynotes.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('\u52a9\u7406\u5efa\u7b51\u5e08',  'Assistant Architect',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-07T00:44:14.212911"
 ],
 "Snowy Publications": [
  "def extractSnowyPublications(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'New Release: ' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Whisper of the Nightingale', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'WN' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Whisper of the Nightingale', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'DD' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dimension\u2019s Door', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Snowy Resonance": [
  "\ndef extractSnowyresonanceWordpressCom(item):\n\t'''\n\tParser for 'snowyresonance.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:35.974093"
 ],
 "So Fat Translations": [
  "def extractSoFatTranslations(item):\n\t'''\n\tParser for 'So Fat Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Divided Summons',       'The consequence of being summoned simultaneously from another world',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('The Hero\u2019s Proposal Chapter',  'The Hero\\'s Proposal',      'translated'), \n\t\t('Hero\u2019s Proposal Chapter',      'The Hero\\'s Proposal',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-21T04:57:36.051853"
 ],
 "Soaring Translations": [
  "def extractSoaring(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'teaser' in item['title'].lower():\n\t\treturn False\n\tif 'Limitless Sword God Chapter' in item['title'] or 'Limitless Sword God' in item['tags'] or 'LSG' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Limitless Sword God', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sod Translations": [
  "def extractSodTranslations(item):\n\t\"\"\"\n\tSod Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Ore to Kawazu-san no Isekai Hourouki',       'Ore to Kawazu-san no Isekai Hourouki',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Ore to Kawazu-san no Isekai Hourouki \u2013 ',  '\tOre to Kawazu-san no Isekai Hourouki',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T08:10:50.977873"
 ],
 "Soda Translations": [
  "\ndef extractSodatranslationsWordpressCom(item):\n\t'''\n\tParser for 'sodatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:39:08.868361"
 ],
 "SodaChip": [
  "def extractSodachipCom(item):\n\t'''\n\tParser for 'sodachip.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Dream Life',            'Dream Life ~Living in an Oneiric Parallel Universe~',                      'translated'), \n\t\t('Trinitas Mundus',       'Trinitas Mundus',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-07-16T03:01:03.180532"
 ],
 "SodaTranslations": [
  "def extractSodapressinCom(item):\n\t'''\n\tParser for 'sodapressin.com'\n\t'''\n\tif item['tags'] == []:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('On the Way Home I Got a Bride and Twin Daughters, Who Were Dragons',       'On the Way Home I Got a Bride and Twin Daughters, Who Were Dragons',                      'translated'),\n\t\t('I\u2019m Not Going to Be Bullied By a Girl',                                    'I\u2019m Not Going to Be Bullied By a Girl',                                                   'translated'),\n\t\t('Picked up a Demon King to be a Maid',                                      'Picked up a Demon King to be a Maid',                                                     'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T11:20:29.347390"
 ],
 "Solitary Translation": [
  "def extractSolitaryTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Great Ruler' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Great Ruler', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Solstar24": [
  "def extractSolstar24(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'jin xiu wei yang' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Jin Xiu Wei Yang', vol, chp, frag=frag, postfix=postfix)\n\tif 'dao qing' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dao Qing', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Soltarination Scanlations": [
  "def extractSoltarinationScanlations(item):\n\t\"\"\"\n\t# 'Soltarination Scanlations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Light Novels' not in item['tags']:\n\t\treturn None\n\t\n\tif 'Light Novel Summaries' in item['tags']:\n\t\treturn None\n\t\t\n\treturn False",
  "2018-02-26T03:50:49.438302"
 ],
 "Something Decent Translations": [
  "\ndef extractGengarericWordpressCom(item):\n\t'''\n\tParser for 'gengareric.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-14T03:19:51.110225"
 ],
 "Songs for Clarion": [
  "\ndef extractSongsforclarionWordpressCom(item):\n\t'''\n\tParser for 'songsforclarion.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:51.601628"
 ],
 "Sono Yaku, Nochi Ni\u2026": [
  "def extractSonoyakuWordpressCom(item):\n\t'''\n\tParser for 'sonoyaku.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('That person. Later on...',       'That person. Later on...',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-14T08:23:04.576655"
 ],
 "Sonrisa t.n.t": [
  "def extractSonrisatntCom(item):\n\t'''\n\tParser for 'sonrisatnt.com'\n\t'''\n\n\n\tbadwords = [\n\t\t\t'C-Drama',\n\t\t]\n\tif any([bad in item['tags'] for bad in badwords]):\n\t\treturn None\n\n\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ostentatious Zhao Yao',       'Ostentatious Zhao Yao',                      'translated'),\n\t\t('100 Ghost Collection',        '100 Ghost Collection',                       'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:35:38.482287"
 ],
 "Soojiki's Project": [
  "def extractSoojikisProject(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Weakest Skeleton' in item['tags'] or 'Home page' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kurasu marugoto jingai tensei -Saijyaku no sukeruton ni natta ore-', vol, chp, frag=frag, postfix=postfix)\n\tif 'Reincarnated as a Villager' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Reincarnated as a Villager ~ Strongest Slow-life', vol, chp, frag=frag, postfix=postfix)\n\tif 'Yandere?' in item['tags'] and 'Weapons' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Myself, weapons, and Yandere', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sooky's Kitchen": [
  "def extractSookySKitchen(item):\n\t\"\"\"\n\tParser for 'Sooky's Kitchen'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sora Translations": [
  "def extractSoraTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'teaser' in item['title'].lower():\n\t\treturn False\n\tif 'Isekai Mahou....' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Mahou wa Okureteru!', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Soul Permutation": [
  "def extractSoulPermutation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Elf-San with Master' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Elf-San with Master', vol, chp, frag=frag, postfix=postfix)\n\tif 'Levelmaker' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Levelmaker', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Soup Fanclub": [
  "\ndef extractRaspommeTumblrCom(item):\n\t'''\n\tParser for 'raspomme.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-12-04T07:18:37.183106"
 ],
 "Soupy Baozi Translations": [
  "def extractSoupytranslationsBlogspotCom(item):\n\t'''\n\tParser for 'soupytranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Thousand Face Demonic Concubine',                                                   'Thousand Face Demonic Concubine',                                                  'translated'),\n\t\t('TFDC',                                                                              'Thousand Face Demonic Concubine',                                                  'translated'), \n\t\t('Good for nothing alchemist: tyrant emperor dotes on small alchemist consort',       'Good for nothing alchemist: tyrant emperor dotes on small alchemist consort',      'translated'),\n\t\t('GFNA',                                                                              'Good for nothing alchemist: tyrant emperor dotes on small alchemist consort',      'translated'), \n\t\t('Thousand Face Demonic Concubine',                                                   'Thousand Face Demonic Concubine',                                                  'translated'),\n\t\t('Lovable Beauty',                                                                    'Lovable Beauty',                                                                   'translated'), \n\t\t('Why not soar your majesty',                                                         'Why not soar your majesty',                                                        'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-27T06:44:37.691033"
 ],
 "Sousetsuka": [
  "def extractSousetsuka(item):\n\t\"\"\"\n\t# Sousetsuka\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Desumachi' in item['tags'] or 'Death March kara Hajimaru Isekai Kyousoukyoku' in item['title']:\n\t\textract = re.search('Kyousoukyoku (\\\\d+)\\\\-(\\\\d+)', item['title'])\n\t\tif extract and not vol:\n\t\t\tvol = int(extract.group(1))\n\t\t\tchp = int(extract.group(2))\n\t\treturn buildReleaseMessageWithType(item, 'Death March kara Hajimaru Isekai Kyousoukyoku', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t('Yuusha Furi',          'Yuusha no Furi mo Raku Janai --Riyuu? Ore ga Kami Dakara--',          'translated'),\n\t\t('Nobusan',              'Shinsetsu Nobu-san Isekai Ki',                                        'translated'),\n\t\t('ShikkakuMon',          'Shikkaku Mon no Saikyou Kenja',                                       'translated'),\n\t\t('Okami Nemuranai',      'Okami Wa Nemuranai',                                                  'translated'),\n\t\t\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-05-19T07:26:51.348896"
 ],
 "Soyokaze Translations": [
  "def extractSoyokazeTranslations(item):\n\t'''\n\tParser for 'Soyokaze Translations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = {\n\n\t\t'Half-Dragon Slave Life'                             : 'Half-Dragon Slave Life',\n\t\t'Hakai Me no Yuuri'                                  : 'Hakai Me no Yuuri',\n\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\n\treturn False",
  "2018-11-04T04:23:53.645685"
 ],
 "SpaceforMemory": [
  "def extractSpaceforMemory(item):\n\t\"\"\"\n\t'SpaceforMemory'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Beloved Villain' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Beloved Villain Flips the Skies', vol, chp, frag=frag, postfix=postfix)\n\tif 'Dukes Daughter' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Koushaku Reijou no Tashinami', vol, chp, frag=frag, postfix=postfix)\n\tif 'Lady Rose' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Lady Rose Wants to be a Commoner', vol, chp, frag=frag, postfix=postfix)\n\t\n\t\n\t# Jesus, really?\n\tif '( \u00b4_\u309d`)' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I obtained a stepmother. I obtained a little brother. It appears that little brother is not father\u2019s child, but a scum king\u2019s child, however, don\u2019t mind it please ( \u00b4_\u309d`)', vol, chp, frag=frag, postfix=postfix)\n\t\n\treturn False",
  "2017-06-18T23:33:58.021378"
 ],
 "Spanish Traslation": [
  "def extractSpanishtraslationWordpressCom(item):\n\t'''\n\tParser for 'spanishtraslation.wordpress.com'\n\t'''\n\t\n\t# Spanish. Also doesn't know how to spell.\n\treturn None",
  "2018-01-11T05:20:48.698856"
 ],
 "Spare my Site": [
  "def extractSparemysiteWordpressCom(item):\n\t'''\n\tParser for 'sparemysite.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('IWBKD Chapter',  'I was Born as the King\u2019s Daughter',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-24T08:15:16.581515"
 ],
 "Sparkling Water Translations": [
  "def extractSparklingwatertransWordpressCom(item):\n\t'''\n\tParser for 'sparklingwatertrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Faraway Wanderers',                                'Faraway Wanderers',                                               'translated'),\n\t\t('Han Shan\\'s Sword Unsheathed',                     'Han Shan\\'s Sword Unsheathed',                                    'translated'),\n\t\t('PRC',                                              'PRC',                                                             'translated'),\n\t\t('Loiterous',                                        'Loiterous',                                                       'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-23T08:57:33.499366"
 ],
 "Sparrowtranslations": [
  "def extractSparrowtranslations(item):\n\t\"\"\"\n\tParser for 'Sparrowtranslations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Spcnet.tv": [
  "def extractSpcnetTv(item):\n\t\"\"\"\n\tParser for 'Spcnet.tv'\n\t\"\"\"\n\treturn None",
  "2017-03-26T10:01:16.727908"
 ],
 "Spearpoint Translations": [
  "def extractSpearpointtranslationsHomeBlog(item):\n\t'''\n\tParser for 'spearpointtranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Record of the Missing Sect Master',       'Record of the Missing Sect Master',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-21T06:31:04.704718"
 ],
 "Spicy Chicken Translations": [
  "def extractSpicychickentranslationsWordpressCom(item):\n\t'''\n\tParser for 'spicychickentranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ghosts Know What I Experienced',                             'Ghosts Know What I Experienced',                                            'translated'),\n\t\t('The General\\'s Manor Young Concubine Survival Report',       'The General\\'s Manor Young Concubine Survival Report',                      'translated'),\n\t\t('TGMYCSR',                                                    'The General\\'s Manor Young Concubine Survival Report',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-26T11:20:29.334578"
 ],
 "Spirit God Shura": [
  "def extractSpiritGodShura(item):\n\t\"\"\"\n\t# Sousetsuka\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Chapter') and item['tags'] == ['Chapters']:\n\t\tif ':' in item['title'] and not postfix:\n\t\t\tpostfix = item['title'].split(':')[-1]\n\t\treturn buildReleaseMessageWithType(item, 'Spirit God Shura', vol, chp, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Spirits Abound": [
  "def extractSpiritsAbound(item):\n\t\"\"\"\n\tParser for 'Spirits Abound'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Spiritual Transcription": [
  "def extractSpiritualTranscription(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'TEO' in item['tags'] or 'The Empyrean Overlord' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Empyrean Overlord', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Splat, a novel": [
  "\ndef extractSplatanovelWordpressCom(item):\n\t'''\n\tParser for 'splatanovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:45.524179"
 ],
 "Spoils of War": [
  "\ndef extractSpoilsofwarstoryWordpressCom(item):\n\t'''\n\tParser for 'spoilsofwarstory.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:44.057844"
 ],
 "Sporadic Spores": [
  "def extractSporadicsporesBlogspotCom(item):\n\t'''\n\tParser for 'sporadicspores.blogspot.com'\n\t'''\n\t\n\tif 'Songs' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Chairman Husband Too Boorish',             'Chairman Husband Too Boorish',                            'translated'),\n\t\t('Heartbeat at the Tip of the Tongue',       'Heartbeat at the Tip of the Tongue',                      'translated'),\n\t\t('Love O2O',                                 'Love O2O',                                                'translated'),\n\t\t('Heart Protection',                         'Heart Protection',                                        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-13T04:35:07.891050"
 ],
 "Spree Translations": [
  "\ndef extractJhagiaWordpressCom(item):\n\t'''\n\tParser for 'jhagia.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:34.660535"
 ],
 "Spring Breeze": [
  "def extractDarkstarlightsWordpressCom(item):\n\t'''\n\tParser for 'darkstarlights.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tbad = [\n\t\t\t'Princess Agents Portuguese'\n\t\t]\n\t\n\tif any([tmp in item['tags'] for tmp in bad]):\n\t\treturn None\n\n\ttagmap = [\n\t\t('Drunken Exquisiteness',       'Lost Love in Times',                      'translated'),\n\t\t('Princess Agents',       'Queen of No. 11 Agent',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-28T04:02:23.830469"
 ],
 "Spring Leaves Translations": [
  "def extractMuryoutranslationWordpressCom(item):\n\t'''\n\tParser for 'muryoutranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\tif item['title'].startswith(\"Chapter \") and item['tags'] == ['Uncategorized']:\n\t\treturn buildReleaseMessageWithType(item, 'The Marquis\\' Eldest Son\u2019s Lascivious Story', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\n\n\treturn False",
  "2018-12-07T08:22:21.031631"
 ],
 "Spring Rain Translations": [
  "def extractSpringraintranslationsWordpressCom(item):\n\t'''\n\tParser for 'springraintranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Shen Yi Di Nu',             'Shen Yi Di Nu',                                'translated'),\n\t\t('Epoch of the Dragon',       'X \u2013 Epoch of the Dragon',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-08T06:59:50.788218"
 ],
 "Spring Scents": [
  "def extractSpringScents(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Stabbing with a Syringe": [
  "def extractStabbingwithasyringeHomeBlog(item):\n\t'''\n\tParser for 'stabbingwithasyringe.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Reincarnated Elf Prince',                      'Harem Tales of reincarnated Elf Prince',                      'translated'),\n\t\t('Harem Tales of reincarnated Elf Prince',       'Harem Tales of reincarnated Elf Prince',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-29T05:11:42.706947"
 ],
 "StaffOfOne Translations": [
  "def extractStaffofoneWordpressCom(item):\n\t'''\n\tParser for 'staffofone.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Escaping the Apocalypse',       'Escaping the Apocalypse',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-26T11:19:15.396780"
 ],
 "Stalking Shadows": [
  "\ndef extractStalkingshadowsSahunterNet(item):\n\t'''\n\tParser for 'stalkingshadows.sahunter.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-03T17:13:59.972965"
 ],
 "Star and Moon Translations": [
  "def extractStarandmoontranslationsHomeBlog(item):\n\t'''\n\tParser for 'starandmoontranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Killing Show',       'Killing Show',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:36:10.121089"
 ],
 "Starlit Translations": [
  "def extractStarlittranslationsWordpressCom(item):\n\t'''\n\tParser for 'starlittranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Is He a Hero? \"Yup.\"',       'Is He a Hero? \"Yup.\"',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-12T11:14:30.146933"
 ],
 "Starry Night Translation": [
  "def extractStarrynightnovelsWordpressCom(item):\n\t'''\n\tParser for 'starrynightnovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Stepbrother\\'s Diary',        'Lean Tuna and Her Stepbrother\u2019s Plan to Become a Fatty Tuna',            'translated'),\n\t\t('MaguToro',                    'Lean Tuna and Her Stepbrother\u2019s Plan to Become a Fatty Tuna',            'translated'),\n\t\t('Lewd Game',                   'I Decided to Participate in a Lewd Game in My Dream',                    'translated'),\n\t\t('summoned hero',               'I Summoned the Hero, to the Present Age',                                'translated'),\n\t\t('Seven Nobles',                'Duke\\'s Daughter who is Liable to Die and the Seven Nobles',             'translated'),\n\t\t('Erica',                       'Duke\\'s Daughter who is Liable to Die and the Seven Nobles',             'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tchp_prefixes = [\n\t\t\t('IDWBV \u2013 ',  'I Don\u2019t Want to Become a Villainess, So I Aim at Becoming a Perfect Lady Together with the Prince!',               'translated'), \n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-12-23T08:56:02.075852"
 ],
 "Starrydawn Translations": [
  "def extractStarrydawnTranslations(item):\n\t\"\"\"\n\t# 'Starrydawn Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Starter Novels": [
  "def extractStarternovelsWordpressCom(item):\n\t'''\n\tParser for 'starternovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Chronicles of the Modern Empress Dowager \u2013 ',  'Chronicles of the Modern Empress Dowager',               'translated'),\n\t\t\t('Manowa',  'Manowa Mamono Taosu Nouryoku Ubau Watashi Tsuyokunaru',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-07-05T05:02:59.907759"
 ],
 "Startling Surprises at Every Step": [
  "def extractStartlingSurprisesAtEveryStep(item):\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'bu bu jing xin' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Bu Bu Jing Xin', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Starve Archive": [
  "def extractWwwStarvearchiveCom(item):\n\t'''\n\tParser for 'www.starvearchive.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Diary of the Truant Death God',      'The Diary of the Truant Death God',         'translated'),\n\t\t('The Records of the Human Emperor',       'The Records of the Human Emperor',          'translated'),\n\t\t('Library of Heaven\\'s Path',              'Library of Heaven\\'s Path',                 'translated'),\n\t\t('The Adonis Next Door',                   'The Adonis Next Door',                      'translated'),\n\t\t('Tian Ying',                              'Shadow of the Sky',                         'translated'),\n\t\t('Long Fu',                                'Dragon Talisman',                           'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\turlfrag = [\n\t\t('/my-master-has-disconnected-again-chapter-',  'My Master Has Disconnected Again',     'translated'),\n\t\t('/library-of-heavens-path-chapter-',           'Library of Heaven\\'s Path',            'translated'),\n\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-07-18T05:33:08.352383"
 ],
 "StarveCleric": [
  "def extractStarveCleric(item):\n\t\"\"\"\n\tStarveCleric\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'protected' in item['title'].lower():\n\t\treturn None\n\tif \"Library of Heaven's Path\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Library of Heaven's Path\", vol, chp, frag=frag, postfix=postfix)\n\tif 'The Experimental Diaries of A Crazy Lich' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Experimental Diaries of A Crazy Lich', vol, chp, frag=frag, postfix=postfix)\n\tif 'Tian Ying' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tian Ying', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Adonis Next Door' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Adonis Next Door', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Diary of the Truant Death God' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Diary of the Truant Death God', vol, chp, frag=frag, postfix=postfix)\n\tif 'Dao Tian Xian Tu' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Dao Tian Xian Tu', vol, chp, frag=frag, postfix=postfix)\n\tif 'Rebirth - First Class Magician' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Rebirth - First Class Magician', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Records of the Human Emperor' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Records of the Human Emperor', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-03-10T10:06:27.473914"
 ],
 "Steadier Translations": [
  "def extractSteadierTranslations(item):\n\t\"\"\"\n\tParser for 'Steadier Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Steady Translation": [
  "def extractSteadyTranslation(item):\n\t\"\"\"\n\tSteady Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Online Game: Evil Dragon Against The Heaven' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Online Game: Evil Dragon Against The Heaven', vol, chp, frag=frag, postfix=postfix)\n\tif 'In Different World With Naruto System' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'In Different World With Naruto System', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Alchemist God' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Alchemist God', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Steal Tomorrow": [
  "\ndef extractStealtomorrowBlogspotCom(item):\n\t'''\n\tParser for 'stealtomorrow.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:10.249687"
 ],
 "Steal Translation": [
  "def extractStealtranslationHomeBlog(item):\n\t'''\n\tParser for 'stealtranslation.home.blog'\n\t'''\n\n\n\treturn None",
  "2019-01-26T14:53:34.427061"
 ],
 "Stefan Gagne's Fiction Factory": [
  "\ndef extractStefangagneCom(item):\n\t'''\n\tParser for 'stefangagne.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T05:41:52.326962"
 ],
 "Stellar Transformation Con.": [
  "def extractStellarTransformationCon(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Stitchie Translators": [
  "def extractStitchietranslatorsWordpressCom(item):\n\t'''\n\tParser for 'stitchietranslators.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('the royal\\'s cute little wife',       'The Royal\\'s Cute Little Wife',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('All The Male Protagonists Have Blackened Chapter ',  'All The Male Leads Have Blackened',      'translated'),\n\t\t('All The Male Leads Have Blackened Chapter ',         'All The Male Leads Have Blackened',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',                         'Tensei Shoujo no Rirekisho',             'translated'),\n\t\t('The Royal\u2019s Cute Little Wife: Chapter ',             'The Royal\\'s Cute Little Wife',          'translated'),\n\t\t('Master of Dungeon',                                  'Master of Dungeon',                      'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-05T07:17:49.012563"
 ],
 "Stone Burners": [
  "def extractStoneBurners(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Stories Online": [
  "def extractStoriesonlineOrg(item):\n\t'''\n\tParser for 'storiesonline.org'\n\t'''\n\n\treturn None",
  "2017-05-27T05:39:57.505732"
 ],
 "Storm MTL": [
  "\ndef extractStormmtlWordpressCom(item):\n\t'''\n\tParser for 'stormmtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-23T05:56:58.101291"
 ],
 "StormFrost MTL": [
  "def extractStormytranslationsHomeBlog(item):\n\t'''\n\tParser for 'stormytranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Quick Transmigration: Perfect Destiny',       'Quick Transmigration: Perfect Destiny',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-07T08:31:48.961343"
 ],
 "Story Teller": [
  "def extractOddgorgeWordpressCom(item):\n\t'''\n\tParser for 'oddgorge.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"General Above I am Below\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"General Above I am Below\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-08-16T05:32:03.608284"
 ],
 "Story and Translate": [
  "def extractStoryandtranslateBlogspotCom(item):\n\t'''\n\tParser for 'storyandtranslate.blogspot.com'\n\t'''\n\n\tif 'Summary' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Oresuki',               'Ore ga Suki nano wa Im\u014dto dakedo Im\u014dto ja nai',               'translated'),\n\t\t('cut & paste',           'Living in this World with Cut & Paste',                       'translated'),\n\t\t('Homecoming Hero',       'Kikanshita Yuusha no Gojitsudan',                             'translated'),\n\t\t('Sura-chan',             'Kikai Megami Sura-chan no Shiiku Nikki',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Homecoming Hero',       'Kikanshita Yuusha no Gojitsudan',      'translated'),\n\t\t('Living Cut & Paste :',  'Living in this World with Cut & Paste',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-08-21T06:22:18.791236"
 ],
 "StoryVory": [
  "\ndef extractStoryvoryWordpressCom(item):\n\t'''\n\tParser for 'storyvory.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:21.780719"
 ],
 "Strange Folds: Rise of the Dead": [
  "\ndef extractWnnovelBlogspotCom(item):\n\t'''\n\tParser for 'wnnovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:02.018145"
 ],
 "Strangely Interesting Story": [
  "def extractStrangelyinterestingstoryWordpressCom(item):\n\t'''\n\tParser for 'strangelyinterestingstory.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Parameter Rimokon',       'Parameter Remote Controller',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-10-26T05:33:55.032305"
 ],
 "Strangled Hands": [
  "def extractStrangledhandsWordpressCom(item):\n\t'''\n\tParser for 'strangledhands.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hilarious Pampered Consort',       'Hilarious pampered consort: Lord I will wait for your divorce',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-09T08:56:47.336246"
 ],
 "Strawberry Translates": [
  "def extractStrawberrytranslatesWordpressCom(item):\n\t'''\n\tParser for 'strawberrytranslates.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Back to the Apocalypse',  'Back to the Apocalypse',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-17T06:19:24.064463"
 ],
 "Strawberry-Jam": [
  "def extractStrawberryJamNet(item):\n\t'''\n\tParser for 'strawberry-jam.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Fox Demon Cultivation Manual',              'Fox Demon Cultivation Manual',                             'translated'),\n\t\t('His Royal Highness, Wants A Divorce',       'His Royal Highness, Wants A Divorce',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-29T05:12:25.582470"
 ],
 "StrayCats": [
  "def extractStrayCats(item):\n\t\"\"\"\n\t'StrayCats'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Virtual World: The Legendary Thief',       'Virtual World: The Legendary Thief',                      'translated'), \n\t\t('Hiraheishi wa Kako o Yumemiru',       'Hiraheishi wa Kako o Yumemiru',                      'translated'), \n\t\t('Ore no Isekai Shimai ga Jichou Shinai!',       'Ore no Isekai Shimai ga Jichou Shinai!',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-04-15T02:29:56.521521"
 ],
 "Stuck Station": [
  "\ndef extractStuckstationCom(item):\n\t'''\n\tParser for 'stuckstation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:26.228216"
 ],
 "Stuck on a Page": [
  "\ndef extractKieukieudaysCom(item):\n\t'''\n\tParser for 'kieukieudays.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-09T04:25:38.119275"
 ],
 "StudentCN translations": [
  "\ndef extractStudentcntranslationsWordpressCom(item):\n\t'''\n\tParser for 'studentcntranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-16T11:29:40.216572"
 ],
 "Sub-Par TL": [
  "def extractSubpartlWordpressCom(item):\n\t'''\n\tParser for 'subpartl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('It Seems Like My Body is Completely Invincible',       'It Seems Like My Body is Completely Invincible',                      'translated'),\n\t\t('Magi Craft Meister',       'Magi Craft Meister',                      'translated'),\n\t\t('MCM',                      'Magi Craft Meister',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-08T01:11:02.784788"
 ],
 "Sub29 Translation": [
  "def extractSub29TranslationWordpressCom(item):\n\t'''\n\tParser for 'sub29translation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Earth Dragon Dungeon',       'Earth Dragon Dungeon',                      'translated'), \n\t\t('Doll Dungeon',               'Doll Dungeon',                              'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-10T06:51:30.232676"
 ],
 "Subudai11": [
  "def extractSubudai11(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Mai Kitsune Waifu Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'My Fox Immortal Wife', vol, chp, frag=frag, postfix=postfix)\n\tif 'My Beautiful Teacher Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'My Beautiful Teacher', vol, chp, frag=frag, postfix=postfix)\n\tif 'Awakening \u2013 \u4eff\u5982\u6628\u65e5' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Awakening \u2013 \u4eff\u5982\u6628\u65e5', vol, chp, frag=frag, postfix=postfix)\n\tif 'Awakening' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Awakening \u2013 \u4eff\u5982\u6628\u65e5', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "SugaminnyJP": [
  "def extractSugaminnyjpWordpressCom(item):\n\t'''\n\tParser for 'sugaminnyjp.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Eternal World',       'The Eternal World',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-21T06:31:52.525824"
 ],
 "Sugar Dark Light Novel - NanoDesu": [
  "\ndef extractSugardarkthetranslationWordpressCom(item):\n\t'''\n\tParser for 'sugardarkthetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-14T04:51:40.971886"
 ],
 "Suidish Translations": [
  "def extractSuidishtranslationWordpressCom(item):\n\t'''\n\tParser for 'suidishtranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\tif chp == 9999999999:\n\t\treturn None\n\n\ttagmap = [\n\t\t('Going Back and Forth Between Earth and The Other World with Space Time Magic',       'Going Back and Forth Between Earth and The Other World with Space Time Magic',                      'translated'),\n\t\t('HP9999999999',                                                                       'HP9999999999',                                                                                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-27T04:24:14.430183"
 ],
 "Suikoden I: Soul Eater Novel Translation": [
  "def extractSuikodenISoulEaterNovelTranslation(item):\n\t\"\"\"\n\tParser for 'Suikoden I: Soul Eater Novel Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Soul Eater' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Soul Eater', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-07-18T05:32:52.931514"
 ],
 "Summer Rain Translation": [
  "\ndef extractSummerraintranslationWordpressCom(item):\n\t'''\n\tParser for 'summerraintranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:39.425825"
 ],
 "Summer's End Translations": [
  "def extractTilsummerendsWordpressCom(item):\n\t'''\n\tParser for 'tilsummerends.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hard to Escape',       'Hard to Escape',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T08:49:28.479053"
 ],
 "Sun Shower Fields": [
  "def extractSunShowerFields(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sun-kissed.": [
  "\ndef extractKashiistoriesBlogspotCom(item):\n\t'''\n\tParser for 'kashiistories.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:10.882358"
 ],
 "SunaSun - NovelTranslations": [
  "def extractSunasunNoveltranslationsWeeblyCom(item):\n\t'''\n\tParser for 'sunasun-noveltranslations.weebly.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == ['Uncategorized']:\n\t\ttitlemap = [\n\t\t\t('RBRP',  'Aobara-hime no Yarinaoshi Kakumeiki',      'translated'),\n\t\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:57:28.164482"
 ],
 "Sunflower Factory Translations": [
  "def extractSunflowerfactorysiteWordpressCom(item):\n\t'''\n\tParser for 'sunflowerfactorysite.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Sakyumiru',       'Because I Reincarnated as a Succubus, I\u2019ll Squeeze Out Milk',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-18T07:02:38.622768"
 ],
 "Sunflower and Penguin": [
  "def extractSunflowerpenguinWordpressCom(item):\n\t'''\n\tParser for 'sunflowerpenguin.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('heroine yuri flags',       'When I Reincarnated as the Villainess, I Raised Yuri Flags with the Heroine!?',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:59:39.245370"
 ],
 "SunnyTranslations": [
  "def extractSunnyTranslations(item):\n\t\"\"\"\n\tSunnyTranslations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sunshine": [
  "def extractEmmatranslatesBlogspotCom(item):\n\t'''\n\tParser for 'emmatranslates.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\tif item['tags'] == []:\n\t\ttitlemap = [\n\t\t\t('My Taoist Career_Chapter ',  'My Taoist Career',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\t\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-02T05:07:01.642301"
 ],
 "Super Potato Translations": [
  "def extractSuperPotatoTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\t\n\t\n\ttagmap = [\n\t\t('Conquest',                     'Conquest',                      'translated'), \n\t\t('Dragon Blooded War God',       'Dragon Blooded War God',        'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-06-15T05:15:45.938238"
 ],
 "Super Translation Service": [
  "\ndef extractSupertranslation225613631WordpressCom(item):\n\t'''\n\tParser for 'supertranslation225613631.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-29T03:41:09.353990"
 ],
 "SuperMegaNet": [
  "\ndef extractSupermeganetWordpressCom(item):\n\t'''\n\tParser for 'supermeganet.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:23.117977"
 ],
 "SuperNyankoMofu~": [
  "def extractSuperNyankoMofu(item):\n\t\"\"\"\n\t'SuperNyankoMofu~'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Supreme Origin Translations": [
  "def extractSotranslations(item):\n\t\"\"\"\n\t# Supreme Origin Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'hachi-nan chapter' in item['title'].lower() and not 'draft' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Hachinan tte, Sore wa nai Deshou!', vol, chp, frag=frag, postfix=postfix)\n\tif 'the devil of an angel chapter' in item['title'].lower() and not 'draft' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'The Devil of an Angel Chapter', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Suteki Da Ne": [
  "def extractSutekiDaNe(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Can I Not Marry?' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Can I Not Marry? / Days of Cohabitation with the President', vol, chp, frag=frag, postfix=postfix)\n\tif \"Black Bellied Prince's Stunning Abandoned Consort\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Black Bellied Prince's Stunning Abandoned Consort\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Suyi Translations": [
  "def extractHymtlnovelsCom(item):\n\t'''\n\tParser for 'hymtlnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Extraordinary Great Antiquity (\u975e\u51e1\u6d2a\u8352)',       'Extraordinary Great Antiquity',                      'translated'),\n\t\t('Eternal Evil Emperor',                           'Eternal Evil Emperor',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T04:31:26.328020"
 ],
 "Suzumu Ruined my Life": [
  "\ndef extractWSenseiTumblrCom(item):\n\t'''\n\tParser for 'w-sensei.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:54:18.041300"
 ],
 "Swaying Leaves Tl": [
  "def extractSwayingleavestlWordpressCom(item):\n\t'''\n\tParser for 'swayingleavestl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Jin Xiao Yi Tan',       'Jin Xiao Yi Tan',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-30T05:38:17.448473"
 ],
 "Sweet A Collections": [
  "def extractSweetACollections(item):\n\t\"\"\"\n\t# 'Sweet A Collections'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Swis Translations": [
  "def extractSwistranslationsWordpressCom(item):\n\t'''\n\tParser for 'swistranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('SSTWT',       'Still Saving The World Today ',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-19T05:21:09.118844"
 ],
 "Sword and Game": [
  "def extractSwordAndGame(item):\n\t\"\"\"\n\t# Sword And Game\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Rising of the Shield Hero' in item['tags'] and 'chapter' in [tmp.lower() for tmp in item['tags']]:\n\t\treturn buildReleaseMessageWithType(item, 'The Rise of the Shield Hero', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ark' in item['tags'] and (vol or chp or postfix):\n\t\treturn buildReleaseMessageWithType(item, 'Ark', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sworn": [
  "\ndef extractSwornstoryWordpressCom(item):\n\t'''\n\tParser for 'swornstory.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:47.105950"
 ],
 "Sylver Translations": [
  "def extractSylver(item):\n\t\"\"\"\n\t# Sylver Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"History's Number One Founder\" in item['tags']:\n\t\tif ':' in item['title']:\n\t\t\tpostfix = item['title'].split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, \"History's Number One Founder\", vol, chp, frag=frag, postfix=postfix)\n\tif 'The Gate of Extinction' in item['tags']:\n\t\tif ':' in item['title']:\n\t\t\tpostfix = item['title'].split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'The Gate of Extinction', vol, chp, frag=frag, postfix=postfix)\n\tif \"Shura's Wrath\" in item['tags'] or 'Shura\"s Wrath' in item['tags']:\n\t\tif ':' in item['title']:\n\t\t\tpostfix = item['title'].split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, \"Shura's Wrath\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Sylvia's Corner": [
  "\ndef extractSylviascorner815592106WordpressCom(item):\n\t'''\n\tParser for 'sylviascorner815592106.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-23T05:57:06.605689"
 ],
 "Symbiote": [
  "def extractSymbiote(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "System Translation": [
  "def extractSystemtranslationHomeBlog(item):\n\t'''\n\tParser for 'systemtranslation.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\tif item['tags'] == ['Uncategorized']:\n\t\ttitlemap = [\n\t\t\t('Crazy Leveling System Chapter',  'Crazy Leveling System',      'translated'),\n\t\t]\n\t\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-11T22:08:02.575543"
 ],
 "T&Q": [
  "def extractTandQ(item):\n\t\"\"\"\n\tT&Q\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tbad = [\n\t\t\t'#K-drama', \n\t\t\t'fashion', \n\t\t\t'C-Drama', \n\t\t\t'#Trending', \n\t\t\t'Feature', \n\t\t\t'#Trailer', \n\t\t\t'#Eng Sub', \n\t\t\t'Movies', \n\t\t\t'Status Updates/Post Tallies', \n\t\t\t'Learn Chinese',\n\t\t\t'Short Stories',\n\t\t]\n\tif any([(tmp in item['tags']) for tmp in bad]):\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('Three Kingdoms Online Overlord',                                      'Three Kingdoms Online Overlord',                                                'translated'),\n\t\t('Three Kingdoms Online Overlord | \u7f51\u6e38\u4e4b\u4e09\u56fd\u8d85\u7ea7\u9886\u4e3b',                 'Three Kingdoms Online Overlord',                                                'translated'),\n\t\t('Perfect Fiance',                                                      'Perfect Fianc\u00e9',                                                                'translated'),\n\t\t('Perfect Fianc\u00e9 | \u5b8c\u7f8e\u672a\u5a5a\u592b',                                         'Perfect Fianc\u00e9',                                                                'translated'),\n\t\t('Ten Years are not that Far',                                          'Ten Years are not that Far',                                                    'translated'),\n\t\t('#Les Interpretes',                                                    'Les Interpretes',                                                               'translated'),\n\t\t('\u81f4\u6211\u4eec\u7ec8\u5c06\u901d\u53bb\u7684\u9752\u6625',                                                'To Our Youth That is Fading Away',                                              'translated'),\n\t\t('So Young | \u81f4\u6211\u4eec\u7ec8\u5c06\u901d\u53bb\u7684\u9752\u6625',                                     'To Our Youth That is Fading Away',                                              'translated'),\n\t\t(\"Fleeting Midsummer (Beijing University's Weakest Student)\",           \"Fleeting Midsummer (Beijing University's Weakest Student)\",                     'translated'),\n\t\t(\"Fleeting Midsummer (Peking University's Weakest Student)\",            \"Fleeting Midsummer (Peking University's Weakest Student)\",                      'translated'),\n\t\t(\"Fleeting Midsummer (Peking University's Weakest Student)| \u5317\u5927\u5dee\u751f\u00b7\", \"Fleeting Midsummer (Peking University's Weakest Student)\",                      'translated'),\n\t\t(\"Fleeting Midsummer (Peking University's Weakest Student)| \u5317\u5927\u5dee\u751f\",  \"Fleeting Midsummer (Peking University's Weakest Student)\",                      'translated'),\n\t\t('When A Snail Falls in Love| \u5982\u679c\u8717\u725b\u6709\u7231\u60c5',                          'When A Snail Falls in Love',                                                    'translated'),\n\t\t('The Rebirth of an Ill-Fated Consort | \u91cd\u751f\u4e4b\u5ae1\u5973\u7978\u5983',                'The Rebirth of an Ill-Fated Consort',                                           'translated'),\n\t\t('Siege in Fog | \u8ff7\u96fe\u56f4\u57ce',                                             'Siege in Fog',                                                                  'translated'),\n\t\t('Pristine Darkness | \u4ed6\u6765\u4e86\u8bf7\u95ed\u773c\u4e4b\u6697\u7cbc',                              'Pristine Darkness',                                                             'translated'),\n\t\t('Les Interpretes | \u4eb2\u7231\u7684\u7ffb\u8bd1\u5b98',                                      'Les Interpretes',                                                               'translated'),\n\t\t('Les Interpretes | \u60c5\u7231\u7684\u7ffb\u8bd1\u5b98',                                      'Les Interpretes',                                                               'translated'),\n\t\t('The Daily Record of Secretly Loving the Male Idol|\u7537\u795e\u6697\u604b\u65e5\u8bb0',      'The Daily Record of Secretly Loving the Male Idol',                             'translated'),\n\t\t('Master Devil Don\\'t Kiss Me',                                         'Master Devil Don\\'t Kiss Me',                                                   'translated'),\n\t\t('Master Devil Don\\'t Kiss Me! | \u6076\u9b54\u5c11\u7237\u522b\u543b\u6211',                       'Master Devil Don\\'t Kiss Me',                                                   'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-06-19T06:52:04.375118"
 ],
 "T.T. Translations": [
  "def extractTttranslationsWordpressCom(item):\n\t'''\n\tParser for 'tttranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Reiryuu Academy Student Council',       'Reiryuu Academy Student Council',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-26T06:04:06.203921"
 ],
 "TCC Edwards": [
  "\ndef extractWwwTccedwardsCom(item):\n\t'''\n\tParser for 'www.tccedwards.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:33.027943"
 ],
 "TKO Creations": [
  "\ndef extractTkocreationsCom(item):\n\t'''\n\tParser for 'tkocreations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:28.528005"
 ],
 "TL Syosetsu": [
  "def extractTLSyosetsu(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().strip().startswith('defiled hero chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Defiled Hero', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "TLBasil": [
  "def extractJamesParkMe(item):\n\t'''\n\tParser for 'james-park.me'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Tutorial Is Too Hard',       'The Tutorial Is Too Hard',                      'translated'),\n\t\t('Sword Whisperer',                'Sword Whisperer',                               'translated'),\n\t\t('GOM',                            'God of Music',                                  'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-30T06:58:52.812140"
 ],
 "TOMO Translations": [
  "def extractTomotranslationsWordpressCom(item):\n\t'''\n\tParser for 'tomotranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('This Hero is invincible but too cautious',                       'This Hero is invincible but too cautious',                                     'translated'),\n\t\t('A Wish To Grab Happiness',                                       'A Wish To Grab Happiness',                                                     'translated'),\n\t\t('IT IS A DIFFERENT WORLD AND YET I AM CULTIVATING MONSTERS',      'It Is A Different World And Yet I Am Cultivating Monsters (LN)',               'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-05T07:56:45.594247"
 ],
 "TRANSnoveLATION": [
  "def extractTransnovelationWordpressCom(item):\n\t'''\n\tParser for 'transnovelation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Mr. Dior',                           'Mr. Dior',                                          'translated'),\n\t\t('I Dare You To Run Away Again',       'I Dare You To Run Away Again',                      'translated'),\n\t\t('Jun Ye Can\\'t Help But Tease His Wife',       'Jun Ye Can\\'t Help But Tease His Wife',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T23:25:27.798458"
 ],
 "TRitha Translation": [
  "def extractTbrithatransHomeBlog(item):\n\t'''\n\tParser for 'tbrithatrans.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('JCG&SW Chapter ',       'Jiang Chao Ge and The Spirit Weapon',                      'translated'),\n\t\t\t\n\t\t\t('Manowa',  'Manowa Mamono Taosu Nouryoku Ubau Watashi Tsuyokunaru',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-11-23T07:38:10.059739"
 ],
 "TX History": [
  "\ndef extractTxhistoryonlineWordpressCom(item):\n\t'''\n\tParser for 'txhistoryonline.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:27.536541"
 ],
 "Taekan Translations": [
  "def extractTaekanWordpressCom(item):\n\t'''\n\tParser for 'taekan.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Seiken Tsukai no World Break',       'Seiken Tsukai no World Break',                      'translated'),\n\t\t('rakudai kishi no eiyuutan',          'Rakudai Kishi no Cavalry',                          'translated'),\n\t\t('Hundred',       'Hundred',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T22:52:58.659833"
 ],
 "Taida Translations": [
  "def extractTaidatranslationsWordpressCom(item):\n\t'''\n\tParser for 'taidatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Nightmare Game',           'Nightmare Game',                          'translated'),\n\t\t('Escape the Chamber',       'Escape the Chamber',                      'translated'),\n\t\t('Sha Qing',                 'Sha Qing',                                'translated'),\n\t\t('IWY',                      'I Am Incomplete Without You',             'translated'),\n\t\t('KoD',                      'Kaleidoscope of Death',                   'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-26T02:39:48.854847"
 ],
 "Taida-dono Translations": [
  "def extractTaidadonoTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tailor's MTL": [
  "def extractTailor31415WordpressCom(item):\n\t'''\n\tParser for 'tailor31415.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\n\ttagmap = [\n\t\t('YBPGVW',       'You Boys Play Games Very Well~',                      'translated'),\n\t\t('Egg is Lost',       'President, Our Egg Is Lost',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\ttitlemap = [\n\t\t('YBPGVW',       'You Boys Play Games Very Well~',                      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-27T12:01:12.082269"
 ],
 "Taint": [
  "def extractTaint(item):\n\t\"\"\"\n\n\t\"\"\"\n\ttitletmp = item['title'] + ' '.join(item['tags'])\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(titletmp)\n\tif not (chp or vol or frag) and not 'preview' in item['title']:\n\t\treturn False\n\tif 'Chapter Release' in item['tags'] and 'Taint' in item['tags'] and 'Main Story' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Taint', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Chapter Release' in item['tags'] and 'Taint' in item['tags'] and 'Side Story' in item['tags']:\n\t\tpostfix = 'Side Story'\n\t\treturn buildReleaseMessageWithType(item, 'Taint', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\t\t\n\tif 'Chapter Release' in item['tags'] and 'trials' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Trials', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\t\t\n\treturn False",
  "2017-06-16T06:12:37.443149"
 ],
 "Take Your Heart Translation": [
  "def extractTakeyourhearttranslationWordpressCom(item):\n\t'''\n\tParser for 'takeyourhearttranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"Cheat Majutsu\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Forcing Down Fate Using Cheat Magic\", vol, chp, frag=frag, postfix=postfix)\n\tif \"Class 3-C Has A Secret\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Class 3-C Has A Secret\", vol, chp, frag=frag, postfix=postfix)\n\tif \"\u7570\u4e16\u754c\u652f\u914d\u306e\u30b9\u30ad\u30eb\u30c6\u30a4\u30ab\u30fc\" in item['title']:\n\t\treturn buildReleaseMessageWithType(item, \"Isekai Shihai no Skill Taker ~Zero kara Hajimeru Dorei Harem~\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-06-16T06:35:43.292895"
 ],
 "Take your heart translation": [
  "def extractTakeyourhearttranslation000WebhostappCom(item):\n\t'''\n\tParser for 'takeyourhearttranslation.000webhostapp.com'\n\t'''\n\t\n\t# Is trying to force a garbage app shit thing.\n\treturn None",
  "2017-08-12T07:55:15.517357"
 ],
 "Tales From a Thousand Worlds": [
  "\ndef extractTalesfromathousandworldsCom(item):\n\t'''\n\tParser for 'talesfromathousandworlds.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:18.158173"
 ],
 "Tales from The Bridge Chronicles": [
  "\ndef extractAmoralbridgeBlogspotCom(item):\n\t'''\n\tParser for 'amoralbridge.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:36.154143"
 ],
 "Tales of MU": [
  "def extractTalesOfMU(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif any('volume' in tag.lower() for tag in item['tags']) and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Tales of MU', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tales of The Forgottenslayer": [
  "def extractTalesofTheForgottenslayer(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'the botched summoning' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Botched Summoning', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tales of a Nightcrafter": [
  "\ndef extractNightcrafterBlogspotCom(item):\n\t'''\n\tParser for 'nightcrafter.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:48.809430"
 ],
 "Tales of the Activated": [
  "\ndef extractActivatedseriesWordpressCom(item):\n\t'''\n\tParser for 'activatedseries.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:30.003791"
 ],
 "Tales of the Big Bad Wolf": [
  "\ndef extractTalesofthebigbadwolfCom(item):\n\t'''\n\tParser for 'talesofthebigbadwolf.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:23.020141"
 ],
 "Tales of the Inventor's War": [
  "\ndef extractInventorswarWordpressCom(item):\n\t'''\n\tParser for 'inventorswar.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:21.344203"
 ],
 "Tales of...": [
  "\ndef extractTalesofDreamwidthOrg(item):\n\t'''\n\tParser for 'talesof.dreamwidth.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T09:29:56.845381"
 ],
 "Tamwryn Translations": [
  "def extractTamwryntranslationsHomeBlog(item):\n\t'''\n\tParser for 'tamwryntranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Boss\\'s Death Guide',              'Boss\\'s Death Guide',                             'translated'),\n\t\t('Always with the Old Attack',       'Always with the Old Attack',                      'translated'),\n\t\t('Unlimited Cycles of Death',        'Unlimited Cycles of Death',                       'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-16T22:54:37.144463"
 ],
 "Taotie translate": [
  "\ndef extractTeotietranslationBlogspotCom(item):\n\t'''\n\tParser for 'teotietranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-08T23:55:14.976738"
 ],
 "Tarable Translations": [
  "def extractTarableTranslations(item):\n\t\"\"\"\n\t# 'Tarable Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Soushiki Zerozaki\\'s Human Exam',       'Soushiki Zerozaki\\'s Human Exam',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\treturn False",
  "2017-11-13T00:04:41.954387"
 ],
 "Tarantella": [
  "\ndef extractWhoistarantellaWordpressCom(item):\n\t'''\n\tParser for 'whoistarantella.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:27.729175"
 ],
 "Tatakau Shisho Light Novel Translation": [
  "def extractTatakauShishoLightNovelTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(str(item['tags']) + item['title'])\n\tif not (chp or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif not any(['volume' in tag.lower() for tag in item['tags']]):\n\t\treturn None\n\t\n\tif item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, 'Tatakau Shisho', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-06-17T07:49:36.145824"
 ],
 "Tattoo: The Books of Glory": [
  "\ndef extractCandacemcbrideWordpressCom(item):\n\t'''\n\tParser for 'candacemcbride.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:32.340242"
 ],
 "Tdwk Translates": [
  "\ndef extractTdwktranslatesWordpressCom(item):\n\t'''\n\tParser for 'tdwktranslates.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-17T08:05:36.889796"
 ],
 "Tea Fragrance": [
  "def extractTeafragranceWordpressCom(item):\n\t'''\n\tParser for 'teafragrance.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rock Sugar And Pear Stew',       'Rock Sugar And Pear Stew',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T06:44:38.225124"
 ],
 "Tea Time's Translation": [
  "def extractTeatimetranslateHomeBlog(item):\n\t'''\n\tParser for 'teatimetranslate.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Adore Trick of Beauty',       'Adore Trick of Beauty',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-16T04:15:34.992543"
 ],
 "Teal": [
  "\ndef extractWwwTealnovelCom(item):\n\t'''\n\tParser for 'www.tealnovel.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:28.463724"
 ],
 "Teaser Translations": [
  "\ndef extractTeasertranslationsHomeBlog(item):\n\t'''\n\tParser for 'teasertranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-19T03:43:16.389250"
 ],
 "TechSpectrum": [
  "\ndef extractYoujosenkiBlogspotCom(item):\n\t'''\n\tParser for 'youjosenki.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:57:46.891895"
 ],
 "Teddy \u10e6": [
  "\ndef extractTeddy\u10e6(item):\n\t'''\n\tParser for 'Teddy \u10e6'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:53.990024"
 ],
 "Tempered Immortal": [
  "def extractBlcxtranslationsGithubIo(item):\n\t'''\n\tParser for 'blcxtranslations.github.io'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Tempered Immortal',       'Tempered Immortal',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T06:39:26.114019"
 ],
 "Tempo Machine Translations": [
  "def extractTempotranslationsWordpressCom(item):\n\t'''\n\tParser for 'tempotranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Tempo Machine Translations',       'Tempo Machine Translations',                      'translated'),\n\t\t('PRC',                              'PRC',                                             'translated'),\n\t\t('Loiterous',                        'Loiterous',                                       'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-20T06:45:14.502257"
 ],
 "Tempus Infinitum": [
  "def extractTempusinfinitumWordpressCom(item):\n\t'''\n\tParser for 'tempusinfinitum.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ultimate Porter',       'Ultimate Porter ~The weakest man aspires to be an adventurer~',                      'translated'),\n\t\t('Maou Gakuin No Futekigousha',       'Maou Gakuin No Futekigousha',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-03T05:34:56.868175"
 ],
 "Temtem Translations": [
  "def extractTemtranslationsWordpressCom(item):\n\t'''\n\tParser for 'temtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Mistress, I was wrong',       'Mistress, I was wrong',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-17T06:50:07.381731"
 ],
 "Ten Skies": [
  "def extractTenskiestranslationsWordpressCom(item):\n\t'''\n\tParser for 'tenskiestranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Automode ga kiremashita',       'Otome Game Rokkushuume, Automode ga Kiremashita',                      'translated'),\n\t\t('Otome Game Rokkushuume',        'Otome Game Rokkushuume, Automode ga Kiremashita',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T05:26:10.784619"
 ],
 "Ten Thousand Heaven Controlling Sword": [
  "def extractTenThousandHeavenControllingSword(item):\n\t\"\"\"\n\t# 'Ten Thousand Heaven Controlling Sword'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tenchiverse Translation Blog": [
  "\ndef extractTenchimuyotranslationblogBlogspotCom(item):\n\t'''\n\tParser for 'tenchimuyotranslationblog.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-06-30T01:59:50.397885"
 ],
 "Tender Flower": [
  "def extractIlover18NovelHomeBlog(item):\n\t'''\n\tParser for 'ilover18novel.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('It\\'s Purely an Accident to Love Again',       'It\\'s Purely an Accident to Love Again',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-31T22:06:06.596277"
 ],
 "Tensai Translations": [
  "def extractTensaiTranslations(item):\n\t\"\"\"\n\t# Tensai Translations\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Spirit Migration' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Spirit Migration', vol, chp, frag=frag)\n\tif 'Tsuyokute New Saga' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tsuyokute New Saga', vol, chp, frag=frag)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tensei Shitara Ken Deshita! Translations": [
  "def extractTenseikenWordpressCom(item):\n\t'''\n\tParser for 'tenseiken.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Tensei Shitara Ken Deshita',       'I Was a Sword When I Reincarnated',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Tensei Shitara Ken Deshita!',  'I Was a Sword When I Reincarnated',                                                                          'translated'),\n\t\t('TSKD ',                        'I Was a Sword When I Reincarnated',                                                                          'translated'),\n\t\t('Jingai Musume ',               'I Became the Demon Lord so I Created a Dungeon and Spend Heartwarming Time There with Non-Human Girls',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-21T06:16:53.020191"
 ],
 "Tenshi Translations": [
  "def extractTenshihonyakushaWordpressCom(item):\n\t'''\n\tParser for 'tenshihonyakusha.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Power in the Shadows',       'To Be a Power in the Shadows!',                                                                             'translated'),\n\t\t('Megami Buchigire',           'Megami Buchigire',                                                                                          'translated'),\n\t\t('MotoKimama',                 'The Oppressed Savior Abandons The Other World to Live As He Pleases in His Own World',                      'translated'),\n\t\t('OreMegane',                  'Ore no Megane wa Tabun Sekai Seifuku dekiru to Omou.',                                                      'translated'),\n\t\t('SecretOrg',                  'There Was No Secret Organization to Fight with the World\u2019s Darkness so I Made One (In Exasperation)',       'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-10-27T06:20:10.916222"
 ],
 "Tentatively under construction": [
  "def extractTentativelyUnderconstruction(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tequila Mockingbard": [
  "def extractTequilaMockingbard(item):\n\t\"\"\"\n\tTequila Mockingbard\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Teri cherry": [
  "\ndef extractTericherryWordpressCom(item):\n\t'''\n\tParser for 'tericherry.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:53:14.561987"
 ],
 "Terminus Translation": [
  "def extractTerminusTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Terrible Translations": [
  "def extractTerribletranslationWordpressCom(item):\n\t'''\n\tParser for 'terribletranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Film Emperor\\'s Adorable Wife From Ancient Times',              'Film Emperor\\'s Adorable Wife From Ancient Times',                             'translated'),\n\t\t('There\\'s A Beauty',                                             'There\\'s A Beauty',                                                            'translated'),\n\t\t('End of the world\\'s reborn cannon fodder counterattacks',       'The End of The World\\'s Reborn Cannon fodder Counter-attacks',                 'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-29T04:37:16.464191"
 ],
 "Tetractys Translations": [
  "\ndef extractTetractysTranslationsBlogspotCom(item):\n\t'''\n\tParser for 'tetractys-translations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn _buildReleaseMessage(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-07T07:52:42.036944"
 ],
 "ThatGuyOverThere": [
  "def extractThatGuyOverThere(item):\n\t\"\"\"\n\t# That Guy Over There\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'wushenkongjian' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Wu Shen Kong Jian', vol, chp, frag=frag)\n\tmatch = re.search('^Le Festin de Vampire \u2013 Chapter (\\\\d+)\\\\-(\\\\d+)', item['title'])\n\tif match:\n\t\tchp = match.group(1)\n\t\tfrag = match.group(2)\n\t\treturn buildReleaseMessageWithType(item, 'Le Festin de Vampire', vol, chp, frag=frag)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Adventures of Thistledown Copperbottom #2:  Fat Cats": [
  "\ndef extractThistledowncopperbottomBlogspotCom(item):\n\t'''\n\tParser for 'thistledowncopperbottom.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:50.913636"
 ],
 "The Asian Cult": [
  "def extractTheAsianCult(item):\n\t\"\"\"\n\t# 'The Asian Cult'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Backwards Wheel": [
  "\ndef extractBackwardswheelWordpressCom(item):\n\t'''\n\tParser for 'backwardswheel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:44.440977"
 ],
 "The Bad Turret Translations": [
  "\ndef extractTheotherturretWordpressCom(item):\n\t'''\n\tParser for 'theotherturret.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:39:08.580671"
 ],
 "The Bathrobe Knight": [
  "def extractBathrobeKnight(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif not postfix and '-' in item['title']:\n\t\tpostfix = item['title'].split('-')[-1]\n\treturn buildReleaseMessageWithType(item, 'The Bathrobe Knight', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Beginning After The End": [
  "def extractBeginningAfterTheEnd(item):\n\t\"\"\"\n\n\t\"\"\"\n\tif 'turtleme.me' in item['linkUrl']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'The Beginning After The End', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False",
  "2018-06-17T07:32:48.222793"
 ],
 "The Bentlefay Papers": [
  "\ndef extractThebentlefaypapersBlogspotCom(item):\n\t'''\n\tParser for 'thebentlefaypapers.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:30.516999"
 ],
 "The Bird and Venus": [
  "def extractBirdandvenusWordpressCom(item):\n\t'''\n\tParser for 'birdandvenus.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\n\ttitlemap = [\n\t\t('TCFO c.',       'The Transmigrated Cannon Fodder Overthrows the Male Protagonist',                      'translated'),\n\t\t('TUD c.',        'The Unfulfilled Desire',                                                               'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-05-19T07:36:22.471566"
 ],
 "The Black Squirrel": [
  "\ndef extractTheBlackSquirrelBlogspotCom(item):\n\t'''\n\tParser for 'the-black-squirrel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:06.355452"
 ],
 "The Blue": [
  "\ndef extractThebluenovelWordpressCom(item):\n\t'''\n\tParser for 'thebluenovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:34.199652"
 ],
 "The Bountiful REM Exploits of Danziger Monking": [
  "def extractTheBountifulRemExploitsOfDanzigerMonking(item):\n\t\"\"\"\n\tParser for 'The Bountiful REM Exploits of Danziger Monking'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Boy Who Couldn't Be A Hero": [
  "def extractTheBoyWhoCouldntBeAHero(item):\n\t\"\"\"\n\tThe Boy Who Couldn't Be A Hero\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Broken Land": [
  "\ndef extractWwwBrokenlandserialCom(item):\n\t'''\n\tParser for 'www.brokenlandserial.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:17.092173"
 ],
 "The Brotherhood Archive": [
  "\ndef extractHyruhhaserialWordpressCom(item):\n\t'''\n\tParser for 'hyruhhaserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:38.240806"
 ],
 "The C-Novel Project": [
  "def extractCNovelProj(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\t\t\n\n\ttagmap = [\n\t\t('Please Be More Serious',       'Please Be More Serious',       'translated'), \n\t\t('Still Not Wanting to Forget',  'Still Not Wanting to Forget',  'translated'), \n\t\t('suddenly this summer',         'Suddenly, This Summer',        'translated'), \n\t\t('mr earnest is my boyfriend',   'Mr. Earnest Is My Boyfriend',  'translated'), \n\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\treturn False",
  "2017-08-12T07:19:41.698631"
 ],
 "The Candy Girl": [
  "def extractThecandygirlinthecornerWordpressCom(item):\n\t'''\n\tParser for 'thecandygirlinthecorner.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('OGRAGK',       'On the 6th Playthrough of the Otome Game, the Auto-Mode Broke',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-17T06:17:55.070870"
 ],
 "The Captain's Log": [
  "def extractTheCaptainSLog(item):\n\t\"\"\"\n\tParser for 'The Captain's Log'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Curse": [
  "\ndef extractThecurseserialWordpressCom(item):\n\t'''\n\tParser for 'thecurseserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T05:41:55.118066"
 ],
 "The Dahlia that Translates": [
  "def extractThedahliathatWordpressCom(item):\n\t'''\n\tParser for 'thedahliathat.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('The Genius Pill Master',       'The Genius Pill Master',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-14T02:32:41.719350"
 ],
 "The Daring Novelist": [
  "\ndef extractDaringnovelistBlogspotCom(item):\n\t'''\n\tParser for 'daringnovelist.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-18T05:30:46.090841"
 ],
 "The Darker Side of Paradise": [
  "\ndef extractDarkersideofparadiseWordpressCom(item):\n\t'''\n\tParser for 'darkersideofparadise.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:45.911286"
 ],
 "The Ddro": [
  "\ndef extractDdroPressbooksCom(item):\n\t'''\n\tParser for 'ddro.pressbooks.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:21.547403"
 ],
 "The Deck Translations": [
  "def extractThedecktranslationsWordpressCom(item):\n\t'''\n\tParser for 'thedecktranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('eth',       'Evolution Theory of the Hunter',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-07T00:41:33.003106"
 ],
 "The Dreaming": [
  "\ndef extractThedreamingwebserialWordpressCom(item):\n\t'''\n\tParser for 'thedreamingwebserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:18.039944"
 ],
 "The Emperor": [
  "\ndef extractWelcometoashfordWordpressCom(item):\n\t'''\n\tParser for 'welcometoashford.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:18.944555"
 ],
 "The Eunuch": [
  "def extractNastriumdenBlogspotCom(item):\n\t'''\n\tParser for 'nastriumden.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Jade Emperor Heaven Imperial Court Kindergarten',       'The Jade Emperor Heaven Imperial Court Kindergarten',                      'translated'),\n\t\t('Rebirth of The Golden Marriage',                            'Rebirth of The Golden Marriage',                                           'translated'),\n\t\t('Banished to Another World',                                 'Banished to Another World',                                                'translated'),\n\t\t('You\\'re In Love With An Idiot',                             'You\\'re In Love With An Idiot',                                            'translated'),\n\t\t('Years of Intoxication.',                                    'Years of Intoxication.',                                                   'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T05:10:29.865062"
 ],
 "The Eunuch is Pregnant": [
  "def extractTheeunuchCom(item):\n\t'''\n\tParser for 'theeunuch.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Eunuch is Pregnant',       'A Stunning Eunuch: The Eunuch Is Pregnant',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-07-18T05:33:43.472074"
 ],
 "The Experiment": [
  "\ndef extractExperimentserialWordpressCom(item):\n\t'''\n\tParser for 'experimentserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:48.019574"
 ],
 "The Fifth Defiance": [
  "\ndef extractThefifthdefianceCom(item):\n\t'''\n\tParser for 'thefifthdefiance.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:34.204427"
 ],
 "The Firewall Saga": [
  "\ndef extractThefirewallsagaCom(item):\n\t'''\n\tParser for 'thefirewallsaga.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:21.172357"
 ],
 "The Five Kingdoms": [
  "\ndef extractFivekingdomsWordpressCom(item):\n\t'''\n\tParser for 'fivekingdoms.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:28.392295"
 ],
 "The Fixers": [
  "\ndef extractThefixersonlineBlogspotCom(item):\n\t'''\n\tParser for 'thefixersonline.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:05.935388"
 ],
 "The Gods are Bastards": [
  "\ndef extractTiraasWordpressCom(item):\n\t'''\n\tParser for 'tiraas.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:22.814192"
 ],
 "The Grunge Appeal": [
  "\ndef extractThegrungeappealWordpressCom(item):\n\t'''\n\tParser for 'thegrungeappeal.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:22.250603"
 ],
 "The H Lifestyle": [
  "def extractThehlifestyleCom(item):\n\t'''\n\tParser for 'thehlifestyle.com'\n\t'''\n\t\n\ttstr = str(item['tags']).lower()\n\tif 'review' in tstr:\n\t\treturn None\n\tif 'actors' in tstr:\n\t\treturn None\n\tif 'game' in tstr:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Beloved Imperial Consort translation',       'The Beloved Imperial Consort',                      'translated'),\n\t\t('Good Morning, Miss Undercover Translation',      'Good Morning, Miss Undercover',                     'translated'),\n\t\t('Hilarous Pampered Consort Translation',          'Hilarous Pampered Consort',                         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-31T03:35:04.262805"
 ],
 "The Hidden Kitchen": [
  "\ndef extractJoshuasagehiddenkitchenWordpressCom(item):\n\t'''\n\tParser for 'joshuasagehiddenkitchen.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:42.457110"
 ],
 "The Human Camera  ": [
  "\ndef extractMoemclendonWordpressCom(item):\n\t'''\n\tParser for 'moemclendon.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:39.568746"
 ],
 "The Human Element": [
  "\ndef extractDeltadivisionhqWordpressCom(item):\n\t'''\n\tParser for 'deltadivisionhq.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:37.668760"
 ],
 "The Humbug Bistro": [
  "\ndef extractHumbugbistroBlogspotCom(item):\n\t'''\n\tParser for 'humbugbistro.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-18T05:34:05.383685"
 ],
 "The Iron Teeth": [
  "def extractTheIronTeeth(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\t\t\n\t\n\tbook_map = {\n\t\t\"the road north\"       : (1, 1),\n\t\t\"honor among thieves\"  : (1, 2),\n\t\t\"written in blood\"     : (1, 3),\n\t\t\"playing with fire\"    : (1, 4),\n\t\t \n\t\t\n\t\t\"along twisted paths\"  : (2, 1),\n\t\t\"den of beasts\"        : (2, 2),\n\t\t\"a tradesman\\'s tools\" : (2, 3),\n\t\t\"a tradesman\u2019s tools\"  : (2, 3),\n\t\t\"queen of swords\"      : (2, 4),\n\t\t\"epilogue\"             : (2, 5),\n\t\t \n\t\t\n\t\t\"rolling the dice\"     : (3, 1),\n\t\t\"rolling the dice\"     : (3, 1),\n\t\t\"comes the wolf\"       : (3, 2),\n\t\t\"into the green\"       : (3, 3),\n\t\t\"hearts and homes\"     : (3, 4),\n\t\t\"it echoes onward\"     : (3, 5),\n\t\t\"out of darkness\"      : (3, 6),\n\t\t \n\t\t\n\t\t\"a familiar fate\"      : (4, 1),\n\t\t\"the noble thirst\"     : (4, 2),\n\t\t\"to forgotten places\"  : (4, 3),\n\t\t\"will of iron\"         : (4, 4),\n\t\t\n\t\t\"on winter's wings\"    : (5, 1),\n\t\t\"under the white\"      : (5, 2),\n\t\t\"twists and turns\"     : (5, 3),\n\t}\n\n\tltitle = item['title'].lower()\n\n\tif 'Main Online Story' in item['tags'] and vol is None and frag == 0:\n\t\tfor key, value in book_map.items():\n\t\t\tif ltitle.startswith(key):\n\t\t\t\tchpnum = ltitle.split(key)[-1].strip().split(\".\")[-1]\n\t\t\t\ttry:\n\t\t\t\t\tchpnum = int(chpnum)\n\t\t\t\texcept ValueEror:\n\t\t\t\t\treturn None\n\t\t\t\t\n\t\t\t\tret = buildReleaseMessageWithType(item, 'The Iron Teeth', value[0], value[1], frag=chpnum, postfix=item['title'], tl_type='oel')\n\t\t\t\treturn ret\n\t\t\t\n\tprint(\"Missed:\", (item['title'], vol, chp, frag))\n\treturn False",
  "2019-01-26T15:07:13.721774"
 ],
 "The Last Skull": [
  "def extractTheLastSkull(item):\n\t\"\"\"\n\t# 'The Last Skull'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Lazy 9": [
  "def extractTheLazy9(item):\n\t\"\"\"\n\t# TheLazy9\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('HTG',                                                                'I was Reincarnated as a Thief Girl and my Mission is to Harass the Demon Lord and the Hero.',      'translated'),\n\t\t('Just Loving You',                                                    'Just Loving You',                                                                                  'translated'),\n\t\t('\u304b\u3093\u3059\u3068\u3063\u3077\uff01(KANSUTOPPU)',                                         'Kansutoppu!',                                                                                      'translated'),\n\t\t('Goblin Tenseiki ~erufu youjo ni kaku de maketeru yuusha na ore~',    'Goblin Tenseiki ~erufu youjo ni kaku de maketeru yuusha na ore~',                                  'translated'),\n\t\t('Job Change',                                                         'Being Recognized as an Evil God, I Changed My Job to Guardian Deity of the Beastmen Country',      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\ttitlemap = [\n\t\t('Tridente',                                   'Small Village Tridente',                                                                           'translated'),\n\t\t('Just Loving You',                            'Just Loving You',                                                                                  'translated'),\n\t\t('Black Knight',                               'The Black Knight Who Was Stronger than even the Hero',                                             'translated'),\n\t\t('Astarte\u2019s Knight',                           \"Astarte's Knight\",                                                                                 'translated'),\n\t\t('HTG:',                                       'Tozoku shoujo ni tensei shita ore no shimei wa yuusha to maou ni iyagarasena no!',                 'translated'),\n\t\t('Kansutoppu!',                                'Kansutoppu!',                                                                                      'translated'),\n\t\t('The Lonely Monster and The Blind Girl ',     'The Lonely Monster and The Blind Girl',                                                            'translated'),\n\t\t('Job Change',                                 'Being Recognized as an Evil God, I Changed My Job to Guardian Deity of the Beastmen Country',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\tchp_prefixes = [\n\t\t\t('Manowa',  'Manowa Mamono Taosu Nouryoku Ubau Watashi Tsuyokunaru',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t\t('Kansu ',  'Kansutoppu!',                                                         'translated'),\n\t\t\t('YMC ',    'Yuri Maid Cafe',                                                      'translated'),\n\t\t\t('Gob ',    'Goblin Tenseiki ~erufu youjo ni kaku de maketeru yuusha na ore~',     'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-02-16T04:25:09.012308"
 ],
 "The Library of Time": [
  "def extractLibraryoftimeWordpressCom(item):\n\t'''\n\tParser for 'libraryoftime.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('harry potter',       'Harry Potter and the Secret Treasure',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-22T06:28:57.357291"
 ],
 "The Lion of Leeuwarden": [
  "\ndef extractLionofleeuwardenWordpressCom(item):\n\t'''\n\tParser for 'lionofleeuwarden.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:34.927787"
 ],
 "The Lovely Sweet Dream~": [
  "def extractLovelysweetdream959085286WordpressCom(item):\n\t'''\n\tParser for 'lovelysweetdream959085286.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\ttitlemap = [\n\t\t('So What If You\u2019ve Been Reborn? Chapter',  'So What If You\u2019ve Been Reborn?',      'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-21T04:06:01.380234"
 ],
 "The Ludicrous Hatter": [
  "def extractTheludicroushattertranslationsWordpressCom(item):\n\t'''\n\tParser for 'theludicroushattertranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Sales Executive\\'s New Love Interest',       'The Sales Executive\\'s New Love Interest',                      'translated'),\n\t\t('Avian Over Gold',                                'Avian Over Gold',                                               'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-07T10:14:02.767886"
 ],
 "The Lunacy of Duke Venomania": [
  "def extractTheLunacyOfDukeVenomania(item):\n\t\"\"\"\n\tParser for 'The Lunacy of Duke Venomania'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The MasterPaster's Blog": [
  "def extractMasterpasterWordpressCom(item):\n\t'''\n\tParser for 'masterpaster.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('shinmai',       'Shinmai Maou no Keiyakusha',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T08:08:34.768048"
 ],
 "The Mustang Translator": [
  "def extractTheMustangTranslator(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Six Immortals' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Six Immortals', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Named": [
  "def extractTheNamed(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Nevsky Wall": [
  "\ndef extractWwwThenevskywallCom(item):\n\t'''\n\tParser for 'www.thenevskywall.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-24T08:18:52.983527"
 ],
 "The New Devil": [
  "\ndef extractThenewdevilBlogspotCom(item):\n\t'''\n\tParser for 'thenewdevil.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:20.841974"
 ],
 "The Novel Temple": [
  "def extractWwwThenoveltempleCom(item):\n\t'''\n\tParser for 'www.thenoveltemple.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('M.D.B',           'The Marvelous Dragon Balls',                      'translated'),\n\t\t('D.B.Z:A.R',       'Dragon Ball Z: Attack of Raditz',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-20T09:32:43.955545"
 ],
 "The Novelst": [
  "def extractWwwThenovelstCom(item):\n\t'''\n\tParser for 'www.thenovelst.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Reincarnation \u2013 Lord is Extremely Hardcore',       'Reincarnation \u2013 Lord is Extremely Hardcore',                      'translated'),\n\t\t('If You Are a Dodder Flower',                       'If You Are a Dodder Flower',                                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-21T23:58:40.724899"
 ],
 "The Occasional Translation": [
  "\ndef extractTheoccasionaltranslationBlogspotCom(item):\n\t'''\n\tParser for 'theoccasionaltranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-20T06:49:21.613339"
 ],
 "The Other Half of My Apple": [
  "def extractTheOtherHalfofMyApple(item):\n\t\"\"\"\n\t'The Other Half of My Apple'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Random' in item['tags']:\n\t\treturn None\n\t\t\n\n\ttagmap = [\n\t\t('To Our Youth that is Fading Away',       'To Our Youth that is Fading Away', 'translated'),\n\t\t('Don\\'t Turn From Summer',                'Don\\'t Turn From Summer',          'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tchp_prefixes = [\n\t\t\t('To Our Youth that is Fading Away: ',    'To Our Youth that is Fading Away', 'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-04-28T03:35:50.073072"
 ],
 "The Other Kind of Roommate": [
  "\ndef extractTheotherkindofroommateCom(item):\n\t'''\n\tParser for 'theotherkindofroommate.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:25.694416"
 ],
 "The Paper Fictions": [
  "def extractThePaperFictions(item):\n\t\"\"\"\n\tthepaperfictions.wordpress.com\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Paranormal Investigations of Caro Spencer": [
  "\ndef extractCarospencerinvestigatesBlogspotCom(item):\n\t'''\n\tParser for 'carospencerinvestigates.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:17.122785"
 ],
 "The Pen in the Stone": [
  "\ndef extractThepeninthestoneCom(item):\n\t'''\n\tParser for 'thepeninthestone.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:26.271282"
 ],
 "The Place Closest to Heaven": [
  "def extractThePlaceClosestToHeaven(item):\n\t\"\"\"\n\tParser for 'The Place Closest to Heaven'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Plot To End All Plots": [
  "\ndef extractAllplotsBlogspotCom(item):\n\t'''\n\tParser for 'allplots.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:29:20.516517"
 ],
 "The Rabbit Knight": [
  "def extractTherabbitknight(item):\n\t\"\"\"\n\tParser for 'therabbitknight'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Rebirth of a Dragon": [
  "\ndef extractWebnovel1BlogspotCom(item):\n\t'''\n\tParser for 'webnovel1.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:08.125478"
 ],
 "The Solar Towers": [
  "\ndef extractTelilroWordpressCom(item):\n\t'''\n\tParser for 'telilro.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:22.262345"
 ],
 "The Soulreaper Chronicles": [
  "\ndef extractSoulreaperchroniclesBlogspotCom(item):\n\t'''\n\tParser for 'soulreaperchronicles.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:31.329804"
 ],
 "The Sounds of Soothing Rain": [
  "def extractThesoundsofsoothingrainHomeBlog(item):\n\t'''\n\tParser for 'thesoundsofsoothingrain.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Apocalyptic Rebirth: Earth\u2019s Vast Changes',       'Apocalyptic Rebirth: Earth\u2019s Vast Changes',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:48:12.678548"
 ],
 "The Sphere": [
  "def extractTheSphere(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Spirits of Eden": [
  "\ndef extractSpiritsofedenCom(item):\n\t'''\n\tParser for 'spiritsofeden.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:30.814501"
 ],
 "The Strange Observers": [
  "def extractThestrangeobserversWordpressCom(item):\n\t'''\n\tParser for 'thestrangeobservers.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('House Dad\u2019s Literary Life c',  'House Dad\u2019s Literary Life',        'translated'),\n\t\t('Rebirth In A Perfect Era',     'Rebirth In A Perfect Era',         'translated'),\n\t\t('Tensei Shoujo no Rirekisho',   'Tensei Shoujo no Rirekisho',       'translated'),\n\t\t('I made the world mutate',      'I made the world mutate',          'translated'),\n\t\t('Master of Dungeon',            'Master of Dungeon',                'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-04T04:26:53.261810"
 ],
 "The Strolling Rhea": [
  "def extractSyilpharheaWordpressCom(item):\n\t'''\n\tParser for 'syilpharhea.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [ \n\t\t('Banished Healer',        'The Healer Banished From The Party, In Fact, Is The Strongest',                                                    'translated'),\n\t\t('Re-summoned Hero',       'Will the Re-Summoned Hero Live as an Ordinary Person',                                                             'translated'),\n\t\t('Headless Dullahan',      'I\u2019m a Dullahan, Looking for My Head',                                                                              'translated'),\n\t\t('Goddess\\'s Suffering',   'I Already Said I Don\u2019t Want to Be Reincarnated, Didn\u2019t I!? ~the Suffering of the Goddess of Reincarnation~',       'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T05:27:21.735564"
 ],
 "The Sun Is Cold Translations": [
  "def extractTheSunIsColdTranslations(item):\n\t\"\"\"\n\tParser for 'The Sun Is Cold Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif '108 maidens' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, '108 Maidens of Destiny', vol, chp, frag=frag, postfix=postfix)\n\tif 'Back to the Apocalypse' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Back to the Apocalypse', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Sylthorian": [
  "def extractThesylthorianCom(item):\n\t'''\n\tParser for 'thesylthorian.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Magic Academy',                 'I was reincarnated as a Magic Academy!',                      'oel'),\n\t\t('100 Luck',                      '100 Luck and the Dragon Tamer Skill!',                        'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-26T02:56:56.746139"
 ],
 "The Tales of Paul Twister": [
  "def extractTalesOfPaulTwister(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Fate of Paul Twister' in item['tags']:\n\t\tassert not vol\n\t\tvol = 2\n\t\treturn buildReleaseMessageWithType(item, 'The Tales of Paul Twister', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'The Return of Paul Twister' in item['tags']:\n\t\tassert not vol\n\t\tvol = 3\n\t\treturn buildReleaseMessageWithType(item, 'The Tales of Paul Twister', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Tom Drake Experience": [
  "\ndef extractTdexperienceWordpressCom(item):\n\t'''\n\tParser for 'tdexperience.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:29.194690"
 ],
 "The Unbroken Chaos": [
  "\ndef extractEndtheunbrokenchaosBlogspotCom(item):\n\t'''\n\tParser for 'endtheunbrokenchaos.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:28.962421"
 ],
 "The Undying Cultivator": [
  "def extractTheUndyingCultivator(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvolstr = str(item['tags']).lower().replace('arc ', 'volume ')\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(volstr + item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\textract = re.search('\\\\W(\\\\d+)\\\\.(\\\\d+)\\\\W', item['title'])\n\tif extract:\n\t\tchp = float(extract.group(1))\n\t\tfrag = float(extract.group(2))\n\tif 'The Undying Cultivator' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Undying Cultivator', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'The Undying Prince' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Undying Prince', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False",
  "2017-08-16T05:07:06.724757"
 ],
 "The Verbose Playground": [
  "def extractTheVerbosePlayground(item):\n\t\"\"\"\n\tParser for 'The Verbose Playground'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Viking Story Teller": [
  "def extractTheVikingStoryTeller(item):\n\t\"\"\"\n\tThe Viking Story Teller\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "The Wandering Inn": [
  "def extractWanderinginnWordpressCom(item):\n\t'''\n\tParser for 'wanderinginn.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif 'Protected: ' in item['title']:\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-26T03:00:26.619240"
 ],
 "The Watchful Skies": [
  "\ndef extractThewatchfulskiesWordpressCom(item):\n\t'''\n\tParser for 'thewatchfulskies.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:20.520768"
 ],
 "The Witches of Greenwitch": [
  "\ndef extractWitchesofgreenwitchWordpressCom(item):\n\t'''\n\tParser for 'witchesofgreenwitch.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:28.351535"
 ],
 "The World On The Other Side\u2026": [
  "def extractTheWorldOnTheOtherSide(item):\n\t\"\"\"\n\t'The World On The Other Side\u2026'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Drop!! ~A Tale of the Fragrance Princess~',       'Drop!! ~A Tale of the Fragrance Princess~',                      'translated'),\n\t\t('I\\'ll Live My Second Life!',                      'I\\'ll Live My Second Life!',                                     'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Second Life! Chapter',                      'I\\'ll Live My Second Life!',                                     'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-30T04:15:20.503731"
 ],
 "The World's Most Beautiful Lies": [
  "def extractTheworldsmostbeautifulliesBlogspotCom(item):\n\t'''\n\tParser for 'theworldsmostbeautifullies.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Under The Plum Blossom',   'Under The Plum Blossom',                  'translated'),\n\t\t('The Elixir of Life',       'The Elixir of Life',                      'translated'),\n\t\t('Beseeching Love',          'Beseeching Love',                         'translated'),\n\t\t('2:30 am',                  '2:30 am',                                 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-10-20T07:24:38.323678"
 ],
 "The Writeaholic's Blog": [
  "\ndef extractThewriteaholicblogWordpressCom(item):\n\t'''\n\tParser for 'thewriteaholicblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:25.712691"
 ],
 "The Zombie Knight": [
  "def extractZombieKnight(item):\n\t\"\"\"\n\n\t\"\"\"\n\ttitleconcat = ' '.join(item['tags']) + item['title']\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(titleconcat)\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn buildReleaseMessageWithType(item, 'The Zombie Knight', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n",
  "2017-03-08T04:59:21.700134"
 ],
 "TheDefend Translations": [
  "def extractTheDefendTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\ttagmap = [\n\t\t('Invincible Saint',       'Invincible Saint ~Salaryman, the Path I Walk to Survive in This Other World~',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\t\t\n\treturn False",
  "2017-07-15T22:33:21.269889"
 ],
 "TheNoobTranslator": [
  "def extractThenoobtranslatorXyz(item):\n\t'''\n\tParser for 'thenoobtranslator.xyz'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif item['tags'] == ['Uncategorized']:\n\t\n\t\ttitlemap = [\n\t\t\t('PS Chapter ',    'Perfect Superstar',               'translated'),\n\t\t\t('HDLL Chapter ',  'House Dad\\'s Literary Life',      'translated'),\n\t\t]\n\t\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\n\ttagmap = [\n\t\t\t('Perfect Superstar',           'Perfect Superstar',               'translated'),\n\t\t\t('House Dad\\'s Literary Life',  'House Dad\\'s Literary Life',      'translated'),\n\t\t\t('House Dad Literary Life',     'House Dad\\'s Literary Life',      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-28T22:37:51.899249"
 ],
 "Their Gray Faces": [
  "\ndef extractThegrayfacesWordpressCom(item):\n\t'''\n\tParser for 'thegrayfaces.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:19.185147"
 ],
 "There You Will Feel Free": [
  "\ndef extractAshandzabeWordpressCom(item):\n\t'''\n\tParser for 'ashandzabe.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:27.667611"
 ],
 "Thernot Studio": [
  "\ndef extractThernotstudioWordpressCom(item):\n\t'''\n\tParser for 'thernotstudio.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-21T05:57:31.658604"
 ],
 "These days, (\u767e\u5408)": [
  "\ndef extractYuriwebnovelWordpressCom(item):\n\t'''\n\tParser for 'yuriwebnovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:20.055460"
 ],
 "Thirst": [
  "\ndef extractThirstFilmsandfablesCom(item):\n\t'''\n\tParser for 'thirst.filmsandfables.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:27.107396"
 ],
 "This Ant Just Wanna Sleep": [
  "def extractThisantjustwannasleepWordpressCom(item):\n\t'''\n\tParser for 'thisantjustwannasleep.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Every World Seems Not Quite Right',        'Every World Seems Not Quite Right',                       'translated'),\n\t\t('Killing The Same Person Every Time',       'Killing The Same Person Every Time',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Every World Seems Not Quite Right ',        'Every World Seems Not Quite Right',                       'translated'),\n\t\t('EWSNQR',                                    'Every World Seems Not Quite Right',                       'translated'),\n\t\t('KtSPET',                                    'Killing The Same Person Every Time',                      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-05-04T08:20:12.286482"
 ],
 "This World Work": [
  "def extractThisWorldWork(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Thomas Bleakly, P.I.": [
  "\ndef extractThomasbleaklyWordpressCom(item):\n\t'''\n\tParser for 'thomasbleakly.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:29.171127"
 ],
 "Throwaway": [
  "def extractThrowaway(item):\n\t\"\"\"\n\tParser for 'Throwaway'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif item['title'].lower().startswith('sisters violated many times in dreams and reality') or \\\n\t\titem['title'].lower().startswith('sisters violated many times in dream and reality'):\n\t\treturn buildReleaseMessageWithType(item, 'Sisters Violated Many Times in Dreams and Reality', vol, chp, frag=frag, postfix=postfix)\n\t\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-03-10T10:08:56.356226"
 ],
 "Thunder Translation": [
  "def extractThunder(item):\n\t\"\"\"\n\t# Thunder Translations:\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Stellar Transformations' in item['tags'] and (vol or chp):\n\t\treturn buildReleaseMessageWithType(item, 'Stellar Transformations', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Thyaeria Translations": [
  "def extractThyaeria(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Tales of Demons and Gods' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tales of Demons and Gods', vol, chp, frag=frag, postfix=postfix)\n\tif 'Warlock of the Magus World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Warlock of the Magus World', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tieshaunn": [
  "def extractTieshaunn(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\treturn None",
  "2017-09-10T07:16:34.855361"
 ],
 "Tiger Translations": [
  "def extractTigertranslationsOrg(item):\n\t'''\n\tParser for 'tigertranslations.org'\n\t'''\n\t\n\tttmp = item['title'].replace(\"10 Years\", \"<snip> years\").replace(\"10 Years Later\", \"<snip> years\")\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(ttmp)\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I Will Not Become an Enemy!',                                              'I Will Not Become an Enemy!',                                                             'translated'),\n\t\t('My Sister the Heroine, and I the Villainess',                              'My Sister the Heroine, and I the Villainess',                                             'translated'),\n\t\t('Isekai ni Kita Boku wa Kiyoubinbode Subaya-sa Tayorina Tabi o Suru',       'Isekai ni Kita Boku wa Kiyoubinbode Subaya-sa Tayorina Tabi o Suru',                      'translated'),\n\t\t('Jack of all Trades',                                                       'Isekai ni Kita Boku wa Kiyoubinbode Subaya-sa Tayorina Tabi o Suru',                      'translated'),\n\t\t('Prison Dungeon and the Exiled Hero',                                       'Prison Dungeon and the Exiled Hero',                                                      'translated'),\n\t\t('Two Saints wander off into a Different World',                             'Two Saints wander off into a Different World',                                            'translated'),\n\t\t('Lioncourt War',                                                            'A History of the Lioncourt War',                                                          'translated'),\n\t\t('realist demon king',                                                       'The Legendary Rebuilding of a World by a Realist Demon King',                             'translated'),\n\t\t('Koko wa Ore ni Makasete Saki ni Ike to Itte kara 10 Nen ga Tattara Densetsu ni Natteita',       'Koko wa Ore ni Makasete Saki ni Ike to Itte kara 10 Nen ga Tattara Densetsu ni Natteita',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\t\n\t# Handle annoying series with numbers in the title.\n\tif 'Koko wa Ore ni Makasete Saki ni Ike to Itte kara 10 Nen ga Tattara Densetsu ni Natteita' in item['tags'] and chp == 10:\n\t\treturn False\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-05-18T08:32:53.700657"
 ],
 "Tigress Translations": [
  "def extractWwwTigresstranslationsCom(item):\n\t'''\n\tParser for 'www.tigresstranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Enemy!',                     'I Will Not Become an Enemy!',                                       'translated'),\n\t\t('Two Saints',                 'Two Saints wander off into a Different World',                      'translated'),\n\t\t('Only with Your Heart',       'Only with Your Heart',                                              'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-22T00:04:41.524628"
 ],
 "Timebun Translations": [
  "def extractTimebunTranslations(item):\n\t\"\"\"\n\tTimebun Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Timeless MTL": [
  "def extractTimelessMtl(item):\n\t\"\"\"\n\tParser for 'Timeless MTL'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tinkerbell-san": [
  "def extractTinkerbellsan(item):\n\t\"\"\"\n\t# 'Tinkerbell-san'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'C-Drama' in item['tags']:\n\t\treturn None\n\tif 'J-drama' in item['tags']:\n\t\treturn None\n\tif 'sharing' in item['tags']:\n\t\treturn None\n\t\n\tif 'Caught in my Own Trap' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Caught in my Own Trap', vol, chp, frag=frag, postfix=postfix)\n\tif 'Finding Glowing Beauty in Books' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Finding Glowing Beauty in Books', vol, chp, frag=frag, postfix=postfix)\n\tif 'Boss\u2019s Blind Date Notes' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Boss\\'s Blind Date Notes', vol, chp, frag=frag, postfix=postfix)\n\tif 'One Sweet Life' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'One Sweet Life', vol, chp, frag=frag, postfix=postfix)\n\tif 'Full Marks Hidden Marriage: Pick Up a Son' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Full Marks Hidden Marriage: Pick Up a Son', vol, chp, frag=frag, postfix=postfix)\n\tif 'The love affair beside the window' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Love Affair Beside the Window', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Sales Executive\u2019s New Love Interest' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Sales Executive\\'s New Love Interest', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-12-18T03:56:24.375034"
 ],
 "Tintan": [
  "def extractTintantonWordpressCom(item):\n\t'''\n\tParser for 'tintanton.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Isekai de Kojiin',       'Isekai de Kojiin wo Hiraitakedo, nazeka Darehitori Sudatou to Shinai Ken (WN)',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:22:34.854334"
 ],
 "Toaaa~~~": [
  "def extractToaaa(item):\n\t\"\"\"\n\tParser for 'Toaaa~~~'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Toadmila Wartly": [
  "def extractToadmilaBlogspotCom(item):\n\t'''\n\tParser for 'toadmila.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\t\n\tif item['title'].startswith(\"Chapter \") and vol is None:\n\t\treturn buildReleaseMessageWithType(item, 'Toadmila Wartly', 1, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith(\"Book \"):\n\t\treturn buildReleaseMessageWithType(item, 'Toadmila Wartly', vol, chp, frag=frag, postfix=postfix)\n\n\n\treturn False",
  "2018-04-28T02:48:33.981359"
 ],
 "Tofubyu": [
  "def extractTofubyu(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tokki Scans": [
  "def extractTokkiscansWordpressCom(item):\n\t'''\n\tParser for 'tokkiscans.wordpress.com'\n\t'''\n\n\n\tbadwords = [\n\t\t\t'Releases',\n\t\t]\n\tif any([bad in item['tags'] for bad in badwords]):\n\t\treturn None\n\n\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == ['Novel']:\n\t\ttitlemap = [\n\t\t\t('The Monster Duchess and Contract Princess',  'The Monster Duchess and Contract Princess',      'translated'),\n\t\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:44:17.719389"
 ],
 "Tokyo ESP Scans": [
  "def extractTokyoESPScans(item):\n\t\"\"\"\n\tTokyo ESP Scans\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tomorolls": [
  "def extractTomorolls(item):\n\t\"\"\"\n\t# Tomorolls\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Cicada as Dragon' in item['tags'] or 'Semi Datte Tensei Sureba Ryuu Ni Naru' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Cicada as Dragon', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tony Yon Ka": [
  "def extractTonyYonKa(item):\n\t\"\"\"\n\t# tony-yon-ka.blogspot.com (the blog title is stupidly long)\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Manowa' in item['title'] and chp:\n\t\treturn buildReleaseMessageWithType(item, 'Manowa Mamono Taosu Nouryoku Ubau Watashi Tsuyokunaru', vol, chp, frag=frag, postfix=postfix)\n\tif 'Vampire Princess' in item['title'] and chp:\n\t\treturn buildReleaseMessageWithType(item, 'Kyuuketsu Hime wa Barairo no Yume o Miru', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Too lazy to translate": [
  "\ndef extractTenseihonyakushaWordpressCom(item):\n\t'''\n\tParser for 'tenseihonyakusha.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-21T05:57:32.816641"
 ],
 "Torii Translations": [
  "def extractToriiTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Toruviel": [
  "\ndef extractToruvielnovelWordpressCom(item):\n\t'''\n\tParser for 'toruvielnovel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:47.550637"
 ],
 "Totally Insane Tranlation": [
  "def extractTotallyInsaneTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'PMG' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Peerless Martial God', vol, chp, frag=frag, postfix=postfix)\n\tif 'DtH' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Devouring The Heavens', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Totally Translations": [
  "def extractTotallytranslationsCom(item):\n\t'''\n\tParser for 'totallytranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Peerless Martial God',       'Peerless Martial God',                      'translated'),\n\t\t('Heavenly Curse',             'Heavenly Curse',                            'translated'),\n\t\t('Devouring The Heavens',      'Devouring The Heavens',                     'translated'),\n\t\t('Peerless Martial God 2',     'Peerless Martial God 2',                    'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-24T20:17:48.024235"
 ],
 "Totally not a Lolicon": [
  "def extractGarbagetrucktranslationWordpressCom(item):\n\t'''\n\tParser for 'garbagetrucktranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Kuishinbo Elf Chapter',  'Kuishinbo Elf',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-26T02:54:43.888297"
 ],
 "Totokk's Translations": [
  "def extractTotokk(item):\n\t\"\"\"\n\t# Totokk's Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Shen Yin Wang Zuo Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Shen Yin Wang Zuo', vol, chp, frag=frag, postfix=postfix)\n\tif '[SWYZ] Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Shen Yin Wang Zuo', vol, chp, frag=frag, postfix=postfix)\n\tif '[SYWZ]' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Shen Yin Wang Zuo', vol, chp, frag=frag, postfix=postfix)\n\tif 'Shen Yin Wang Zuo, Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Shen Yin Wang Zuo', vol, chp, frag=frag, postfix=postfix)\n\tif 'SYWZ' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Shen Yin Wang Zuo', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-08-30T04:26:30.139246"
 ],
 "Towards the Sky": [
  "def extractTowardstheSky(item):\n\t\"\"\"\n\t'Towards the Sky'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Sorcerer King',            'Sorcerer King',                           'translated'), \n\t\t('Ashes and Kingdoms',       'Ashes and Kingdoms',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\t\t\n\treturn False",
  "2019-01-05T08:19:09.398629"
 ],
 "Towards the Sky~": [
  "def extractTowardsTheSky(item):\n\t\"\"\"\n\t# 'Towards the Sky~'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Train Wreck: The Wrath of Mom": [
  "\ndef extractKillmomWordpressCom(item):\n\t'''\n\tParser for 'killmom.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:23.676340"
 ],
 "TransLaboratory": [
  "def extractTranslaboratory(item):\n\t'''\n\tParser for 'TransLaboratory'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = {\n\n\t\t'Blade Online'                                  : 'Blade Online',\n\n\t}\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\n\treturn False",
  "2017-03-25T09:28:00.030506"
 ],
 "Translate Addict": [
  "\ndef extractTranslateaddictWordpressCom(item):\n\t'''\n\tParser for 'translateaddict.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-13T21:44:33.821844"
 ],
 "Translated Novels Directory": [
  "def extractTranslatedNovelsDirectory(item):\n\t\"\"\"\n\tParser for 'Translated Novels Directory'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Translated by a Clown": [
  "def extractClownTrans(item):\n\t\"\"\"\n\t# 'Translated by a Clown'\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Tensei Shitara Slime datta ken' in item['tags'] and chp:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shitara Slime Datta Ken', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Translateindo": [
  "def extractWwwTranslateindoCom(item):\n\t'''\n\tParser for 'www.translateindo.com'\n\t'''\n\n\treturn None",
  "2019-05-28T04:54:24.030049"
 ],
 "Translatin' Otaku": [
  "def extractTranslatinotakuCf(item):\n\t'''\n\tParser for 'translatinotaku.cf'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Hokage Ryos Path',                      'Hokage: Ryo\\'s Path',                      'translated'),\n\t\t('The Strongest Hokage',                  'The Strongest Hokage',                     'translated'),\n\t\t('God of Soul System',                    'God Of Soul System',                       'translated'),\n\t\t('Harry Potter and the Secret Treasures', 'Harry Potter and the Secret Treasures',    'translated'),\n\t\t('The King of The Worlds',                'The King of The Worlds',                   'translated'),\n\t\t('One Piece: The Soul Purchasing Pirate', 'One Piece: The Soul Purchasing Pirate',    'translated'),\n\t\t('Reincarnation Paradise',                'Reincarnation Paradise',                   'translated'),\n\t\t('My Inseparable House Guests',           'My Inseparable House Guests',                          'translated'),\n\t\t('Heavenly Farmer',                       'Heavenly Farmer',                                      'translated'),\n\t\t('Super Card System',                     'Super Card System',                                    'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('G.O.S.S Chapter',  'God Of Soul System',                       'translated'),\n\t\t('T.S.H Chapter',    'The Strongest Hokage',                     'translated'),\n\t\t('H.R.P Chapter ',   'Hokage: Ryo\\'s Path',                      'translated'),\n\t\t('F.S Chapter ',     'Fantasy System',                           'translated'),\n\t\t('H.P.S.T Chapter ', 'Harry Potter and the Secret Treasures',    'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-16T22:54:05.299378"
 ],
 "Translating For Your Pleasure": [
  "def extractTranslatingForYourPleasure(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"The Inverted Dragon's Scale\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"The Inverted Dragon's Scale\", vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Translating Sloth": [
  "def extractTranslatingSloth(item):\n\t\"\"\"\n\t'Translating Sloth'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Translating Tolerably": [
  "def extractImjustheretoreadblCom(item):\n\t'''\n\tParser for 'imjustheretoreadbl.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('RAAS',       'Reborn As a System',                                       'translated'),\n\t\t('SP',         'Screen Partner',                                           'translated'), \n\t\t('PUP',        'Picked up by the Protagonist of a Tormented! MC Novel',    'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:41:09.060267"
 ],
 "Translating Ze Tian Ji": [
  "def extractTranslatingZeTianJi(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn buildReleaseMessageWithType(item, 'Ze Tian Ji ', vol, chp, frag=frag, postfix=postfix)\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Translating from zero": [
  "def extractWhykunWordpressCom(item):\n\t'''\n\tParser for 'whykun.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Sir, I can\u2019t actually read my Status',       'Sir, I can\u2019t actually read my Status',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-10T07:38:15.036947"
 ],
 "Translating.Sloth": [
  "def extractTranslatingSloth(item):\n\t\"\"\"\n\t'Translating Sloth'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('\u5a18\u5b50\u6211\u624d\u662f\u5a03\u7684\u7239',                    'Wife, I Am the Baby\\'s Father', 'translated'),\n\t\t('Wife, I Am the Baby\\'s Father',       'Wife, I Am the Baby\\'s Father', 'translated'),\n\t\t('I want to eat meat Wife',             'I want to eat meat Wife',       'translated'),\n\t\t('My Lord is a Stone',                  'My Lord is a Stone',            'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-09-10T07:28:49.646094"
 ],
 "Translation Nations": [
  "def extractTranslationNations(item):\n\t\"\"\"\n\t# Translation Nations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Stellar Transformation' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Stellar Transformations', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Legendary Thief' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Virtual World - The Legendary Thief', vol, chp, frag=frag, postfix=postfix)\n\tif 'SwallowedStar' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Swallowed Star', vol, chp, frag=frag, postfix=postfix)\n\tif 'Transcending The Nine Heavens' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Transcending The Nine Heavens', vol, chp, frag=frag, postfix=postfix)\n\tif 'God and Devil World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'God and Devil World', vol, chp, frag=frag, postfix=postfix)\n\tif 'Limitless Sword God' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Limitless Sword God', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('undefeated god of war') and 'Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Undefeated God of War', vol, chp, frag=frag, postfix=postfix)\n\tif 'Undefeated God of War' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Undefeated God of War', vol, chp, frag=frag, postfix=postfix)\n\tif 'Path to Heaven' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Path to Heaven', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Ultimate Evolution' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Ultimate Evolution', vol, chp, frag=frag, postfix=postfix)\n\tif 'Plundering the Dao of the Immortal Path' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Plundering the Dao of the Immortal Path', vol, chp, frag=frag, postfix=postfix)\n\tif 'Only I Shall Be Immortal' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Only I Shall Be Immortal', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('the ultimate evolution volume') and 'Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'The Ultimate Evolution', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-07-02T10:27:52.919829"
 ],
 "Translation Noob": [
  "def extractTranslationnoobBlogspotCom(item):\n\t'''\n\tParser for 'translationnoob.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Power and Wealth',       'Power and Wealth',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tchp_prefixes = [\n\t\t\t('Extraordinary Genius - Cp',  'Extraordinary Genius',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-04-29T05:07:46.904725"
 ],
 "Translation Raven": [
  "def extractTranslationRaven(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Godly Hunter' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Godly Hunter', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Translation Treasure Box": [
  "def extractTranslationTreasureBox(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "TranslationChicken": [
  "def extractTranslationchicken(item):\n\t\"\"\"\n\tParser for 'TranslationChicken'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 're:zero' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Re:Zero Kara Hajimeru Isekai Seikatsu (WN)', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-03-25T10:07:03.528598"
 ],
 "Translations From Outer Space": [
  "def extractTranslationsFromOuterSpace(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Translator Eri": [
  "def extractTranslatorEri(item):\n\t\"\"\"\n\tParser for 'Translator Eri'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"asks\" in item['tags']:\n\t\treturn None\n\tif \"replied to your&nbsp;post: \" in item['title']:\n\t\treturn None\n\t\t\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-10-26T02:42:37.858788"
 ],
 "Translator K": [
  "def extractDaisyktranslationsBlogspotCom(item):\n\t'''\n\tParser for 'daisyktranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Empress with no Virtue',       'Empress with no Virtue',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-02T06:04:32.996675"
 ],
 "Transmigrating with a Cleaver": [
  "def extractFringealpacaBlogspotCom(item):\n\t'''\n\tParser for 'fringealpaca.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('TWC',       'Transmigrating with a Cleaver',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:24:09.514212"
 ],
 "TrashMTL": [
  "def extractTrashmtlWordpressCom(item):\n\t'''\n\tParser for 'trashmtl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Dungeon Game',                    'Dungeon Game',                                   'translated'),\n\t\t('Nee-chan is a Soap Girl!?',       'Nee-chan is a Soap Girl!?',                      'translated'),\n\t\t('Prisoner of the Library',         'Prisoner of the Library',                        'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-15T06:18:10.563685"
 ],
 "TresPasserby": [
  "def extractTrespasserby(item):\n\t\"\"\"\n\tParser for 'TresPasserby'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Triangle Novels": [
  "def extractTriangleNovels(item):\n\t'''\n\tParser for 'Triangle Novels'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WFTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Waiting For The Train\", vol, chp, frag=frag, postfix=postfix)\n\tif \"AFGITMOLFM\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"AFGITMOLFM\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-03-27T02:58:27.527738"
 ],
 "Triggered Translations": [
  "def extractTriggeredtranslationsBlogspotCom(item):\n\t'''\n\tParser for 'triggeredtranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('One Punch of Justice',       'One Punch of Justice',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-04T08:16:07.372171"
 ],
 "Trinity Archive": [
  "def extractTrinityArchive(item):\n\t\"\"\"\n\t# 'Trinity Archive'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Summoned Slaughterer' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Summoned Slaughterer', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tripp Translations": [
  "def extractTrippTl(item):\n\t\"\"\"\n\t# Tripp Translations\n\n\t\"\"\"\n\tchp, vol, frag = extractChapterVolFragment(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Majin Tenseiki' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Majin Tenseiki', vol, chp, frag=frag)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Trung Nguyen": [
  "def extractTrungNguyen(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Bringing the Farm to Live in Another World' in item['title'] or 'Bringing the Farm...' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Bringing the Farm to Live in Another World', vol, chp, frag=frag, postfix=postfix)\n\tif 'The First Alchemist - Chap' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'The First Alchemist', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Trungt Nguyen 123": [
  "def extractTrungtNguyen(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Underdog Versus Boss' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Underdog Versus Boss', vol, chp, frag=frag, postfix=postfix)\n\tif 'Xiao Qi Wait' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Xiao Qi Wait', vol, chp, frag=frag, postfix=postfix)\n\tif 'Beloved Little Treasure' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Beloved Little Treasure', vol, chp, frag=frag, postfix=postfix)\n\tif 'Real Fake Fiance' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Real Fake Fiance', vol, chp, frag=frag, postfix=postfix)\n\tif 'Demoness Go See The Emperor' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Demoness Go See The Emperor', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Reluctant Bride Book I' in item['tags']:\n\t\tif not vol:\n\t\t\tvol = 1\n\t\treturn buildReleaseMessageWithType(item, 'The Reluctant Bride Book I', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Try Translations": [
  "def extractTryTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t# ('Strategist Knows Everything',       'Gunshi wa Nandemo Shitteiru',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n \n\n\treturn False",
  "2017-09-18T07:05:17.457613"
 ],
 "TryTranslations/The Busy One": [
  "def extractTryTranslationsTheBusyOne(item):\n\t\"\"\"\n\tTryTranslations/The Busy One\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Strategist Knows Everything',       'Gunshi wa Nandemo Shitteiru',                      'translated'), \n\t\t('Jobless',       'I, without possessing a job, aim to become an adventurer!',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-05-12T05:52:47.159556"
 ],
 "Tseirp Translations": [
  "def extractTseirpTranslations(item):\n\t\"\"\"\n\t# 'Tseirp Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'IS SS' in item['title'] and not postfix:\n\t\tpostfix = 'Side Story'\n\tif item['title'].startswith('IS '):\n\t\treturn buildReleaseMessageWithType(item, 'Invincible Saint ~Salaryman, the Path I Walk to Survive in This Other World~', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('GC '):\n\t\treturn buildReleaseMessageWithType(item, \"I've Became Able to Do Anything With My Growth Cheat, but I Can't Seem to Get Out of Being Jobless\", vol, chp, frag=frag, postfix=postfix)\n\tif 'Growth Cheat' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"I've Became Able to Do Anything With My Growth Cheat, but I Can't Seem to Get Out of Being Jobless\", vol, chp, frag=frag, postfix=postfix)\n\tif 'Live Dungeon' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Live Dungeon', vol, chp, frag=frag, postfix=postfix)\n\tif 'Slow Life Frontier' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'I was kicked out of the Hero\u2019s party because I wasn\u2019t a true companion so I decided to have a slow life at the frontier.', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2018-02-07T07:23:32.609419"
 ],
 "Tsubaki Translation": [
  "def extractTsubakiTranslation(item):\n\t\"\"\"\n\tTsubaki Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tsuigeki Translations": [
  "def extractTsuigeki(item):\n\t\"\"\"\n\t# Tsuigeki Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Seiju no Kuni no Kinju Tsukai' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Seiju no Kuni no Kinju Tsukai', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tsuki Mochi": [
  "def extractTsukimochisiteWordpressCom(item):\n\t'''\n\tParser for 'tsukimochisite.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Cannon Fodder Counterattack System',       'Cannon Fodder Counterattack System',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T07:06:38.351968"
 ],
 "Tsuki's Miscellaneous": [
  "def extractTsukiSMiscellaneous(item):\n\t\"\"\"\n\tParser for 'Tsuki's Miscellaneous'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tsukigomori": [
  "def extractTsukigomori(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag):\n\t\treturn False\n\tif 'Our Glamorous Time' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Our Glamorous Time', vol, chp, frag=frag, postfix=postfix)\n\tif 'Same Place Not Same Bed' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Same Place Not Same Bed', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tsundere ojisan": [
  "def extractTsundereOjisan(item):\n\t'''\n\tParser for 'Tsundere ojisan'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"Kuro no senki\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Kuro no Senki\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-03-27T02:51:01.623132"
 ],
 "Ttukkirabit Translation": [
  "def extractTtukkirabitTranslation(item):\n\t\"\"\"\n\t'Ttukkirabit Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tumble Into Fantasy": [
  "def extractTumbleIntoFantasy(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Turb0 Translation": [
  "def extractTurb0(item):\n\t\"\"\"\n\t# Turb0 Translation\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\textr = re.search(' ([A-Z])\\\\d+', item['title'], flags=re.IGNORECASE)\n\tif extr:\n\t\tif vol and not chp:\n\t\t\tchp, vol = vol, chp\n\t\tep_key = extr.group(1)\n\t\tif ep_key == 'S':\n\t\t\tpostfix = 'Shun chapter'\n\t\telif ep_key == 'J' or ep_key == 'Y':\n\t\t\tpostfix = 'Julius chapter'\n\t\telif ep_key == 'K':\n\t\t\tpostfix = 'Katia chapter'\n\t\telif ep_key == 'B':\n\t\t\tpostfix = 'Balto chapter'\n\tif re.search('blood \\\\d+', item['title'], flags=re.IGNORECASE):\n\t\tpostfix = 'Blood Chapter'\n\tif 'kumo desu ga, nani ka?' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Kumo Desu ga, Nani ka?', vol, chp, frag=frag, postfix=postfix)\n\tif 'kumo desu ka, nani ga?' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Kumo Desu ga, Nani ka?', vol, chp, frag=frag, postfix=postfix)\n\tif 'kumo desu ga, nani ga?' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Kumo Desu ga, Nani ka?', vol, chp, frag=frag, postfix=postfix)\n\tif 'world record' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'World Record', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\tif 'kuzu inou' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Kuzu Inou\u3010Ondo wo Kaeru Mono\u3011 no Ore ga Musou suru made', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\treturn False",
  "2018-06-13T05:11:00.849143"
 ],
 "Turn the Page": [
  "\ndef extractTaholtorfWordpressCom(item):\n\t'''\n\tParser for 'taholtorf.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:47.618313"
 ],
 "Turtle and Hare Translations": [
  "def extractTurtleandHareTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Time (\u5bf9\u7684\u65f6\u95f4\u5bf9\u7684\u4eba)' in item['title'] or 'Time (\u5bf9\u7684\u65f6\u95f4\u5bf9\u7684\u4eba)' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Time', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Turtle's": [
  "def extractTurtleS(item):\n\t\"\"\"\n\tParser for 'Turtle's'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Tus-Trans": [
  "def extractTusTrans(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Twelve Months of May": [
  "def extractTwelveMonthsofMay(item):\n\t\"\"\"\n\t# 'Twelve Months of May'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'My Mister Ostrich' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Wo De Tuo Niao Xian Sheng', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Ostrich Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Wo De Tuo Niao Xian Sheng', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('My Fault For Being Blind') or 'My Fault For Being Blind' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Zhi Guai Dang Chu Xia Le Yan', vol, chp, frag=frag, postfix=postfix)\n\tif 'Split Zone No.13' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Split Zone No.13', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Lighter and Princess Gown' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Lighter and Princess Gown', vol, chp, frag=frag, postfix=postfix)\n\tif 'Lighter & Princess Gown' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Lighter and Princess Gown', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-05-12T05:37:08.170582"
 ],
 "Twig": [
  "def extractTwig(item):\n\t\"\"\"\n\t# 'Twig'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Twinkie-Little-Star-Blogs": [
  "def extractTwinkielittlestarWordpressCom(item):\n\t'''\n\tParser for 'twinkielittlestar.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Healer Who Wants To Be Healed',       'The Healer Who Wants To Be Healed',                      'translated'),\n\t\t('Noticing This Love',                      'Noticing This Love',                                     'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-30T07:04:51.705266"
 ],
 "Twisted Cogs": [
  "def extractTwistedCogs(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif '\u2013' in item['title']:\n\t\tpostfix = item['title'].split('\u2013', 1)[-1].strip()\n\tif 'smut' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Twisted Smut', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn buildReleaseMessageWithType(item, 'Twisted Cogs', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Twki-san Otaku": [
  "def extractTwkisanOtaku(item):\n\t\"\"\"\n\tTwki-san Otaku\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Two More Free Thoughts": [
  "def extractTwomorefreethoughtsWordpressCom(item):\n\t'''\n\tParser for 'twomorefreethoughts.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('A Wild Last Boss Appeared Chapter ',  'A Wild Last Boss Appeared',      'translated'),\n\t\t('A Wild Boss Last Appeared Chapter ',  'A Wild Last Boss Appeared',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-11-23T07:46:38.426796"
 ],
 "Tynkerd": [
  "def extractTynkerdWordpressCom(item):\n\t'''\n\tParser for 'tynkerd.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Amaterasu wa Kaku Katariki',             'Amaterasu wa Kaku Katariki',                            'translated'),\n\t\t('Shinshi na Orc wo Mezashimasu',          'Shinshi na Orc wo Mezashimasu',                         'translated'), \n\t\t('Beauty, Sage and the Devil\\'s Sword',    'Beauty, Sage and the Devil\\'s Sword',                   'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T07:08:40.544229"
 ],
 "Tyrant's Eye Translations": [
  "def extractTyrantsEyeTranslations(item):\n\t\"\"\"\n\t#'Tyrant's Eye Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "U Donate We Translate": [
  "def extractUDonateWeTranslate(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'ATG' in item['tags'] or 'Against the Gods' in item['title'] and 'Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Against the Gods', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Uchuuji Translations": [
  "def extractUchuujitranslationsWordpressCom(item):\n\t'''\n\tParser for 'uchuujitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('potd',                       'Prince of the Devils',                      'translated'),\n\t\t('Prince of the Devils',       'Prince of the Devils',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-25T07:13:13.381168"
 ],
 "Ukel2x": [
  "def extractUkel2x(item):\n\t\"\"\"\n\t#'Ukel2x\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('volume'):\n\t\treturn buildReleaseMessageWithType(item, 'Kokugensou wo Item Cheat de Ikinuku', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('dungeon kurashi no moto yuusha chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Dungeon Kurashi No Moto Yuusha', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('munivit anima chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Munivit Anima', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ultimaguil Base": [
  "def extractUltimaguilBase(item):\n\t\"\"\"\n\tParser for 'Ultimaguil Base'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ultimate Arcane": [
  "def extractUltimateArcane(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Isekai ni kanaderu densetsu ~toki wo tomeru mono~' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai ni kanaderu densetsu ~toki wo tomeru mono~', vol, chp, frag=frag, postfix=postfix)\n\tif 'JIKUU MAHOU DE ISEKAI TO CHIKYUU WO ITTARIKITARI' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Jikuu Mahou de Isekai to Chikyuu wo ittarikitari', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Umbra: Unsanctimonious": [
  "\ndef extractUmbrawebserialWordpressCom(item):\n\t'''\n\tParser for 'umbrawebserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:20.860149"
 ],
 "Unbreakable Machine Doll": [
  "def extractUnbreakableMachineDoll(item):\n\t\"\"\"\n\tParser for 'Unbreakable Machine Doll'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Unchained Translation": [
  "def extractUnchainedTranslation(item):\n\t\"\"\"\n\t# Unchained Translation\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Alchemist God' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Ascension of the Alchemist God', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Uncommitted Translations": [
  "def extractUncommittedtranslationsWordpressCom(item):\n\t'''\n\tParser for 'uncommittedtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I\u2019m Going to Destroy Another World For a Bit Chapters',        'I\\'m Going to Destroy Another World For a Bit',                       'translated'), \n\t\t('I Was Made the Disciple of a Yandere Girl But Chapters',       'I was made the disciple of a yandere girl, but',                      'translated'), \n\t\t('I was made the disciple of a yandere girl, but',               'I was made the disciple of a yandere girl, but',                      'translated'), \n\t\t('Evil God Chapter',                                             'Evil God',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-07-26T05:46:54.130221"
 ],
 "Undead Translations": [
  "def extractTheundeadmachinetranslatorWordpressCom(item):\n\t'''\n\tParser for 'theundeadmachinetranslator.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Sono Mugen no Saki',                                           'Sono Mugen no Saki',      'translated'), \n\t\t('She Professed Herself The Pupil Of The Wiseman (WN) chapter',  'She Professed Herself Pupil of a Wiseman (WN)',      'translated'), \n\t\t('She Professed Herself Pupil of a Wiseman (WN) Chapter',        'She Professed Herself Pupil of a Wiseman (WN)',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-27T07:33:14.961843"
 ],
 "Undecent Translations": [
  "def extractUndecentTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Undecided Translations": [
  "\ndef extractUndecidedtranslationsWordpressCom(item):\n\t'''\n\tParser for 'undecidedtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-23T06:02:56.129239"
 ],
 "Unded Translations": [
  "def extractUndedTranslations(item):\n\t\"\"\"\n\tParser for 'Unded Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Under Darkening Skies": [
  "\ndef extractUnderdarkeningskiesWordpressCom(item):\n\t'''\n\tParser for 'underdarkeningskies.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:20.285868"
 ],
 "Underworld Translations": [
  "\ndef extractUnderworldtranslateWordpressCom(item):\n\t'''\n\tParser for 'underworldtranslate.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-29T23:22:56.685902"
 ],
 "Undestined:": [
  "\ndef extractUndestinedStoryBlogspotCom(item):\n\t'''\n\tParser for 'undestined-story.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:43.028973"
 ],
 "Unemployment Novel": [
  "\ndef extractUnemploymentnovelBlogspotCom(item):\n\t'''\n\tParser for 'unemploymentnovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:59.322823"
 ],
 "Unhinged Translations": [
  "def extractUnhingedtranslationCom(item):\n\t'''\n\tParser for 'unhingedtranslation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Evil God',       'Evil God',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-01-11T05:22:16.226674"
 ],
 "UnicornsGalore!": [
  "def extractUnicornsGalore(item):\n\t\"\"\"\n\t'UnicornsGalore!'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('quit entourage',       'I Will Quit the Entourage of the Villainess',                      'translated'),\n\t\t('Saw a Smile',          'I Saw a Smile',                                                    'translated'),\n\t\t('Cat Invasion',         'If It\u2019s An Invasion Of The Earth, Of Course It\u2019ll Be Cats Right?', 'translated'),\n\t\t('Impaired hero',        'The Immortal Demon King and the Impaired Hero',                    'translated'),\n\t\t('Beauty\\'s secret',     'The Beauty\u2019s Secret',                                              'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-03-27T03:11:04.844990"
 ],
 "Union of Renegades: The Rys Chronicles Book I": [
  "\ndef extractFantasywebfictionWordpressCom(item):\n\t'''\n\tParser for 'fantasywebfiction.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:29.730358"
 ],
 "Unique Books": [
  "def extractUniqueBooks(item):\n\t\"\"\"\n\tUnique Books\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Allgemein' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Survival of a Healer', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Universes With Meaning": [
  "def extractUniversesWithMeaning(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Angel of Death' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Angel of Death', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'In The Name Of God' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'In The Name Of God', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Unknown Translations": [
  "\ndef extractUnknowntranslationsCom(item):\n\t'''\n\tParser for 'unknowntranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-06T03:51:56.217046"
 ],
 "Unlimited Novel Failures": [
  "\ndef extractUnlimitednovelfailures2MangamattersCom(item):\n\t'''\n\tParser for 'unlimitednovelfailures2.mangamatters.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-26T23:24:27.998804"
 ],
 "Unlimited Story Works": [
  "def extractUnlimitedStoryWorks(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Unlucky Slime": [
  "def extractUnluckyslimeWordpressCom(item):\n\t'''\n\tParser for 'unluckyslime.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, 'The Strange Adventure of a Broke Mercenary', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith(\"Broke Mercenary Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, 'The Strange Adventure of a Broke Mercenary', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith(\"Hero of Black Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, 'The Mightiest Hero of Black', vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\n\treturn False",
  "2019-04-10T22:41:51.865990"
 ],
 "Unnamed Translations": [
  "def extractUnnamedtranslations(item):\n\t\"\"\"\n\t# 'unnamedtranslations.blogspot.com'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Unsong": [
  "\ndef extractUnsongbookCom(item):\n\t'''\n\tParser for 'unsongbook.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:18.636292"
 ],
 "Untouchable Fly": [
  "def extractUntouchableflyCom(item):\n\t'''\n\tParser for 'untouchablefly.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t('Age of Adepts',       'Age of Adepts',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-04-22T08:07:40.198705"
 ],
 "Untuned Translation Blog": [
  "def extractUntunedTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\ttitle = item['title'].replace(' III(', ' vol 3 (').replace(' III:', ' vol 3:').replace(' II:', ' vol 2:').replace(' I:', ' vol 1:').replace(' IV:', ' vol 4:').replace(\n\t    ' V:', ' vol 5:')\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(title)\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\n\ttagmap = [\n\t\t('meg and seron',       'Meg and Seron', 'translated'),\n\t\t('kino\\'s journey',       'Kino\\'s Journey', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\tif 'meg and seron' in item['tags'] and chp and vol:\n\t\treturn buildReleaseMessageWithType(item, 'Meg and Seron', vol, chp, frag=frag, postfix=postfix)\n\tif 'lillia and treize' in item['tags'] and chp and vol:\n\t\treturn buildReleaseMessageWithType(item, 'Lillia to Treize', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-04-06T05:02:32.026868"
 ],
 "Usagi Translations": [
  "def extractUsagitranslationsWordpressCom(item):\n\t'''\n\tParser for 'usagitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Return of Godly Control \u2013 ',  'Return of Godly Control',         'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-11-04T22:51:19.384002"
 ],
 "Useless no 4": [
  "def extractUselessno4(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Skeleton Knight '):\n\t\treturn buildReleaseMessageWithType(item, 'Skeleton Knight, in another world', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('1000 hugs '):\n\t\treturn buildReleaseMessageWithType(item, '1000 nin no Homunkurusu no Shoujo tachi ni Kakomarete Isekai Kenkoku', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Paladin '):\n\t\textract = re.search('(\\\\d+)\\\\-(\\\\d+)', item['title'], re.IGNORECASE)\n\t\tif extract and not frag:\n\t\t\tchp = int(extract.group(1))\n\t\t\tfrag = int(extract.group(2))\n\t\treturn buildReleaseMessageWithType(item, 'Paladin of the End', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "V. J. Chambers Val St. Crowe": [
  "\ndef extractWwwVjchambersCom(item):\n\t'''\n\tParser for 'www.vjchambers.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn _buildReleaseMessage(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-09T10:29:32.470330"
 ],
 "VaanCruze": [
  "def extractMaouTheYuusha(item):\n\t\"\"\"\n\t# Maou the Yuusha\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif ':' in item['title']:\n\t\tpostfix = item['title'].split(':', 1)[-1]\n\tif 'Maou the Yuusha' in item['tags'] and 'chapter' in [tmp.lower() for tmp in item['tags']]:\n\t\treturn buildReleaseMessageWithType(item, 'Maou the Yuusha', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Vanilla Muse Novels": [
  "def extractWwwVmnovelsCom(item):\n\t'''\n\tParser for 'www.vmnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Big Landlord',                 'The Big Landlord',                                'translated'),\n\t\t('Let Me Shoulder This Blame',       'Let Me Shoulder This Blame',                      'translated'),\n\t\t('Quickly Wear The Face of The Devil',       'Quickly Wear The Face of The Devil',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-06T04:20:06.905832"
 ],
 "Vannie03": [
  "def extractVannie03WordpressCom(item):\n\t'''\n\tParser for 'vannie03.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('MPR \u2013 Chapter ',       'My Pervert Roommate',                      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-25T07:01:54.641458"
 ],
 "Various Translated Work": [
  "def extractVariousTranslatedWork(item):\n\t\"\"\"\n\tParser for 'Various Translated Work'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('kamen rider kuuga',       'kamen rider kuuga',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-21T05:02:48.800406"
 ],
 "Vasa and Ypres": [
  "\ndef extractVasaandypresWordpressCom(item):\n\t'''\n\tParser for 'vasaandypres.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:23.243000"
 ],
 "Vee Translation": [
  "def extractVeeTranslation(item):\n\t\"\"\"\n\tVee Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Vellichor Translations": [
  "\ndef extractV3LlichortlBlogspotCom(item):\n\t'''\n\tParser for 'v3llichortl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-16T11:45:15.758725"
 ],
 "Venti Frappe": [
  "def extractVentifrappeWordpressCom(item):\n\t'''\n\tParser for 'ventifrappe.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Doctoring the world Chapter ',    'Doctoring the world',      'translated'),\n\t\t('Doctoring the world: Chapter ',  'Doctoring the world',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:48:30.127267"
 ],
 "VeraTales": [
  "def extractVeratalesCom(item):\n\t'''\n\tParser for 'veratales.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Great Demon King',            'Great Demon King',                'translated'),\n\t\t('Black Iron\\'s Glory',         'Black Iron\\'s Glory',             'translated'),\n\t\t('My Wife Is a Beautiful CEO',  'My Wife Is a Beautiful CEO',      'translated'),\n\t\t('The Silly Alchemist',         'The Silly Alchemist',             'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:13:25.421544"
 ],
 "Verathragana Stories": [
  "def extractVerathragana(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'The Prince Of Nilfheim', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Verdant Lore": [
  "def extractWwwVerdantloreCom(item):\n\t'''\n\tParser for 'www.verdantlore.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('monarch of the dark nights',                   'Monarch of the Dark Nights',                                  'translated'),\n\t\t('The Lame Daoist Priest',                       'The Lame Daoist Priest',                                      'translated'),\n\t\t('BUSS',                                         'As Beautiful as Ever, the Bells Sound under the Starry Sky',  'translated'),\n\t\t('My Wife is the Martial Alliance Leader',       'My Wife is the Martial Alliance Leader',                      'translated'),\n\t\t('tvhss',                                        'The Villain Has Something to Say',                            'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-16T04:23:20.640545"
 ],
 "Versatile Guy": [
  "def extractVersatileGuy(item):\n\t\"\"\"\n\t'Versatile Guy'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "VesperLxD": [
  "def extractVesperlxd(item):\n\t\"\"\"\n\tParser for 'VesperLxD'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('Invincible Level Up',                                   'Invincible Level Up',                                'translated'),\n\t\t('Rebirth of an Abandoned Woman',                         'Rebirth of an Abandoned Woman',                      'translated'),\n\t\t(\"Great Han's Female General Wei Qiqi\",                   \"Great Han's Female General Wei Qiqi\",                'translated'),\n\t\t('The Woman Who Accepts Her Fate',                        'The Woman Who Accepts Her Fate',                     'translated'),\n\t\t('Miracle Doctor, Wild Empress: Genius Summoner',         'Miracle Doctor, Wild Empress: Genius Summoner',      'translated'),\n\t\t('The General\u2019s Little Peasant Wife',                     'The General\u2019s Little Peasant Wife',                  'translated'),\n\t\t('Midnight Offering: Hades\\'s Little Pet',                'Midnight Offering: Hades\\'s Little Pet',             'translated'),\n\t\t('The Man Who Met God',                                   'The Man Who Met God',                                'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2017-04-28T21:08:45.235655"
 ],
 "Vestige Translations": [
  "def extractVestigeTranslations(item):\n\t\"\"\"\n\tVestige Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "VexedTranslations": [
  "\ndef extractVexedtranslations(item):\n\t'''\n\tParser for 'VexedTranslations'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:15:52.035750"
 ],
 "VgPerson": [
  "def extractVgperson(item):\n\t\"\"\"\n\tParser for 'VgPerson'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'the Manga' in item['title']:\n\t\treturn None\n\t\n\tif 'Vocaloid' in item['tags']:\n\t\treturn None\n\tif 'twitter' in item['tags']:\n\t\treturn None\n\t\t\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-10-26T03:36:23.774743"
 ],
 "Vigil Until Dawn": [
  "\ndef extractVigiluntildawnBlogspotCom(item):\n\t'''\n\tParser for 'vigiluntildawn.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-14T09:26:52.140867"
 ],
 "Village Translations": [
  "def extractVillageTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Vin Translations": [
  "def extractVintaegeWordpressCom(item):\n\t'''\n\tParser for 'vintaege.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Captivating Crown Prince',       'The Captivating Crown Prince',                      'translated'),\n\t\t('Meow Meow Meow',                     'Meow Meow Meow',                                    'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-18T03:56:33.858668"
 ],
 "Violent Fluffball With Legs": [
  "def extractViolentfluffballWordpressCom(item):\n\t'''\n\tParser for 'violentfluffball.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Adonis Next Door: 100 Days of Forced Love',       'The Adonis Next Door: 100 Days of Forced Love',                      'translated'),\n\t\t('How To Say I Love You',                               'How To Say I Love You',                                              'translated'),\n\t\t('HTSILY',                                              'How To Say I Love You',                                              'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-28T05:10:47.940603"
 ],
 "Virlyce's Website": [
  "def extractWwwVirlyceCom(item):\n\t'''\n\tParser for 'www.virlyce.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('The Blue Mage Raised by Dragons', 'The Blue Mage Raised by Dragons',                'oel'),\n\t\t('TBMRbD',                          'The Blue Mage Raised by Dragons',                'oel'),\n\t\t('The Godking\\'s Legacy',           'The Godking\\'s Legacy',                          'oel'),\n\t\t('Demon\\'s Journey',                'Demon\\'s Journey',                               'oel'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-03T05:59:57.011636"
 ],
 "VisTrans": [
  "\ndef extractVistransNet(item):\n\t'''\n\tParser for 'vistrans.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:47:35.875322"
 ],
 "Vodka Translations": [
  "def extractVodkatranslationsHomeBlog(item):\n\t'''\n\tParser for 'vodkatranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ordinary I and Extraordinary Them',       'Ordinary I and Extraordinary Them',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-25T07:16:28.687624"
 ],
 "VodkaTranslations": [
  "def extractVodkatranslationsCom(item):\n\t'''\n\tParser for 'vodkatranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ordinary I and Extraordinary Them',       'Ordinary I and Extraordinary Them',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-26T22:36:22.792525"
 ],
 "Void": [
  "\ndef extractThepsykersWordpressCom(item):\n\t'''\n\tParser for 'thepsykers.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:47.822360"
 ],
 "Void Domain": [
  "\ndef extractTowercuratorWordpressCom(item):\n\t'''\n\tParser for 'towercurator.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:19.413953"
 ],
 "Void Translations": [
  "def extractVoidTranslations(item):\n\t\"\"\"\n\t# Void Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tmatch = re.search('^Xian Ni Chapter \\\\d+ ?[\\\\-\u2013]? ?(.*)$', item['title'])\n\tif match:\n\t\treturn buildReleaseMessageWithType(item, 'Xian Ni', vol, chp, postfix=match.group(1))\n\t\t\n\ttagmap = [\n\t\t('Everlasting Immortal Firmament',       'Everlasting Immortal Firmament', 'translated'),\n\t\t('Post-80s\\' Cultivation Journal',       'Post-80s\\' Cultivation Journal', 'translated'),\n\t\t('My Daoist Life',       'My Daoist Life', 'translated'),\n\t\t('Reaching to the Sky',  'Reaching to the Sky', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-04-15T02:31:06.961662"
 ],
 "Volare Translations": [
  "def extractVolareTranslations(item):\n\t\"\"\"\n\t'Volare Translations'\n\talso\n\t'Volare Novels'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif 'Rotten Recommendations' in item['tags']:\n\t\treturn None\n\tif 'volare Creative' in item['tags']:\n\t\treturn None\n\n\n\ttagmap = [\n\t\t(\"Age of Lazurite\",                                  \"Age of Lazurite, Tower of Glass\",                                                     'translated'),\n\t\t(\"Return of the Swallow\",                            \"Return of the Swallow\",                                                               'translated'),\n\t\t(\"God of Illusions\",                                 \"God of Illusions\",                                                                    'translated'),\n\t\t(\"Apartment from Hell\",                              \"Apartment from Hell\",                                                                 'translated'),\n\t\t(\"Divine Throne of Primordial Blood\",                \"Divine Throne of Primordial Blood\",                                                   'translated'),\n\t\t(\"Blood Hourglass\",                                  \"Blood Hourglass\",                                                                     'translated'),\n\t\t(\"Celestial Employee\",                               \"Celestial Employee\",                                                                  'translated'),\n\t\t(\"Cultivation Chat Group\",                           \"Cultivation Chat Group\",                                                              'translated'),\n\t\t(\"Demon Wang's Favorite Fei\",                        \"Demon Wang's Golden Favorite Fei\",                                                    'translated'),\n\t\t(\"Evil Emperor's Wild Consort\",                      \"Evil Emperor's Wild Consort\",                                                         'translated'),\n\t\t(\"Falling Dreams of Fang Hua\",                       \"Falling Dreams of Fang Hua\",                                                          'translated'),\n\t\t(\"Fleeting Midsummer\",                               \"Fleeting Midsummer\",                                                                  'translated'),\n\t\t(\"Gourmet Food Supplier\",                            \"Gourmet Food Supplier\",                                                               'translated'),\n\t\t(\"Great Demon King\",                                 \"Great Demon King\",                                                                    'translated'),\n\t\t(\"Hidden Marriage\",                                  \"Hidden Marriage\",                                                                     'translated'),\n\t\t(\"History's Strongest Senior Brother\",               \"History's Strongest Senior Brother\",                                                  'translated'),\n\t\t(\"I'm Hui Tai Lang\",                                 \"I'm Hui Tai Lang\",                                                                    'translated'),\n\t\t(\"King of Hell\",                                     \"King of Hell\",                                                                        'translated'),\n\t\t(\"My Wife is a Beautiful CEO\",                       \"My Wife is a Beautiful CEO\",                                                          'translated'),\n\t\t(\"Paradise of the Demons and Gods\",                  \"Paradise of the Demons and Gods\",                                                     'translated'),\n\t\t(\"Pivot of the Sky\",                                 \"Pivot of the Sky\",                                                                    'translated'),\n\t\t(\"Poison Genius Consort\",                            \"Poison Genius Consort\",                                                               'translated'),\n\t\t(\"Poisoning the World\",                              \"Poisoning the World: The Secret Service Mysterious Doctor is a Young Beastly Wife\",   'translated'),\n\t\t(\"Prodigal Alliance Head\",                           \"Prodigal Alliance Head\",                                                              'translated'),\n\t\t(\"Reign of the Hunters\",                             \"Reign of the Hunters\",                                                                'translated'),\n\t\t(\"Release that Witch\",                               \"Release that Witch\",                                                                  'translated'),\n\t\t(\"Sovereign of the Three Realms\",                    \"Sovereign of the Three Realms\",                                                       'translated'),\n\t\t(\"Special Forces Spirit\",                            \"Special Forces Spirit\",                                                               'translated'),\n\t\t(\"Star Rank Hunter\",                                 \"Star Rank Hunter\",                                                                    'translated'),\n\t\t(\"Sword Spirit\",                                     \"Sword Spirit\",                                                                        'translated'),\n\t\t(\"The Nine Cauldrons\",                               \"The Nine Cauldrons\",                                                                  'translated'),\n\t\t(\"Red Packet Server\",                                \"Red Packet Server\",                                                                   'translated'),\n\t\t(\"True Cultivators\",                                 \"The Strong, The Few, True Cultivators on Campus\",                                     'translated'),\n\t\t(\"Doomed to be Cannon Fodder\",                       \"Doomed to be Cannon Fodder\",                                                          'translated'),\n\t\t(\"Adorable Creature Attack\",                         \"Adorable Creature Attacks! The Beauty Surrenders!\",                                   'translated'),\n\t\t(\"Paradise of Demonic Gods\",                         \"Paradise of Demonic Gods\",                                                            'translated'),\n\t\t(\"Destroyer of Ice and Fire\",                        \"Destroyer of Ice and Fire\",                                                           'translated'),\n\t\t(\"Still Wait For Me\",                                \"Still, Wait For Me\",                                                                  'translated'),\n\t\t(\"Supernatural Girlfriend\",                          \"Supernatural Girlfriend\",                                                             'translated'),\n\t\t(\"Bone Painting Coroner\",                            \"Bone Painting Coroner\",                                                               'translated'),\n\t\t(\"This MC Is Kickass\",                               \"This MC Is Kickass\",                                                                  'translated'),\n\t\t(\"Unruly Phoenix Xiaoyao\",                           \"Unruly Phoenix Xiaoyao\",                                                              'translated'),\n\t\t(\"Transmigrator Meets Reincarnator\",                 \"Transmigrator Meets Reincarnator\",                                                    'translated'),\n\t\t(\"The Sketch Artist\",                                \"The Sketch Artist\",                                                                   'translated'),\n\t\t(\"Split Zone 13\",                                    \"Split Zone No.13\",                                                                    'translated'),\n\t\t(\"Phoenix Ascending\",                                \"Phoenix Ascending\",                                                                   'translated'),\n\t\t(\"Sundering Nature\",                                 \"Sundering Nature\",                                                                    'translated'),\n\t\t(\"Transmigration: Of Mysteries and Songs\",           \"Transmigration: Of Mysteries and Songs\",                                              'translated'),\n\t\t(\"Killer Nights\",                                    \"Killer Nights\",                                                                       'translated'),\n\t\t(\"The Sword and The Shadow\",                         \"The Sword and The Shadow\",                                                            'translated'),\n\t\t(\"show me the money\",                                \"Show Me the Money\",                                                                   'translated'),\n\t\t(\"Lost Treasure\",                                    \"Lost Treasure\",                                                                       'translated'),\n\t\t(\"Rebirth of a Star\",                                \"Rebirth of a Star: Another Day, Another Drama\",                                       'translated'),\n\t\t(\"Defiant Martial God\",                              \"Defiant Martial God\",                                                                 'translated'),\n\t\t(\"Rebirth of a Star: Another Day, Another Drama\",    \"Rebirth of a Star: Another Day, Another Drama\",                                       'translated'),\n\t\t(\"Still, Wait For Me\",                               \"Still, Wait For Me\",                                                                  'translated'),\n\t\t(\"Fields of Gold\",                                   \"Fields of Gold\",                                                                      'translated'),\n\t\t(\"Song of Exile\",                                    \"Song of Exile\",                                                                       'translated'),\n\t\t(\"The Godking's Legacy\",                             \"The Godking's Legacy\",                                                                'translated'),\n\t\t(\"Adorable Creature Attacks\",                        \"Adorable Creature Attacks! The Beauty Surrenders!\",                                   'translated'),\n\t\t(\"The Dao of Magic\",                                 \"The Dao of Magic\",                                                                    'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('CCG Chapter',                             'Cultivation Chat Group',                                                            'translated'),\n\t\t('HTL Chapter',                             'I\u2019m Hui Tai Lang',                                                                  'translated'),\n\t\t('YH Chapter',                              'Your Highness',                                                                     'translated'),\n\t\t('PTW: SSMD',                               'Poisoning the World: The Secret Service Mysterious Doctor is a Young Beastly Wife', 'translated'),\n\t\t('PTW : SSMD',                              'Poisoning the World: The Secret Service Mysterious Doctor is a Young Beastly Wife', 'translated'),\n\t\t('ROTH Chapter',                            'Reign of the Hunters',                                                              'translated'),\n\t\t('FM Chapter',                              'Fleeting Midsummer Chapter',                                                        'translated'),\n\t\t('FM Chapter',                              'Fleeting Midsummer',                                                                'translated'),\n\t\t('Hidden Marriage Chapter',                 'Full Marks Hidden Marriage: Pick Up a Son, Get a Free Husband',                     'translated'),\n\t\t('DWGMSFF Chapter',                         'Demon Wangs Favorite Fei',                                                          'translated'),\n\t\t('The Nine Cauldrons Chapter',              \"The Nine Cauldrons\",                                                                'translated'),\n\t\t('Paradise of the Demons and Gods Chapter', \"Paradise of the Demons and Gods\",                                                   'translated'),\n\t\t('DTPB Chapter',                            \"Divine Throne of Primordial Blood\",                                                 'translated'),\n\t\t('Red Packet Server Chapter',               \"Red Packet Server\",                                                                 'translated'),\n\t\t('Reign of the Hunters Chapter',            \"Reign of the Hunters\",                                                              'translated'),\n\t\t('PGC Chapter',                             \"Poison Genius Consort\",                                                             'translated'),\n\t\t('Fleeting Midsummer Chapter',              \"Fleeting Midsummer\",                                                                'translated'),\n\t\t('Killer Nights Chapter',                   \"Killer Nights\",                                                                     'translated'),\n\t\t\n\t\t# Sigh\n\t\t('DPTB Chapter',                            \"Divine Throne of Primordial Blood\",                                                 'translated'),\n\t\t('DTPB Chapter',                            \"Divine Throne of Primordial Blood\",                                                 'translated'),\n\t\t('EEWC Chapter',                            \"Evil Emperor's Wild Consort\",                                                       'translated'),\n\t\t('SS Chapter',                              \"Sword Spirit\",                                                                      'translated'),\n\t\t('DIF Chapter',                             \"Destroyer of Ice and Fire\",                                                         'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif item['title'].startswith(titlecomponent):\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-06-03T00:55:24.986456"
 ],
 "Volopolis": [
  "\ndef extractVolopolisWordpressCom(item):\n\t'''\n\tParser for 'volopolis.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-16T11:29:06.488611"
 ],
 "WCC Translation": [
  "def extractWCCTranslation(item):\n\t\"\"\"\n\t# WCC Translation\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif 'chapter' in item['title'].lower():\n\t\tif ':' in item['title']:\n\t\t\tpostfix = item['title'].split(':', 1)[-1]\n\t\treturn buildReleaseMessageWithType(item, 'World Customize Creator', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "WL Translations": [
  "def extractWLTranslations(item):\n\t\"\"\"\n\t# 'WL Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Chapter Releases' in item['tags'] and ('OSI' in item['tags'] or item['title'].startswith('OSI Chapter')):\n\t\treturn buildReleaseMessageWithType(item, 'One Sword to Immortality', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "WN 404": [
  "def extractWn404BlogspotCom(item):\n\t'''\n\tParser for 'wn404.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Jujutsushi ',  'Jujutsushi Wa Yuusha Ni Narenai',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-27T05:55:42.100998"
 ],
 "WN Translations": [
  "def extractWebnoveltranslationWordpressCom(item):\n\t'''\n\tParser for 'webnoveltranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('BTSTTA',       'Bringing the Supermarket to the Apocalypse',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T07:09:48.643856"
 ],
 "WTI Translation": [
  "def extractWtitranslationBlogspotCom(item):\n\t'''\n\tParser for 'wtitranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\tif item['tags'] == [] and item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, \"Womanizing True Immortal\", vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\tif item['tags'] == ['Chapters'] and item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, \"Womanizing True Immortal\", vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\t\t\n\treturn False",
  "2018-08-21T06:17:25.855858"
 ],
 "Walk the Jiang Hu": [
  "def extractWalkTheJiangHu(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'TTNH Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Transcending the Nine Heavens', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Walking the Storm": [
  "def extractWalkingTheStorm(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn buildReleaseMessageWithType(item, 'Joy of life', vol, chp, frag=frag, postfix=postfix)\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wander Wonders": [
  "def extractThemaunderingpoetWordpressCom(item):\n\t'''\n\tParser for 'themaunderingpoet.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('CoPW',       'Chronicles of Primordial Wars',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T06:09:05.761985"
 ],
 "WanderDomeTranslations": [
  "def extractWanderdometranslationWordpressCom(item):\n\t'''\n\tParser for 'wanderdometranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Fenglin Tianxia: Queen With a Thousand Pets',       'Fenglin Tianxia: Queen With a Thousand Pets',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-19T06:48:04.141833"
 ],
 "Wandering Duo Studios": [
  "\ndef extractWanderingduostudiosHomeBlog(item):\n\t'''\n\tParser for 'wanderingduostudios.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-09T04:59:49.790994"
 ],
 "Wandering Muse Translation": [
  "def extractWanderingmusetranslationWordpressCom(item):\n\t'''\n\tParser for 'wanderingmusetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('SH Chapter ',  'Swain Hakushaku',                                                                      'translated'),\n\t\t\t('AS Chapter ',  'My Status As An Assassin Is Obviously Stronger Than That Of the Hero\u2019s',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\t\n\tif item['tags'] == ['Uncategorized']:\n\t\tfor prefix, series, tl_type in chp_prefixes:\n\t\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-31T03:38:20.587516"
 ],
 "Wandering Translations": [
  "\ndef extractWanderingtranslationsWordpressCom(item):\n\t'''\n\tParser for 'wanderingtranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-24T01:02:41.647827"
 ],
 "WangMama": [
  "def extractWwwWangmamareadCom(item):\n\t'''\n\tParser for 'www.wangmamaread.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Returning from the Immortal World',                'Returning from the Immortal World',                               'translated'),\n\t\t('Master of Trading Star Card Game (Rebirth)',       'Master of Trading Star Card Game (Rebirth)',                      'translated'),\n\t\t('Long Live Summons!',                               'Long Live Summons!',                                              'translated'),\n\t\t('Release that Witch',                               'Release that Witch',                                              'translated'),\n\t\t('Eastern Palace',                                   'Eastern Palace',                                                  'translated'),\n\t\t('Good Morning, Mr. President!',                     'Good Morning, Mr. President!',                                    'translated'),\n\t\t('Star Martial God Technique',                       'Star Martial God Technique',                                      'translated'),\n\t\t('Douluo Dalu: Legend of the Divine Realm',          'Douluo Dalu: Legend of the Divine Realm',                         'translated'),\n\t\t('zhan long',                                        'Zhan Long',                                                       'translated'),\n\t\t('Chronicles of Primordial Wars',                    'Chronicles of Primordial Wars',                                   'translated'),\n\t\t('To Be a Power in the Shadows!',                    'To Be a Power in the Shadows!',                                   'translated'),\n\t\t('The Tutorial Is Too Hard',                         'The Tutorial Is Too Hard',                                        'translated'),\n\t\t('Legend of the Cultivation God',                    'Legend of the Cultivation God',                                   'translated'),\n\t\t('The Anarchic Consort of the Prince',               'The Anarchic Consort of the Prince',                              'translated'),\n\t\t('Dragon Blood Warrior',                             'Dragon Blood Warrior',                                            'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-02T07:35:10.383529"
 ],
 "War Brothers (Novel)": [
  "\ndef extractWarbrothersnovelBlogspotCom(item):\n\t'''\n\tParser for 'warbrothersnovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:11.244337"
 ],
 "Warrior Writing": [
  "def extractWarriorWriting(item):\n\t\"\"\"\n\tWarrior Writing\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wat Da Meow": [
  "def extractWatDaMeow(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Commushou' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Commushou no Ore ga, Koushou Skill ni Zenfurishite Tenseishita Kekka', vol, chp, frag=frag, postfix=postfix)\n\tif 'Kitsune-sama' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Kichattakedo Kaerimichi doko?', vol, chp, frag=frag, postfix=postfix)\n\tif \"We live in dragon's peak\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"We live in dragon's peak\", vol, chp, frag=frag, postfix=postfix)\n\tif 'JuJoku' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Junai X Ryoujoku Kompurekusu', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "WataTL": [
  "def extractWataboutMe(item):\n\t'''\n\tParser for 'watabout.me'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Ben-To',       'Ben-To',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T08:50:23.032824"
 ],
 "Watashi wa Sugoi Desu": [
  "def extractWatashiWaSugoiDesu(item):\n\t'''\n\tParser for 'Watashi wa Sugoi Desu'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Violant of the Silver',                           'Violant of the Silver',                                                                                         'translated'),\n\t\t('dolls',                                           'I Decided to Not Compete and Quietly Create Dolls Instead',                                                     'translated'),\n\t\t('But You Said You\\'d Give Me Delicious Candy!!',   'But You Said You\\'d Give Me Delicious Candy!!',                                                                 'translated'),\n\t\t('Kokkuri-san',                                     'But You Said You\\'d Give Me Delicious Candy!!',                                                                 'translated'),\n\t\t('Cute Friend',                                     'The Hero\u2019s Cute Childhood Friend, Doesn\u2019t Know of His Pitch-Black Nature',                                      'translated'),\n\t\t('TS Girl',                                         'My Best Friend Became A Transsexual Girl, And Says He Wants to Marry Me, But I\u2019ll Flat Out Refuse.',            'translated'),\n\t\t('SFY',                                             'Searching For You',                                                                                             'translated'),\n\t\t('KtBC',                                            'Kiss the Black Cat',                                                                                            'translated'),\n\t\t('Ossan Idol',                                      'Ossan (36) Ga Idol Ni Naru Hanashi',                                                                            'translated'),\n\t\t('Strongest Wiseman',                               'Child Rearing Journal of the Strongest Wiseman\uff5eAbout My Daughter Being the Cutest in the World\uff5e',             'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Child Rearing Journal of the Strongest Wiseman\uff5eAbout My Daughter Being the Cutest in the World\uff5e',  'Child Rearing Journal of the Strongest Wiseman\uff5eAbout My Daughter Being the Cutest in the World\uff5e',      'translated'), \n\t\t('Ossan Idol : Chapter',                                                                          'Ossan (36) Ga Idol Ni Naru Hanashi',                                                                     'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2019-03-26T22:40:39.537918"
 ],
 "Watchmirror": [
  "\ndef extractMirrorverseWordpressCom(item):\n\t'''\n\tParser for 'mirrorverse.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:22.833405"
 ],
 "Waterift": [
  "def extractWateriftWordpressCom(item):\n\t'''\n\tParser for 'waterift.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Noire de Plaisir',                                 'Noire de Plaisir ~ Pleasure Training of the Fallen Vampire Princess~',                      'translated'),\n\t\t('I Have The Only Ero Knowledge In The World',       'I Have The Only Ero Knowledge In The World, So I Decided To Cum Inside Pretty Girls',       'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-18T07:05:36.696934"
 ],
 "Watermelon Helmets": [
  "def extractWatermelonHelmets(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Dragon Life' in item['tags'] or 'Dragon Life: Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon Life', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wattpad": [
  "def extractWattpad(item):\n\t\"\"\"\n\tParser for 'Wattpad'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Weaboo Desu": [
  "def extractWeabooDesu(item):\n\t\"\"\"\n\tParser for 'Weaboo Desu'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Weak Translations": [
  "\ndef extractWeaktranslationBlogspotCom(item):\n\t'''\n\tParser for 'weaktranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:36:49.087643"
 ],
 "Weaving stories and building castles in the clouds": [
  "def extractWeavingstoriesandbuildingcastlesintheclouds(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Web Novel Japanese Translation": [
  "def extractWebNovelJapaneseTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Kizoku Yamemasu Shomin ni Narimasu' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Kizoku Yamemasu Shomin ni Narimasu', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wednesday Translations": [
  "def extractWednesdaytranslationsWordpressCom(item):\n\t'''\n\tParser for 'wednesdaytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('pixiu rearing guide',       'pixiu rearing guide',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-04T22:52:10.591855"
 ],
 "Weebs Novel Translations": [
  "def extractWeebsnoveltranslationWordpressCom(item):\n\t'''\n\tParser for 'weebsnoveltranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Gang of Yuusha',       'Gang of Yuusha',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-16T04:31:20.456176"
 ],
 "Wei Translations": [
  "def extractWeitranslationsWordpressCom(item):\n\t'''\n\tParser for 'weitranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('CCG Chapter ',  'Cultivation Chat Group',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T08:20:52.065553"
 ],
 "WeissProject": [
  "def extractWeissnoveltranslationWordpressCom(item):\n\t'''\n\tParser for 'weissnoveltranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The School Prince is a Girl',         'The School Prince is a Girl',                        'translated'),\n\t\t('Mr. President, Unbridled Love',       'Mr. President, Unbridled Love',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-30T05:03:04.512854"
 ],
 "Welcome To The Underdark": [
  "def extractWelcomeToTheUnderdark(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Welcome to the Malformed Box": [
  "def extractWelcomeToTheMalformedBox(item):\n\t\"\"\"\n\tParser for 'Welcome to the Malformed Box'\n\t\"\"\"\n\treturn None",
  "2017-07-15T23:43:03.830867"
 ],
 "Wele Translation": [
  "def extractWeleTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('sin city'):\n\t\treturn buildReleaseMessageWithType(item, 'Sin City', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('zhan xian'):\n\t\treturn buildReleaseMessageWithType(item, 'Zhan Xian', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('heaven awakening path'):\n\t\treturn buildReleaseMessageWithType(item, 'Heaven Awakening Path', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('immortal executioner'):\n\t\treturn buildReleaseMessageWithType(item, 'Immortal Executioner', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wele Translations": [
  "def extractWeleTranslations(item):\n\t\"\"\"\n\tParser for 'Wele Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tguidmap = [\n\t\t('/zhan-xian/zhan-xian-chapter-',                     'Zhanxian',                         'translated'),\n\t\t('/sin-city/sin-city-chapter-',                       'Sin City',                         'translated'),\n\t\t('/martial-god/martial-god-chapter-',                 'Martial God',                      'translated'),\n\t\t('/heaven-awakening/heaven-awakening-chapter-',       'Heaven Awakening Path',            'translated'),\n\t]\n\n\tfor tagname, name, tl_type in guidmap:\n\t\tif tagname in item['guid']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-24T11:32:55.071229"
 ],
 "What Lies Beyond": [
  "\ndef extractWhatliesbeyondnovelBlogspotCom(item):\n\t'''\n\tParser for 'whatliesbeyondnovel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:28.390069"
 ],
 "What Zombies Fear": [
  "\ndef extractWhatzombiesfearCom(item):\n\t'''\n\tParser for 'whatzombiesfear.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:18.183142"
 ],
 "What would you do in order to survive?": [
  "\ndef extractZombiebytesBlogspotCom(item):\n\t'''\n\tParser for 'zombiebytes.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:28:19.459584"
 ],
 "Whatever Translations MTL": [
  "def extractWhateverTranslationsMTL(item):\n\t\"\"\"\n\tWhatever Translations MTL\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif item['title'].lower().startswith('level maker ch'):\n\t\treturn buildReleaseMessageWithType(item, 'Level Maker', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('levelmaker ch'):\n\t\treturn buildReleaseMessageWithType(item, 'Level Maker', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\treturn False",
  "2017-06-21T03:38:08.959020"
 ],
 "Whatsawhizzer Web Novels": [
  "def extractWhatsawhizzerwebnovelsCom(item):\n\t'''\n\tParser for 'whatsawhizzerwebnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'To unlock this content' in item['contents']:\n\t\treturn None\n\tif len(item['contents']) < 1000:\n\t\treturn None\n\t\t\n\t\t\n\t# print(item['contents'])\n\n\ttagmap = [\n\t\t('Rise of the Midnight King',       'Rise of the Midnight King',                                                'oel'),\n\t\t('NTR Crush',                       'NTR Crush : I Will Steal Every Girl',                                      'oel'),\n\t\t('Hawtness',                        'Hawtness',                                                                 'oel'),\n\t\t('Time and Place',                  'The Timefall Saga - Time and Place',                                       'oel'),\n\t\t('EPASH',                           'Enslaved Pregnant Animalgirl Sister Harem With No NTR',                    'oel'),\n\t\t('Pushing Up Gravestones',          'Pushing Up Gravestones',                                                   'oel'),\n\t\t('My Dungeon Life',                 'My Dungeon Life',                                                          'oel'),\n\t\t('World of Women',                  'World of Women',                                                           'oel'),\n\t\t('Loiterous',                       'Loiterous',                                                                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tchp_prefixes = [\n\t\t\t('My Dungeon Life \u2013 Chapter ',  'My Dungeon Life',               'oel'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\n\treturn False",
  "2019-06-13T04:14:30.884250"
 ],
 "When Lemons Give Life": [
  "\ndef extractWhenlemonsgivelifeWordpressCom(item):\n\t'''\n\tParser for 'whenlemonsgivelife.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:30.191625"
 ],
 "When The Hunting Party Came": [
  "def extractWhenTheHuntingPartyCame(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "While You Are Sleeping": [
  "\ndef extractUnderworldersBlogspotCom(item):\n\t'''\n\tParser for 'underworlders.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:57.416760"
 ],
 "Whimsical Land": [
  "def extractWhimsicalLand(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "White Night Site": [
  "def extractWhiteNightSite(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'What Came to Mind During My Third Time in Another World Was to for Now, Get Naked.' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'What Came to Mind During My Third Time in Another World Was to for Now, Get Naked.', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "White Raven Novels": [
  "\ndef extractRhylevenovelsWordpressCom(item):\n\t'''\n\tParser for 'rhylevenovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-05-27T05:53:24.281200"
 ],
 "White Shark Translation": [
  "\ndef extractWwwWhitesharkTk(item):\n\t'''\n\tParser for 'www.whiteshark.tk'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-28T07:09:38.422545"
 ],
 "White Sky Translations": [
  "def extractWhiteskytranslationsCom(item):\n\t'''\n\tParser for 'whiteskytranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Rebirth of a Movie Star \u2013 Chapter ',     'Rebirth of a Movie Star',              'translated'),\n\t\t\t('Quickly Wear the Face of the Devil \u2013 ',  'Quickly Wear the Face of the Devil',   'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-06-07T05:54:25.340273"
 ],
 "White Sky's BL Corner": [
  "def extractWhiteskytranslationsWordpressCom(item):\n\t'''\n\tParser for 'whiteskytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('A Wave of Exes',       'A Wave of Exes',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tif item['tags'] != ['Uncategorized']:\n\t\treturn False\n\t\t\n\tchp_prefixes = [\n\t\t\t('Quickly Wear the Face of the Devil',              'Quickly Wear the Face of the Devil',                             'translated'),\n\t\t\t('Rebirth of a Movie Star',                         'Rebirth of a Movie Star',                                        'translated'),\n\t\t\t('A Wave of Exes',                                  'A Wave of Exes',                                                 'translated'),\n\t\t\t('The Scum Shou\u2019s Survival Guide \u2013 Chapter ',       'The Scum Shou\\'s Survival Guide',                                'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-04-27T11:17:54.621861"
 ],
 "White Tiger Translations": [
  "def extractWhiteTigerTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].lower().startswith('mp volume'):\n\t\treturn buildReleaseMessageWithType(item, 'Martial Peak', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].lower().startswith('ipash chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Martial Peak', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "WhiteEmperorTranslation": [
  "\ndef extractWhiteemperortranslationHomeBlog(item):\n\t'''\n\tParser for 'whiteemperortranslation.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-08T23:53:48.074294"
 ],
 "WhiteHemlock Translations": [
  "def extractWhitehemlocktranslationsWordpressCom(item):\n\t'''\n\tParser for 'whitehemlocktranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Male God is Chasing My Brother',       'Male God is Chasing My Brother',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-12T09:08:29.085292"
 ],
 "WhiteMoon x BlackSun": [
  "def extractWhitemoonxblacksunWordpressCom(item):\n\t'''\n\tParser for 'whitemoonxblacksun.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Reborn Otaku Code of Practice for Apocalypse',       'Reborn Otaku Code of Practice for Apocalypse',                      'translated'),\n\t\t('Jumpchain',                                          'Jump Chain',                                                        'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-27T07:04:31.018335"
 ],
 "Whiteleaf Tribe": [
  "def extractWhiteleafTribe(item):\n\t\"\"\"\n\t'Whiteleaf Tribe'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Who Cares Novels": [
  "\ndef extractWhocaresnovelsCom(item):\n\t'''\n\tParser for 'whocaresnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:24.058796"
 ],
 "Who Is Anthony Stephens?": [
  "\ndef extractWhoisanthonystephensWordpressCom(item):\n\t'''\n\tParser for 'whoisanthonystephens.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:28.646077"
 ],
 "Wiegenlied of Green": [
  "def extractWiegenliedOfGreen(item):\n\t\"\"\"\n\tParser for 'Wiegenlied of Green'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wiggly Translation": [
  "def extractWigglyTranslation(item):\n\t\"\"\"\n\tWiggly Translation\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('Man Huang Feng Bao: '):\n\t\treturn buildReleaseMessageWithType(item, 'Man Huang Feng Bao', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Will Kiss On You": [
  "def extractIlover18NovelBlogspotCom(item):\n\t'''\n\tParser for 'ilover18novel.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Kedamono wa Emono ga Kakaruno wo Matte Iru ~Aoi Hitomi ni Watashi no Subete ga Abakare Chau~',             'Kedamono wa Emono ga Kakaruno wo Matte Iru ~Aoi Hitomi ni Watashi no Subete ga Abakare Chau~',             'translated'),\n\t\t('Akuma to Watashi no Yajirushi Koi Monogatari',                'Akuma to Watashi no Yajirushi Koi Monogatari',                'translated'),\n\t\t('Rikishi no Tsuma ni Sare Sou Desu (Namida)',                  'Rikishi no Tsuma ni Sare Sou Desu (Namida)',                  'translated'),\n\t\t('Enami-kun wa Watashi ni Shika Natsukanai.',                   'Enami-kun wa Watashi ni Shika Natsukanai.',                   'translated'),\n\t\t('Romance ni Hime wa Fuzai ~Shou akuma Ikusei Chuu~',           'Romance ni Hime wa Fuzai ~Shou akuma Ikusei Chuu~',           'translated'),\n\t\t('Hitotsu Yane no Shita de\u2026 Kiraina Aitsu no Amai Yuuwaku',     'Hitotsu Yane no Shita de\u2026 Kiraina Aitsu no Amai Yuuwaku',     'translated'),\n\t\t('The Prey of Zhai Wang',                                       'The Prey of Zhai Wang',                                       'translated'),\n\t\t('It\u2019s Purely an Accident to Love Again',                       'It\\'s Purely an Accident to Love Again',                      'translated'),\n\t\t('Ookami Darling Koakuma Honey',                                'Ookami Darling Koakuma Honey',                                'translated'),\n\t\t('Zenbu Oshiete Yaru yo Kacho Watashi wo Shitsukete Kudasai',   'Zenbu Oshiete Yaru yo Kacho Watashi wo Shitsukete Kudasai',   'translated'),\n\t\t('Yajuu Shikkaku ~Gogo 5 Ji Kara no Mikkai Lesson~',            'Yajuu Shikkaku ~Gogo 5 Ji Kara no Mikkai Lesson~',            'translated'),\n\t\t('Yagami-senpai no Himitsu',                                    'Yagami-senpai no Himitsu',                                    'translated'),\n\t\t('Nurete Yorokobe',                                             'Ore ni Kashizuke, Nurete Yorokobe',                           'translated'),\n\t\t('Ore ni Kashizuke',                                            'Ore ni Kashizuke, Nurete Yorokobe',                           'translated'),\n\t\t('Amai Shizuku wo Nomihoshite ~Shojo wo Musaboru Vampire~',     'Amai Shizuku wo Nomihoshite ~Shojo wo Musaboru Vampire~',     'translated'),\n\t\t('Seiryaku Kekkon Zentei?! Mitsuai no Gishiki',                 'Seiryaku Kekkon Zentei?! Mitsuai no Gishiki',                 'translated'),\n\t\t('Boku no Menomaede \u25cf \u25cf Koui wo Shitemite Kudasai',             'Boku no Menomaede \u25cf \u25cf Koui wo Shitemite Kudasai',             'translated'),\n\t\t('Ore wa Do S (Nise) ~ Chotto Hen Dayo',                        'Ore wa Do S (Nise) ~ Chotto Hen Dayo',                        'translated'),\n\t\t('Gokujou Kyoudai Harem Himitsu no Jouji',                      'Gokujou Kyoudai Harem Himitsu no Jouji',                      'translated'),\n\t\t('Yoshiwara Yuugi ~Oiran Otome no Kindan no Koi~',              'Yoshiwara Yuugi ~Oiran Otome no Kindan no Koi~',              'translated'),\n\t\t('Asahina-san no Konyaku Jijou \u20154 Ninda Nante Kiitenai!\u2015',      'Asahina-san no Konyaku Jijou \u20154 Ninda Nante Kiitenai!\u2015',      'translated'),\n\t\t('Kakusareta Aiyoku ~Kimi no Subete ga Ore no Mono~',           'Kakusareta Aiyoku ~Kimi no Subete ga Ore no Mono~',           'translated'),\n\t\t('Ichizuna Takita-kun wa Futatabi Idakanai',                    'Ichizuna Takita-kun wa Futatabi Idakanai',                    'translated'),\n\t\t('It\\'s Purely an Accident to Love Again',                      'It\\'s Purely an Accident to Love Again',                      'translated'),\n\t\t('PRC',                                                         'PRC',                                                         'translated'),\n\t\t('Loiterous', 'Loiterous',                                      'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-18T05:52:04.301694"
 ],
 "Willful Casual": [
  "def extractWillfulCasual(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Chu Wang Fei' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Chu Wang Fei', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Winter Leaf": [
  "def extractWinterleaftranslationWordpressCom(item):\n\t'''\n\tParser for 'winterleaftranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rebirth Merchant',       'Rebirth Merchant: Wonderful Space Hunting for Military',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:48:14.611053"
 ],
 "Winter Snow": [
  "def extractBitterblackrabbitWordpressCom(item):\n\t'''\n\tParser for 'bitterblackrabbit.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('[TWIF] Chapter ',             'The Wife is First',               'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T08:40:02.444087"
 ],
 "Winter Translates": [
  "def extractWinterTranslates(item):\n\t\"\"\"\n\t'Winter Translates'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Summaries' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Villain Rehab Plan',       'Transmigrating into a Mob Character to Rehabilitate the Villain Plan', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-10-07T10:07:43.895780"
 ],
 "Wish Upon A Hope": [
  "def extractWishUponAHope(item):\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wisteria Translations": [
  "def extractWisteriaTranslations(item):\n\t\"\"\"\n\tWisteria Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Witch Cult Translations": [
  "def extractWitchculttranslationCom(item):\n\t'''\n\tParser for 'witchculttranslation.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == ['Arc 5'] or  item['tags'] == ['Arc 6']:\n\t\treturn buildReleaseMessageWithType(item, \"Re:Zero \u2212 Starting Life in Another World\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2019-06-17T05:53:26.151110"
 ],
 "Witch Life Novel": [
  "def extractWitchLife(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Witch Life' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Witch Life', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "WizThief's Novels": [
  "def extractWizThiefsNovels(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttitlemap = [\n\t\t('My immortality It\u2019s in a Death game',        \"My immortality It's in a Death game\",            'translated'),\n\t\t('Thanks to a different world reincarnation',  'Thanks to a different world reincarnation',      'translated'),\n\t\t('Grave \u201cZ\u201d',                                  'Grave \"Z\"',                                      'translated'),\n\t\t('Transferring To An All Magical Boy School',  'Transferring To An All Magical Boy School',      'translated'),\n\t\t('T.A.M.B.S. ',                                'Transferring To An All Magical Boy School',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\treturn False",
  "2018-08-07T06:43:21.931090"
 ],
 "Wolfie Honyaku": [
  "def extractWwwWolfiehonyakuCom(item):\n\t'''\n\tParser for 'www.wolfiehonyaku.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The amber sword',                      'The Amber Sword',                      'translated'),\n\t\t('The latest game is too amazing',       'The Latest Game is too Amazing',       'translated'),\n\t\t('The strategy to become good at magic', 'The Strategy to Become Good at Magic', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-06-15T05:40:17.326945"
 ],
 "Wolfie Translation": [
  "def extractWolfieTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The amber sword' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Amber Sword', vol, chp, frag=frag, postfix=postfix)\n\tif 'The latest game is too amazing' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Latest Game is too Amazing', vol, chp, frag=frag, postfix=postfix)\n\tif 'The strategy to become good at magic' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Strategy to Become Good at Magic', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Wolf Prince and The Ice Princess' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Wolf Prince and The Ice Princess', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\treturn False",
  "2017-04-06T05:03:02.925136"
 ],
 "Word Excerpt": [
  "def extractWordexcerptCom(item):\n\t'''\n\tParser for 'wordexcerpt.com'\n\t'''\n\n\tif \"teaser\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tprocn = item['linkUrl'].replace(\"-\", \" \").replace(\"/\", \" \") + \" \" + item['title']\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(procn)\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\n\n\ttagmap = [\n\t\t#('InfiniteResistance',        'Infinite Resistance',                      'translated'),\n\t\t#('Infinite Resistance',       'Infinite Resistance',                      'translated'),\n\t\t#('Supreme God',               'Supreme God',                              'translated'),\n\t\t('Lady\\'s Sickly Husband',                               'Lady\\'s Sickly Husband',                                                           'translated'),\n\t\t('Golden Age of Phoenix',                                'Golden Age of Phoenix',                                                            'translated'),\n\t\t('Real Cheat Online',                                    'Real Cheat Online',                                                                'translated'),\n\t\t('Seirei Gensouki: Konna Sekai De Deaeta Kimi Ni',       'Seirei Gensouki: Konna Sekai De Deaeta Kimi Ni',                                   'translated'),\n\t\t('Seirei Gensouki',                                      'Seirei Gensouki: Konna Sekai De Deaeta Kimi Ni',                                   'translated'),\n\t\t('Rebirth of the Tyrant: Regent Prince Is Too Fierce',   'Rebirth of the Tyrant: Regent Prince Is Too Fierce',                               'translated'),\n\t\t('Rebirth of the Tyrant',                                'Rebirth of the Tyrant',                                                            'translated'),\n\t\t('Perfect Era',                                          'Perfect Era',                                                                      'translated'),\n\t\t('Parasite',                                             'Parasite',                                                                         'translated'),\n\t\t('Emperor\\'s Might',                                     'Emperor\\'s Might',                                                                 'translated'),\n\t\t('Ankoku Kishi Monogatari',                              'Ankoku Kishi Monogatari',                                                          'translated'),\n\t\t('Behemoth\\'s Pet',                                      'Behemoth\\'s Pet',                                                                  'translated'),\n\t\t('Rebirth of the Tyrant\\'s Pet',                         'Rebirth of the Tyrant\\'s Pet',                                                     'translated'),\n\t\t('(WN) Seirei Gensouki',                                 'Seirei Gensouki',                                                                  'translated'),\n\t\t('Behemoth\u2019s Pet',                                       'Behemoth\\'s Pet',                                                                  'translated'),  \n\t\t('Raising a Supporting Male Lead',                       'Guide to Raising a Supporting Male Lead',                                          'translated'),  \n\t\t('Heroes of Marvel',                                     'Heroes of Marvel',                                                                 'translated'),  \n\t\t('Number 1. Ideal Witch',                                'Second Story Online: Aiming To Become The World\\'s Number 1. Ideal Witch',         'translated'),  \n\t\t('Supreme God',                                          'Supreme God',                                                                      'translated'),  \n\t\t('King Arthur',                                          'My Wife, King Arthur',                                                             'translated'),  \n\t\t('My Wife, King Arthur',                                 'My Wife, King Arthur',                                                             'translated'),  \n\t\t('I Refuse to be a Supporting Character',                'I Refuse to be a Supporting Character',                                            'translated'),  \n\t\t('Last Day On Earth',                                    'Last Days On Earth',                                                               'translated'),  \n\t\t('Refuse to be a Supporting Character',                  'I Refuse to be a Supporting Character',                                            'translated'),  \n\t\t('Quick Transmigration',                                 'Quick Transmigration: Fate Trading System',                                        'translated'),  \n\t\t('History\\'s Strongest Husband',                         'History\\'s Strongest Husband',                                                     'translated'),  \n\t\t('Witch Rebirth: STV',                                   'Witch Rebirth: Strike the Vampire',                                                'translated'),  \n\t\t('Bodyguard of the Goddess',                             'Bodyguard of the Goddess',                                                         'translated'),  \n\t\t('Heavenly Divine Doctor',                               'Heavenly Divine Doctor',                                                           'translated'),  \n\t\t('Our Binding Love',                                     'Our Binding Love: My Gentle Tyrant',                                               'translated'),  \n\t\t('Maouyome',                                             'Maouyome',                                                                         'translated'),  \n\t\t('PRC',       'PRC',                      'translated'),  \n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\turlfrag = [\n\t\t('/series/guide-to-raising-a-supporting-male-lead/',           'Guide to Raising a Supporting Male Lead',       'translated'),\n\t\t('/series/ankoku-kishi-monogatari/',                           'Ankoku Kishi Monogatari',                       'translated'),\n\t\t('/series/real-cheat-online/',                                 'Real Cheat Online',                             'translated'),\n\t\t('/series/wn-seirei-gensouki/',                                'Seirei Gensouki (WN)',                          'translated'),\n\t\t('/series/quick-transmigration/',                              'Quick Transmigration: Fate Trading System',     'translated'),\n\t\t('/series/behemoths-pet/',                                     'Behemoth\\'s Pet',                               'translated'),  \n\t\t('/series/golden-age-of-phoenix/',                             'Golden Age of Phoenix',                         'translated'),\n\t\t('/series/rebirth-of-the-tyrants-pet/',                        'Rebirth of the Tyrant\\'s Pet',                  'translated'),\n\t\t('/series/desire/',                                            'Desire',                                        'translated'),  \n\t\t('/series/irsc/',                                              'I Refuse to be a Supporting Character',         'translated'),  \n\n\t\t('rebirth.online/novel/earths-core' ,          \"Earth's Core\", 'oel'),\n\t]\n\n\tfor key, name, tl_type in urlfrag:\n\t\tif key in item['linkUrl'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2019-06-07T05:17:29.399499"
 ],
 "Word of Craft": [
  "def extractWordofCraft(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Toaru Ossan no VRMMO katsudouki' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Toaru Ossan no VRMMO katsudouki', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Words Of Wisdom": [
  "def extractThewordsofwisdomIn(item):\n\t'''\n\tParser for 'thewordsofwisdom.in'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['tags'] == ['translation']:\n\t\ttitlemap = [\n\t\t\t('Back To Twelve: Chapter ',     'Back To Twelve',      'translated'),\n\t\t\t('Back To Twelve : Chapter ',    'Back To Twelve',      'translated'),\n\t\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t\t]\n\n\t\tfor titlecomponent, name, tl_type in titlemap:\n\t\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-17T05:38:40.585545"
 ],
 "Words in Serial": [
  "\ndef extractWordsinserialWordpressCom(item):\n\t'''\n\tParser for 'wordsinserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:29.291025"
 ],
 "Working NEET Translation": [
  "def extractWorkingNEETTranslation(item):\n\t\"\"\"\n\t'Working NEET Translation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\tif \"Translation progress\" in item['tags']:\n\t\treturn None\n\tif 'Announcement' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = {\n\t\t'Dark Magician as a Hero'                                   : 'Dark Magician as a Hero',\n\t\t'Izure Shinwa no Ragnarok'                                  : 'Izure Shinwa no Ragnarok',\n\t\t'NEET Hello Work'                                           : 'I\u2019m a NEET but when I went to Hello Work I got taken to another world',\n\t}\n\t\n\n\tfor tag, sname in tagmap.items():\n\t\tif tag in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, sname, vol, chp, frag=frag)\n\t\n\t\n\tif item['tags'] == ['Volume 4'] or item['tags'] == ['Volume 3']:\n\t\treturn buildReleaseMessageWithType(item, 'I\u2019m a NEET but when I went to Hello Work I got taken to another world', vol, chp, frag=frag)\n\t\n\t\n\treturn False",
  "2017-08-16T05:32:35.873457"
 ],
 "Works of Kun": [
  "def extractWorksofKun(item):\n\t\"\"\"\n\t'Works of Kun'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Apocalypse Cockroach' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Apocalypse Cockroach', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "World Novel Translation": [
  "\ndef extractWorldnoveltranslationWordpressCom(item):\n\t'''\n\tParser for 'worldnoveltranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-15T06:25:33.938571"
 ],
 "World Three": [
  "def extractWwwWorldThreeOrg(item):\n\t'''\n\tParser for 'www.world-three.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-10-20T07:01:47.991818"
 ],
 "World Turtle Translations": [
  "def extractWorldTurtleTranslations(item):\n\t\"\"\"\n\tWorld Turtle Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "World of Hope": [
  "def extractWorldofHope(item):\n\t\"\"\"\n\tWorld of Hope\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "World of Shandor": [
  "\ndef extractWorldofshandorCom(item):\n\t'''\n\tParser for 'worldofshandor.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:24.304545"
 ],
 "World of Summie": [
  "def extractWorldofSummie(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "World of Watermelons": [
  "def extractWatermelons(item):\n\t\"\"\"\n\t# World of Watermelons\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tmatches = re.search('\\\\bB(\\\\d+)C(\\\\d+)\\\\b', item['title'])\n\tif 'The Desolate Era' in item['tags'] and matches:\n\t\tvol, chp = matches.groups()\n\t\tpostfix = ''\n\t\tif '\u2013' in item['title']:\n\t\t\tpostfix = item['title'].split('\u2013', 1)[-1]\n\t\treturn buildReleaseMessageWithType(item, 'Mang Huang Ji', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Worm - A Complete Web Serial": [
  "def extractWormACompleteWebSerial(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Write.Sharpen.Life": [
  "def extractWriteSharpenlifeCom(item):\n\t'''\n\tParser for 'write.sharpenlife.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Man of Last Millennium', 'Man of Last Millennium',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-12-30T23:48:58.423312"
 ],
 "Wu Jizun": [
  "def extractLordobsidianCom(item):\n\t'''\n\tParser for 'lordobsidian.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\ttagmap = [\n\t\t('Martial King\\'s Retired Life',       'Martial King\\'s Retired Life',                                     'translated'),\n\t\t('\u544a\u6025\uff01\u91cd\u751f\u4e4b\u540e\u7684\u5988\u5988\u4eec\u662f\u5b50\u63a7\uff01',     'Oh No! After I Reincarnated, My Moms Became Son-cons!',            'translated'),\n\t\t('\u75c5\u5a07\u9b45\u9b54\u5973\u513f\u662f\u52c7\u8005\u5988\u5988\u7684\u5929\u654c',       'My Yandere-Succubus Daughter is Mommy-Warrior\u2019s Natural Enemy',    'translated'),\n\t\t('Yandere Succubus',                   'My Yandere-Succubus Daughter is Mommy-Warrior\u2019s Natural Enemy',    'translated'),\n\t\t('MYSD',                               'My Yandere-Succubus Daughter is Mommy-Warrior\u2019s Natural Enemy',    'translated'),\n\t\t('AATG',                               'Apotheosis \u2013 Ascension to Godhood',                                'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-06-04T03:22:39.999888"
 ],
 "Wums Translations": [
  "def extractWumsTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wuwuwu555": [
  "def extractWuwuwu555(item):\n\t\"\"\"\n\tParser for 'Wuwuwu555'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wuxia Dream": [
  "def extractWuxiadreamCom(item):\n\t'''\n\tParser for 'wuxiadream.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Douluo Continent 2.5 - Legend of The Divine Realm',       'Douluo Continent 2.5 - Legend of The Divine Realm', 'translated'),\n\t\t('The Legend of Eternal Night\\'s Sovereign',                'The Legend of Eternal Night\\'s Sovereign',          'translated'),\n\t\t('Ghost: \"Catch the ghost!\"',                               'Ghost: \"Catch the ghost!\"',                         'translated'),\n\t\t('Repugnant Gateway',                                       'Repugnant Gateway',                                 'translated'),\n\t\t('The Master\\'s Legend',                                    'The Master\\'s Legend',                              'translated'),\n\t\t('Douluo Continent',                                        'Douluo Continent',                                  'translated'),\n\t\t('God of Slaughter',                                        'God of Slaughter',                                  'translated'),\n\t\t('Card Disciple',                                           'Card Disciple',                                     'translated'),\n\t\t('King of Myriad Domain',                                   'King of Myriad Domain',                             'translated'),\n\t\t('Imperial God Emperor',                                    'Imperial God Emperor',                              'translated'),\n\t\t('Monarch of Eternal Night',                                'Monarch of Eternal Night',                          'translated'),\n\t\t('Eternal Night\\'s Sovereign',                              'Eternal Night\\'s Sovereign',                        'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-09T03:07:53.527455"
 ],
 "Wuxia Fantasies": [
  "def extractWuxiaFantasies(item):\n\t\"\"\"\n\tParser for 'Wuxia Fantasies'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wuxia Heroes": [
  "def extractWuxiaHeroes(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Blood Hourglass' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Blood Hourglass', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\ttagmap = [\n\t\t('The Nine Cauldrons',           'The Nine Cauldrons',               'translated'),\n\t\t('Nine Yang Sword Saint',        'Nine Yang Sword Saint',            'translated'),\n\t\t('Conquest',                     'Conquest',                         'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('My Father in Law is Lu Bu Chapter',  'My Father in Law is Lu Bu Chapter',   'translated'),\n\t\t('Blood Hourglass',                    'Blood Hourglass',                     'translated'),\n\t\t('Era of Cultivation: Chapter',        'Era of Cultivation',                  'translated'),\n\t\t('Conquest Chapter',                   'Conquest',                            'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\n\treturn False",
  "2017-07-26T06:04:32.946322"
 ],
 "Wuxia Lovers": [
  "def extractWuxiaLovers(item):\n\t\"\"\"\n\tWuxia Lovers\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('CGA Chapter') or item['title'].startswith('CGA: Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Conquer God, Asura, and 1000 Beauties', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Etranger Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Etranger', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Q11 Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Queen of No.11 Agent 11', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('STS Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Sky Traversing Sword Master', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('DGM Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Descent of the God of Magic', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('The First Hunter Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'The First Hunter', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Slaughter System \u2013 '):\n\t\treturn buildReleaseMessageWithType(item, 'Slaughter System', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif item['title'].startswith('Getcha Skills Chapter '):\n\t\treturn buildReleaseMessageWithType(item, 'Getcha Skills', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif item['title'].startswith('Empyrean Ascent Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Empyrean Ascent', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif item['title'].startswith('[Guardian] Chapter'):\n\t\treturn buildReleaseMessageWithType(item, '[Guardian]', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wuxia Translations": [
  "def extractWuxiaTranslations(item):\n\t\"\"\"\n\t# Wuxia Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treleases = ['A Martial Odyssey', 'Law of the Devil', 'Tensei Shitara Slime Datta Ken', 'The Nine Cauldrons', 'Sovereign of the Three Realms']\n\tfor name in releases:\n\t\tif name in item['title'] and (chp or vol):\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Wuxia Translators": [
  "def extractWuxiaTranslators(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'World Defying Dan God' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'World Defying Dan God', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "WuxiaNation": [
  "def extractWuxiaNation(item):\n\t\"\"\"\n\t'WuxiaNation'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Announcements' in item['tags']:\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Mysterious Job Called Oda Nobunaga',              'Mysterious Job Called Oda Nobunaga',             'translated'),\n\t\t('The Lame Daoist Priest',                          'The Lame Daoist Priest',                         'translated'),\n\t\t('I Grow Stronger by Dreaming',                     'I Grow Stronger by Dreaming',                    'translated'),\n\t\t('World of Warcraft: Foreign Realm Domination',     'World of Warcraft: Foreign Realm Domination',    'translated'),\n\t\t('Storm in the Wilderness',                         'Storm in the Wilderness',                        'translated'),\n\t\t('Great Dao Commander',                             'Great Dao Commander',                            'translated'),\n\t\t('A Stern Devil',                                   'A Stern Devil',                                  'translated'),\n\t\t('Song of Heroes',                                  'Song of Heroes',                                 'translated'),\n\t\t('the dark king',                                   'The Dark King',                                  'translated'),\n\t\t('age of heroes',                                   'Age of Heroes',                                  'translated'),\n\t\t('Conquer God, Asura, and 1000 Beauties',           'Conquer God, Asura, and 1000 Beauties',          'translated'),\n\t\t('The Solitary Sword Sovereign',                    'The Solitary Sword Sovereign',                   'translated'),\n\t\t('lord shadow',                                     'Lord Shadow',                                    'translated'),\n\t\t('In Different World With Naruto System',           'In Different World With Naruto System',          'translated'),\n\t\t('Wiro Sableng',                                    'Wiro Sableng',                                   'translated'),\n\t\t('7 Kingdoms of Midgard',                           '7 Kingdoms of Midgard',                          'translated'),\n\t\t('MOTDN',                                           'Monarch of the Dark Nights',                     'translated'),\n\t\t('nagabumi',                                        'Nagabumi',                                       'translated'),\n\t\t('Special Forces King',                             'Special Forces King',                            'translated'),\n\t\t('Immortal Ape King',                               'Immortal Ape King',                              'translated'),\n\t\t('Age of Adventure',                                'Age of Adventure',                               'translated'),\n\t\t('Nine Yang Sword Saint',                           'Nine Yang Sword Saint',                          'translated'),\n\t\t('warlord',                                         'Warlord',                                        'translated'),\n\t\t('MRRG',                                            'My Reality is a Romance Game',                   'translated'),\n\t\t('eth2',                                            'Evolution Theory of the Hunter',                 'translated'),\n\t\t('eth',                                             'Evolution Theory of the Hunter',                 'translated'),\n\t\t('CoR',                                             'Cohen of the Rebellion',                         'translated'),\n\t\t('The Assassin\\'s Apprentice',                      'The Assassin\\'s Apprentice',                     'translated'),\n\t\t('Immortal Ascension Tower',                        'Immortal Ascension Tower',                       'oel'),\n\t\t('Aurora God',                                      'Aurora God',                                     'oel'),\n\t\t('lord shadow',                                     'lord shadow',                                    'oel'),\n\t\t('Pathless Origins: Bane of the Gods',              'Pathless Origins: Bane of the Gods',             'oel'),\n\t\t('Novus Gaia',                                      'Age of Heroes: Novus Gaia',                      'oel'),\n\t\t('House of Omen',                                   'House of Omen',                                  'oel'),\n\t\t('Samsara Breaker',                                 'Samsara Breaker',                                'oel'),\n\t\t('Venture with Anime system',                       'Venture with Anime system',                      'oel'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-10-05T07:33:41.097820"
 ],
 "WuxiaSociety": [
  "def extractWuxiaSociety(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif '/forum/viewtopic.php' in item['linkUrl']:\n\t\treturn None\n\tif 'The Heaven Sword and Dragon Sabre' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'The Heaven Sword and Dragon Sabre', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\ttagmap = [\n\t\t('A Martial Odyssey',                       'A Martial Odyssey',                                      'translated'),\n\t\t('The Heaven Sword and Dragon Sabre',       'The Heaven Sword and Dragon Sabre',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2018-08-07T06:26:20.336072"
 ],
 "WuxiaWorld": [
  "def extractWuxiaworld(item):\n\t\"\"\"\n\t# Wuxiaworld\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\tprint(\"No Chap/Vol?\")\n\t\treturn None\n\n\tif 'Announcements' in item['tags']:\n\t\treturn None\n\tif 'Translator Thoughts' in item['tags']:\n\t\treturn None\n\t\n\tif 'Dragon King with Seven Stars' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon King with Seven Stars', vol, chp, frag=frag)\n\tif 'BTTH Chapter' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Battle Through the Heavens', vol, chp, frag=frag)\n\tif item['title'].startswith('\u2600COL '):\n\t\treturn buildReleaseMessageWithType(item, 'Child of Light', vol, chp, frag=frag)\n\tif item['title'].startswith('\u265f WMW Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Warlock of the Magus World', vol, chp, frag=frag)\n\tif item['title'].startswith('\ud83d\udde1RT Chapter'):\n\t\treturn buildReleaseMessageWithType(item, 'Rebirth of the Thief', vol, chp, frag=frag)\n\n\tif item['tags'] == ['Uncategorized']:\n\t\tprint(\"No Tags?\")\n\t\treturn None\n\n\ttagmap = [\n\t\t(\"DD2: Unrivaled Tang Sect\",                        'Douluo Dalu 2 - The Unrivaled Tang-Clan',           'translated'),\n\t\t(\"Emperor's Domination\",                            \"Emperor's Domination\",                              'translated'),\n\t\t('A Record of a Mortal\\'s Journey to Immortality',  'A Record of a Mortal\\'s Journey to Immortality',    'translated'),\n\t\t('Archfiend',                                       'Archfiend',                                         'translated'),\n\t\t('A Will Eternal',                                  'A Will Eternal',                                    'translated'),\n\t\t('Absolute Choice',                                 'Absolute Choice',                                   'translated'),\n\t\t('Acquiring Talent in a Dungeon',                   'Acquiring Talent in a Dungeon',                     'translated'),\n\t\t('Against the Gods',                                'Ni Tian Xie Shen',                                  'translated'),\n\t\t('Ancient Godly Monarch',                           'Ancient Godly Monarch',                             'translated'),\n\t\t('Ancient Strengthening Technique',                 'Ancient Strengthening Technique',                   'translated'),\n\t\t('ATG Chapter Release',                             'Ni Tian Xie Shen',                                  'translated'),\n\t\t('Battle Through the Heavens',                      'Battle Through the Heavens',                        'translated'),\n\t\t('Invincible',                                      'Invincible',                                        'translated'),\n\t\t('Breakers',                                        'Breakers',                                          'translated'),\n\t\t('BTTH Chapter Release',                            'Battle Through the Heavens',                        'translated'),\n\t\t('CD Chapter Release',                              'Coiling Dragon',                                    'translated'),\n\t\t('Child of Light',                                  'Child of Light',                                    'translated'),\n\t\t('Coiling Dragon',                                  'Coiling Dragon',                                    'translated'),\n\t\t('COL Chapter Release',                             'Child of Light',                                    'translated'),\n\t\t('DE Chapter Release',                              'Desolate Era',                                      'translated'),\n\t\t('Desolate Era',                                    'Desolate Era',                                      'translated'),\n\t\t('dragon king with seven stars',                    'Dragon King with Seven Stars',                      'translated'),\n\t\t('Dragon Maken War',                                'Dragon Maken War',                                  'translated'),\n\t\t('Emperor of Solo Play',                            'Emperor of Solo Play',                              'translated'),\n\t\t('Gate of Revelation',                              'The Gate of Revelation',                            'translated'),\n\t\t('God of Crime',                                    'God of Crime',                                      'translated'),\n\t\t('Infinite Competitive Dungeon Society',            'Infinite Competitive Dungeon Society',              'translated'),\n\t\t('Heavenly Jewel Change',                           'Heavenly Jewel Change',                             'translated'),\n\t\t('HeavenlyJewelChange',                             'Heavenly Jewel Change',                             'translated'),\n\t\t('HJC Chapter Release',                             'Heavenly Jewel Change',                             'translated'),\n\t\t('I Really Am A Superstar',                         'I\\'m Really a Superstar',                           'translated'),\n\t\t('I Shall Seal the Heavens',                        'I Shall Seal the Heavens',                          'translated'),\n\t\t('I\\'m Really a Superstar',                         'I\\'m Really a Superstar',                           'translated'),\n\t\t('ISSTH Chapter Release',                           'I Shall Seal the Heavens',                          'translated'),\n\t\t('Legend of the Dragon King',                       'Legend of the Dragon King',                         'translated'),\n\t\t('Martial God Asura',                               'Martial God Asura',                                 'translated'),\n\t\t('Martial World',                                   'Martial World',                                     'translated'),\n\t\t('MGA Chapter Release',                             'Martial God Asura',                                 'translated'),\n\t\t('Perfect World',                                   'Perfect World',                                     'translated'),\n\t\t('Rebirth of the Thief',                            'Rebirth of the Thief',                              'translated'),\n\t\t('Renegade Immortal',                               'Renegade Immortal',                                 'translated'),\n\t\t('SA Chapter Release',                              'Skyfire Avenue',                                    'translated'),\n\t\t('Seoul Station\u2019s Necromancer',                     'Seoul Station\\'\u2019s Necromancer',                     'translated'),\n\t\t('Skyfire Avenue',                                  'Skyfire Avenue',                                    'translated'),\n\t\t('Skyfire Avenue',                                  'Skyfire Avenue',                                    'translated'),\n\t\t('SL Chapter Release',                              'Skyfire Avenue',                                    'translated'),\n\t\t('Sovereign of the Three Realms',                   'Sovereign of the Three Realms',                     'translated'),\n\t\t('Spirit Realm',                                    'Spirit Realm',                                      'translated'),\n\t\t('Spirit Vessel',                                   'Spirit Vessel',                                     'translated'),\n\t\t('ST Chapter Release',                              'Xingchenbian',                                      'translated'),\n\t\t('Imperial God Emperor',                            'Imperial God Emperor',                              'translated'),\n\t\t('Stellar Transformations',                         'Stellar Transformations',                           'translated'),\n\t\t('Tales of Demons & Gods',                          'Tales of Demons & Gods',                            'translated'),\n\t\t('TDG Chapter Release',                             'Tales of Demons & Gods',                            'translated'),\n\t\t('Praise the Orc!',                                 'Praise the Orc!',                                   'translated'),\n\t\t('Terror Infinity',                                 'Terror Infinity',                                   'translated'),\n\t\t('The Book Eating Magician',                        'The Book Eating Magician',                          'translated'),\n\t\t('TGR Chapter Release',                             'The Great Ruler',                                   'translated'),\n\t\t('The Grandmaster Strategist',                      'The Grandmaster Strategist',                        'translated'),\n\t\t('The Great Ruler',                                 'The Great Ruler',                                   'translated'),\n\t\t('True Martial World',                              'True Martial World',                                'translated'),\n\t\t('Unrivaled Tang Sect',                             'Douluo Dalu 2 - The Unrivaled Tang-Clan',           'translated'),\n\t\t('Upgrade Specialist in Another World',             'Upgrade Specialist in Another World',               'translated'),\n\t\t('Upgrade Specialist',                              'Upgrade Specialist',                                'translated'),\n\t\t('Warlock of the Magus World',                      'Warlock of the Magus World',                        'translated'),\n\t\t('The Godsfall Chronicles',                         'The Godsfall Chronicles',                           'translated'),\n\t\t('Talisman Emperor',                                'Talisman Emperor',                                  'translated'),\n\t\t('Wu Dong Qian Kun',                                'Wu Dong Qian Kun',                                  'translated'),\n\t\t('Charm of Soul Pets',                              'The Charm of Soul Pets',                            'translated'),\n\t\t('Dragon Talisman',                                 'Dragon Talisman',                                   'translated'),\n\t\t('Overgeared',                                      'Overgeared',                                        'translated'),\n\t\t('Lord of All Realms',                              'Lord of All Realms',                                'translated'),\n\t\t('Monarch of Evernight',                            'Monarch of Evernight',                              'translated'),\n\t\t('I Reincarnated for Nothing',                      'I Reincarnated for Nothing',                        'translated'),\n\t\t('The Charm of Soul Pets',                          'The Charm of Soul Pets',                            'translated'),\n\t\t('Nine Star Hegemon Body Art',                      'Nine Star Hegemon Body Art',                        'translated'),\n\t\t('Dragon Prince Yuan',                              'Dragon Prince Yuan',                                'translated'),\n\t\t('Demon Hunter',                                    'Demon Hunter',                                      'translated'),\n\t\t('City of Sin',                                     'City of Sin',                                       'translated'),\n\t\t('Condemning the Heavens',                          'Condemning the Heavens',                            'translated'),\n\t\t('Rebirth of the Thief Who Roamed the World',       'Rebirth of the Thief Who Roamed the World',         'translated'),\n\t\t('The Novel\\'s Extra',                              'The Novel\\'s Extra',                                'translated'),\n\t\t('Trash of the Count\\'s Family',                    'Trash of the Count\\'s Family',                      'translated'),\n\t\t('Stop, Friendly Fire!',                            'Stop, Friendly Fire!',                              'translated'),\n\t\t('Sage Monarch',                                    'Sage Monarch',                                      'translated'),\n\t\t('Martial Star Ocean',                              'Martial Star Ocean',                                'translated'),\n\t\t('Red Storm',                                       'Red Storm',                                         'translated'),\n\t\t('TranXending Vision',                              'TranXending Vision',                                'translated'),\n\t\t('I\\'m sorry for being born',                       'I\\'m Sorry For Being Born In This World!',          'translated'),\n\t\t('Emperor\u2019s Domination',                            'Emperor\u2019s Domination',                              'translated'),\n\t\t('I\u2019m Sorry For Being Born In This World!',         'I\u2019m Sorry For Being Born In This World!',           'translated'),\n\t\t('The Unrivaled Tang Sect',                         'The Unrivaled Tang Sect',                           'translated'),\n\t\t('A Record of a Mortal\u2019s Journey to Immortality',   'A Record of a Mortal\u2019s Journey to Immortality',     'translated'),\n\t\t\n\t\t\n\t\t('Overthrowing Fate',                  'Overthrowing Fate',            'oel'),\n\t\t('The Divine Elements',                'The Divine Elements',          'oel'),\n\t\t('Blue Phoenix',                       'Blue Phoenix',                 'oel'),\n\t\t('Legends of Ogre Gate',               'Legends of Ogre Gate',         'oel'),\n\t\n\t]\n\t\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\tif 'nothing' in item['title'].lower():\n\t\t\t\tprint(\"building release: \", name, vol, chp, frag)\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\t\t\n\treturn False",
  "2019-06-07T05:34:55.724587"
 ],
 "WuxiaWorld Forums": [
  "\ndef extractForumWuxiaworldCom(item):\n\t'''\n\tParser for 'forum.wuxiaworld.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:16:02.053579"
 ],
 "Wuxiwish": [
  "def extractWuxiwish(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "WxxxTranslation": [
  "\ndef extractWxxxtranslationWordpressCom(item):\n\t'''\n\tParser for 'wxxxtranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:53:02.254736"
 ],
 "Wysteria Translations": [
  "def extractWysteriatsWordpressCom(item):\n\t'''\n\tParser for 'wysteriats.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Aogan no Madoushi',       'Aogan no Madoushi',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T07:13:47.933791"
 ],
 "XCrossJ": [
  "def extractXCrossJ(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Character Analysis' in item['title']:\n\t\treturn False\n\tif 'Cross Gun' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Cross Gun', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Konjiki no Moji Tsukai' in item['title']:\n\t\tpostfix = item['title'].split(':', 1)[-1].strip()\n\t\treturn buildReleaseMessageWithType(item, 'Konjiki no Wordmaster', vol, chp, frag=frag, postfix=postfix)\n\tif 'Shinwa Densetsu no Eiyuu no Isekaitan' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Shinwa Densetsu no Eiyuu no Isekaitan', vol, chp, frag=frag, postfix=postfix)\n\tif 'Isekai Mahou wa Okureteru' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Isekai Mahou wa Okureteru', vol, chp, frag=frag, postfix=postfix)\n\tif 'Nidome no Jinsei wo Isekai de' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Nidome no Jinsei wo Isekai de', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "XCrossJ Translations": [
  "def extractXcrossjTranslations(item):\n\t\"\"\"\n\tParser for 'XCrossJ Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "XMTL": [
  "def extractXmtlHomeBlog(item):\n\t'''\n\tParser for 'xmtl.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Doomsday Lord',       'Doomsday Lord',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-02T07:18:58.114650"
 ],
 "Xaiomoge": [
  "def extractXaiomogeCom(item):\n\t'''\n\tParser for 'xaiomoge.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Mechanical God Emperor',       'Mechanical God Emperor',                      'translated'),\n\t\t('Unfathomable Doomsday',        'Unfathomable Doomsday',                       'translated'),\n\t\t('The Defeated Dragon',          'The Defeated Dragon',                         'translated'),\n\t\t('Age of Collapse',              'Age of Collapse',                             'translated'),\n\t\t('Loiterous',                    'Loiterous',                                   'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-24T23:25:21.489117"
 ],
 "Xaiomoge Translation": [
  "def extractXaiomogetranslationWordpressCom(item):\n\t'''\n\tParser for 'xaiomogetranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Mechanical God Emperor',  'Mechanical God Emperor',      'translated'),\n\t\t('Unfathomable Doomsday',   'Unfathomable Doomsday',       'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-13T05:46:54.232890"
 ],
 "Xant & Minions": [
  "def extractXantAndMinions(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) and not 'prologue' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('coffee',                       'The Coffee Shop in a Different World Station',         'translated'),\n\t\t('iseiza',                       'Isekai Izakaya Nobu',                                  'translated'),\n\t\t('NPWC',                         'New Theory \u2013 Nobusada\u2019s Parallel World Chronicle',     'translated'),\n\t\t('Lady Rose',                    'Lady Rose Wants to be a Commoner',                     'translated'),\n\t\t('Angel0',                       'The Angel Does Not Desire The Sky',                    'translated'),\n\t\t('Garudena',                     'Garudina Oukoku Koukoku Ki',                           'translated'),\n\t\t('Xingfeng',                     'Legend of Xingfeng',                                   'translated'),\n\t\t('Bear',                         'Kuma Kuma Kuma Bear',                                  'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('LV999 Villager',                              'LV999 Villager',                                       'translated'),\n\t\t('Boundary Labyrinth and the Foreign Magician', 'Boundary Labyrinth and the Foreign Magician',          'translated'),\n\t\t('The Bears Bear a Bare Kuma',                  'Kuma Kuma Kuma Bear',                                  'translated'),\n\t\t('Kuma Kuma Kuma Bear',                         'Kuma Kuma Kuma Bear',                                  'translated'),\n\t\t('Black Knight',                                'The Black Knight Who Was Stronger than even the Hero', 'translated'),\n\t\t('Astarte\u2019s Knight',                            \"Astarte's Knight\",                                     'translated'),\n\t\t('Queen\u2019s Knight Kael',                         \"Queen's Knight Kael\",                                  'translated'),\n\t\t('Legend of Xingfeng',                          'Legend of Xingfeng',                                   'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-01-05T08:20:19.495942"
 ],
 "Xant Does Stuff and Things": [
  "def extractXantDoesStuffAndThings(item):\n\t\"\"\"\n\t# 'Xant Does Stuff and Things'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Xenon Translations": [
  "def extractXenontranslationsVideoBlog(item):\n\t'''\n\tParser for 'xenontranslations.video.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tchp_prefixes = [\n\t\t\t('The Swordsman Called the Countless Swords Sorcerer \u2013 Chapter ',  'The Swordsman Called the Countless Swords Sorcerer',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-12-23T08:59:42.031837"
 ],
 "Xia Zixin Translations": [
  "def extractXiazixinBbisUs(item):\n\t'''\n\tParser for 'xiazixin.bbis.us'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('shadow chapters',       'To Be a Power in the Shadows!',                      'translated'),\n\t\t('girl\\'s frontline',     'All Quiet on The Frontline',                         'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-16T20:40:03.717226"
 ],
 "XiaXue Hobby": [
  "def extractXiaxuenovelsWordpressCom(item):\n\t'''\n\tParser for 'xiaxuenovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Bleach: Secret Intentions',                                        'Bleach: Secret Intentions',                                                        'translated'),\n\t\t('The Black Technology Chat Group of the Ten Thousand Realms',       'The Black Technology Chat Group of the Ten Thousand Realms',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-03-16T04:11:24.317509"
 ],
 "Xiakeluojiao \u4fa0\u5ba2\u843d\u811a": [
  "def extractXiakeluojiao\u4fa0\u5ba2\u843d\u811a(item):\n\t\"\"\"\n\tXiakeluojiao \u4fa0\u5ba2\u843d\u811a\n\t\"\"\"\n\t\n\n\tbadwords = [\n\t\t\t'korean drama',\n\t\t\t'badword',\n\t\t]\n\tif any([bad in item['tags'] for bad in badwords]):\n\t\treturn None\n\n\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\n\ttagmap = [\n\t\t('Princess Weiyang',       'The Princess Wei Yang',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif item['title'].startswith(\"Chapter \") and item['tags'] == []:\n\t\treturn buildReleaseMessageWithType(item, 'Zhu Xian', vol, chp, frag=frag, postfix=postfix)\n\t\t\n\t\t\n\treturn False",
  "2019-02-23T12:11:06.345286"
 ],
 "Xian Foreigners": [
  "def extractXianForeigners(item):\n\t\"\"\"\n\t'Xian Foreigners'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'President Wife Is A Man' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'President Wife Is A Man', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Xian Xia World": [
  "def extractXianXiaWorld(item):\n\t\"\"\"\n\tXian Xia World\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'www.xianxiaworld.net/A-Thought-Through-Eternity/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'A Thought Through Eternity', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/Beast-Piercing-The-Heavens/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'Beast Piercing The Heavens', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/Dominating-Sword-Immortal/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'Dominating Sword Immortal', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/Dragon-Marked-War-God/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'Dragon-Marked War God', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/Emperor-of-The-Cosmos/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'Emperor of The Cosmos', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/God-of-Slaughter/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'God of Slaughter', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/God-level-Bodyguard-in-The-City/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'God-level Bodyguard in The City', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/Realms-In-The-Firmament/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'Realms In The Firmament', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/The-King-Of-Myriad-Domains/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'The King Of Myriad Domains', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/The-Magus-Era/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'The Magus Era', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/The-Portal-of-Wonderland/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'The Portal of Wonderland', vol, chp, frag=frag, postfix=postfix)\n\tif 'www.xianxiaworld.net/World-Defying-Dan-God/' in item['linkUrl']:\n\t\treturn buildReleaseMessageWithType(item, 'World Defying Dan God', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Xiansho": [
  "\ndef extractXianshoBlogspotCom(item):\n\t'''\n\tParser for 'xiansho.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-02T10:32:10.531607"
 ],
 "Xianwu Hub": [
  "def extractXianwuhubCom(item):\n\t'''\n\tParser for 'xianwuhub.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('WDDG',                                 'World Defying Dan God',                      'translated'),\n\t\t('Everlasting Immortal Firmament',       'Everlasting Immortal Firmament',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('WDDG Chapter',      'World Defying Dan God',                      'translated'),\n\t\t('EIF Chapter',       'Everlasting Immortal Firmament',             'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-03-29T04:35:41.357815"
 ],
 "Xianxia Heaven": [
  "\ndef extractXianxiaheavenWordpressCom(item):\n\t'''\n\tParser for 'xianxiaheaven.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:53:01.377708"
 ],
 "Xianxia Novel.com": [
  "def extractXianxianovelWordpressCom(item):\n\t'''\n\tParser for 'xianxianovel.wordpress.com'\n\t'''\n\tif 'Translators Noise'.lower() in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('Nine Yang Sword Saint',                               True,  'translated'),\n\t\t\t('Genius Sword Immortal',                               True,  'translated'),\n\t\t\t('Beast Piercing The Heavens',                          True,  'translated'),\n\t\t\t('Zhanxian',                                            True,  'translated'),\n\t\t]\n\n\tfor series, require_chp, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(series.lower()) and (not require_chp or 'chapter' in item['title'].lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-07-15T06:23:21.152453"
 ],
 "Xianxia Tales": [
  "def extractXianxiaTales(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Xianxia Universe": [
  "\ndef extractXianxiaUniverse(item):\n\t'''\n\tParser for 'Xianxia Universe'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:55.957088"
 ],
 "Xianxia World": [
  "\ndef extractMXianxiaworldNet(item):\n\t'''\n\tParser for 'm.xianxiaworld.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:56.630443"
 ],
 "Xiao's Yaoi Playground": [
  "def extractXiaoyaoiplaygroundWordpressCom(item):\n\t'''\n\tParser for 'xiaoyaoiplayground.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Shaman\u2019s Poison',               'Poison of the Human Panacea',                      'translated'),\n\t\t('Poison of the Human Panacea',       'Poison of the Human Panacea',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T11:10:16.521873"
 ],
 "Xiaowen206's Blog": [
  "def extractXiaowen206sBlog(item):\n\t\"\"\"\n\t# \"Xiaowen206's Blog\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Xiaoxiao Novels": [
  "def extractXiaoxiaonovelsCom(item):\n\t'''\n\tParser for 'xiaoxiaonovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\ttagmap = [\n\t\t('The Girl Who Ate a Death God Side Story',        'The Girl Who Ate a Death God',                   'translated'), \n\t\t('Yuusha, Aruiwa Bakemono to Yobareta Shoujo',     'Yuusha, Aruiwa Bakemono to Yobareta Shoujo',     'translated'), \n\t\t('King of Myriad Domain',                          'King of Myriad Domain',                          'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\tif 'The Girl Who Ate a Death God Side Story' in item['tags']:\n\t\t\t\tpostfix = \"Side Story\"\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('RIW Chapter',                                                       \"Reincarnated Into A Werewolf As The Demon King's Servant\",      'translated'),\n\t\t('Reincarnated Into A Werewolf As The Demon King\u2019s Servant Chapter',  \"Reincarnated Into A Werewolf As The Demon King's Servant\",      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\n\treturn False",
  "2017-05-01T00:51:53.369104"
 ],
 "Xiaoyuu's Translations": [
  "def extractXiaoyuusTranslations(item):\n\t\"\"\"\n\tXiaoyuu's Translations\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Xiin's Translations": [
  "def extractXiintranslationsWordpressCom(item):\n\t'''\n\tParser for 'xiintranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('WTMT',                                         'Who Touched My Tail!',                                        'translated'),\n\t\t('Who Touched My Tail!',                         'Who Touched My Tail!',                                        'translated'),\n\t\t('Raising a Bun with a Daily Life System',       'Raising a Bun with a Daily Life System',                      'translated'),\n\t\t('BTTA',                                         'Back To The Apocalypse',                                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-17T12:51:42.917416"
 ],
 "Xing Tian Works": [
  "def extractXingtianworksWordpressCom(item):\n\t'''\n\tParser for 'xingtianworks.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Full-Time Anomaly',       'Full-Time Anomaly',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\tchp_prefixes = [\n\t\t\t('Chapter ',  'Full-time Anomaly',               'translated'),\n\t\t]\n\t\n\tif item['tags'] == ['Uncategorized']:\n\t\tfor prefix, series, tl_type in chp_prefixes:\n\t\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2017-10-07T10:17:31.949624"
 ],
 "Xiose": [
  "def extractXioseWordpressCom(item):\n\t'''\n\tParser for 'xiose.wordpress.com'\n\t'''\n\n\ttitle_concat = item['title'] + \" \" + \" \".join(item['tags'])\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(title_concat)\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Maou Army\\'s Strongest Magician was a Human',                                                'The Maou Army\\'s Strongest Magician was a Human',                                                                'translated'),\n\t\t('A Dragon in Slime\u2019s Clothing ~ I Want to Live Peacefully by Pretending to Be the Weakest',       'A Dragon in Slime\\'s Clothing ~ I Want to Live Peacefully by Pretending to Be the Weakest',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-04-28T02:27:20.732491"
 ],
 "Xtra Whipped Cream Translation": [
  "def extractXtrawhippedcreamWordpressCom(item):\n\t'''\n\tParser for 'xtrawhippedcream.wordpress.com'\n\t'''\n\tif 'Manga/Manhua' in item['tags']:\n\t\treturn None\n\t\t\n\t\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Female Emperor\\'s Peerless Luck',                                            'Female Emperor\\'s Peerless Luck',                                                      'translated'),\n\t\t('I Dedicated the Dimension to the Country',                                   'I Dedicated the Dimension to the Country',                                             'translated'),\n\t\t('Quick Transmigration - Villain Walkthrough',                                 'Quick Transmigration - Villain Walkthrough',                                           'translated'),\n\t\t('Considering the Possibility of Falling in Love With the Villain [GL]',       'Considering the Possibility of Falling in Love With the Villain',                      'translated'),\n\t\t('Befriending The Most Powerful Person',                                       'Befriending The Most Powerful Person',                                                      'translated'),\n\t\t('Reborn, I Became a Male God',                                                'Reborn, I Became a Male God',                                                               'translated'),\n\t\t('I am Not a Chick',                                                           'I am Not a Chick',                                                                          'translated'),\n\t\t('Living in the Last Days',                                                    'Living in the Last Days',                                                                   'translated'),\n\t\t('Love Fraudster',                                                             'Love Fraudster',                                                                            'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-27T11:06:52.585307"
 ],
 "Yado Inn": [
  "def extractYadoInnCom(item):\n\t'''\n\tParser for 'yado-inn.com'\n\t'''\n\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('SHS',                               'Super High Schoolers Affording to Live in Another World',                                     'translated'),\n\t\t('MLW',                               'While killing slimes for 300 years, I became the MAX level unknowingly',                      'translated'),\n\t\t('JUSCO',                             'JUSCO',                                                                                       'translated'),\n\t\t('TGWSPUJ',                           'The Girl Who Spits Up Jewels',                                                                'translated'),\n\t\t('ABM',                               'Akugyaku no Black Maria',                                                                     'translated'),\n\t\t('IDK',                               'Only I Who Got The Initial Job As Demon King',                                                'translated'),\n\t\t('MG',                                'Magi\u2019s Grandson',                                                                             'translated'),\n\t\t('DD',                                'Common Sense of a Duke\\'s Daughter',                                                          'translated'),\n\t\t('Komachi',                           'Chronicles of The Hardships of Komachi in The Sengoku Era',                                   'translated'),\n\t\t('Wiseman',                           'She Professed Herself The Pupil Of The Wiseman (WN)',                                         'translated'),\n\t\t('Little Sage',                       'The Small Sage Will Try Her Best In The Different World From Lv.1!',                          'translated'),\n\t\t('Noble Reincarnation',               'Noble Reincarnation~Blessed With the Strongest Power From Birth',                             'translated'),\n\t\t('Goc',                               'God of Cooking',                                                                              'translated'),\n\t\t('WSR',                               'World Strongest Rearguard',                                                                   'translated'),\n\t\t('Imouto',                            'Reincarnated as My Little Sister',                                                            'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('MLW \u2013 Chapter ',                     'While killing slimes for 300 years, I became the MAX level unknowingly',      'translated'),\n\t\t('SKM \u2013 Chapter ',                     'Chronicles of The Hardships of Komachi in The Sengoku Era',                   'translated'),\n\t\t('OP Waifus Chapter ',                 'Being Able to Edit Skills in Another World, I Gained OP Waifus',              'translated'),\n\t\t('ABM \u2013 Chapter ',                     'Akugyaku no Black Maria',                                                     'translated'),\n\t\t('Magi\u2019s Grandson \u2013 ',                 'Magi\u2019s Grandson',                                                             'translated'),\n\t\t('Pervy Healer ',                      'I Work As A Healer In Another World\u2019s Labyrinth City',                        'translated'),\n\t\t('MLW ',                               'While killing slimes for 300 years, I became the MAX level unknowingly',      'translated'),\n\t\t('Cheat na Kaineko \u2013 Chapter ',        'Cheat na Kaineko no Okage de Rakuraku Level Up',                              'translated'),\n\t\t('JUSCO',                              'JUSCO',                                                                       'translated'),\n\t\t('Magi\u2019s Grandson Chapter ',           'Magi\\'s Grandson',                                                            'translated'),\n\t\t('Dahlia \u2013 Chapter ',                  'Magical Devices Craftsman Dahlia Won\u2019t Hang Her Head Down Anymore',           'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-18T05:55:23.068693"
 ],
 "Yamette Translations": [
  "def extractYametteTranslations(item):\n\t\"\"\"\n\tParser for 'Yamette Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Yami Translates": [
  "def extractWwwYamitlCom(item):\n\t'''\n\tParser for 'www.yamitl.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Illimitable Until Death',       'Illimitable Until Death',                      'translated'),\n\t\t('Summoner of Miracles',          'Summoner of Miracles',                         'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-12-24T20:13:06.502709"
 ],
 "Yami Translations": [
  "def extractYamiTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Tensei Shoujo no Rirekisho' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shoujo no Rirekisho', vol, chp, frag=frag, postfix=postfix)\n\tif 'shoujo resume' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Tensei Shoujo no Rirekisho', vol, chp, frag=frag, postfix=postfix)\n\tif 'Ouroboros Record' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ouroboros Record', vol, chp, frag=frag, postfix=postfix)\n\tif 'Light Beyond' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Light Beyond', vol, chp, frag=frag, postfix=postfix)\n\tif 'otome game ga rokkushume' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Otome Game Rokkushuume, Automode ga Kiremashita', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-04-06T05:06:19.077149"
 ],
 "Yang God": [
  "\ndef extractYangGod(item):\n\t'''\n\tParser for 'Yang God'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:15:52.614423"
 ],
 "Yaoi Novels": [
  "def extractOkubyoukunXiaoxiaonovelsCom(item):\n\t'''\n\tParser for 'okubyoukun.xiaoxiaonovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\ttagmap = [\n\t\t('Outstanding Dog',       'Outstanding Dog',                                                  'translated'), \n\t\t('Inaka Life',            'Inaka Life',                                                       'translated'), \n\t\t('otome game',            'Dare ga Otome Geemu Dato Itta!',                                   'translated'), \n\t\t('Four Ikemen',           '4-nin no Ikemen ni Kyuuai sarete Ore wa Namidamedesu Index',       'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-06-13T02:35:12.029373"
 ],
 "Yaoi Stufas": [
  "\ndef extractAmaieroyaoiWordpressCom(item):\n\t'''\n\tParser for 'amaieroyaoi.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-17T07:32:26.703146"
 ],
 "Yasahii no Sekai wa": [
  "\ndef extractIncarosejealousyBlogspotCom(item):\n\t'''\n\tParser for 'incarosejealousy.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-20T06:49:04.546929"
 ],
 "Yasashi Honyaku": [
  "def extractYasashiHonyaku(item):\n\t\"\"\"\n\tYasashi Honyaku\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Yeagdrasil": [
  "def extractYeagdrasil(item):\n\t\"\"\"\n\tYeagdrasil\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Yehet-Stradamus": [
  "def extractYehetstradamusWordpressCom(item):\n\t'''\n\tParser for 'yehetstradamus.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('BILIP',       'Brother-in-Law, I\u2019m Pregnant!',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-06T05:04:10.874067"
 ],
 "Yeoman \u2014 A Web Serial": [
  "\ndef extractYeomanwebserialWordpressCom(item):\n\t'''\n\tParser for 'yeomanwebserial.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:18.379716"
 ],
 "Yet Another Translation Site": [
  "def extractMiaomix539(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\ttitleclean = item['title'].lower().replace('\u201c', '').replace('\u201d', '')\n\tif not (chp or vol) or 'preview' in titleclean:\n\t\treturn False\n\tif 'death march' in titleclean:\n\t\textract = re.search('Death March ((\\\\d+)\\\\-(.+?).*)', titleclean, flags=re.IGNORECASE)\n\t\tif extract:\n\t\t\ttry:\n\t\t\t\tpostfix = extract.group(1)\n\t\t\t\tvol = int(extract.group(2))\n\t\t\t\tchp = int(extract.group(3))\n\t\t\t\treturn buildReleaseMessageWithType(item, 'Death March kara Hajimaru Isekai Kyusoukyoku (LN)', vol, chp, postfix=postfix)\n\t\t\texcept ValueError:\n\t\t\t\treturn False\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Yi Yue Translation": [
  "def extractYiYueTranslation(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Yin Mao Translations": [
  "\ndef extractSilvercattranslationsWordpressCom(item):\n\t'''\n\tParser for 'silvercattranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-12-18T00:58:19.700788"
 ],
 "Yin Translations": [
  "def extractYintranslationsCom(item):\n\t'''\n\tParser for 'yintranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('When I Returned From Another World I Was A Silver Haired Shrine Maiden',       'When I Returned From Another World I Was A Silver Haired Shrine Maiden',                      'translated'),\n\t\t('Astarte\\'s Knight',                                                            'Astarte\\'s Knight',                                                                           'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-09-03T08:07:15.459073"
 ],
 "Yiumre": [
  "\ndef extractYiumreBlogspotCom(item):\n\t'''\n\tParser for 'yiumre.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:56:05.117637"
 ],
 "Ynver Moon": [
  "def extractYnvermoonWordpressCom(item):\n\t'''\n\tParser for 'ynvermoon.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('My Childhood Friend the Demon Knight, Hates Me',          'My Childhood Friend the Demon Knight Hates Me',          'translated'),\n\t\t('Do You Think You Can Run After Reincarnating, Nii-san',  'Do You Think You Can Run After Reincarnating, Nii-san?', 'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-08-12T08:04:11.135114"
 ],
 "Yomigaeru Translation": [
  "\ndef extractYomigaerutranslationWordpressCom(item):\n\t'''\n\tParser for 'yomigaerutranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:52:50.311922"
 ],
 "Yong Heng Zhi Zun Translation works": [
  "\ndef extractJinzeffectWordpressCom(item):\n\t'''\n\tParser for 'jinzeffect.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-04-02T06:13:00.822069"
 ],
 "Yoraikun Translation": [
  "def extractYoraikun(item):\n\t\"\"\"\n\t# Yoraikun\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tsnames = [\n\t\t\t'The Rise of the Shield Hero',\n\t\t\t'Konjiki no Wordmaster',\n\t\t\t'Sevens',\n\t\t\t'Dragoon',\n\t\t\t'The Lazy King',\n\t\t\t'Me, Her, and the Ballistic Weaponry [Antique]',\n\t\t]\n\n\ttlut = {tmp.lower(): tmp for tmp in snames}\n\n\ttlut['ikctawbwtwh']                      = \"I Kinda Came to Another World, But Where's the Way Home\"\n\ttlut['okitegami kyouko']                 = \"The Memorandum of Okitegami Kyouko\"\n\ttlut['battlefield masurawo']             = \"Sentou Jousai Masurawo\"\n\ttlut['the christmas of the shield hero'] = \"The Rise of the Shield Hero\"\n\ttlut['alchemuls']                        = \"Waga Hero no Tame no Alchemuls\"\n\ttlut['aura']                             = \"AURA: Koga Maryuin\\'s Last Battle\"\n\t\n\tltags = [tmp.lower() for tmp in item['tags']]\n\tfor key, value in tlut.items():\n\t\tif key in ltags:\n\t\t\ttl_type = 'translated'\n\n\t\t\treturn buildReleaseMessageWithType(item, value, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\n\ttitlemap = [\n\t\t('Mary-san Comes on Foot',  'Mary Comes on Foot',      'translated'), \n\t\t('Mary Comes on Foot',      'Mary Comes on Foot',      'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\treturn False",
  "2019-02-07T04:47:32.040426"
 ],
 "Yorasu Novels": [
  "def extractYorasuNovels(item):\n\t\"\"\"\n\tParser for 'Yorasu Novels'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Fallen God Records' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Fallen God Records', vol, chp, frag=frag, postfix=postfix)\n\tif 'Godly Model Creator' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Godly Model Creator', vol, chp, frag=frag, postfix=postfix)\n\tif 'Super Brain Telekinesis' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Super Brain Telekinesis', vol, chp, frag=frag, postfix=postfix)\n\tif 'hacker' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Hacker', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Yorasu Translations": [
  "def extractYorasuTranslations(item):\n\t\"\"\"\n\t# Yoraikun\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif item['title'].startswith('DKFTOD'):\n\t\treturn buildReleaseMessageWithType(item, 'Devil King From The Otherworldly Dimension', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Hacker'):\n\t\treturn buildReleaseMessageWithType(item, 'Hacker', vol, chp, frag=frag, postfix=postfix)\n\tif item['title'].startswith('Fallen God Records'):\n\t\treturn buildReleaseMessageWithType(item, 'Fallen God Records', vol, chp, frag=frag, postfix=postfix)\n\tif 'Godly Model Creator' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Godly Model Creator', vol, chp, frag=frag, postfix=postfix)\n\tif 'Super Brain Telekinesis' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Super Brain Telekinesis', vol, chp, frag=frag, postfix=postfix)\n\tif 'Super soldier' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Super soldier', vol, chp, frag=frag, postfix=postfix)\n\tif 'The Different World Of Demon Lord' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Different World Of Demon Lord', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Youjinsite Translations": [
  "def extractYoujinsite(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif '[God & Devil World]' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Shenmo Xitong', vol, chp, frag=frag, postfix=postfix)\n\tif '[LBD&A]' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Line between Devil and Angel', vol, chp, frag=frag, postfix=postfix)\n\tif '[VW: Conquer the World]' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'VW: Conquering the World', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Youko Advent": [
  "def extractYoukoAdvent(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Your Majesty Please Calm Down": [
  "def extractYourMajestyPleaseCalmDown(item):\n\t\"\"\"\n\tYour Majesty Please Calm Down\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Youshoku Translations": [
  "def extractYoushoku(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif 'The Other World Dining Hall' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'The Other World Dining Hall', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Yuanshu's Cave": [
  "def extractYuanshusCave(item):\n\t\"\"\"\n\t\"Yuanshu's Cave\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'id' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Id Fusion Story & Fantasy', vol, chp, frag=frag, postfix=postfix)\n\tif 'President Wife Is A Man' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'President Wife is A Man', vol, chp, frag=frag, postfix=postfix)\n\tif 'Feng Yu Jiu Tian' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Feng Yu Jiu Tian', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2017-03-10T10:17:28.825763"
 ],
 "Yuiko's Translation": [
  "def extractYuikotranslationWordpressCom(item):\n\t'''\n\tParser for 'yuikotranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\tchp_prefixes = [\n\t\t\t('The Daily Life of Being the Campus Idol\u2019s Fake Boyfriend Chapter ',  'The Daily Life of Being the Campus Idol\u2019s Fake Boyfriend',               'translated'),\n\t\t\t('The Daily Life of Being the Campus Idol\u2019s Fake Boyfriend\u2019s Chapter ',  'The Daily Life of Being the Campus Idol\u2019s Fake Boyfriend',               'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\treturn False",
  "2018-04-28T02:28:23.493362"
 ],
 "Yukigatokeru": [
  "\ndef extractYukigatokeruWordpressCom(item):\n\t'''\n\tParser for 'yukigatokeru.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:55:09.821557"
 ],
 "Yukiversity 2.0": [
  "\ndef extractXueversityWordpressCom(item):\n\t'''\n\tParser for 'xueversity.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-09T05:57:56.290355"
 ],
 "Yukkuri Free Time Literature Service": [
  "def extractYukkuri(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('Nihonkoku Shoukan',                                                                                               'Nihonkoku Shoukan',                                                                     'translated'),\n\t\t('10 nen goshi no HikiNEET o Yamete Gaishutsushitara Jitaku goto Isekai ni Ten\u2019ishiteta',                           '10 nen goshi no HikiNEET o Yamete Gaishutsushitara Jitaku goto Isekai ni Ten\u2019ishiteta', 'translated'),\n\t\t('When I was going out from my house to stop become a Hiki-NEET after 10 years I was transported to another world', '10 nen goshi no HikiNEET o Yamete Gaishutsushitara Jitaku goto Isekai ni Ten\u2019ishiteta', 'translated'),\n\t\t('Takarakuji de 40 Oku Atattanda kedo Isekai ni Ijuusuru',                                                          'Takarakuji de 40 Oku Atattanda kedo Isekai ni Ijuusuru',                                'translated'),\n\t\t('Tenseisha wa Cheat o Nozomanai',                                                                                  'Tenseisha wa Cheat o Nozomanai',                                                        'translated'),\n\t\t('I Won 4 Billion in a Lottery But I Went to Another World',                                                        'Takarakuji de 40 Oku Atattanda kedo Isekai ni Ijuusuru',                                'translated'),\n\t\t('Genjitsushugi Yuusha no Oukokusaikenki',                                                                          'Genjitsushugi Yuusha no Oukokusaikenki',                                                'translated'),\n\t\t('Himekishi to Camping Car',                                                                                        'Himekishi to Camping Car',                                                              'translated'),\n\t\t('A Realist Hero\\'s Kingdom Reconstruction Chronicle',                                                              'A Realist Hero\\'s Kingdom Reconstruction Chronicle',                                    'translated'),\n\t\t('Isekai de \u300eKuro no Iyashite-tte\u300f Yobarete Imasu',                                                               'Isekai de \u300eKuro no Iyashite-tte\u300f Yobarete Imasu',                                     'translated'),\n\t\t('Genjitsushugisha no Oukoku Kaizouki',                                                                             'Genjitsushugisha no Oukoku Kaizouki',                                                   'translated'),\n\t\t('The Curious Girl and The Traveler',                                                                               'The Curious Girl and The Traveler',                                                     'oel'),\n\t\t('The Primordial',                                                                                                  'The Primordial',                                                                        'oel'),\n\t\t('Yukkuri Oniisan',                                                                                                 'Yukkuri Oniisan',                                                                       'oel'),\n\t\t('The Valtras Myth',                                                                                                'The Valtras Myth',                                                                      'oel'),\n\t\t('Undeath and Taxes',                                                                                               'Undeath and Taxes',                                                                     'oel'),\n\t\t('The Bad the Worse and the Evil',                                                                                  'The Bad The Evil and The Worse',                                                        'oel'),\n\t\t('The Bad The Evil and The Worse',                                                                                  'The Bad The Evil and The Worse',                                                        'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Takarakuji de 40 Oku Atattanda kedo Isekai ni Ijuusuru.',                               'Takarakuji de 40 Oku Atattanda kedo Isekai ni Ijuusuru',                                'translated'),\n\t\t('10 nen goshi no HikiNEET o Yamete Gaishutsushitara Jitaku goto Isekai ni Ten\u2019ishiteta', '10 nen goshi no HikiNEET o Yamete Gaishutsushitara Jitaku goto Isekai ni Ten\u2019ishiteta', 'translated'),\n\t\t('Genjitsushugi Yuusha no Oukokusaikenki.',                                               'Genjitsushugisha no Oukoku Kaizouki',                                                   'translated'),\n\t\t('Genjitsushugisha no Oukoku Kaizouki',                                                   'Genjitsushugisha no Oukoku Kaizouki',                                                   'translated'),\n\t\t('Our New World - Chapter',                                                               'Our New World',                                                                         'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\n\treturn False",
  "2018-04-27T06:59:05.263492"
 ],
 "Yume Abyss": [
  "def extractYumeabyssCom(item):\n\t'''\n\tParser for 'yumeabyss.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('The Cry of the Phoenix Which Reached the Ninth Heaven',       'The Cry of the Phoenix Which Reached the Ninth Heaven',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-27T10:57:55.938594"
 ],
 "Yumeabyss": [
  "def extractYumeabyss(item):\n\t\"\"\"\n\tYumeabyss\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"Black Bellied Prince's Stunning Abandoned Consort\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Black Bellied Prince's Stunning Abandoned Consort\", vol, chp, frag=frag, postfix=postfix)\n\tif 'The Cry of the Phoenix Which Reached the Ninth Heaven' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Cry of the Phoenix Which Reached the Ninth Heaven', vol, chp, frag=frag, postfix=postfix)\n\tif 'Island: End of Nightmare' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Island: End of Nightmare', vol, chp, frag=frag, postfix=postfix)\n\tif 'Xiao Qi, Wait' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Xiao Qi, Wait', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Yun is Cold": [
  "def extractYunhatsumetaimasuWordpressCom(item):\n\t'''\n\tParser for 'yunhatsumetaimasu.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tchp_prefixes = [\n\t\t\t('BeSwordGirl \u2013 Chapter ',  'I Want To Be A Swordsman Even As A Girl',               'translated'),\n\t\t\t('Cat ',    'Me and My Beloved Cat (Girlfriend)',                                  'translated'),\n\t\t]\n\n\tfor prefix, series, tl_type in chp_prefixes:\n\t\tif item['title'].lower().startswith(prefix.lower()):\n\t\t\treturn buildReleaseMessageWithType(item, series, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T11:55:54.329384"
 ],
 "Yurika Hime's Translations": [
  "def extractYurikatransWordpressCom(item):\n\t'''\n\tParser for 'yurikatrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Arms Otome Ch',             'Arms Otome',                                                                             'translated'),\n\t\t('Levelmaker',                'Levelmaker -Raising Levels While Living in Another World-',                              'translated'),\n\t\t('The Strongest Fairy',       'Is the strongest in another world a hero? a demon lord? No! it\u2019s a fairy desu!',         'translated'),\n\t\t('Eiyuu no Musume Chapter ',  'Eiyuu no Musume to Shite Umarekawatta Eiyuu wa Futatabi Eiyuu o Mezasu (WN) ',           'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttagmap = [\n\t\t('The Pebble',                'I am just a\u3008Former\u3009Pebble! ~The Healing Golem and Monster User~',                                     'translated'),\n\t\t('The Strongest Fairy',       'Is the strongest in another world a hero? a demon lord? No! it\u2019s a fairy desu!',                        'translated'),\n\t\t('Levelmaker',                'Levelmaker -Raising Levels While Living in Another World-',                                             'translated'),\n\t\t('I Reincarnated',            'I Was Reincarnated but I Don\\'t Know Why',                                                              'translated'),\n\t\t('Vampire Yukine',            'Vampire Yukine\\'s Otherworld Journey',                                                                  'translated'),\n\t\t('Fief Strengthening',        'Fief Strengthening',                                                                                    'translated'),\n\t\t('Arms Otome',                'Arms Otome',                                                                                            'translated'),\n\t\t('Eiyuu Musume',              'Eiyuu no Musume to Shite Umarekawatta Eiyuu wa Futatabi Eiyuu o Mezasu (WN)',                           'translated'),\n\t\t('eiyuu no musume',           'Eiyuu no Musume to Shite Umarekawatta Eiyuu wa Futatabi Eiyuu o Mezasu (WN)',                           'translated'),\n\t\t('Goddess',                   'Being Recognized as an Evil God, I Changed My Job to Guardian Deity of the Beastmen Country',           'translated'),\n\t\t('dungeon master',            'I Became a \u300aDungeon Master\u300b In a Different World',                                                    'translated'),\n\t\t('Kansutoppu',                'Kansutoppu!',                                                                                           'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2019-06-14T05:30:07.449506"
 ],
 "Yuugen Translations": [
  "def extractYuugentranslationsWordpressCom(item):\n\t'''\n\tParser for 'yuugentranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('Yandere Imouto \u2013 ', 'Confinement by my Yandere Imouto',                                         'translated'),\n\t\t('Battleship AI \u2013 ',  'Unparalleled Path ~ Reincarnated as the AI for a space battleship ~',      'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-08-12T08:05:58.631090"
 ],
 "Yuujinchou": [
  "def extractYuujinchou(item):\n\t\"\"\"\n\tParser for 'Yuujinchou'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Yuukou": [
  "\ndef extractYuukouUs(item):\n\t'''\n\tParser for 'yuukou.us'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-05T22:35:48.929531"
 ],
 "Yuyu Channel": [
  "def extractYuyuchannelWordpressCom(item):\n\t'''\n\tParser for 'yuyuchannel.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('lost temple',       'Lost Temple',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T09:04:06.558981"
 ],
 "ZAZA Translations": [
  "def extractZazaTranslations(item):\n\t\"\"\"\n\tParser for 'ZAZA Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "ZSW": [
  "def extractZSW(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif 'Shen Mu' in item['tags'] and (chp or vol):\n\t\treturn buildReleaseMessageWithType(item, 'Shen Mu', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Zaelum Translations": [
  "def extractZaelumTranslations(item):\n\t\"\"\"\n\t'Zaelum Translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Zealotuszero Note": [
  "def extractZealotuszeronotesWordpressCom(item):\n\t'''\n\tParser for 'zealotuszeronotes.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('ARRA',       'Adventure Record of Reincarnated Aristocrat',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-22T08:55:51.436025"
 ],
 "Zelsky Translations": [
  "def extractZelskytranslationsWordpressCom(item):\n\t'''\n\tParser for 'zelskytranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\ttagmap = [\n\t\t('Reverend Insanity',       'Reverend Insanity',                      'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Reverend Insanity Chapter',               'Reverend Insanity',                      'translated'), \n\t\t('Mysterious Hidden Journey Chapter',       'Mysterious Hidden Journey',              'translated'), \n\t\t('Necromancer\u2019s Guide To Magic Chapter ',   'Necromancer\\'s Guide To Magic',          'translated'), \n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2018-02-07T07:28:34.827949"
 ],
 "Zen Translations": [
  "def extractZenTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Zenith Novels": [
  "def extractZenithnovelsCom(item):\n\t'''\n\tParser for 'zenithnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Blade Online',                                           'Blade Online',                                            'translated'),\n\t\t('The Great Conqueror',                                    'The Great Conqueror',                                     'translated'),\n\t\t('The Crimson Dragon',                                     'The Crimson Dragon',                                      'translated'),\n\t\t('Paranormal World (The Semi-Physical World)',             'Paranormal World (The Semi-Physical World)',              'translated'), \n\t\t('It\u2019s Impossible that My Evil Overlord is So Cute',       'It\u2019s Impossible that My Evil Overlord is So Cute',        'translated'), \n\t\t('Returning from the Immortal World',                      'Returning from the Immortal World',                       'translated'), \n\t\t('Tsuki ga Michibiku Isekai Douchuu (POV)',                'Tsuki ga Michibiku Isekai Douchuu',                       'translated'), \n\t\t('Starchild Escapes Arranged Marriage',                    'Starchild Escapes Arranged Marriage',                     'translated'), \n\t\t('The Lame Daoist Priest',                                 'The Lame Daoist Priest',                                  'translated'), \n\t\t('Headless Dullahan',                                      'I\\'m a Dullahan, Looking for My Head',                    'translated'), \n\t\t('Higawari Teni ~ Ore wa Arayuru Sekai de Musou Suru ~',   'Higawari Teni ~ Ore wa Arayuru Sekai de Musou Suru ~',    'translated'), \n\t\t('Godly Student',                                          'Godly Student',                                           'translated'), \n\t\t('Infinity Armament',                                      'Infinity Armament',                                       'translated'), \n\t\t('Evil-like Duke Household',                               'Evil-like Duke Household',                                'translated'), \n\t\t('Omae Mitai na Hiroin ga Ite Tamaruka!',                  'Omae Mitai na Hiroin ga Ite Tamaruka!',                   'translated'), \n\t\t('Starting From Zero',                                     'Starting From Zero',                                      'translated'), \n\t\t('M E M O R I Z E',                                        'M E M O R I Z E',                                         'translated'), \n\t\t('The World That Tao Rules',                               'The World That Tao Rules',                                'translated'), \n\t\t('Supreme Arrow God',                                      'Supreme Arrow God',                                       'translated'), \n\t\t('The God of Sky & Earth',                                 'The God of Sky & Earth',                                  'translated'), \n\t\t('Eternal Martial Emperor',                                'Eternal Martial Emperor',                                 'translated'), \n\t\t('The Great Merchant in the Cataclysm',                    'The Great Merchant in the Cataclysm',                     'translated'), \n\t\t('Amaku Yasashii Sekai de Ikiru ni wa',                    'Amaku Yasashii Sekai de Ikiru ni wa',                     'translated'), \n\t\t('I\\'m the Boss Who Modified the World',                   'I\\'m the Boss Who Modified the World',                    'translated'), \n\t\t('The Almighty Asura',                                     'The Almighty Asura',                                      'translated'), \n\t\t('The Hunter Under the Tree of Origin',                    'The Hunter Under the Tree of Origin',                     'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\tif 'Tsuki ga Michibiku Isekai Douchuu (POV)' in item['tags']:\n\t\t\t\tpostfix = \"POV Chapter\"\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2019-05-28T05:01:40.508168"
 ],
 "Zeonic": [
  "def extractZeonic(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Zerailn": [
  "\ndef extractZerailnWordpressCom(item):\n\t'''\n\tParser for 'zerailn.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:17.842124"
 ],
 "Zero Translations": [
  "def extractZeroTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Zeroth Novels": [
  "\ndef extractWwwZerothnovelsCom(item):\n\t'''\n\tParser for 'www.zerothnovels.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-22T15:46:51.434232"
 ],
 "Zettai Dame Translations": [
  "def extractZettaidametlWordpressCom(item):\n\t'''\n\tParser for 'zettaidametl.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('OIET',       'Ordinary I and Extraordinary Them',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-11-09T07:15:56.384283"
 ],
 "Zettai Ryouiki Translations": [
  "def extractZettairyouikitransWordpressCom(item):\n\t'''\n\tParser for 'zettairyouikitrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Mushoku Tensei Redundancy Chapters',       'Mushoku Tensei Redundancy',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-29T06:20:22.626739"
 ],
 "Zhanlan \u2022 Translations": [
  "def extractZhanlantranslationsWordpressCom(item):\n\t'''\n\tParser for 'zhanlantranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Online Game: Willingly Captured',                                        'Online Game: Willingly Captured',                                                       'translated'), \n\t\t('I Am A Killer',                                                          'I Am A Killer',                                                                         'translated'), \n\t\t('Endless Love',                                                           'Endless Love',                                                                          'translated'), \n\t\t('My Classmate Is Two Hundred Million Years Old',                          'My Classmate Is Two Hundred Million Years Old',                                         'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-07T06:25:03.890686"
 ],
 "Ziggurat Localizations": [
  "\ndef extractZigguratlocalizationsBlogspotCom(item):\n\t'''\n\tParser for 'zigguratlocalizations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-29T03:42:20.884896"
 ],
 "Zips_17": [
  "def extractZips_17(item):\n\t\"\"\"\n\tParser for 'Zips_17'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "Ziru's Musings | Translations~": [
  "def extractZiruTranslations(item):\n\t\"\"\"\n\t# Ziru's Musings | Translations~\n\n\t\"\"\"\n\tif 'espa\u00f1ol' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Suterareta Yuusha no Eiyuutan' in item['tags'] or 'Suterareta Yuusha no Eyuutan' in item['tags'] or 'Suterurareta Yuusha no Eiyuutan' in item['tags']:\n\t\textract = re.search('Suterareta Yuusha no Ei?yuutan \\\\((\\\\d+)\\\\-(.+?)\\\\)', item['title'])\n\t\tif extract:\n\t\t\tvol = int(extract.group(1))\n\t\t\ttry:\n\t\t\t\tchp = int(extract.group(2))\n\t\t\t\tpostfix = ''\n\t\t\texcept ValueError:\n\t\t\t\tchp = None\n\t\t\t\tpostfix = extract.group(2)\n\t\t\treturn buildReleaseMessageWithType(item, 'Suterareta Yuusha no Eiyuutan', vol, chp, postfix=postfix)\n\t\t\t\n\ttagmap = [\n\t\t('Demon Sword Maiden',                 'Demon Sword Maiden',             'translated'),\n\t\t('No Protection Tonight',              'No Protection Tonight',          'translated'),\n\t\t('Inside the Cave of Obscenity',       'Inside the Cave of Obscenity',   'translated'),\n\t\t('Dragon Bloodline',                   'Dragon Bloodline',               'translated'),\n\t\t('Dragon\\'s Bloodline',                'Dragon Bloodline',               'translated'),\n\t\t('Lazy Dungeon Master',                'Lazy Dungeon Master',            'translated'),\n\t\t('kuro no maou',                       'Kuro no Maou',                   'translated'),\n\t\t('Happy Peach',                        'Happy Peach',                    'translated'),\n\t\t(\"The Guild's Cheat Receptionist\",     \"The Guild's Cheat Receptionist\", 'translated'),\n\t\t('Suterareta Yuusha no Eiyuutan',      'Suterareta Yuusha no Eiyuutan',  'translated'),\n\t\t('The Magus of Genesis',               'The Magus of Genesis',           'translated'),\n\t\t('The Forsaken Hero',                  'The Forsaken Hero',              'translated'),\n\t\t('The Restart',                        'The Restart',                    'oel'),\n\t]\n\t\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('Dragon\u2019s Bloodline \u2014 Chapter ',      'Dragon Bloodline',               'translated'),\n\t\t('Lazy Dungeon Master ',               'Lazy Dungeon Master',            'translated'),\n\t\t('Happy Peach ',                       'Happy Peach',                    'translated'),\n\t\t(\"The Guild\u2019s Cheat Receptionist \",    \"The Guild's Cheat Receptionist\", 'translated'),\n\t\t\n\t\t# Somehow, this tag is present, but getting missed? Is there whitespace that's getting truncated?\n\t\t('Inside the Cave of Obscenity ',                  'Inside the Cave of Obscenity',        'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in tagmap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\t\t\t\n\treturn False",
  "2019-02-04T04:05:03.381866"
 ],
 "Zombiesellingmeng": [
  "\ndef extractOtomevillainessBusinessBlog(item):\n\t'''\n\tParser for 'otomevillainess.business.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-09T04:59:48.701532"
 ],
 "Zumi Edits": [
  "\ndef extractZumieditsWordpressCom(item):\n\t'''\n\tParser for 'zumiedits.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-04-22T07:37:26.716259"
 ],
 "Zxzxzx's Blog": [
  "def extractZxzxzxSBlog(item):\n\t\"\"\"\n\tParser for 'Zxzxzx's Blog'\n\t\"\"\"\n\t\n\tbad_tags = [\n\t\t\t'Poll',\n\t\t\t'rssf',\n\t\t\t'Anime',\n\t\t]\n\tif any([tmp in item['tags'] for tmp in bad_tags]):\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\n\t\t\n\tif 'dxd' in item['tags'] and 'translation' in item['tags'] and 'complete' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'High School DxD', vol, chp, frag=frag, postfix=postfix)\n\treturn False",
  "2019-01-07T02:02:11.185949"
 ],
 "Zylphide": [
  "\ndef extractZylphideLivejournalCom(item):\n\t'''\n\tParser for 'zylphide.livejournal.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-04T03:33:12.539909"
 ],
 "[G.O] Chronicles": [
  "def extractGOChronicles(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "[nakulas]": [
  "def extractNakulas(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "a Blogger on Hiatus": [
  "\ndef extractAbloggeronhiatusBlogspotCom(item):\n\t'''\n\tParser for 'abloggeronhiatus.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-16T21:55:59.066617"
 ],
 "ahgashonixnoveltranslation.wordpress.com": [
  "\ndef extractAhgashonixnoveltranslationWordpressCom(item):\n\t'''\n\tParser for 'ahgashonixnoveltranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-26T06:00:26.925761"
 ],
 "airfalltranslations.wordpress.com": [
  "\ndef extractAirfalltranslationsWordpressCom(item):\n\t'''\n\tParser for 'airfalltranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-19T08:32:40.524686"
 ],
 "alaaedin.com": [
  "def extractAlaaedinCom(item):\n\t'''\n\tParser for 'alaaedin.com'\n\t'''\n\t\n\t# Wat?\n\n\treturn False",
  "2018-10-15T05:47:35.671459"
 ],
 "alphawaveentertainment.com": [
  "\ndef extractAlphawaveentertainmentCom(item):\n\t'''\n\tParser for 'alphawaveentertainment.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-22T08:19:39.260154"
 ],
 "ancientnovels.com": [
  "def extractAncientnovelsCom(item):\n\t'''\n\tParser for 'ancientnovels.com'\n\t'''\n\n\t# Wat\n\t\n\treturn False",
  "2018-10-17T06:42:21.166298"
 ],
 "aoitenshi.mangadex.com": [
  "\ndef extractAoitenshiMangadexCom(item):\n\t'''\n\tParser for 'aoitenshi.mangadex.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-02-10T12:17:22.243896"
 ],
 "archiveofourown.org": [
  "def extractArchiveofourownOrg(item):\n\t'''\n\tParser for 'archiveofourown.org'\n\t'''\n\t\n\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-06-22T06:11:39.863366"
 ],
 "asd398": [
  "def extractAsd398(item):\n\t\"\"\"\n\t# 'asd398'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif \"Don't tell me this is the true history of the Three Kingdoms!\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Don't tell me this is the true history of the Three Kingdoms!\", vol, chp, frag=frag, postfix=postfix)\n\tif 'Leading an Explosive Revolution in Another World!' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Leading an Explosive Revolution in Another World!', vol, chp, frag=frag, postfix=postfix)\n\tif 'No Battle No Life' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'No Battle No Life', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "ashtranslations.net": [
  "\ndef extractAshtranslationsNet(item):\n\t'''\n\tParser for 'ashtranslations.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-03T02:39:04.470760"
 ],
 "attorneyking.pro": [
  "\ndef extractAttorneykingPro(item):\n\t'''\n\tParser for 'attorneyking.pro'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-23T07:40:14.298834"
 ],
 "attorneykings.gdn": [
  "\ndef extractAttorneykingsGdn(item):\n\t'''\n\tParser for 'attorneykings.gdn'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-08T07:19:30.833244"
 ],
 "avertranslation.blogspot.com": [
  "\ndef extractAvertranslationBlogspotCom(item):\n\t'''\n\tParser for 'avertranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-14T04:48:52.337124"
 ],
 "bigdickenergynovels.wordpress.com": [
  "\ndef extractBigdickenergynovelsWordpressCom(item):\n\t'''\n\tParser for 'bigdickenergynovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-26T01:08:22.994983"
 ],
 "bluebugsstory": [
  "\ndef extractBluebugsstory(item):\n\t'''\n\tParser for 'bluebugsstory'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:55.724892"
 ],
 "box5113.temp.domains": [
  "\ndef extractBox5113TempDomains(item):\n\t'''\n\tParser for 'box5113.temp.domains'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-03-04T23:08:06.350614"
 ],
 "caelum-lex.com": [
  "def extractCaelumLexCom(item):\n\t'''\n\tParser for 'caelum-lex.com'\n\t'''\n\n\t# Wat\n\n\treturn False",
  "2018-10-15T05:52:01.836333"
 ],
 "cavendishclub.wordpress.com": [
  "\ndef extractCavendishclubWordpressCom(item):\n\t'''\n\tParser for 'cavendishclub.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-06T12:17:20.121910"
 ],
 "cclawtranslations.com": [
  "\ndef extractCclawtranslationsCom(item):\n\t'''\n\tParser for 'cclawtranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-02-23T18:54:50.130944"
 ],
 "chillockscans.com": [
  "def extractChillockscansCom(item):\n\t'''\n\tParser for 'chillockscans.com'\n\t'''\n\n\t# wat\n\t\n\treturn False",
  "2018-10-15T05:53:39.563862"
 ],
 "chocolatemilktranslations.com": [
  "\ndef extractChocolatemilktranslationsCom(item):\n\t'''\n\tParser for 'chocolatemilktranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-28T02:27:55.062583"
 ],
 "clink.nifty.com": [
  "\ndef extractClinkNiftyCom(item):\n\t'''\n\tParser for 'clink.nifty.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-06T14:39:53.942155"
 ],
 "convallariaslibrary.com": [
  "\ndef extractConvallariaslibraryCom(item):\n\t'''\n\tParser for 'convallariaslibrary.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-27T23:43:36.945157"
 ],
 "crimsonmagic.me": [
  "\ndef extractCrimsonmagicMe(item):\n\t'''\n\tParser for 'crimsonmagic.me'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-24T06:49:12.047003"
 ],
 "defiring.com": [
  "\ndef extractDefiringCom(item):\n\t'''\n\tParser for 'defiring.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-02-01T19:02:38.877254"
 ],
 "delena426.lofter.com": [
  "\ndef extractDelena426LofterCom(item):\n\t'''\n\tParser for 'delena426.lofter.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-19T15:16:13.997639"
 ],
 "devil-pending-translations.home.blog": [
  "\ndef extractDevilPendingTranslationsHomeBlog(item):\n\t'''\n\tParser for 'devil-pending-translations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-29T04:06:19.891943"
 ],
 "devildante777's Blog": [
  "def extractDevildante777SBlog(item):\n\t\"\"\"\n\tParser for 'devildante777's Blog'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "docs.google.com": [
  "\ndef extractDocsGoogleCom(item):\n\t'''\n\tParser for 'docs.google.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:55.110597"
 ],
 "dollstranslations.blogspot.com.es": [
  "\ndef extractDollstranslationsBlogspotComEs(item):\n\t'''\n\tParser for 'dollstranslations.blogspot.com.es'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-12-22T06:37:32.609628"
 ],
 "egscans.com": [
  "def extractEgscansCom(item):\n\t'''\n\tParser for 'egscans.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\t\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\tif 'Manhua' in item['tags']:\n\t\treturn None\n\tif 'Manhwa (Korean)' in item['tags']:\n\t\treturn None\n\tif 'webtoon (webcomic)' in item['tags']:\n\t\treturn None\n\tif 'Manga (Japanese)' in item['tags']:\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2018-03-29T04:31:44.572988"
 ],
 "elwiki.net": [
  "def extractElwikiNet(item):\n\t'''\n\tParser for 'elwiki.net'\n\t'''\n\t\n\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2018-06-20T05:24:32.096296"
 ],
 "en.blog.wordpress.com": [
  "def extractEnBlogWordpressCom(item):\n\t'''\n\tParser for 'en.blog.wordpress.com'\n\t'''\n\n\treturn None",
  "2017-03-26T09:35:46.654786"
 ],
 "enochianmurmurs became darkcherrymystery": [
  "\ndef extractEnochianmurmursTumblrCom(item):\n\t'''\n\tParser for 'enochianmurmurs.tumblr.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-14T04:51:23.300033"
 ],
 "eternalpath.net": [
  "def extractEternalpath(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "explore-frontiers.com": [
  "\ndef extractExploreFrontiersCom(item):\n\t'''\n\tParser for 'explore-frontiers.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-22T08:21:13.570230"
 ],
 "fgiLaN translations": [
  "def extractfgiLaNTranslations(item):\n\t\"\"\"\n\t# 'fgiLaN translations'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'kimi no na wa' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'kimi no na wa', vol, chp, frag=frag, postfix=postfix)\n\tif 'shuumatsu nani shitemasu ka? isogashii desu ka? sukutte moratte ii desu ka?' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'shuumatsu nani shitemasu ka? isogashii desu ka? sukutte moratte ii desu ka?', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "fictionaut.com": [
  "\ndef extractFictionautCom(item):\n\t'''\n\tParser for 'fictionaut.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-01T23:41:25.481361"
 ],
 "foxaholic.blog": [
  "\ndef extractFoxaholicBlog(item):\n\t'''\n\tParser for 'foxaholic.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-21T00:18:21.688280"
 ],
 "franshishou.home.blog": [
  "\ndef extractFranshishouHomeBlog(item):\n\t'''\n\tParser for 'franshishou.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-02T23:01:29.283835"
 ],
 "ftp.liberspark.com": [
  "\ndef extractFtpLibersparkCom(item):\n\t'''\n\tParser for 'ftp.liberspark.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-01-23T04:43:56.656423"
 ],
 "github.com": [
  "def extractGithubCom(item):\n\t'''\n\tParser for 'github.com'\n\t'''\n\n\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T06:25:39.848078"
 ],
 "golemcreationkit.com": [
  "\ndef extractGolemcreationkitCom(item):\n\t'''\n\tParser for 'golemcreationkit.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-22T08:19:39.141366"
 ],
 "gudegtranslation.blogspot.com": [
  "\ndef extractGudegtranslationBlogspotCom(item):\n\t'''\n\tParser for 'gudegtranslation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-02-16T11:34:42.638122"
 ],
 "guhehe.TRANSLATIONS": [
  "def extractGuhehe(item):\n\t\"\"\"\n\t# guhehe.TRANSLATIONS\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'ShominSample' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Ore ga Ojou-sama Gakkou ni \"Shomin Sample\" Toshite Rachirareta Ken', vol, chp, frag=frag, postfix=postfix)\n\tif 'OniAi' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Onii-chan Dakedo Ai Sae Areba Kankeinai yo ne', vol, chp, frag=frag, postfix=postfix)\n\tif 'Haganai' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Boku wa Tomodachi ga Sukunai', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "halfelementmaster.wordpress.com": [
  "\ndef extractHalfelementmasterWordpressCom(item):\n\t'''\n\tParser for 'halfelementmaster.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-25T08:15:13.582792"
 ],
 "hereticlnt.blogspot.com": [
  "\ndef extractHereticlntBlogspotCom(item):\n\t'''\n\tParser for 'hereticlnt.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:15:51.485022"
 ],
 "hero-translation.blogspot.com": [
  "\ndef extractHeroTranslationBlogspotCom(item):\n\t'''\n\tParser for 'hero-translation.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-09T05:00:17.621471"
 ],
 "hhknovels.wordpress.com": [
  "\ndef extractHhknovelsWordpressCom(item):\n\t'''\n\tParser for 'hhknovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-02-13T04:25:51.400674"
 ],
 "higanbanaloveschrysanthemum.home.blog": [
  "\ndef extractHiganbanaloveschrysanthemumHomeBlog(item):\n\t'''\n\tParser for 'higanbanaloveschrysanthemum.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-16T05:43:19.869329"
 ],
 "hoshiandme": [
  "\ndef extractHoshiandme(item):\n\t'''\n\tParser for 'hoshiandme'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:55.312323"
 ],
 "hotaruworld.home.blog": [
  "\ndef extractHotaruworldHomeBlog(item):\n\t'''\n\tParser for 'hotaruworld.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-13T22:58:52.103479"
 ],
 "icedlemon.water.blog": [
  "\ndef extractIcedlemonWaterBlog(item):\n\t'''\n\tParser for 'icedlemon.water.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-13T21:44:36.222171"
 ],
 "ikigai.novels": [
  "def extractIkigainovelsWordpressCom(item):\n\t'''\n\tParser for 'ikigainovels.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('ABG30D',       'Agreement of Being Gay for 30 Days',                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-09-13T05:49:57.413284"
 ],
 "imtheslowestturtle.com": [
  "\ndef extractImtheslowestturtleCom(item):\n\t'''\n\tParser for 'imtheslowestturtle.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-14T06:29:20.437175"
 ],
 "inconnuesite": [
  "def extractInconnuesite(item):\n\t'''\n\tParser for 'inconnuesite'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\ttagmap = [\n\t\t(\"SGS\", \"Shoujo Grand Summoning\",    'translated'),\n\t\t(\"UAW\", \"Unlimited Anime Works\",     'translated'),\n\t\t(\"HF\",  \"Holistic Fantasy\",          'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2017-05-01T03:43:14.443219"
 ],
 "inmortallegends.blogspot.com.es": [
  "\ndef extractInmortallegendsBlogspotComEs(item):\n\t'''\n\tParser for 'inmortallegends.blogspot.com.es'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-19T03:58:02.753989"
 ],
 "isogashiineeto.com": [
  "\ndef extractIsogashiineetoCom(item):\n\t'''\n\tParser for 'isogashiineeto.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-31T02:45:10.997212"
 ],
 "itranslateln": [
  "def extractItranslateln(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "itsgellisalin.home.blog": [
  "\ndef extractItsgellisalinHomeBlog(item):\n\t'''\n\tParser for 'itsgellisalin.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-17T00:07:58.953750"
 ],
 "izra709 | B Group no Shounen Translations": [
  "def extractIzra709(item):\n\t\"\"\"\n\t# izra709 | B Group no Shounen Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif not postfix and '\u2013' in item['title']:\n\t\tpostfix = item['title'].split('\u2013')[-1]\n\tif 'monohito chapter' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Monogatari no Naka no Hito', vol, chp, frag=frag, postfix=postfix)\n\tif 'b group chapter' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'B Group no Shounen', vol, chp, frag=frag, postfix=postfix)\n\tif 'assassin chapter' in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Other World Assassin Life of a Man who was a Shut-in', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "kendalblack.blogspot.com": [
  "\ndef extractKendalblackBlogspotCom(item):\n\t'''\n\tParser for 'kendalblack.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-08-24T19:28:11.428480"
 ],
 "kerukeruTL": [
  "def extractKerukeruHomeBlog(item):\n\t'''\n\tParser for 'kerukeru.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\n\tif item['tags'] == ['Uncategorized'] and item['title'].startswith(\"Chapter \"):\n\t\treturn buildReleaseMessageWithType(item, \"I decided to cook because the losing potion was soy sauce \", vol, chp, frag=frag, postfix=postfix, tl_type='translated')\n\t\t\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-01-26T11:21:52.979051"
 ],
 "kha'sinTH": [
  "def extractKhasinTH(item):\n\t\"\"\"\n\t\"kha'sinTH\"\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "koi-translations.com": [
  "\ndef extractKoiTranslationsCom(item):\n\t'''\n\tParser for 'koi-translations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-02T23:14:40.355719"
 ],
 "korahtls.blogspot.com": [
  "\ndef extractKorahtlsBlogspotCom(item):\n\t'''\n\tParser for 'korahtls.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-13T22:58:51.610493"
 ],
 "ldjam.com": [
  "\ndef extractLdjamCom(item):\n\t'''\n\tParser for 'ldjam.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-22T08:19:38.924302"
 ],
 "leonardpetracci": [
  "\ndef extractLeonardpetracciCom(item):\n\t'''\n\tParser for 'leonardpetracci.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:19.131570"
 ],
 "lightfantasticstories.blogspot.com": [
  "\ndef extractLightfantasticstoriesBlogspotCom(item):\n\t'''\n\tParser for 'lightfantasticstories.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-21T02:22:15.886025"
 ],
 "littlefairyalice.wordpress.com": [
  "def extractLittlefairyaliceWordpressCom(item):\n\t'''\n\tParser for 'littlefairyalice.wordpress.com'\n\t'''\n\n\treturn None",
  "2018-11-04T22:10:03.601034"
 ],
 "loitterforsanity.home.blog": [
  "\ndef extractLoitterforsanityHomeBlog(item):\n\t'''\n\tParser for 'loitterforsanity.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-06T07:21:22.016746"
 ],
 "madsnail.ru": [
  "\ndef extractMadsnailRu(item):\n\t'''\n\tParser for 'madsnail.ru'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn False\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-03-23T05:27:53.614019"
 ],
 "mahou-shoujo-ikusei-keikaku.fandom.com": [
  "\ndef extractMahouShoujoIkuseiKeikakuFandomCom(item):\n\t'''\n\tParser for 'mahou-shoujo-ikusei-keikaku.fandom.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-02-23T13:45:49.094758"
 ],
 "mahou-shoujo-ikusei-keikaku.wikia.com": [
  "def extractMahouShoujoIkuseiKeikakuWikiaCom(item):\n\t'''\n\tParser for 'mahou-shoujo-ikusei-keikaku.wikia.com'\n\t'''\n\treturn None",
  "2018-01-13T07:11:44.447623"
 ],
 "maplefalls.home.blog": [
  "\ndef extractMaplefallsHomeBlog(item):\n\t'''\n\tParser for 'maplefalls.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-22T09:36:09.353222"
 ],
 "mayancalendargirls.com": [
  "def extractMayancalendargirlsCom(item):\n\t'''\n\tParser for 'mayancalendargirls.com'\n\t'''\n\t\n\treturn None",
  "2018-11-04T22:22:23.118916"
 ],
 "mediocretranslations.home.blog": [
  "\ndef extractMediocretranslationsHomeBlog(item):\n\t'''\n\tParser for 'mediocretranslations.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-22T09:11:21.373760"
 ],
 "meixiangsi.home.blog": [
  "\ndef extractMeixiangsiHomeBlog(item):\n\t'''\n\tParser for 'meixiangsi.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-27T12:44:23.976813"
 ],
 "mirutranslations.com": [
  "\ndef extractMirutranslationsCom(item):\n\t'''\n\tParser for 'mirutranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-22T18:27:38.017863"
 ],
 "moomoontl.blogspot.com": [
  "\ndef extractMoomoontlBlogspotCom(item):\n\t'''\n\tParser for 'moomoontl.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-20T10:11:09.244899"
 ],
 "mtlgod.com": [
  "\ndef extractMtlgodCom(item):\n\t'''\n\tParser for 'mtlgod.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-16T05:43:25.526523"
 ],
 "mwmtranslations.com": [
  "\ndef extractMwmtranslationsCom(item):\n\t'''\n\tParser for 'mwmtranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn _buildReleaseMessage(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-07T19:03:21.329830"
 ],
 "mythko.wordpress.com": [
  "\ndef extractMythkoWordpressCom(item):\n\t'''\n\tParser for 'mythko.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-31T08:04:54.506908"
 ],
 "nekocattranslations.blogspot.com": [
  "\ndef extractNekocattranslationsBlogspotCom(item):\n\t'''\n\tParser for 'nekocattranslations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-13T21:44:43.135380"
 ],
 "nenglengli.wordpress.com": [
  "def extractNenglengliWordpressCom(item):\n\t'''\n\tParser for 'nenglengli.wordpress.com'\n\t'''\n\n\treturn None",
  "2018-03-18T06:52:20.180334"
 ],
 "novelasymangasjpo.blogspot.com": [
  "def extractNovelasymangasjpoBlogspotCom(item):\n\t'''\n\tParser for 'novelasymangasjpo.blogspot.com'\n\t'''\n\n\treturn None",
  "2018-03-20T05:48:25.386279"
 ],
 "noveligeras.wordpress.com": [
  "\ndef extractNoveligerasWordpressCom(item):\n\t'''\n\tParser for 'noveligeras.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-12-21T21:16:12.106677"
 ],
 "noveltoread.com": [
  "\ndef extractNoveltoreadCom(item):\n\t'''\n\tParser for 'noveltoread.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-07T06:22:02.941241"
 ],
 "nsiriblog": [
  "\ndef extractNsiriblogWordpressCom(item):\n\t'''\n\tParser for 'nsiriblog.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-20T02:27:25.648209"
 ],
 "panisal": [
  "def extractPanisal(item):\n\t\"\"\"\n\tParser for 'panisal'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "pockysbookshelf.blogspot.com": [
  "\ndef extractPockysbookshelfBlogspotCom(item):\n\t'''\n\tParser for 'pockysbookshelf.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-08T23:55:34.317381"
 ],
 "putttytranslations": [
  "def extractPuttty(item):\n\t\"\"\"\n\t# putttytranslations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif any([('god of thunder' == val.lower()) for val in item['tags']]) and (vol or chp):\n\t\tif ':' in item['title']:\n\t\t\tpostfix = item['title'].split(':', 1)[-1]\n\t\treturn buildReleaseMessageWithType(item, 'God of Thunder', vol, chp, frag=frag, postfix=postfix)\n\tif 'Beseech the devil'.lower() in item['title'].lower():\n\t\treturn buildReleaseMessageWithType(item, 'Beseech the Devil', vol, chp, frag=frag, postfix=postfix)\n\tif 'Goblin' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Goblin', vol, chp, frag=frag, postfix=postfix)\n\tif 'King of the Eternal Night' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'King of the Eternal Night', vol, chp, frag=frag, postfix=postfix)\n\tif 'Martial World' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Martial World', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "qntm.org": [
  "def extractQntmOrg(item):\n\t'''\n\tParser for 'qntm.org'\n\t'''\n\n\treturn None",
  "2018-08-30T05:36:52.177619"
 ],
 "quillofkarnika.wordpress.com": [
  "\ndef extractQuillofkarnikaWordpressCom(item):\n\t'''\n\tParser for 'quillofkarnika.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-16T05:43:34.580444"
 ],
 "radiantmelody.wordpress.com": [
  "\ndef extractRadiantmelodyWordpressCom(item):\n\t'''\n\tParser for 'radiantmelody.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-08T23:54:05.602989"
 ],
 "radianttranslations.com": [
  "\ndef extractRadianttranslationsCom(item):\n\t'''\n\tParser for 'radianttranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-20T05:43:48.933565"
 ],
 "re-monster.fandom.com": [
  "def extractReMonsterFandomCom(item):\n\t'''\n\tParser for 're-monster.fandom.com'\n\t'''\n\t\n\treturn None",
  "2019-01-26T10:44:11.401834"
 ],
 "readermegane.wordpress.com": [
  "def extractReadermeganeWordpressCom(item):\n\t'''\n\tParser for 'readermegane.wordpress.com'\n\t'''\n\n\treturn None",
  "2018-11-04T22:44:50.034922"
 ],
 "relationstories.family.blog": [
  "\ndef extractRelationstoriesFamilyBlog(item):\n\t'''\n\tParser for 'relationstories.family.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-09T05:00:15.757024"
 ],
 "s2ba7sw2d.us-02.live-paas.net": [
  "\ndef extractS2Ba7Sw2DUs02LivePaasNet(item):\n\t'''\n\tParser for 's2ba7sw2d.us-02.live-paas.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-06T15:00:49.753512"
 ],
 "search.nifty.com": [
  "\ndef extractSearchNiftyCom(item):\n\t'''\n\tParser for 'search.nifty.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-06T16:06:03.548843"
 ],
 "shayteatranslations.wordpress.com": [
  "\ndef extractShayteatranslationsWordpressCom(item):\n\t'''\n\tParser for 'shayteatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-26T06:00:19.432835"
 ],
 "sincere.dreamwidth.org": [
  "\ndef extractSincereDreamwidthOrg(item):\n\t'''\n\tParser for 'sincere.dreamwidth.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-10T03:04:41.565286"
 ],
 "sites.google.com": [
  "\ndef extractSitesGoogleCom(item):\n\t'''\n\tParser for 'sites.google.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-02T03:52:08.103126"
 ],
 "slothtranslationsblog.com": [
  "\ndef extractSlothtranslationsblogCom(item):\n\t'''\n\tParser for 'slothtranslationsblog.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-12T10:44:31.750843"
 ],
 "soaringtl.wordpress.com": [
  "def extractSoaringtlWordpressCom(item):\n\t'''\n\tParser for 'soaringtl.wordpress.com'\n\t'''\n\treturn None",
  "2019-06-17T05:35:00.062389"
 ],
 "sousaku.blog": [
  "\ndef extractSousakuBlog(item):\n\t'''\n\tParser for 'sousaku.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-04T03:42:07.201147"
 ],
 "sporadicmtl.weebly.com": [
  "\ndef extractSporadicmtlWeeblyCom(item):\n\t'''\n\tParser for 'sporadicmtl.weebly.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-20T10:14:26.863772"
 ],
 "stardancer.org": [
  "\ndef extractStardancerOrg(item):\n\t'''\n\tParser for 'stardancer.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-27T11:41:23.242363"
 ],
 "streetofeyes.com": [
  "\ndef extractStreetofeyesCom(item):\n\t'''\n\tParser for 'streetofeyes.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-22T08:19:39.364999"
 ],
 "sumtlman.wordpress.com": [
  "\ndef extractSumtlmanWordpressCom(item):\n\t'''\n\tParser for 'sumtlman.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-13T21:44:34.240369"
 ],
 "t e a \u2013 q u i l a": [
  "def extractTeaquilashotWordpressCom(item):\n\t'''\n\tParser for 'teaquilashot.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('A Love So Beautiful (\u81f4\u6211\u4eec\u5355\u7eaf\u7684\u5c0f\u7f8e\u597d)',  'A Love So Beautiful',                           'translated'),\n\t\t('Tensei Shoujo no Rirekisho',                'Tensei Shoujo no Rirekisho',                    'translated'),\n\t\t('Master of Dungeon',                         'Master of Dungeon',                             'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttagmap = [\n\t\t('A Love So Beautiful',       'A Love So Beautiful',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-05-04T05:33:45.409477"
 ],
 "tap-trans \u00bb tappity tappity tap.": [
  "def extractTaptrans(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\tif 'Doujinshi' in item['tags']:\n\t\treturn None\n\t\t\n\treturn False",
  "2017-05-05T08:59:28.714022"
 ],
 "tekuteku": [
  "def extractTekuteku(item):\n\t\"\"\"\n\tParser for 'tekuteku'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "teresagarciaserials.weebly.com": [
  "\ndef extractTeresagarciaserialsWeeblyCom(item):\n\t'''\n\tParser for 'teresagarciaserials.weebly.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-03T07:56:42.722821"
 ],
 "themanmademessiah.com": [
  "\ndef extractThemanmademessiahCom(item):\n\t'''\n\tParser for 'themanmademessiah.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-20T14:14:08.760706"
 ],
 "thenewscifi.com": [
  "def extractThenewscifiCom(item):\n\t'''\n\tParser for 'thenewscifi.com'\n\t'''\n\tif 'film' in item['tags']:\n\t\treturn None\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:43:40.150524"
 ],
 "thenextworldgame.com": [
  "\ndef extractThenextworldgameCom(item):\n\t'''\n\tParser for 'thenextworldgame.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-22T08:19:39.741433"
 ],
 "tierynbe.wordpress.com": [
  "def extractTierynbeWordpressCom(item):\n\t'''\n\tParser for 'tierynbe.wordpress.com'\n\t'''\n\treturn None",
  "2019-01-05T08:29:30.904190"
 ],
 "tiffybook.com": [
  "def extractCrazyForHENovels(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) and not 'preview' in item['title']:\n\t\treturn False\n\tchp = frag\n\tfrag = None\n\tif '\u5982\u679c\u8717\u725b\u6709\u7231\u60c5 When A Snail Loves \u2013 \u4e01\u58a8 Ding Mo (HE)(Incomplete)' in item['tags'] or 'When a snail loves' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'When A Snail Loves', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "tiffybook.wordpress.com": [
  "\ndef extractTiffybookWordpressCom(item):\n\t'''\n\tParser for 'tiffybook.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-02-06T07:29:48.403557"
 ],
 "tiraas.net": [
  "\ndef extractTiraasNet(item):\n\t'''\n\tParser for 'tiraas.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-31T09:57:08.136930"
 ],
 "tlbasil.com": [
  "\ndef extractTlbasilCom(item):\n\t'''\n\tParser for 'tlbasil.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-04T05:30:00.349473"
 ],
 "tomotranslations.com": [
  "\ndef extractTomotranslationsCom(item):\n\t'''\n\tParser for 'tomotranslations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-07T00:10:58.651471"
 ],
 "trackest.blog": [
  "\ndef extractTrackestBlog(item):\n\t'''\n\tParser for 'trackest.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-24T06:46:04.189800"
 ],
 "tracking.feedpress.it": [
  "\ndef extractTrackingFeedpressIt(item):\n\t'''\n\tParser for 'tracking.feedpress.it'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-09T09:51:02.633776"
 ],
 "translasi.sanusi.me": [
  "\ndef extractTranslasiSanusiMe(item):\n\t'''\n\tParser for 'translasi.sanusi.me'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-24T06:47:32.564253"
 ],
 "ttscorner999728030.wordpress.com": [
  "def extractTtscorner999728030WordpressCom(item):\n\t'''\n\tParser for 'ttscorner999728030.wordpress.com'\n\t'''\n\n\treturn None",
  "2018-12-20T06:22:38.150416"
 ],
 "twomorefreethoughts.com": [
  "\ndef extractTwomorefreethoughtsCom(item):\n\t'''\n\tParser for 'twomorefreethoughts.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-02-15T06:09:48.981819"
 ],
 "v7 Silent": [
  "def extractV7Silent(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'The Demon Queen is My Fianc\u00e9e!' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'The Demon Queen is My Fianc\u00e9e!', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\tif 'Getcha Skills' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Getcha Skills', vol, chp, frag=frag, postfix=postfix, tl_type='oel')\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "webkingsga.us": [
  "\ndef extractWebkingsgaUs(item):\n\t'''\n\tParser for 'webkingsga.us'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-07-07T21:58:05.655666"
 ],
 "weedsroyalroad": [
  "def extractWeedsroyalroad(item):\n\t\"\"\"\n\tParser for 'weedsroyalroad'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "whathasjesusdone.wordpress.com": [
  "def extractWhathasjesusdoneWordpressCom(item):\n\t'''\n\tParser for 'whathasjesusdone.wordpress.com'\n\t'''\n\n\treturn None",
  "2018-02-24T10:53:56.052283"
 ],
 "wujizun.com": [
  "\ndef extractWujizunCom(item):\n\t'''\n\tParser for 'wujizun.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-17T21:37:38.449031"
 ],
 "wuxiasociety.freeforums.net": [
  "def extractWuxiasocietyFreeforumsNet(item):\n\t'''\n\tParser for 'wuxiasociety.freeforums.net'\n\t'''\n\treturn None",
  "2018-11-26T07:37:15.086331"
 ],
 "www.2slow2latemtl.icu": [
  "\ndef extractWww2Slow2LatemtlIcu(item):\n\t'''\n\tParser for 'www.2slow2latemtl.icu'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-14T17:16:24.833737"
 ],
 "www.aarkayenterprise.com": [
  "\ndef extractWwwAarkayenterpriseCom(item):\n\t'''\n\tParser for 'www.aarkayenterprise.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-22T03:44:02.550242"
 ],
 "www.adamhills.net": [
  "\ndef extractWwwAdamhillsNet(item):\n\t'''\n\tParser for 'www.adamhills.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-18T07:43:08.561652"
 ],
 "www.addergoole.com": [
  "\ndef extractWwwAddergooleCom(item):\n\t'''\n\tParser for 'www.addergoole.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-24T10:07:40.553476"
 ],
 "www.alphawaveentertainment.com": [
  "\ndef extractWwwAlphawaveentertainmentCom(item):\n\t'''\n\tParser for 'www.alphawaveentertainment.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-22T08:21:13.390706"
 ],
 "www.arcgames.com": [
  "\ndef extractWwwArcgamesCom(item):\n\t'''\n\tParser for 'www.arcgames.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-27T18:15:06.124216"
 ],
 "www.bestories.net": [
  "\ndef extractWwwBestoriesNet(item):\n\t'''\n\tParser for 'www.bestories.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-01T04:36:50.248803"
 ],
 "www.bestwebnovel.com": [
  "def extractWwwBestwebnovelCom(item):\n\t'''\n\tParser for 'www.bestwebnovel.com'\n\t'''\n\n\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-08-06T02:17:37.515050"
 ],
 "www.betwixtedbutterfly.com": [
  "\ndef extractWwwBetwixtedbutterflyCom(item):\n\t'''\n\tParser for 'www.betwixtedbutterfly.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-12T17:06:12.858007"
 ],
 "www.eodtranslations.asia": [
  "\ndef extractWwwEodtranslationsAsia(item):\n\t'''\n\tParser for 'www.eodtranslations.asia'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-24T06:46:20.617278"
 ],
 "www.evilations.com": [
  "\ndef extractWwwEvilationsCom(item):\n\t'''\n\tParser for 'www.evilations.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-23T14:50:06.168780"
 ],
 "www.heronovel.net": [
  "\ndef extractWwwHeronovelNet(item):\n\t'''\n\tParser for 'www.heronovel.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-11T03:41:42.690644"
 ],
 "www.jcafe24.net": [
  "def extractWwwJcafe24Net(item):\n\t'''\n\tParser for 'www.jcafe24.net'\n\t'''\n\n\treturn None",
  "2018-11-26T02:38:12.861115"
 ],
 "www.jukepop.com": [
  "\ndef extractWwwJukepopCom(item):\n\t'''\n\tParser for 'www.jukepop.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-05T05:54:18.328253"
 ],
 "www.kaitoranslation.web.id": [
  "\ndef extractWwwKaitoranslationWebId(item):\n\t'''\n\tParser for 'www.kaitoranslation.web.id'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-17T21:59:10.326696"
 ],
 "www.kapitbisig.com": [
  "\ndef extractWwwKapitbisigCom(item):\n\t'''\n\tParser for 'www.kapitbisig.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-02T00:06:19.936259"
 ],
 "www.kendalblack.com": [
  "\ndef extractWwwKendalblackCom(item):\n\t'''\n\tParser for 'www.kendalblack.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-29T02:24:03.035068"
 ],
 "www.lionmask.pro": [
  "\ndef extractWwwLionmaskPro(item):\n\t'''\n\tParser for 'www.lionmask.pro'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-24T06:49:56.409960"
 ],
 "www.literotica.com": [
  "\ndef extractWwwLiteroticaCom(item):\n\t'''\n\tParser for 'www.literotica.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-26T11:03:09.167087"
 ],
 "www.machineslicedbread.xyz": [
  "\ndef extractWwwMachineslicedbreadXyz(item):\n\t'''\n\tParser for 'www.machineslicedbread.xyz'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-24T06:46:05.137083"
 ],
 "www.malevolencegame.com": [
  "\ndef extractWwwMalevolencegameCom(item):\n\t'''\n\tParser for 'www.malevolencegame.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-22T08:21:13.861699"
 ],
 "www.mangoxcat.com": [
  "\ndef extractWwwMangoxcatCom(item):\n\t'''\n\tParser for 'www.mangoxcat.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-29T22:09:54.352082"
 ],
 "www.mauritius-transport.com": [
  "\ndef extractWwwMauritiusTransportCom(item):\n\t'''\n\tParser for 'www.mauritius-transport.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-11T17:24:57.700625"
 ],
 "www.miforcampuspolice.com": [
  "\ndef extractWwwMiforcampuspoliceCom(item):\n\t'''\n\tParser for 'www.miforcampuspolice.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-09-24T12:40:04.745566"
 ],
 "www.momopeachtranslation.club": [
  "\ndef extractWwwMomopeachtranslationClub(item):\n\t'''\n\tParser for 'www.momopeachtranslation.club'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-09T08:50:55.513062"
 ],
 "www.neo-dir.pw": [
  "\ndef extractWwwNeoDirPw(item):\n\t'''\n\tParser for 'www.neo-dir.pw'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-24T06:46:55.383276"
 ],
 "www.nepustation.com": [
  "def extractNepustation(item):\n\t\"\"\"\n\t'www.nepustation.com'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "www.nifty.com": [
  "\ndef extractWwwNiftyCom(item):\n\t'''\n\tParser for 'www.nifty.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-06T14:23:16.691239"
 ],
 "www.nifty.org": [
  "\ndef extractWwwNiftyOrg(item):\n\t'''\n\tParser for 'www.nifty.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-09-15T09:23:10.049096"
 ],
 "www.oyensblog.com": [
  "\ndef extractWwwOyensblogCom(item):\n\t'''\n\tParser for 'www.oyensblog.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-09T05:00:56.052968"
 ],
 "www.pridesfamiliarsmaidens.com": [
  "def extractPridesFamiliarsMaidens(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "www.scp-wiki.net": [
  "\ndef extractWwwScpWikiNet(item):\n\t'''\n\tParser for 'www.scp-wiki.net'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-16T17:05:01.544240"
 ],
 "www.soltarination.org": [
  "def extractSoltarination(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "www.taleworlds.com": [
  "\ndef extractWwwTaleworldsCom(item):\n\t'''\n\tParser for 'www.taleworlds.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-01-22T08:21:13.730627"
 ],
 "www.tgstorytime.com": [
  "\ndef extractWwwTgstorytimeCom(item):\n\t'''\n\tParser for 'www.tgstorytime.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-07-31T10:21:36.808776"
 ],
 "www.thekingdomsofevil.com": [
  "\ndef extractWwwThekingdomsofevilCom(item):\n\t'''\n\tParser for 'www.thekingdomsofevil.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-11-17T21:51:26.296041"
 ],
 "www.wastedproductions.com": [
  "\ndef extractWwwWastedproductionsCom(item):\n\t'''\n\tParser for 'www.wastedproductions.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-10-16T04:06:27.442284"
 ],
 "www.webnovels.me": [
  "\ndef extractWwwWebnovelsMe(item):\n\t'''\n\tParser for 'www.webnovels.me'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-23T02:44:31.136537"
 ],
 "www.yasashiinosekaiwa.com": [
  "\ndef extractWwwYasashiinosekaiwaCom(item):\n\t'''\n\tParser for 'www.yasashiinosekaiwa.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-09T04:59:54.868710"
 ],
 "www.zxzxzx.info": [
  "\ndef extractWwwZxzxzxInfo(item):\n\t'''\n\tParser for 'www.zxzxzx.info'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2017-11-24T06:47:22.947573"
 ],
 "xiaomushroom.home.blog": [
  "\ndef extractXiaomushroomHomeBlog(item):\n\t'''\n\tParser for 'xiaomushroom.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-13T22:58:54.192889"
 ],
 "xmtl.org": [
  "\ndef extractXmtlOrg(item):\n\t'''\n\tParser for 'xmtl.org'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-02T19:01:16.635804"
 ],
 "xtrawhippedcream.blog": [
  "\ndef extractXtrawhippedcreamBlog(item):\n\t'''\n\tParser for 'xtrawhippedcream.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-12-25T04:42:55.519340"
 ],
 "yamtl": [
  "def extractYamtl(item):\n\t\"\"\"\n\t'yamtl'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "yanyantls.wordpress.com": [
  "\ndef extractYanyantlsWordpressCom(item):\n\t'''\n\tParser for 'yanyantls.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-02T23:01:29.251472"
 ],
 "yhatranslation.home.blog": [
  "\ndef extractYhatranslationHomeBlog(item):\n\t'''\n\tParser for 'yhatranslation.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-06-02T23:14:38.259158"
 ],
 "youkojitsu.wordpress.com": [
  "\ndef extractYoukojitsuWordpressCom(item):\n\t'''\n\tParser for 'youkojitsu.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-10-04T03:48:41.381900"
 ],
 "youtsubasilver's Blog": [
  "def extractYoutsubasilversBlog(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "yuNS Translations": [
  "def extractYuNSTranslations(item):\n\t\"\"\"\n\t'yuNS Translations'\n\t\"\"\"\n\tif \"(Manga)\" in item['title']:\n\t\treturn None\n\t\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\n\ttitlemap = [\n\t\t('Akashic Records of the Bastard Magical Instructor',  'Akashic Records of the Bastard Magical Instructor',      'translated'),\n\t\t('Akashic Records of the Bastard Magic Instructor',    'Akashic Records of the Bastard Magical Instructor',      'translated'),\n\t\t('Gifting this Wonderful World with Blessings!',       'Gifting this Wonderful World with Blessings!',           'translated'),\n\t\t('Gifting this Wonderful Worlds with Explosions!',     'Gifting this Wonderful Worlds with Explosions!',         'translated'),\n\t\t('I Shaved. Then I Brought a High School Girl Home',     'I Shaved. Then I Brought a High School Girl Home',         'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\n\treturn False",
  "2019-01-26T15:03:47.030377"
 ],
 "yuenmetrans.wordpress.com": [
  "\ndef extractYuenmetransWordpressCom(item):\n\t'''\n\tParser for 'yuenmetrans.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-03-13T22:59:16.987061"
 ],
 "yukinotane.wordpress.com": [
  "\ndef extractYukinotaneWordpressCom(item):\n\t'''\n\tParser for 'yukinotane.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-17T00:07:44.473401"
 ],
 "yuriworld.000webhostapp.com": [
  "\ndef extractYuriworld000WebhostappCom(item):\n\t'''\n\tParser for 'yuriworld.000webhostapp.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-04-08T23:54:00.837847"
 ],
 "zer0translations.blogspot.com": [
  "\ndef extractZer0TranslationsBlogspotCom(item):\n\t'''\n\tParser for 'zer0translations.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-22T02:36:14.385881"
 ],
 "zlatamtl.home.blog": [
  "\ndef extractZlatamtlHomeBlog(item):\n\t'''\n\tParser for 'zlatamtl.home.blog'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2019-05-23T06:34:23.644213"
 ],
 "~Taffy Translations~": [
  "def extractTaffyTranslations(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\t\t\n\ttagmap = [\n\t\t('CCM',               'Close Combat Mage',                 'translated'),\n\t\t('CC',                'Cheating Craft',                    'translated'),\n\t\t('KSM',               'Key of Sunken Moon',                'translated'),\n\t\t('YBCB',              'Yu Brothers\\' Case Book',           'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\treturn False",
  "2019-02-06T04:21:45.482429"
 ],
 "\u0420\u0415\u0414 \u0412\u0418\u0422\u0415\u0417\u041e\u0412\u0410 \u041b\u0423\u041d\u0410\u0414\u0418\u0410 \u0411\u0418\u0411\u041b\u0418\u041e\u0422\u0415\u041a\u0410": [
  "def extractKnightsoflunadiaWordpressCom(item):\n\t'''\n\tParser for 'knightsoflunadia.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"OR\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"Ouroboros Records\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False",
  "2017-06-15T05:51:47.347997"
 ],
 "\u211dean\u3068ann@": [
  "def extractReantoAnna(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Only I am not attacked in a world over runned by zombies' in item['tags'] or 'Chapter' in item['title'] and len(item['tags']) == 1 and 'Uncategorized' in item['tags'\n\t    ]:\n\t\treturn buildReleaseMessageWithType(item, 'Only I am not attacked in a world overflowing with zombies', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u2665 yenney \u2665": [
  "def extractYenney(item):\n\t\"\"\"\n\tParser for '\u2665 yenney \u2665'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u2731||| Straying away\u2026\u3002": [
  "def extractStrayingAway(item):\n\t\"\"\"\n\tParser for '\u2731||| Straying away\u2026\u3002'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u300a\u4e0d\u6cd5\u4e4b\u5f92\u300b Lawless Gangster": [
  "def extract\u4e0d\u6cd5\u4e4b\u5f92LawlessGangster(item):\n\t\"\"\"\n\t'\u300a\u4e0d\u6cd5\u4e4b\u5f92\u300b Lawless Gangster'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('Lawless Gangster',       'Lawless Gangster', 'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\treturn False",
  "2017-04-07T04:17:23.758642"
 ],
 "\u300c\u3000\u300d": [
  "def extractU3000(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u300e\u66f8\u6ac3\u300f": [
  "def extract\u66f8\u6ac3(item):\n\t\"\"\"\n\t\u300e\u66f8\u6ac3\u300f\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('With One Smile, the Sword Tramples the Mushroom',       'With One Smile, the Sword Tramples the Mushroom',                      'translated'),\n\t\t('NGSB',                                                  'There\u2019s No God in Show Business',                                      'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\t\t\n\t\t\n\treturn False",
  "2019-02-10T03:38:17.599953"
 ],
 "\u304a\u5144\u3061\u3083\u3093\u3001\u3084\u3081\u3066\u3047\uff01": [
  "def extractOniichanyamete(item):\n\t\"\"\"\n\t\u304a\u5144\u3061\u3083\u3093\u3001\u3084\u3081\u3066\u3047\uff01 / Onii-chan Yamete\n\t\"\"\"\n\t\n\tif 'Manga' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\ttagmap = [\n\t\t('The Bathroom Goddess',                  'The Bathroom Goddess',                              'translated'),\n\t\t('a wild boss appeared',                  'A Wild Boss Appeared',                              'translated'),\n\t\t('The Girl Who Bore the Flame Ring',      'The Girl Who Bore the Flame Ring',                  'translated'),\n\t\t('Debt Girl',                             'The Noble Girl Living in Debt',                     'translated'),\n\t\t(\"I'm the Final Boss!?\",                  \"I'm the Final Boss!?\",                              'oel'),\n\t\t('Tiger Story',                           'Tiger Story',                                       'oel'),\n\t\t('Vampire Nap',                           'The Reincarnated Vampire Wants an Afternoon Nap',   'translated'),\n\t\t('Haunted',                               'Haunted Duke\u2019s Daughter',                           'translated'),\n\t\t('The Cute Cook',                         'The Cute Cook',                                     'translated'),\n\t\t('Arachne',                               'Arachne',                                           'translated'),\n\t\t('bunny girl',                            'Apotheosis of a Demon \u2013 A Monster Evolution Story', 'translated'),\n\t\t('Kunoichi',                              'The Pseudo-Kunoichi from Another World',            'translated'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\tif 'Jashin Average' in item['title'] or 'Cthulhu Average' in item['title'] or 'Evil God Average' in item['tags'] or 'jashin' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Evil God Average', vol, chp, frag=frag, postfix=postfix)\n\tif 'Tilea\u2019s Worries' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, \"Tilea's Worries\", vol, chp, postfix=postfix)\n\tif 'Tilea' in item['tags'] and 'Raid on the Capital' in item['title'] and not vol:\n\t\treturn buildReleaseMessageWithType(item, \"Tilea's Worries\", 2, chp, postfix=postfix)\n\tif 'Tilea' in item['tags'] and 'Turf War' in item['title'] and not vol:\n\t\treturn buildReleaseMessageWithType(item, \"Tilea's Worries\", 3, chp, postfix=postfix)\n\tif 'Kenkyo Kenjitu' in item['tags'] or 'Reika-sama' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, 'Kenkyo Kenjitu', vol, chp, postfix=postfix)\n\tif 'My Sister the Heroine and I the Villainess' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'My Sister the Heroine, and I the Villainess', vol, chp, postfix=postfix)\n\tif 'I\u2019m Back in the Other World' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, \"I'm Back in the Other World\", vol, chp)\n\tif 'Kazuha Axeplant\u2019s Third Adventure:' in item['title']:\n\t\treturn buildReleaseMessageWithType(item, \"Kazuha Axeplant's Third Adventure\", vol, chp)\n\telif 'otoburi' in item['tags'] or 'Otoburi' in item['tags']:\n\t\tvolume_lut = {'3 years old': 1, '5 years old': 1, '6 years old': 1, '7 years old': 1, '12 years old': 1, '14 years old': 1, '15 years old': 1, '16 years old': 1,\n\t\t    'School Entrance Ceremony': 2, 'First Year First Semester': 2, '1st Year 1st Semester': 2, 'Summer Vacation': 3, 'Summer Vacation 2nd Half': 3,\n\t\t    'Summer Vacation Last': 3, 'First Year Second Semester': 4, 'Recuperating?': 5, 'Wedding Preparations?': 5, 'Newlywed Life': 5, 'Cleanup': 6,\n\t\t    'My Lord\u2019s Engagement': 6, 'The Winter is Almost Here': 6, 'Experiments and Preparations': 6, 'Engagement Party': 6, 'In the Middle of a Fight?': 7,\n\t\t    'In the Middle of Reflecting': 7}\n\t\tfor chp_key in volume_lut.keys():\n\t\t\tif chp_key.lower() in item['title'].lower():\n\t\t\t\treturn buildReleaseMessageWithType(item, 'Otome Game no Burikko Akuyaku Onna wa Mahou Otaku ni Natta', volume_lut[chp_key], chp)\n\treturn False",
  "2019-01-05T07:02:39.579284"
 ],
 "\u304a\u91d1\u304c\u6b32\u3057\u3044": [
  "def extractOkanegahoshiiWordpressCom(item):\n\t'''\n\tParser for 'okanegahoshii.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('29-sai',       '29-Years-Old Bachelor Was\u2026 Brought to a Different World to Live Freely',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-02-24T10:45:55.253752"
 ],
 "\u30a2\u30ab\u30b7\u30a2 Translations": [
  "def extractAkashiatranslationsWordpressCom(item):\n\t'''\n\tParser for 'akashiatranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('I became the strongest',       'Hazure Waku no \u3010Joutai Ijou Sukiru\u3011de Saikyou ni Natta Ore ga Subete wo Juurin suru made',                      'translated'),\n\t\t('I got stranded',               'Mikai no Wakusei ni Fujichaku Shi ta Kedo Kaere Sou ni Nai node Jingai Harem wo Mezashite mi Masu',               'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-03-22T05:06:01.373320"
 ],
 "\u30fe(\u3002\uffe3\u25a1\uffe3)\uff82": [
  "def extractAngry(item):\n\t\"\"\"\n\t# '\u30fe(\u3002\uffe3\u25a1\uffe3)\uff82'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u4e00\u671f\u4e00\u4f1a, \u4e07\u6b73!": [
  "def extract\u4e00\u671f\u4e00\u4f1a\u4e07\u6b73(item):\n\t\"\"\"\n\t# '\u4e00\u671f\u4e00\u4f1a, \u4e07\u6b73!'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u4e09\u676f\u51c9\u8336": [
  "def extractThreecupsynWordpressCom(item):\n\t'''\n\tParser for 'threecupsyn.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Villain\\'s White Lotus Halo',       'Villain\\'s White Lotus Halo',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-07T05:45:07.389432"
 ],
 "\u4e2d\u7ffb\u82f1\u5716\u66f8\u9928 Translations": [
  "def extractTuShuGuan(item):\n\t\"\"\"\n\t# \u4e2d\u7ffb\u82f1\u5716\u66f8\u9928 Translations\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'He Jing Kunlun' in item['tags'] and (vol or chp or postfix):\n\t\treturn buildReleaseMessageWithType(item, 'The Crane Startles Kunlun', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u4eba\u89c1\u4eba\u7231\u7684Sushi\u516c\u4e3b": [
  "def extract\u4eba\u89c1\u4eba\u7231\u7684Sushi\u516c\u4e3b(item):\n\t\"\"\"\n\tParser for '\u4eba\u89c1\u4eba\u7231\u7684Sushi\u516c\u4e3b'\n\t\"\"\"\n\treturn None",
  "2017-07-23T07:37:43.919673"
 ],
 "\u4f55\u3082\u5206\u304b\u3089\u306a\u3044\u3051\u3069": [
  "def extractWwaraitaiWordpressCom(item):\n\t'''\n\tParser for 'wwaraitai.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\ttitlemap = [\n\t\t('Given That I\u2019ve Become a Villainess, I\u2019d Like to Live Freely',  'Given That I\\'ve Become a Villainess, I\u2019d Like to Live Freely',      'translated'),\n\t\t('Master of Dungeon',                                             'Master of Dungeon',                                                  'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-02-16T04:27:41.742677"
 ],
 "\u5343\u9759\u661f\u2606\u5f61": [
  "\ndef extractThousandsilentstarsWordpressCom(item):\n\t'''\n\tParser for 'thousandsilentstars.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-05-10T04:03:33.023125"
 ],
 "\u5922\u898b\u308b\u4e16\u754c": [
  "def extract\u5922\u898b\u308b\u4e16\u754c(item):\n\t\"\"\"\n\tParser for '\u5922\u898b\u308b\u4e16\u754c'\n\t\"\"\"\n\t\n\tif 'Otome Games' in item['tags']:\n\t\treturn None\n\tif 'Drama CDs' in item['tags']:\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('Miss Appraiser and Gallery Demon',       'Miss Appraiser and Gallery Demon',                      'translated'), \n\t\t('Light Beyond Road\\'s End',               'Light Beyond (LN)',                                     'translated'), \n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\t\n\treturn False",
  "2019-01-21T23:50:40.904185"
 ],
 "\u5929\u624d\u5275\u9020\u3059\u306a\u308f\u3061\u767e\u5408": [
  "def extract\u5929\u624d\u5275\u9020\u3059\u306a\u308f\u3061\u767e\u5408(item):\n\t\"\"\"\n\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u597d\u304d\uff0e\uff0e\uff0e\u306a\u306e\u304b\u306a\u3041": [
  "\ndef extractSukinanokanaaWordpressCom(item):\n\t'''\n\tParser for 'sukinanokanaa.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-09-26T08:37:40.333140"
 ],
 "\u5bbf\u547d\u306e\u4e8c\u4eba": [
  "def extract\u5bbf\u547d\u306e\u4e8c\u4eba(item):\n\t\"\"\"\n\tParser for '\u5bbf\u547d\u306e\u4e8c\u4eba'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u5c81\u5bd2\u4e09\u53cb": [
  "\ndef extractSuihansanyouWordpressCom(item):\n\t'''\n\tParser for 'suihansanyou.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-31T06:05:26.754706"
 ],
 "\u611b\u4e3b\u306e\u7ffb\u8a33  Ainushi Translations": [
  "def extract\u611b\u4e3b\u306e\u7ffb\u8a33AinushiTranslations(item):\n\t\"\"\"\n\t'\u611b\u4e3b\u306e\u7ffb\u8a33  Ainushi Translations'\n\t\"\"\"\n\tif 'Oneshots' in item['tags']:\n\t\treturn None\n\tif 'Manhua' in item['tags']:\n\t\treturn None\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\t\t\n\t\t\n\ttagmap = [\n\t\t('The prince has all kinds of strange hobbies',                      'The prince has all kinds of strange hobbies',                                'translated'),\n\t\t('Masculine Puppy',                                                  'Masculine Puppy',                                                            'translated'),\n\t\t('Waiting Upon You',                                                 'Waiting Upon You',                                                           'translated'),\n\t\t('Stop Bothering Me, Emperor',                                       'Stop Bothering Me, Emperor',                                                 'translated'),\n\t\t('Midnight Cinderella',                                              'Midnight Cinderella',                                                        'translated'),\n\t\t('Silent Reading',                                                   'Silent Reading',                                                             'translated'),\n\t\t('Qizi',                                                             'Qizi',                                                                       'translated'),\n\t\t('Open Sea',                                                         'Open Sea',                                                                   'translated'),\n\t\t('Estrus Gymnasium',                                                 'Estrus Gymnasium',                                                           'translated'),\n\t\t('Thousand Autumns',                                                 'Thousand Autumns',                                                           'translated'),\n\t\t('Broken-Winged Angel',                                              'Broken-Winged Angel',                                                        'translated'),\n\t\t('Maid Kara Haha ni Narimashita',                                    'Maid Kara Haha ni Narimashita',                                              'translated'),\n\t\t('maou no utsuwa',                                                   'Maou no Utsuwa',                                                             'translated'),\n\t\t('Ossan Idol',                                                       'Ossan (36) Ga Idol Ni Naru Hanashi',                                         'translated'),\n\t\t('Buy One Get One Free',                                             '$10 Trillion Wife, Buy One Get One Free',                                    'translated'),\n\t\t('happy life',                                                       'Tensei Shitanode Tsugi Koso wa Shiawasena Jinsei wo Tsukande Misemashou',    'translated'),\n\t\t('Monogusana Kenja',                                                 'Monogusana Kenja',                                                           'translated'),\n\t\t('Loner and Juliet',                                                 'Loner and Juliet',                                                           'translated'),\n\t\t('Great God',                                                        'Great God, I\\'ll Support You',                                               'translated'),\n\t\t('Heroine Sister',                                                   'My Sister the Heroine, and I the Villainess',                                'translated'),\n\t\t('Mob',                                                              'Mob\u2026 Sore mo waki mob no hazu nan desu kedo!?',                              'translated'),\n\t\t('Re: Hero no Kaa-san',                                              'Re: Hero no Kaa-san',                                                        'translated'),\n\t\t('guardian',                                                         'Guardian',                                                                   'translated'),\n\t\t('Maou no Ki',                                                       'Maou no Ki',                                                                 'translated'),\n\t\t('True or False',                                                    'True Or False? ~ Love Game? No, I Will Not Participate In The Competition',  'translated'),\n\t\t('Crying in the Night Unseen',                                       'Crying in the Night Unseen',                                                 'translated'),\n\t\t('Flowers Reflecting The Sky',                                       'Flowers Reflecting The Sky',                                                 'translated'),\n\t\t('Debt Girl',                                                        'The Noble Girl Living in Debt',                                              'translated'),\n\t\t('The Reader and Protagonist Definitely Have to Be in True Love',    'The Reader and Protagonist Definitely Have to Be in True Love',              'translated'),\n\t\t('As the Minor Gay Love Rival in Het Novels',                        'As the Minor Gay Love Rival in Het Novels',                                  'translated'),\n\t\t('Divorce: This is a Trivial Matter',                                'Divorce: This is a Trivial Matter',                                          'translated'),\n\t\t('KtBC',                                                             'Kiss the Black Cat',                                                         'translated'),\n\t\t\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\t\t\n\t\t\n\treturn False",
  "2018-07-22T09:03:41.125654"
 ],
 "\u6728\u662f\u4f0a\u8bf4": [
  "\ndef extractWwwWiseclockCa(item):\n\t'''\n\tParser for 'www.wiseclock.ca'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\tif \"WATTT\" in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, \"WATTT\", vol, chp, frag=frag, postfix=postfix)\n\n\treturn False\n\t",
  "2017-08-31T06:04:43.577859"
 ],
 "\u672a\u5b8c\u5f85\u7eed": [
  "def extract\u672a\u5b8c\u5f85\u7eed(item):\n\t\"\"\"\n\tParser for '\u672a\u5b8c\u5f85\u7eed'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u6b32\u3057\u3044 Translation": [
  "def extractHoshiitranslationWordpressCom(item):\n\t'''\n\tParser for 'hoshiitranslation.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('Rebirth Junior High School',       'Rebirth Junior High School: The Exceling Top Student Goddess',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-11-23T07:15:51.013691"
 ],
 "\u6b62\u3081\u306a\u3044\u3067\u3001\u304a\u59c9\u3055\u307e\u2026": [
  "def extract\u6b62\u3081\u306a\u3044\u3067\u304a\u59c9\u3055\u307e(item):\n\t\"\"\"\n\tParser for '\u6b62\u3081\u306a\u3044\u3067\u3001\u304a\u59c9\u3055\u307e\u2026'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u7761\u7720\u4e2d\u6bd2": [
  "def extract\u7761\u7720\u4e2d\u6bd2(item):\n\t\"\"\"\n\t# '\u7761\u7720\u4e2d\u6bd2'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u8309\u8389\u82b1\u306e\u72ec\u308a\u8a00": [
  "\ndef extractAmethysticallyWordpressCom(item):\n\t'''\n\tParser for 'amethystically.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False\n\t",
  "2018-02-24T08:56:36.339055"
 ],
 "\u8d70\u99ac\u706f": [
  "def extractEchoesfromanotherlifeBlogspotCom(item):\n\t'''\n\tParser for 'echoesfromanotherlife.blogspot.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('golden dawn',       'Golden Dawn',                      'translated'),\n\t\t('PRC',       'PRC',                      'translated'),\n\t\t('Loiterous', 'Loiterous',                'oel'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2019-06-16T08:14:28.150865"
 ],
 "\u8f1d\u304f\u4e16\u754c": [
  "def extract\u8f1d\u304f\u4e16\u754c(item):\n\t\"\"\"\n\t# '\u8f1d\u304f\u4e16\u754c'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u93e1\u50cf\u7ffb\u8a33": [
  "def extract\u93e1\u50cf\u7ffb\u8a33(item):\n\t\"\"\"\n\tParser for '\u93e1\u50cf\u7ffb\u8a33'\n\t\"\"\"\n\t\n\tif 'anime' in str(item['tags']).lower():\n\t\treturn None\n\t\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\n\ttagmap = [\n\t\t('sodachi fiasco',       'Orokamonogatari - Sodachi Fiasco',                      'translated'),\n\t\t('karen ogre',           'Wazamonogatari - Karen Ogre',                           'translated'),\n\t\t('shinobu mustard',      'Shinobumonogatari - Shinobu Mustard',                   'translated'),\n\t\t('tsubasa sleeping',     'Wazamonogatari - Tsubasa Sleeping',                     'translated'),\n\t\t('acerola bon appetit',  'Wazamonogatari - Acerola Bon Appetit',                  'translated'),\n\t\t('tsudzura human',       'Musubimonogatari - Tsudzura Human',                     'translated'),\n\t]\n\n\tfor tagname, name, tl_type in tagmap:\n\t\tif tagname in item['tags']:\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\ttitlemap = [\n\t\t('jinrui saikyou no netsuai',        'Jinrui Saikyou no Netsuai',         'translated'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "2018-07-18T05:24:06.981414"
 ],
 "\u9592\u4eba \u2022 O N L I N E": [
  "def extract\u9592\u4ebaONLINE(item):\n\t\"\"\"\n\t\u9592\u4eba \u2022 O N L I N E\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol or frag) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'Great Tang Idyll' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'Great Tang Idyll', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u967d\u5149\u7684\u590f\u5929": [
  "def extract\u967d\u5149\u7684\u590f\u5929(item):\n\t\"\"\"\n\tParser for '\u967d\u5149\u7684\u590f\u5929'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\u9752\u7384\u8c46\u8150\u5e47": [
  "def extract\u9752\u7384\u8c46\u8150\u5e47(item):\n\t\"\"\"\n\tParser for '\u9752\u7384\u8c46\u8150\u5e47'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ],
 "\ud76c\ub178\uc560\ub77d": [
  "def extract\ud76c\ub178\uc560\ub77d(item):\n\t\"\"\"\n\tParser for '\ud76c\ub178\uc560\ub77d'\n\t\"\"\"\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or 'preview' in item['title'].lower():\n\t\treturn None\n\tif 'WATTT' in item['tags']:\n\t\treturn buildReleaseMessageWithType(item, 'WATTT', vol, chp, frag=frag, postfix=postfix)\n\treturn False\n",
  "2017-03-08T04:59:21.700134"
 ]
}